<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ASPxGaugeControlValue" xml:space="preserve">
    <value>Gets or sets the ASPxGaugeControl's value.</value>
  </data>
  <data name="ASPxGaugeControlJSProperties" xml:space="preserve">
    <value>Enables you to supply any server data that can then be parsed on the client.</value>
  </data>
  <data name="ASPxGaugeControlEnableCallbackAnimation" xml:space="preserve">
    <value>Gets or sets a value that specifies whether a specific animation effect is used when a ASPxGaugeControl's content is updated via a callback.</value>
  </data>
  <data name="ASPxGaugeControlEnableCallbackCompression" xml:space="preserve">
    <value>Gets or sets whether callback compression is enabled.</value>
  </data>
  <data name="ASPxGaugeControlEnableClientSideAPI" xml:space="preserve">
    <value>Gets or sets a value that specifies whether the ASPxGaugeControl can be manipulated on the client-side via code.</value>
  </data>
  <data name="ASPxGaugeControlSaveStateOnCallbacks" xml:space="preserve">
    <value>Gets or sets a value indicating whether a gauge's state should be saved between callbacks. </value>
  </data>
  <data name="ASPxGaugeControlSettingsLoadingPanel" xml:space="preserve">
    <value>Provides access to the loading panel settings.</value>
  </data>
  <data name="ASPxGaugeControlLoadingPanelImage" xml:space="preserve">
    <value>Gets the settings of an image displayed within a Loading Panel.</value>
  </data>
  <data name="ASPxGaugeControlLoadingPanelStyle" xml:space="preserve">
    <value>Gets the style settings used to paint the Loading Panel.</value>
  </data>
  <data name="ASPxGaugeControlClientInstanceName" xml:space="preserve">
    <value>Gets or sets the ASPxGaugeControl's client programmatic identifier.</value>
  </data>
  <data name="ASPxGaugeControlClientSideEvents" xml:space="preserve">
    <value>Gets an object that lists the client-side events specific to the ASPxGaugeControl.</value>
  </data>
  <data name="ASPxGaugeControlBinaryStorageMode" xml:space="preserve">
    <value>Gets or sets a value indicating the mode in which the control's images are stored on the server.</value>
  </data>
  <data name="ASPxGaugeControlGauges" xml:space="preserve">
    <value>Provides access to the collection of gauges displayed by the ASPxGaugeControl.</value>
  </data>
  <data name="ASPxGaugeControlAlternateText" xml:space="preserve">
    <value>Gets or sets the alternate text displayed in the ASPxGaugeControl when the image is unavailable.</value>
  </data>
  <data name="ASPxGaugeControlDescriptionUrl" xml:space="preserve">
    <value>Gets or sets the location to the ASPxGaugeControl's detailed description.</value>
  </data>
  <data name="ASPxGaugeControlImageType" xml:space="preserve">
    <value>Gets or sets an image type used to render the ASPxGaugeControl.</value>
  </data>
  <data name="ASPxGaugeControlLayoutPadding" xml:space="preserve">
    <value>Gets or sets a padding around all gauges in the ASPxGaugeControl.AutoLayout mode.</value>
  </data>
  <data name="ASPxGaugeControlLayoutInterval" xml:space="preserve">
    <value>Gets or sets an interval between two neighboring gauges in the ASPxGaugeControl.AutoLayout mode.</value>
  </data>
  <data name="ASPxGaugeControlAutoLayout" xml:space="preserve">
    <value>Gets or sets whether gauges are automatically arranged within the ASPxGaugeControl to avoid overlapping.</value>
  </data>
  <data name="ASPxGaugeControlWidth" xml:space="preserve">
    <value>Gets or sets the ASPxGaugeControl's width.</value>
  </data>
  <data name="ASPxGaugeControlHeight" xml:space="preserve">
    <value>Gets or sets the ASPxGaugeControl's height.</value>
  </data>
  <data name="CustomCallbackClientSideEventsBeginCallback" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle a web control's client BeginCallback event. </value>
  </data>
  <data name="CustomCallbackClientSideEventsCallbackError" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle a web control's client CallbackError event.</value>
  </data>
  <data name="CustomCallbackClientSideEventsEndCallback" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle a web control's client EndCallback event.</value>
  </data>
</root>