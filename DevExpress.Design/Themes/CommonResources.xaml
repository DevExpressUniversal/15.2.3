<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="clr-namespace:DevExpress.Design.UI"
    >
    <SolidColorBrush x:Key="{ui:ThemeColorsKey Key=ColorSilver}" Color="#FF3C3C3C"/>
    <SolidColorBrush x:Key="{ui:ThemeColorsKey Key=ColorSilverDark}" Color="#FFB3B3B3"/>
    <SolidColorBrush x:Key="{ui:ThemeColorsKey Key=ColorSilverLight}" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="{ui:ThemeColorsKey Key=ColorOrange}" Color="#FFF7941E"/>
    <SolidColorBrush x:Key="{ui:ThemeColorsKey Key=ColorOrangeLight}" Color="#D9F7941E"/>
    <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0"/>
        <GradientStop Color="#EDEDED" Offset="0.20"/>
        <GradientStop Color="#EDEDED" Offset="0.80"/>
        <GradientStop Color="#E3E3E3" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0"/>
        <GradientStop Color="#EDEDED" Offset="0.20"/>
        <GradientStop Color="#EDEDED" Offset="0.80"/>
        <GradientStop Color="#E3E3E3" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style x:Key="{ui:StandardControlsThemeKey Key=Button}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="NormalState" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF505050" Offset="0"/>
                                    <GradientStop Color="#FF3C3C3C" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="HoverState" Opacity="0" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFCA12A" Offset="0"/>
                                    <GradientStop Color="#FFF7941E" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="HoverState" Value="1"/>
                            <Setter Property="Opacity" TargetName="NormalState" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.35"/>
                            <Setter Property="Opacity" TargetName="HoverState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlsThemeKey Key=ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" >
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle RadiusX="2" RadiusY="2" StrokeDashArray="2 2" StrokeThickness="1" Margin="2" Stroke="White" Stretch="Fill" SnapsToDevicePixels="true" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="NormalState" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF505050" Offset="0"/>
                                    <GradientStop Color="#FF3C3C3C" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="NormalState" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.35"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="NormalState" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ui:StandardControlsThemeKey Key=CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Grid Width="18" Height="18">
                                <Border x:Name="Bd" Background="White" BorderBrush="#3F000000" BorderThickness="1" />
                                <Rectangle x:Name="undefined" Fill="#3F000000" Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center"  Visibility="Hidden"/>
                                <Path x:Name="path" Stretch="Fill" Fill="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}" 
                                      Data="F1 M 1,14L 5,18L 17,6L 17,10L 5,22L 1,18L 1,14 Z " Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="path" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="undefined" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                        </Trigger>
                        <Trigger Property="HasContent" Value="false">
                            <Setter Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" Value="#3F000000" TargetName="path" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlsThemeKey Key=TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="ScrollViewer.VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverLight}}"/>
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      Padding="{TemplateBinding Padding}" 
                                      Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{ui:StandardControlElementsThemeKey Key=ScrollBarButton}" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="#00000000">
                        <Path x:Name="path" Stretch="Fill" Fill="Black" Data="F1 M 586,371L 583,374L 589,374L 586,371 Z " HorizontalAlignment="Center" Height="3" VerticalAlignment="Center" Width="6" Opacity="0.25"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="path" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlElementsThemeKey Key=VerticalScrollBarPageButton}" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlElementsThemeKey Key=ScrollBarThumb}" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0" Background="#00000000">
                        <Border x:Name="Bd" HorizontalAlignment="Center" Width="6" CornerRadius="3" Background="#FFBDBDBD"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlElementsThemeKey Key=ScrollBarThumbHorizontal}" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0" Background="#00000000">
                        <Border x:Name="Bd" VerticalAlignment="Center" Height="6" CornerRadius="3" Background="#FFBDBDBD"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlElementsThemeKey Key=HorizontalScrollBarPageButton}" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlsThemeKey Key=ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <Border Margin="0,1" 
                                HorizontalAlignment="Center" Width="6" CornerRadius="3" 
                                Background="#FFF5F5F5" Grid.RowSpan="3" BorderBrush="#FFE6E6E6" BorderThickness="1"/>
                        <RepeatButton 
                            Command="{x:Static ScrollBar.LineUpCommand}" 
                            IsEnabled="{TemplateBinding IsMouseOver}" 
                            Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ScrollBarButton}}" 
                            Visibility="Collapsed"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="0" Grid.RowSpan="3" >
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" 
                                              Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=VerticalScrollBarPageButton}}" 
                                              />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" 
                                              Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=VerticalScrollBarPageButton}}" 
                                              />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb 
                                    Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key= ScrollBarThumb}}" 
                                    />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton 
                            Command="{x:Static ScrollBar.LineDownCommand}" 
                            IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" 
                            Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ScrollBarButton}}" 
                            Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="Auto"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Margin="1,0"
                                            VerticalAlignment="Center" Height="6" HorizontalAlignment="Stretch" CornerRadius="3" 
                                            Background="#FFF5F5F5" 
                                            Grid.Column="0" Grid.ColumnSpan="3"
                                            BorderBrush="#FFE6E6E6" BorderThickness="1"/>

                                <RepeatButton Grid.Column="0" 
                                    Command="{x:Static ScrollBar.LineLeftCommand}" 
                                    IsEnabled="{TemplateBinding IsMouseOver}" 
                                    Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ScrollBarButton}}" 
                                    Visibility="Collapsed"/>
                                <Track x:Name="PART_Track" Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" 
                                                      Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=HorizontalScrollBarPageButton}}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" 
                                                      Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=HorizontalScrollBarPageButton}}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb 
                                            Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key= ScrollBarThumbHorizontal}}" 
                                            />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2" 
                                              Command="{x:Static ScrollBar.LineRightCommand}" 
                                              IsEnabled="{TemplateBinding IsMouseOver}" 
                                              Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ScrollBarButton}}" 
                                              Visibility="Collapsed"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{ui:StandardControlElementsThemeKey Key=ComboBoxScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1"  Grid.Row="0" 
                       AutomationProperties.AutomationId="VerticalScrollBar" 
                       Cursor="Arrow"
                       Maximum="{TemplateBinding ScrollableHeight}" 
                       Minimum="0" 
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportHeight}" 
                       Style="{DynamicResource ResourceKey={ui:StandardControlsThemeKey Key=ScrollBar}}"
                       />
            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" 
                       AutomationProperties.AutomationId="HorizontalScrollBar" 
                       Cursor="Arrow" 
                       Maximum="{TemplateBinding ScrollableWidth}" 
                       Minimum="0" 
                       Orientation="Horizontal" 
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportWidth}"
                       />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{ui:StandardControlElementsThemeKey Key=ListBoxScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Opacity="0" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0"  Grid.Row="0"
                                    CanContentScroll="{TemplateBinding CanContentScroll}" 
                                    CanHorizontallyScroll="False" CanVerticallyScroll="False" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    Content="{TemplateBinding Content}" 
                                    Margin="{TemplateBinding Padding}"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1"  Grid.Row="0" 
                       AutomationProperties.AutomationId="VerticalScrollBar" 
                       Cursor="Arrow"
                       Maximum="{TemplateBinding ScrollableHeight}" 
                       Minimum="0" 
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportHeight}" 
                       Style="{DynamicResource ResourceKey={ui:StandardControlsThemeKey Key=ScrollBar}}"
                       />
            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" 
                       AutomationProperties.AutomationId="HorizontalScrollBar" 
                       Cursor="Arrow" 
                       Maximum="{TemplateBinding ScrollableWidth}" 
                       Minimum="0" 
                       Orientation="Horizontal" 
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportWidth}"
                       Style="{DynamicResource ResourceKey={ui:StandardControlsThemeKey Key=ScrollBar}}"                       
                       />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{ui:StandardControlElementsThemeKey Key=RichTextBoxScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" 
                       Grid.Column="1" 
                       Grid.Row="1"
                       Opacity="0" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0"  Grid.Row="0"
                                    CanContentScroll="{TemplateBinding CanContentScroll}" 
                                    CanHorizontallyScroll="False" CanVerticallyScroll="False" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    Content="{TemplateBinding Content}" 
                                    Margin="{TemplateBinding Padding}"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1"  Grid.Row="0" 
                       AutomationProperties.AutomationId="VerticalScrollBar" 
                       Cursor="Arrow"
                       Maximum="{TemplateBinding ScrollableHeight}" 
                       Minimum="0" 
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportHeight}" 
                       Style="{DynamicResource ResourceKey={ui:StandardControlsThemeKey Key=ScrollBar}}"
                       />
            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" 
                       AutomationProperties.AutomationId="HorizontalScrollBar" 
                       Cursor="Arrow" 
                       Maximum="{TemplateBinding ScrollableWidth}" 
                       Minimum="0" 
                       Orientation="Horizontal" 
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportWidth}"
                       Style="{DynamicResource ResourceKey={ui:StandardControlsThemeKey Key=ScrollBar}}"                       
                       />
        </Grid>
    </ControlTemplate>
    <Style x:Key="{ui:StandardControlElementsThemeKey Key=ComboBoxFocus}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlElementsThemeKey Key=ComboBoxToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="#00000000">
                        <Border x:Name="Bd" Width="17" HorizontalAlignment="Right" Background="Transparent" Margin="2">
                            <Path x:Name="Arrow" Data="M 0 0 L 3.5 4 L 7 0 Z" 
                                  Fill="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" />
                            <Setter Property="Fill" TargetName="Arrow" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{ui:StandardControlsThemeKey Key=ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlsThemeKey Key=ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ComboBoxFocus}}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey={ui:StandardControlsThemeKey Key=ComboBoxItem}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,30,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="MaxDropDownHeight" Value="250"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverLight}}"/>
                        <Popup x:Name="PART_Popup" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" AllowsTransparency="true" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="-15" Placement="Bottom" Width="{Binding Path=ActualWidth, ElementName=MainGrid, Mode=OneWay}">
                            <Border x:Name="DropDownBorder" BorderBrush="#26000000" BorderThickness="1" Background="White">
                                <Border.Effect>
                                    <DropShadowEffect Direction="-90" Opacity="0.35" BlurRadius="12" ShadowDepth="3"/>
                                </Border.Effect>
                                <ScrollViewer x:Name="DropDownScrollViewer" Template="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ComboBoxScrollViewer}}" HorizontalScrollBarVisibility="Hidden">
                                    <Grid>
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ComboBoxToggleButton}}"/>
                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true"/>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ui:ControlsThemeKey Key=AutoCompleteComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ComboBoxFocus}}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey={ui:StandardControlsThemeKey Key=ComboBoxItem}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,30,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="MaxDropDownHeight" Value="250"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverLight}}"/>
                        <Popup x:Name="PART_Popup" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" AllowsTransparency="true" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="-15" Placement="Bottom" Width="{Binding Path=ActualWidth, ElementName=MainGrid, Mode=OneWay}">
                            <Border x:Name="DropDownBorder" BorderBrush="#26000000" BorderThickness="1" Background="White">
                                <Border.Effect>
                                    <DropShadowEffect Direction="-90" Opacity="0.35" BlurRadius="12" ShadowDepth="3"/>
                                </Border.Effect>
                                <ScrollViewer x:Name="DropDownScrollViewer" Template="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ComboBoxScrollViewer}}" HorizontalScrollBarVisibility="Hidden">
                                    <Grid>
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ComboBoxToggleButton}}"/>
                        <TextBlock VerticalAlignment="Center" Margin="5,1" IsHitTestVisible="False"
				            Text="{Binding Path=(ui:AutoCompleteComboBox.NullTextPrompt), RelativeSource={RelativeSource TemplatedParent}}"  
				            Foreground="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverDark}}"
	                       	Visibility="{Binding ElementName=PART_TextBox, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <ui:AutoSearchTextBox x:Name="PART_TextBox" IsHitTestVisible="True" IsReadOnly="False" Background="Transparent"
				            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1,1,19,1" BorderThickness="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true"/>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=NavigationButton}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="NormalState" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF505050" Offset="0"/>
                                    <GradientStop Color="#FF3C3C3C" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="HoverState" Opacity="0" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFCA12A" Offset="0"/>
                                    <GradientStop Color="#FFF7941E" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="HoverState" Value="1"/>
                            <Setter Property="Opacity" TargetName="NormalState" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.35"/>
                            <Setter Property="Opacity" TargetName="HoverState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ui:StandardControlsThemeKey Key=ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="20,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"  
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrangeLight}}"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.25" TargetName="contentPresenter"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:StandardControlsThemeKey Key=ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey={ui:StandardControlsThemeKey Key=ListBoxItem}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverLight}}">
                        <ScrollViewer Margin="5,10" Focusable="false" 
                                      Padding="{TemplateBinding Padding}" 
                                      Template="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=ListBoxScrollViewer}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false"/>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ui:StandardControlsThemeKey Key=RichTextBox}" TargetType="{x:Type RichTextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"
                            BorderThickness="1" BorderBrush="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverLight}}">
                        <ScrollViewer x:Name="PART_ContentHost"
 									  Focusable="false" 
									  Margin="5,10"
                                      Padding="{TemplateBinding Padding}" 
                                      Template="{StaticResource ResourceKey={ui:StandardControlElementsThemeKey Key=RichTextBoxScrollViewer}}">
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ui:ControlsThemeKey Key=ListCaption}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverDark}}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=DataSourcePropertyCaption}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,3,0,0"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=GroupCaption}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverDark}}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=ItemCaption}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=ListAnnotation}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverDark}}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="40"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=Description}" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="20"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=Value}" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=Message}" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,20"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=NewDataSourceButton}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Border CornerRadius="3" x:Name="Bd" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFCA12A" Offset="0"/>
                                    <GradientStop Color="#FFF7941E" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.35"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=EditorButton}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilver}}"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="6,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorSilverLight}}"/>
                        <Border x:Name="Bd" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFCA12A" Offset="0"/>
                                    <GradientStop Color="#FFF7941E" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.35"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=InfoText}" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="{ui:ControlsThemeKey Key=OptionName}" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,16,0"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>


    <SolidColorBrush x:Key="TabItemNormalBackground" Color="#3D3D3D"/>
    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Background" Value="{StaticResource TabItemNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Margin="0,0,1,0">
                            <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                        <Path x:Name="path" Stretch="Fill" Fill="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}" Data="F1 M 634,367L 626,375L 618,367L 634,367 Z " HorizontalAlignment="Center" Height="8" Margin="0,0,0,-8" VerticalAlignment="Bottom" Width="16" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ResourceKey={ui:ThemeColorsKey Key=ColorOrange}}"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom"/>
                        <Trigger Property="TabStripPlacement" Value="Left"/>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ui:ControlsThemeKey Key=TabControlWithHeader}" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="0,20,0,20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <UniformGrid x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Rows="1" Margin="0,0,-1,0"/>
                        <Border x:Name="ContentPanel" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" >
                            <ContentPresenter ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom"/>
                        <Trigger Property="TabStripPlacement" Value="Left"/>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>