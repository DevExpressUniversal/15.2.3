#region Copyright (c) 2000-2015 Developer Express Inc.
/*
{*******************************************************************}
{                                                                   }
{       Developer Express .NET Component Library                    }
{                                                                   }
{                                                                   }
{       Copyright (c) 2000-2015 Developer Express Inc.              }
{       ALL RIGHTS RESERVED                                         }
{                                                                   }
{   The entire contents of this file is protected by U.S. and       }
{   International Copyright Laws. Unauthorized reproduction,        }
{   reverse-engineering, and distribution of all or any portion of  }
{   the code contained in this file is strictly prohibited and may  }
{   result in severe civil and criminal penalties and will be       }
{   prosecuted to the maximum extent possible under the law.        }
{                                                                   }
{   RESTRICTIONS                                                    }
{                                                                   }
{   THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES           }
{   ARE CONFIDENTIAL AND PROPRIETARY TRADE                          }
{   SECRETS OF DEVELOPER EXPRESS INC. THE REGISTERED DEVELOPER IS   }
{   LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET    }
{   CONTROLS AS PART OF AN EXECUTABLE PROGRAM ONLY.                 }
{                                                                   }
{   THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED      }
{   FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE        }
{   COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE       }
{   AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT  }
{   AND PERMISSION FROM DEVELOPER EXPRESS INC.                      }
{                                                                   }
{   CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON       }
{   ADDITIONAL RESTRICTIONS.                                        }
{                                                                   }
{*******************************************************************}
*/
#endregion Copyright (c) 2000-2015 Developer Express Inc.

using System;
using System.Collections.Generic;
namespace DevExpress.DemoData.Model {
	public static partial class Repository {
		static List<Module> Create_XtraGrid_MainDemo_Modules(Demo demo) {
			return new List<Module> {
				new SimpleModule(demo,
					name: "About",
					displayName: @"DevExpress XtraGrid %MarketingVersion%",
					group: "About",
					type: "DevExpress.XtraGrid.Demos.About",
					description: @"",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,																		  
					name: "TableView",
					displayName: @"Table View",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.TableView",
					description: @"The XtraGrid includes a standard Table View to help address all your basic use-case scenarios. In this example, you can explore some of the high impact features of the grid, including its new item row, incremental search, multiple row selection, row navigation and data editing options. Note: Just like the Outlook grid, you can select multiple rows using the SHIFT and/or CTRL keys.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "CardViewControl",
					displayName: @"Card View",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.CardViewControl",
					description: @"The XtraGrid includes a Card View option so you can replicate the Microsoft Outlook “Contacts” UI experience with ease. In this example, you can explore some of the capabilities built into the Card View, including sorting, filtering, layout, record selection, card collapse/expansion, etc. To control visibility, sort order and filter settings within the demo, press the Customize button.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "LayoutViewFilter",
					displayName: @"Automatic Filtering UI",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.LayoutViewFilter",
					description: @"This example demonstrates the FilteringUIContext component that helps you to automatically create a filtering UI for a data source. In this demo, the AccordionControl on the right contains filtering UI elements which are automatically generated by the FilteringUIContext component based on attributes applied to a FilteringModel's members. When you modify the filtering UI elements, filter criteria are created and applied to the grid data source.",
					addedIn: KnownDXVersion.V152,
					isFeatured: true,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ModulesLayoutView\LayoutViewFilter.cs",
						@"\WinForms\VB\GridMainDemo\ModulesLayoutView\LayoutViewFilter.vb"
					}
				),
				new SimpleModule(demo,
					name: "ViewStyles",
					displayName: @"Banded Views",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.ViewStyles",
					description: @"The XtraGrid Suite is powerful and easy-to-use and offers you countless display options so you can deliver your best, without limits. Its View-based architecture delivers multiple UI options, allowing you to create compelling experiences that meet and exceed end-user expectations. In this example, you can change View types using the buttons displayed above the grid. Your options include Grid View, Card View, Banded View and Advanced Banded View. Give it a try and see how each view differs and determine what makes most sense for your next application.",
					addedIn: KnownDXVersion.Before142,
					featuredPriority: 3,
					isFeatured: true
				),
				new SimpleModule(demo,
					name: "WinExplorerView",
					displayName: @"WinExplorer View (File Manager)",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.ExplorerView",
					description: @"Flexibility and ease-of-use are hallmarks of the XtraGrid. In this example, we’ve used the WinExplorer View to create a Windows inspired File Explorer. The flawless UI you see is possible because of the grid’s rich custom draw events and alpha-blending capabilities.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\Modules\WinExplorerView.cs",
						@"\WinForms\VB\GridMainDemo\Modules\WinExplorerView.vb"
					}
				),
				new SimpleModule(demo,
					name: "ContextButtons",
					displayName: @"Context Buttons for WinExplorerView",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.ContextButtons",
					description: @"This example illustrates how you can use context buttons for images used within the WinExplorer Grid View. Context buttons appear when an end-user hovers over an image. They can display custom text, image, check box or a rating control. In the example, context buttons are created at design time using the ContextButtons collection. The ContextButtonCustomize event is used to dynamically specify a button's content and state at runtime.",
					addedIn: KnownDXVersion.V142,
					newUpdatedPriority: 5
				),
				new SimpleModule(demo,
					name: "TileView",
					displayName: @"Tile View",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.TileView",
					description: @"The XtraGrid ships with a collection of multi-purpose Data Views, allowing you to present information to your end-users in the most efficient manner possible. The new Windows 8 inspired Tile View is designed to augment the capabilities of our existing Card View and deliver yet another unique UI presentation option for your WinForms application.",
					addedIn: KnownDXVersion.V142,
					newUpdatedPriority: 4
				),
				new SimpleModule(demo,
					name: "WinExplorerViewDatabase",
					displayName: @"WinExplorer View (DB)",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.WinExplorerViewDatabaseBinding",
					description: @"The power you’ll need to build your best. The View-based architecture of the grid allows you to deliver a rich set of UI experiences to best address user requirements. From Table Views, to Cards, Bands and the WinExplorer View illustrated in this demo – your imagination is your guide with the XtraGrid. In this example, we use the WinExplorer demo to display data from a database. Use the Ribbon Control to modify view styles (Tiles, List, Icons, Content), specify checkbox visibility and modify grouping and sort order within the WinExplorer View.",
					addedIn: KnownDXVersion.Before142,
					updatedIn: KnownDXVersion.V142,
					newUpdatedPriority: 6
				),
				new SimpleModule(demo,
					name: "NWindLayout",
					displayName: @"Layout View",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.NWindLayout",
					description: @"In addition to tabular View options, the XtraGrid includes a Layout View, allowing you to fully control the manner in which information is displayed to your end users within the grid’s container. Its countless features include runtime customization, card layouts, panning, multiple card selection, etc. Explore the demo to see everything you can accomplish with the industry-first capabilities of the Layout View.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ModulesLayoutView\NWindLayout.cs",
						@"\WinForms\VB\GridMainDemo\ModulesLayoutView\NWindLayout.vb"
					}
				),
				new SimpleModule(demo,
					name: "Layout3D",
					displayName: @"Carousel View",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.Layout3D",
					description: @"The Layout View offers numerous UI options. In this example, cards are arranged in an ellipse using a transparency effect. You can explore the capabilities of this View type by moving through individual cards via the keyboard’s arrow keys, mouse wheel or scroll bar. The track bars on the left allow you to change the View’s display options including pitch and roll angles, transparency levels, etc.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ModulesLayoutView\Layout3D.cs",
						@"\WinForms\VB\GridMainDemo\ModulesLayoutView\Layout3D.vb"
					}
				),
				new SimpleModule(demo,
					name: "CardSizing",
					displayName: @"Gallery View",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.CardSizing",
					description: @"The seemingly endless ways you can use the XtraGrid Suite includes the ability to create image galleries. In this example, the Layout View is used to implement a scrollable gallery – where each image is displayed as a card and can be traversed via the scroll bar. The track bar (below the grid) or the mouse wheel allows you to zoom the contents of the grid.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ModulesLayoutView\CardSizing.cs",
						@"\WinForms\VB\GridMainDemo\ModulesLayoutView\CardSizing.vb"
					}
				),
				new SimpleModule(demo,
					name: "SplitPresentation",
					displayName: @"Split Presentation View",
					group: "Grid Views",
					type: "DevExpress.XtraGrid.Demos.SplitPresentation",
					description: @"Built to address a wide range of use-case scenarios, Split Presentation Views allow you to split the contents of a single grid into two windows (separated by a splitter) at runtime. This feature can be activated or disabled using the XtraGrid’s context menu (via a right click on any column header). In this example, we use the split view to help users visualize loan information across two time frames. The topmost grid can be used to display loan balance/principal at the initial stage of a loan while the bottom grid can be used to display the same information as the loan matures over time.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "CellMerging",
					displayName: @"Cell Merging",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.CellMerging",
					description: @"Much like Microsoft Excel, the XtraGrid’s cell merging option allows your applications to deliver data clarity and avoid the duplication of common information within individual views. In this example, neighboring data cells across different rows are merged whenever they display matching values. Note that record selection and data editing are disabled when using the cell merging option.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "FixedBands",
					displayName: @"Fixed Bands",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.FixedBands",
					description: @"Often used to improve readability, Fixed Bands allow you to anchor columns to both the left and rightmost edge of the XtraGrid when using Banded Grid Views. This allows users to horizontally scroll the contents of the grid while retaining the visual perspective offered by the fixed band(s). In this example, sales data by year can be scrolled horizontally, while the maker and total units columns remain fixed for visual clarity.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "FixedColumns",
					displayName: @"Fixed Columns",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.FixedColumns",
					description: @"Much like Fixed Bands, the XtraGrid’s Fixed Columns options allows you to anchor a grid column to the left or rightmost edge of the grid when using the standard Table View. Fixed columns are never scrolled horizontally and are built so you can deliver solutions that offer visual clarity whenever your grid contains a large number of columns. In this example, you can control the manner in which columns are fixed by using the popup menu associated with each column header (right click the column header to activate the popup).",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "RowHeight",
					displayName: @"Auto Row Height",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.RowHeight",
					description: @"Designed to automatically adjust row/card height to display the entire content of individual columns, the Auto Rows Height option is often used when displaying memo fields or images within the XtraGrid. In this example, the notes column dictates the height of individual rows and the XtraGrid automatically adjusts row size to display the content of each note.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "ColumnCustomization",
					displayName: @"Column Customization",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.ColumnCustomization",
					description: @"Just like Microsoft Outlook, the XtraGrid provides a powerful runtime Column Customization option, allowing end-users to change the layout of the grid and its columns/bands. When used in conjunction with the DevExpress Printing System, column customization provides a straightforward ad-hoc reporting option for users. And like so many other features shipping in the XtraGrid, this capability can be enabled without writing a single line of code. In this example, you can drag both columns and bands to/from the customization window in order to control visibility. Once you’ve made your changes, press the Print Preview button to see an example of an ad-hoc report generated without writing any code.",
					addedIn: KnownDXVersion.Before142,
					updatedIn: KnownDXVersion.V151
				),
				new SimpleModule(demo,
					name: "CellSelection",
					displayName: @"Cell Selection",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.CellSelection",
					description: @"Much like Microsoft Excel, the XtraGrid allows your end users to select both individual and blocks of data cells within the grid control.  In this example, we contrast the two primary record selection modes: row selection and cell selection. The values selected can always be obtained via methods exposed by the XtraGrid. You can also use translucent colors when painting cell/row selection.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "GridAnimations",
					displayName: @"Animations",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.GridAnimations",
					description: @"If your application requires the use of animations to communicate important information to end-users, you can easily embed animated GIF files within grid cells. In this example, animated GIFs are displayed in the Priority (!) column and custom filter items are made available via the Priority column’s filter dropdown (hover the Priority column to activate the filter icon and to initiate filtering).",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "WebStyleColumnSelection",
					displayName: @"Web Style Row Selection",
					group: "UI Customization",
					type: "DevExpress.XtraGrid.Demos.WebStyleColumnSelection",
					description: @"The XtraGrid gives you an unmatched set of UI options. Web Style Row Selection delivers an alternative approach to record selection within the grid. With the use of checkboxes, end-users can select one or more records as needed. In this example, we’ve enabled checkboxes at the column header level (to select all rows), at the group level (to select records in a group) and at the individual row level.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "MasterDetail",
					displayName: @"Master-Detail (advanced)",
					group: "Master-Detail Mode",
					type: "DevExpress.XtraGrid.Demos.MasterDetail",
					description: @"The XtraGrid Suite can display master-detail relationships of any complexity and offers the tools you’ll need to create applications that effectively communicate cause and effect with minimal effort. In this example, the grid uses data from four tables that share one-to-many relationships. The master table and associated view are bound to two details. One of these details is in turn bound to a different detail table. The demo allows you to switch between sibling details for the master view via individual detail tabs (Products and Categories).",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "MasterDetailSimple",
					displayName: @"Master-Detail (standard)",
					group: "Master-Detail Mode",
					type: "DevExpress.XtraGrid.Demos.MasterDetailSimple",
					description: @"The XtraGrid is able to display master-detail data relationships of any complexity. In this example, the Grid displays data in an easy-to-read format from two tables that share a one-to-many relationship.",
					addedIn: KnownDXVersion.Before142,
					featuredPriority: 2,
					isFeatured: true
				),
				new SimpleModule(demo,
					name: "NWindNavigator",
					displayName: @"Master-Detail (unbound)",
					group: "Master-Detail Mode",
					type: "DevExpress.XtraGrid.Demos.NWindNavigator",
					description: @"The numerous data loading options within the XtraGrid make it the perfect choice for a wide range of business scenarios. In this example, we demonstrate the simultaneous use of unbound (master view) and data aware (detail view) modes within the XtraGrid.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "InplaceEditors",
					displayName: @"Inplace Cell Editors",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.InplaceEditors",
					description: @"Nothing compares to the XtraGrid Suite – that’s why it was voted #1 by readers of Visual Studio Magazine for 4 straight years. In this example, you can explore the many inplace editors that ship as part of the DevExpress WinForms Subscription. And as you can see, the XtraGrid can actually be used as an inverted grid view – displaying field values to the right of column headers.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "GridEditForm",
					displayName: @"Inline Edit Form",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.GridEditForm",
					description: @"The Inline Edit Form option allows you to create a custom data editing experience without the need write code or to invoke custom dialogs. In this example, you can activate the Inline Edit Form by selecting a row and pressing the ENTER or F2 key. You can also initiate editing via a double-click. The Options button on the Ribbon allows you to control individual Edit Form options including the ability to display the form as a popup. To see how you can fully customize the layout of the Edit Form via an external UserControl, navigate to the Advanced Edit Form tab.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "GridLookUpEditDemo",
					displayName: @"Extended Lookup Editor",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.GridLookUpEditDemo",
					description: @"When a standard combo box is just not enough and you need to display multiple columns and enable many of the features found in the XtraGrid within your lookups, the GridLookup Editor is your perfect choice. The GridLookup uses an embedded XtraGrid column to display lookup information. It can be used on a standalone basis or within grid cells for inline editing.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\Modules\LookUpProperties.cs",
						@"\WinForms\CS\GridMainDemo\Modules\GridLookUpEditDemo.cs",
						@"\WinForms\VB\GridMainDemo\Modules\LookUpProperties.vb",
						@"\WinForms\VB\GridMainDemo\Modules\GridLookUpEditDemo.vb"
					}
				),
				new SimpleModule(demo,
					name: "SearchLookUpEditDemo",
					displayName: @"Extended Lookup Editor (with search)",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.SearchLookUpEditDemo",
					description: @"Like the GridLookup, the XtraGrid Suite’s Search Lookup Editor delivers capabilities not found in a standard lookup control. By using its find feature, your apps can simplify record selection whenever your lookup is bound to a large dataset. In this example, you can activate the Search Lookup and enter a search string to restrict the values in the drop down. And yes, this control can be used on a standalone basis or within grid cells for inline editing.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "RTFView",
					displayName: @"RTF Editing",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.RTFView",
					description: @"The XtraGrid gives you countless UI options, among them the ability to display Rich Text within grid cells. In this example, we contrast the use of RTF within a column and preview sections of the grid. The former demonstrates the use of an embedded RTF column with full editing (right click to change fonts, colors, alignment, etc) and the former displays a read-only auto-preview section like Microsoft Outlook.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "Sparklines",
					displayName: @"Sparklines",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.Sparklines",
					description: @"This demo illustrates the use of the DevExpress Sparkline Control within individual grid cells. Sparklines help you easily visualize data trends and offer a straightforward way to compare information between grid rows.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "Validation",
					displayName: @"Data Validation",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.Validation",
					description: @"Record validation is crucial for data integrity and the XtraGrid gives you all the tools you’ll need to control the manner in which data is entered within your application.  In this example, we demonstrate the power of the grid’s data validation engine and allow you to specify validation rules (an expression that limits the values that can be entered into a field) and see how these rules affect data entry within the Unit Price, Quantity and Discount fields.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "MultiEditors",
					displayName: @"Dynamically Assigned Editors",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.MultiEditors",
					description: @"Be it at design or runtime, flexibility lies at the heart of the XtraGrid Suite and the XtraEditors Library. In this example, we demonstrate how you can dynamically assign inline data editors to individual grid cells. As you’ll discover once you begin using DevExpress Data Editors, you have a massive set of options at your disposal for inline editing within the grid. Take for instance the use of the progress bar for the Relevance column…you can control its value via the + and – keys. How’s that for awesome.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "AdvancedGridEditing",
					displayName: @"Data Editing with the Layout View",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.AdvancedGridEditing",
					description: @"To improve the data editing experience, you can use the Layout Details feature to implement on-form editing of data without using a separate data entry form. In this example, you can double-click a row to open its detail view (Layout View) to view/edit data. The Back button or a right click in the detail view returns you to the main grid view.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ModulesLayoutView\AdvancedGridEditing.cs",
						@"\WinForms\VB\GridMainDemo\ModulesLayoutView\AdvancedGridEditing.vb"
					}
				),
				new SimpleModule(demo,
					name: "ChartEditor",
					displayName: @"Chart Editor",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.ChartEditor",
					description: @"This example illustrates how you can embed any control within a Grid cell – in this instance, we’ve embedded a pie chart to display sales % by product category. To embed a custom control within the Grid, you'll need to implement the dedicated IAnyControlEdit interface. This interface provides a straightforward way to pass a cell's value to the custom editor, calculate the control's size, perform initialization and any manual painting. The custom control can then be assigned to the target column using a RepositoryItemAnyControl object.",
					addedIn: KnownDXVersion.V142,
					newUpdatedPriority: 2,
					featuredPriority: 4,
					isFeatured: true,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ModulesAnyControl\ChartEditor.cs",
						@"\WinForms\VB\GridMainDemo\ModulesAnyControl\ChartEditor.vb"
					}
				),
				new SimpleModule(demo,
					name: "GaugeEditor",
					displayName: @"Gauge Editor",
					group: "Data Editing",
					type: "DevExpress.XtraGrid.Demos.GaugeEditor",
					description: @"This example illustrates how you can embed any control within a Grid cell – in this instance, we’ve embedded a gauge to help track task progress within a Grid Layout View. To embed a custom control within the Grid, you'll need to implement the dedicated IAnyControlEdit interface. This interface provides a straightforward way to pass a cell's value to the custom editor, calculate the control's size, perform initialization and any manual painting. The custom control can then be assigned to the target column using a RepositoryItemAnyControl object.",
					addedIn: KnownDXVersion.V142,
					newUpdatedPriority: 3,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ModulesAnyControl\GaugeEditor.cs",
						@"\WinForms\VB\GridMainDemo\ModulesAnyControl\GaugeEditor.vb"
					}
				),
				new SimpleModule(demo,
					name: "FindFilter",
					displayName: @"Find Panel",
					group: "Data Filtering",
					type: "DevExpress.XtraGrid.Demos.FindFilter",
					description: @"The XtraGrid makes it easy – incredibly easy – for users to locate information within it. The Find Panel was built so you can remove all complexities associated with data filtering and replicate the UI experience found in today’s most popular apps. Once enabled, the Find Panel allows users to enter a search string and to initiate the search against all values displayed in the grid. This feature is available in all Grid Views and allows you to control various search options including: the columns against which to search, delay used, search mode (auto or manual), etc. Give it a try – enter a search string and see how simple it is to search for data.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "AutoFilterRow",
					displayName: @"Auto Filter Row",
					group: "Data Filtering",
					type: "DevExpress.XtraGrid.Demos.AutoFilterRow",
					description: @"Ease-of-use and flexibility are our guiding principles and help define the features we ship as part of the XtraGrid Suite. A critical feature of any grid control is its ability to simplify the manner in which data is filtered. In this example, we demonstrate one of our filtering options, the Auto Filter Row. It’s a quick and easy way for your user to locate information within the grid. Simply select or enter values within the filter row (displayed below column headers) to initiate the filter operation. And yes, based on data stored in a column, you can control the operators used. The Name and Created Date fields use the LIKE comparison operator while the Bug, Priority and Owner columns use the EQUALS operator.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "Filtering",
					displayName: @"MRU Filter List",
					group: "Data Filtering",
					type: "DevExpress.XtraGrid.Demos.Filtering",
					description: @"Once you begin using the XtraGrid Suite, you’ll find that it ships with numerous options to address the needs of any enterprise. In this example, we demonstrate the use of filtering via the Filter Dropdown button linked to each column header. You can initiate a filter for a given column by hovering your mouse over the column header and pressing the filter icon. This will activate a dropdown window and allow you to specify a filter. If you initiate a filter against the Status column, you’ll see that the XtraGrid gives you the ability to specify multiple search values (via a checkbox) for any column. For clarity, the XtraGrid includes an option to display a Filter Panel at the bottom of the grid. When enabled, users can modify or disable a filter as needed.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "FilterControl",
					displayName: @"Advanced Filter Control",
					group: "Data Filtering",
					type: "DevExpress.XtraGrid.Demos.FilterControl",
					description: @"Whenever you need powerful filtering and when standard UI options are not enough, you can use the DevExpress Filter Control to deliver the UI experience suited to your specific business needs. In this example, the standalone Filter Control is used to construct complex filter criteria using its straightforward UI and apply the associated filter to the contents of the grid.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "StyleConditions",
					displayName: @"Conditional Formatting (Cell Values and Expressions)",
					group: "Data Filtering",
					type: "DevExpress.XtraGrid.Demos.StyleConditions",
					description: @"To customize the appearance of individuals cells and data rows based upon custom conditions, the XtraGrid ships with a Style Conditions feature. In this example, string expressions are used to create style conditions within the first tab. You can customize these expressions using the DevExpress Expression Editor. In the second tab, we illustrate the use of style condition attributes (operator, column and values). You can open the style condition editor by clicking the button or select the style condition item in the column’s filter dropdown list. Note: This example also illustrates how you can extend the filter dropdown list via a View’s inheritance.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "FormatRules",
					displayName: @"Conditional Formatting (MS Excel style)",
					group: "Data Filtering",
					type: "DevExpress.XtraGrid.Demos.FormatRules",
					description: @"This example demonstrates the XtraGrid’s Excel inspired conditional formatting. This feature allows you to highlight cells or rows based on specified criteria, without writing a single line of code. You can highlight cells using data bars, icons, predefined appearance schemes or custom appearances. At runtime, end-users can apply a style condition to a column via the column’s context menu.",
					addedIn: KnownDXVersion.V142,
					updatedIn: KnownDXVersion.V151,
					newUpdatedPriority: 1,
					featuredPriority: 5,
					isFeatured: true
				),
				new SimpleModule(demo,
					name: "Clipboard",
					displayName: @"Clipboard Formats",
					group: "Preview Section",
					type: "DevExpress.XtraGrid.Demos.ClipboardTutorial",
					description: @"The Data Grid allows its data to be copied to the clipboard either as plain text or as formatted data. This example demonstrates copying grid data to the clipboard along with formatting. The data copied is then pasted in three formats (MS Excel, RTF and HTML) to three external controls. To see the copy/paste functionality in action, use the ""Copy and Paste"" button, or select a cell range and press the CTRL+C combination. To enable the default plain copy/paste mode, use the ClipboardMode setting.",
					addedIn: KnownDXVersion.V152 ,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\Modules\Clipboard.cs",
						@"\WinForms\VB\GridMainDemo\Modules\Clipboard.vb"
					}
				),
				new SimpleModule(demo,
					name: "OutlookStyle",
					displayName: @"Outlook Style Grouping",
					group: "Data Shaping",
					type: "DevExpress.XtraGrid.Demos.OutlookStyle",
					description: @"The XtraGrid allows you to emulate the look, feel and capabilities of the Microsoft Office grid without writing a single line of code. In this demo, new messages are generated periodically and just like Outlook, the application displays a notification window via the DevExpress Alert Control.",
					addedIn: KnownDXVersion.Before142,
					featuredPriority: 0,
					isFeatured: true
				),
				new SimpleModule(demo,
					name: "GroupInterval",
					displayName: @"Group Intervals",
					group: "Data Shaping",
					type: "DevExpress.XtraGrid.Demos.GroupInterval",
					description: @"The XtraGrid Suite ships with a comprehensive set of data shaping features so your end users can analyze information with absolute clarity. In this example, we demonstrate the use of group intervals – a way in which to group data using a common data-point. For instance, if you set Grouping Mode to Month, you’ll find that the XtraGrid automatically groups, summarizes and displays dataset information by month.",
					addedIn: KnownDXVersion.Before142
				),														  
				new SimpleModule(demo,
					name: "MasterDetailGrouping",
					displayName: @"Master-Detail Grouping",
					group: "Data Shaping",
					type: "DevExpress.XtraGrid.Demos.MasterDetailGrouping",
					description: @"Data Grouping is a highly effective way to summarize information for your end-users and can be enabled across Views. In this example, we demonstrate use of data groups in master-detail mode. The XtraGrid ships with two grouping options: Owner Group Panel and Joined Group Panel. Explore the differences by using the command buttons above the grid control. Remember, you can always customize a grid, change grouping options and with a simple method call, render its contents to paper or export it to common file formats such as XLS and PDF via the DevExpress Printing System (click the Print Preview button to see this capability in action).",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "MultipleGrouping",
					displayName: @"Grouping against Multiple Values",
					group: "Data Shaping",
					type: "DevExpress.XtraGrid.Demos.MultipleGrouping",
					description: @"The XtraGrid makes it easy to emulate the look, feel and capabilities of the Microsoft Outlook grid. In this example, we demonstrate how you can replicate Outlook-style grouping. Each task displayed in the grid can belong to multiple categories. When data is grouped by the Category column, tasks will be displayed in multiple groups simultaneously.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "DataSummaries",
					displayName: @"Data Summaries and Aggregates",
					group: "Summary Computation",
					type: "DevExpress.XtraGrid.Demos.DataSummaries",
					description: @"Delivering an application that automatically computes data summaries is easy with the XtraGrid. Without writing a line of code, you can enable total and group row summaries (SUM, MIN, MAX, COUNT, AVG, and CUSTOM). In this example, total summaries are displayed in the grid’s footer and row summaries are displayed for each grouped row. Right click the footer and/or the group row to customize the aggregate function used to compute summaries.",
					addedIn: KnownDXVersion.Before142,
					updatedIn: KnownDXVersion.V152
				),
				new SimpleModule(demo,
					name: "SortingBySummary",
					displayName: @"Sorting by Summary Values",
					group: "Summary Computation",
					type: "DevExpress.XtraGrid.Demos.SortingBySummary",
					description: @"The XtraGrid is not just a grid – it is a data shaping and data analysis tool – allowing end-users to dig deep into data and better understand metrics relevant to their business. In this example, we demonstrate the built-in Summary Computation features of the XtraGrid. When data is grouped, values can be ordered in ascending or descending order based upon the summary calculation. Select a sorting rule from the Sorting By combo box to see this feature in action. You can even modify the paint style used for summary values via a custom draw event.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "CustomDataSummaries",
					displayName: @"Custom Summaries",
					group: "Summary Computation",
					type: "DevExpress.XtraGrid.Demos.CustomDataSummaries",
					description: @"When standard summary computation features are not enough, you can use custom summaries to control the manner in which summaries are calculated. In this example, the summary is calculated against records that match the criteria specified via the Custom Freight edit box. By changing this value, the grid automatically updates the summary displayed for each grouped node and for the footer.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "Preview",
					displayName: @"Auto Preview",
					group: "Preview Section",
					type: "DevExpress.XtraGrid.Demos.Preview",
					description: @"This example demonstrates the automatic preview feature provided by grid views. The text for the preview section can be retrieved from a specific field or supplied via an event. A custom draw event gives you the ability to fully control the manner in which preview sections are drawn.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "RTFView",
					displayName: @"RTF Preview",
					group: "Preview Section",
					type: "DevExpress.XtraGrid.Demos.RTFView",
					description: @"The XtraGrid gives you countless UI options, among them the ability to display Rich Text within grid cells. In this example, we contrast the use of RTF within a column and preview sections of the grid. The former demonstrates the use of an embedded RTF column with full editing (right click to change fonts, colors, alignment, etc) and the former displays a read-only auto-preview section like Microsoft Outlook.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "Grid100000Records",
					displayName: @"100 000+ Records",
					group: "Performance",
					type: "DevExpress.XtraGrid.Demos.Grid100000Records",
					description: @"Performance matters. The XtraGrid was voted best grid by readers of Visual Studio Magazine for many reasons including its blazing fast data loading architecture. Because the grid does not load or cache data, it can display an unlimited number of rows on screen as fast as your data source can acquire them. Give it a try…this grid is bound to 100,000 records…group or sort against any column and see how fast the grid displays its results. Yes, it’s that fast.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "GridInstantFeedbackUI",
					displayName: @"Instant Feedback UI",
					group: "Performance",
					type: "DevExpress.XtraGrid.Demos.GridInstantFeedbackUI",
					description: @"The XtraGrid’s Instant Feedback mode was built so you can create highly responsive solutions regardless of the demands placed on your applications by end-users. Whenever you bind a grid to a very large dataset, the asynchronous DevExpress Instant Feedback mode loads data on demand, in a background thread. This guarantees that the control does not freeze during data-intensive operations. In this example, the grid is bound to 100,000 records.  If you sort or group data, you’ll notice that operations are performed in the background without disabling use of the grid. Note that a progress indicator provides UI feedback as to the state of the operation.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ServerMode\GridInstantFeedbackUI.cs",
						@"\WinForms\VB\GridMainDemo\ServerMode\GridInstantFeedbackUI.vb"
					}
				),
				new SimpleModule(demo,
					name: "RealTimeSourceDemo",
					displayName: @"Real-Time Data",
					group: "Performance",
					type: "DevExpress.XtraGrid.Demos.RealTimeSourceDemo",
					description: @"Yes, it’s true. The XtraGrid ships with an incredibly rich set of UI options BUT it is also incredibly fast, regardless of the use-case scenario. In this example, we’ve connected the grid to a real time data source. As you can see the underlying data changes rapidly (10,000+ changes per second), yet the XtraGrid remains responsive and is able to handle the load without a sweat. Want to push the envelope and see what the grid can really do? Use the track bar to speed up data source changes and let the grid do the rest.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\Modules\RealTimeSource.cs",
						@"\WinForms\VB\GridMainDemo\Modules\RealTimeSource.vb"
					}
				),
				new SimpleModule(demo,
					name: "LookUpInstantFeedbackUI",
					displayName: @"Blazing Fast Lookups",
					group: "Performance",
					type: "DevExpress.XtraGrid.Demos.LookUpInstantFeedbackUI",
					description: @"The XtraGrid Suite ships with a powerhouse Lookup Control that has been optimized for very large datasets. It uses the asynchronous DevExpress Instant Feedback mode to load data on demand, in a background thread. This ensures that record selection against large tables or queries via lookups never locks up your application. In this example, the Lookup Control is bound to 100,000 records. When you activate the dropdown, you’ll notice that the UI remains responsive even when you scroll, sort or search for data.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ServerMode\LookUpInstantFeedbackUI.cs",
						@"\WinForms\VB\GridMainDemo\ServerMode\LookUpInstantFeedbackUI.vb"
					}
				),
				new SimpleModule(demo,
					name: "GridServerMode",
					displayName: @"Grid Server Mode",
					group: "Performance",
					type: "DevExpress.XtraGrid.Demos.GridServerMode",
					description: @"The XtraGrid Suite was built for speed, regardless of dataset size or data complexity. The patent-pending server mode allows you to display, edit and shape information against hundreds of thousands of rows…at blazing fast speeds. This unmatched performance is achieved because server mode allows the grid to load data on-demand and to move all data shaping operations to the server. In this example, you can witness the power of server mode whenever you scroll, sort, group, filter and calculate data summaries within the grid. Even with the massive dataset used in the demo, the XtraGrid is able to execute data shaping operations with minimal delay.",
					addedIn: KnownDXVersion.Before142,
					featuredPriority: 1,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ServerMode\GridServerMode.cs",
						@"\WinForms\VB\GridMainDemo\ServerMode\GridServerMode.vb"
					}
				),
				new SimpleModule(demo,
					name: "LookUpServerMode",
					displayName: @"Grid LookUp Server Mode",
					group: "Performance",
					type: "DevExpress.XtraGrid.Demos.LookUpServerMode",
					description: @"This application demonstrates our grid based lookup control and how you can connect it to very large datasets using the patent-pending DevExpress Server Mode.  Because data is supplied to the control on-demand and is never loaded into memory in its entirety, your applications will always remain responsive regardless of the data contained in your lookups. Explore the demo and activate an in-place GridLookUpEdit editor (by clicking the Issue column's cell). Note that all data-aware operations are performed on the server so scrolling speed, sorting, grouping, filtering and data computations are executed at blazing fast speeds. All data operations are logged and can be viewed in the Tracing pane. To improve performance further, you can disable tracing by clearing the Enable Tracing checkbox.",
					addedIn: KnownDXVersion.Before142,
					associatedFiles: new [] {
						@"\WinForms\CS\GridMainDemo\ServerMode\LookUpServerMode.cs",
						@"\WinForms\VB\GridMainDemo\ServerMode\LookUpServerMode.vb"
					}
				),
				new SimpleModule(demo,
					name: "GridFolder",
					displayName: @"File Explorer",
					group: "Performance",
					type: "DevExpress.XtraGrid.Demos.GridFolder",
					description: @"Speed, speed and more speed. You can populate the XtraGrid with information without the need to cache any data. In this example, we’ve create a file explorer that helps demonstrate the speed with which the grid obtains information. Use the incremental search feature to locate any file within a given folder (enter one or more letters to locate the appropriate file name). Notice the custom sorting algorithm that sorts folders and files independently.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "UnboundExpression",
					displayName: @"Unbound Expressions",
					group: "Data Binding",
					type: "DevExpress.XtraGrid.Demos.UnboundExpression",
					description: @"In this example, two unbound columns are populated with data using formulas (string expressions). The values for the Discount Amount and Total columns are calculated according to this expression and can be edited via the DevExpress Expression Editor. To learn more about the Expression Editor, activate it by clicking the button above the grid or right click the grid’s column header to activate its context menu.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "FilesDir",
					displayName: @"Provider Mode (master-detail files & directories)",
					group: "Data Binding",
					type: "DevExpress.XtraGrid.Demos.FilesDir",
					description: @"The XtraGrid makes it a breeze to work with unbound data. In this example, we’re using its master-detail mode to display files and folder structures. Different Views are used to represent different levels of the file system. Hover over the expand button to display detail tooltips to zoom in and out of detail data.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "GridSheet",
					displayName: @"Spreadsheet",
					group: "Data Binding",
					type: "DevExpress.XtraGrid.Demos.GridSheet",
					description: @"Need your grid to behave more like a spreadsheet? No problem. In this example, the XtraGrid is used to emulate a spreadsheet containing 1,000,000 records and 256 columns. Enter values within the cells and the grid will instantly calculate totals for the rows and columns. The records are created dynamically in the grid’s underlying data source.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "GridTetris",
					displayName: @"Grid Tetris",
					group: "Entertainment",
					type: "DevExpress.XtraGrid.Demos.GridTetris",
					description: @"We’ve shown you many demos…it’s time to have some fun. In this example, we’ve used the XtraGrid to build a Tetris clone via the grid’s custom draw and alpha-blending features. How’s that for powerful.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "AlphaBlending",
					displayName: @"Alpha Blending",
					group: "Outdated Styles",
					type: "DevExpress.XtraGrid.Demos.AlphaBlending",
					description: @"With the XtraGrid, the style of the application you deliver is completely in your control. You can customize the color and alpha blend of every element of your grids, and brand grids with corporate logos and other images. You can even choose from one of our predefined style schemes or make your own company standard style, that can be reused and shared across your team. Feel free to turn on alpha blending in the grid below and try out some of our predefined grid styles.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "CustomDraw",
					displayName: @"Custom Draw",
					group: "Outdated Styles",
					type: "DevExpress.XtraGrid.Demos.CustomDraw",
					description: @"This demo illustrates just how flexible the custom painting is, allowing you to supply your applications with exactly the look&feel your desire. The XtraGrid provides multiple custom draw events which allow you to control how every visual element is painted or even perform custom painting yourself.",
					addedIn: KnownDXVersion.Before142
				),
				new SimpleModule(demo,
					name: "InlineGrouping",
					displayName: @"Inline Grouping",
					group: "Data Shaping",
					type: "DevExpress.XtraGrid.Demos.InlineGrouping",
					description: @"The Data Grid can hide group rows if they contain only a single data row. Toggle the 'Allow Partial Groups' option to see this feature in action. Note that data groups are separated with lines in this mode. In addition, grouped column headers are always displayed inline with non-grouped column headers.",
					addedIn: KnownDXVersion.V152
				)
			};
		}
	}
}
