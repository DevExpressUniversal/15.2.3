<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ddhelpers="clr-namespace:DevExpress.DemoData.Helpers;assembly=DevExpress.DemoData.v15.2.Core"
    xmlns:controls="clr-namespace:DevExpress.Xpf.DemoBase.Helpers"
    xmlns:internal="clr-namespace:DevExpress.Xpf.DemoBase.Helpers.Internal">

    <ddhelpers:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <ddhelpers:GlobalResource x:Key="DemoScrollViewerResource" Assembly="DevExpress.DemoData.v15.2.Core" XamlPath="DemoWindow/DemoScrollBar.xaml" Key="DemoScrollViewer" />
    <ddhelpers:GlobalResource x:Key="DemoScrollBarResource" Assembly="DevExpress.DemoData.v15.2.Core" XamlPath="DemoWindow/DemoScrollBar.xaml" Key="DemoScrollBar" />

    <Style TargetType="internal:RichTextPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="internal:RichTextPresenter">
                    <RichTextBox x:Name="InnerPresenter" IsReadOnly="True" IsDocumentEnabled="True" BorderBrush="Transparent" BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="internal:CodeViewPresenter">
        <Setter Property="FontFamily" Value="Courier New" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#FFD9D9D9" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HighlightedRangeRectangle">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Fill="#4B0000C8" Stroke="#E60000FE" StrokeThickness="1" Margin="-2,-1,-2,0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="internal:CodeViewPresenter">
                    <dx:DXBorder Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="ScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="{TemplateBinding Padding}" Style="{Binding Path=Resource, Source={StaticResource DemoScrollViewerResource}}">
                            <Grid Background="Transparent" Margin="-3,0,-4,0">
                                <internal:RichTextPresenter x:Name="TextPresenter" FlowDirection="LeftToRight" HorizontalAlignment="Left" MaxWidth="5000" TextWrapping="NoWrap" />
                                <Canvas x:Name="HighlightedRangesPreseneter" IsHitTestVisible="False" Background="Transparent" />
                            </Grid>
                        </ScrollViewer>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:CodeViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CodeViewItem">
                    <TextBlock Text="{TemplateBinding FileName}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:CodeViewItemContainer">
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="Foreground" Value="#FF373A3D" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,2,3,2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CodeViewItemContainer">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Rectangle x:Name="FocusVisual" StrokeThickness="1" Stroke="#FF373A3D" StrokeDashArray="1 2" SnapsToDevicePixels="True" Opacity="0" />
                        <dx:DXBorder x:Name="ListBoxItemSelection" Background="#FFF78A09" Opacity="0" />
                        <dx:DXBorder x:Name="ListBoxItemInactiveSelectionSelection" Background="#FFB9B9B9" Opacity="0" />
                        <dx:DXBorder x:Name="ListBoxItemHoverSelection" Background="#FFE3E3E3" Opacity="0" />
                        <Grid x:Name="InnerGrid" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <dx:DXBorder Width="20"
                                Visibility="{Binding Path=CodeViewItem.ActualIsDependent, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                            <controls:CodeViewItemPresenter x:Name="ItemPresenter" Grid.Column="1" Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ListBoxItemSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="ListBoxItemHoverSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="ListBoxItemInactiveSelectionSelection" Property="Opacity" Value="0" />
                            <Setter Property="Foreground" Value="#FF373A3D" />
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="ListBoxItemSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="ListBoxItemHoverSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="ListBoxItemInactiveSelectionSelection" Property="Opacity" Value="0" />
                            <Setter Property="Foreground" Value="#FFFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="ListBoxItemSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="ListBoxItemHoverSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="ListBoxItemInactiveSelectionSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FF373A3D" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ListBoxItemSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="ListBoxItemHoverSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="ListBoxItemInactiveSelectionSelection" Property="Opacity" Value="0" />
                            <Setter Property="Foreground" Value="#FFFFFFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ListBoxItemSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="ListBoxItemHoverSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="ListBoxItemInactiveSelectionSelection" Property="Opacity" Value="0" />
                            <Setter Property="Foreground" Value="#FF373A3D" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ListBoxItemSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="ListBoxItemHoverSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="ListBoxItemInactiveSelectionSelection" Property="Opacity" Value="0" />
                            <Setter Property="Foreground" Value="#FFFFFFFF" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ItemPresenter" Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CodeViewItemsPresenterToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="Foreground" Value="#00000000" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="#00000000" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="16" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="1">
                            <Grid x:Name="DefaultState">
                                <dx:DXBorder Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1" />
                            </Grid>
                            <Grid x:Name="HoverState" Opacity="0">
                                <dx:DXBorder Background="#FFB9B9B9" BorderBrush="#FFB9B9B9" BorderThickness="1" />
                            </Grid>
                            <Grid x:Name="PressedState" Opacity="0">
                                <dx:DXBorder Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1" />
                            </Grid>
                            <Path x:Name="Glyph" Stretch="Fill" Fill="#FF666666" Data="F1 M 211,186L 205,186L 208,189L 211,186 Z" Width="6" Height="3" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                            <Setter TargetName="Glyph" Property="Fill" Value="#7F373A3D" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF373A3D" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="controls:CodeViewItemsPresenter">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#FF373A3D" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Padding" Value="3,3,20,3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CodeViewItemsPresenter">
                    <Grid x:Name="Root" SnapsToDevicePixels="True" Background="White">
                        <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                <dx:DXBorder x:Name="DropDownBorder" BorderBrush="#FFB9B9B9" Background="#FFFFFFFF" BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" Margin="1" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </dx:DXBorder>
                            </Grid>
                        </Popup>
                        <controls:CodeViewItemPresenter x:Name="ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ToggleButton x:Name="DropDownButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource CodeViewItemsPresenterToggleButton}" Focusable="False" />
                        <dx:DXBorder BorderBrush="#FFD9D9D9" BorderThickness="1" />
                        <Grid x:Name="FocusedState" Grid.ColumnSpan="2" Opacity="0">
                            <dx:DXBorder BorderBrush="#FFF78A09" BorderThickness="1" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True" />
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DropDownButton" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsReadOnly" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="controls:CodeViewControl">
        <Setter Property="NotFoundMessage" Value="Not found" />
        <Setter Property="NoMoreFoundMessage" Value="No more occurrences found" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CodeViewControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <dx:DXBorder Grid.RowSpan="2" BorderThickness="1" BorderBrush="#FFD9D9D9" Background="White" />
                        <dx:DXBorder BorderBrush="#FFD9D9D9" Margin="1,1,1,0" BorderThickness="0,0,0,1" VerticalAlignment="Bottom" Background="#FFF5F5F5">
                            <controls:CodeViewControlPanel>
                                <StackPanel x:Name="SearchPanel" MinHeight="24" Orientation="Horizontal" Margin="10"
                                        controls:CodeViewControlPanel.CellWidth="Auto" controls:CodeViewControlPanel.CellAlignment="Left">
                                    <TextBox x:Name="TextInput" VerticalContentAlignment="Center" Width="250" />
                                    <Button Content="Find Next" Margin="5,0,0,0" Command="{Binding Path=SearchCommand, RelativeSource={RelativeSource TemplatedParent}}" Style="{x:Null}"/>
                                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Foreground="#FF9A9A9A"
                                               Text="{Binding Path=Message, RelativeSource={RelativeSource TemplatedParent}}" />
                                </StackPanel>
                               <controls:CodeViewItemsPresenter x:Name="ItemsPresenter" Margin="10" HorizontalAlignment="Stretch"
                                        controls:CodeViewControlPanel.CellWidth="*" controls:CodeViewControlPanel.CellAlignment="Right"
                                        controls:CodeViewControlPanel.CellMaxWidth="600"
                                      Foreground="Black"
                                      ItemsSource="{TemplateBinding ItemsSource}"
                                      ItemTemplate="{TemplateBinding ItemTemplate}"
                                      SelectedIndex="0"
                                      SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </controls:CodeViewControlPanel>
                        </dx:DXBorder>
                        <internal:CodeViewPresenter x:Name="CodePresenter" Grid.Row="1" Margin="1,0,1,1" BorderBrush="{x:Null}" BorderThickness="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
