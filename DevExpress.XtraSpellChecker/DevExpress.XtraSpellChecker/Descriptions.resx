<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SpellCheckerLocalizerActive" xml:space="preserve">
    <value>Gets or sets a localizer object providing localization of the user interface at runtime.</value>
  </data>
  <data name="SpellCheckerResLocalizerLanguage" xml:space="preserve">
    <value>Returns the name of the language currently used by this localizer object.</value>
  </data>
  <data name="SharedDictionaryStorageDictionaries" xml:space="preserve">
    <value>Provides access to shared dictionaries that are stored in a separate component to be available throughout the application.</value>
  </data>
  <data name="SpellCheckerParentContainer" xml:space="preserve">
    <value>Gets or sets the control, representing the parent container for the XtraSpellChecker instance.</value>
  </data>
  <data name="SpellCheckerSpellCheckMode" xml:space="preserve">
    <value>Gets or sets the XtraSpellChecker operation mode.</value>
  </data>
  <data name="SpellCheckerLookAndFeel" xml:space="preserve">
    <value>Provides access to the settings which control the SpellChecker look and feel appearance. </value>
  </data>
  <data name="SpellCheckerCheckAsYouTypeOptions" xml:space="preserve">
    <value>Provides access to the options used to visually indicate misspelled words and customize the context menu, invoked by right-clicking the word.</value>
  </data>
  <data name="SpellCheckerOptionsSpelling" xml:space="preserve">
    <value>Provides access to the spelling options set for the spell checker instance.</value>
  </data>
  <data name="SpellCheckerSpellingFormShowing" xml:space="preserve">
    <value>Occurs when the spelling form is about to be displayed.</value>
  </data>
  <data name="SpellCheckerOptionsFormShowing" xml:space="preserve">
    <value>Occurs when the form used to specify the OptionsSpelling is about to be shown.</value>
  </data>
  <data name="SpellCheckerCheckCompleteFormShowing" xml:space="preserve">
    <value>Occurs when the spell check is complete. </value>
  </data>
  <data name="SpellCheckerPopupMenuShowing" xml:space="preserve">
    <value>Occurs before a context menu is shown.</value>
  </data>
  <data name="CheckAsYouTypeOptionsSuggestionCount" xml:space="preserve">
    <value>Gets or sets the number of suggested words displayed in the context menu.</value>
  </data>
  <data name="CheckAsYouTypeOptionsShowSpellCheckForm" xml:space="preserve">
    <value>Gets or sets whether the spelling form can be invoked in a SpellCheckMode.AsYouType mode.</value>
  </data>
  <data name="CheckAsYouTypeOptionsColor" xml:space="preserve">
    <value>Gets or sets the color used to underline the misspelled word.</value>
  </data>
  <data name="CheckAsYouTypeOptionsUnderlineStyle" xml:space="preserve">
    <value>Gets or sets the underline style for misspelled words.</value>
  </data>
  <data name="CheckAsYouTypeOptionsCheckControlsInParentContainer" xml:space="preserve">
    <value>Gets or sets whether the spell checker is activated on a user entering the control in the parent container.</value>
  </data>
</root>