<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LinqServerModeSourceQueryableSource" xml:space="preserve">
    <value>Gets or sets the queryable data source.</value>
  </data>
  <data name="LinqServerModeSourceKeyExpression" xml:space="preserve">
    <value>Gets or sets the key expression.</value>
  </data>
  <data name="LinqServerModeSourceElementType" xml:space="preserve">
    <value>This property is intended for internal use. </value>
  </data>
  <data name="FormatInfoFormatType" xml:space="preserve">
    <value>Gets or sets the type of formatting specified by the current FormatInfo object.</value>
  </data>
  <data name="FormatInfoFormatString" xml:space="preserve">
    <value>Gets the pattern for formatting values.</value>
  </data>
  <data name="FormatInfoEmpty" xml:space="preserve">
    <value>Gets a FormatInfo object with default settings.</value>
  </data>
  <data name="FormatInfoAlwaysUseThreadFormat" xml:space="preserve">
    <value>Gets or sets whether a value for the FormatInfo.Format property should be determined each time the property is accessed.</value>
  </data>
  <data name="ErrorInfoErrorType" xml:space="preserve">
    <value>Gets or sets the type of error associated with the current property name.</value>
  </data>
  <data name="ErrorInfoErrorText" xml:space="preserve">
    <value>Gets or sets the error text associated with the current property name.</value>
  </data>
  <data name="EntityServerModeSourceQueryableSource" xml:space="preserve">
    <value>Gets or sets the queryable data source.</value>
  </data>
  <data name="EntityServerModeSourceKeyExpression" xml:space="preserve">
    <value>Gets or sets the key expression.</value>
  </data>
  <data name="EntityServerModeSourceElementType" xml:space="preserve">
    <value>This property is intended for internal use.</value>
  </data>
  <data name="BrickStyleTextAlignment" xml:space="preserve">
    <value>Gets or sets the alignment of the text in the brick.</value>
  </data>
  <data name="BrickStyleStringFormat" xml:space="preserve">
    <value>Gets or sets a BrickStringFormat instance specifying text formatting and layout.</value>
  </data>
  <data name="BrickStyleSides" xml:space="preserve">
    <value>Gets or sets a value defining which borders of the current brick are visible.</value>
  </data>
  <data name="BrickStylePadding" xml:space="preserve">
    <value>Gets or sets the padding values of a brick.</value>
  </data>
  <data name="BrickStyleForeColor" xml:space="preserve">
    <value>Gets or sets the foreground color.</value>
  </data>
  <data name="BrickStyleFont" xml:space="preserve">
    <value>Gets or sets the Font used to display text.</value>
  </data>
  <data name="BrickStyleDefaultFont" xml:space="preserve">
    <value>Gets the default font for a brick style.</value>
  </data>
  <data name="BrickStyleDefault" xml:space="preserve">
    <value>Gets the BrickStyle object whose properties are set to their default values.</value>
  </data>
  <data name="BrickStyleBorderWidth" xml:space="preserve">
    <value>Gets or sets the border width.</value>
  </data>
  <data name="BrickStyleBorderStyle" xml:space="preserve">
    <value>Gets or sets the border style of a brick.</value>
  </data>
  <data name="BrickStyleBorderDashStyle" xml:space="preserve">
    <value>Specifies the dash style for the brick's border.</value>
  </data>
  <data name="BrickStyleBorderColor" xml:space="preserve">
    <value>Gets or sets the border color.</value>
  </data>
  <data name="BrickStyleBackColor" xml:space="preserve">
    <value>Gets or sets the background color.</value>
  </data>
  <data name="BrickStringFormatValue" xml:space="preserve">
    <value>Gets the StringFormat instance representing current text formatting.</value>
  </data>
  <data name="BrickStringFormatTrimming" xml:space="preserve">
    <value>Gets text trimming mode.</value>
  </data>
  <data name="BrickStringFormatPrototypeKind" xml:space="preserve">
    <value>Gets or sets a prototype string format for the current string format.</value>
  </data>
  <data name="BrickStringFormatLineAlignment" xml:space="preserve">
    <value>Gets or sets line alignment.</value>
  </data>
  <data name="BrickStringFormatHotkeyPrefix" xml:space="preserve">
    <value>Gets the HotkeyPrefix object for this BrickStringFormat object.</value>
  </data>
  <data name="BrickStringFormatFormatFlags" xml:space="preserve">
    <value>Gets or sets a StringFormatFlags enumeration that contains formatting information.</value>
  </data>
  <data name="BrickStringFormatAlignment" xml:space="preserve">
    <value>Gets or sets text alignment information.</value>
  </data>
  <data name="OptionsLayoutBaseFullLayout" xml:space="preserve">
    <value>Returns an OptionsLayoutBase object whose settings indicate that the full layout of the control should be stored to and restored from storage (a stream, xml file or system registry).</value>
  </data>
  <data name="OptionsColumnLayoutStoreLayout" xml:space="preserve">
    <value>Gets or sets whether the position, width and visibility of the columns and bands are stored when the layout is saved to storage and restored when the layout is restored from storage.</value>
  </data>
  <data name="OptionsColumnLayoutStoreAppearance" xml:space="preserve">
    <value>Gets or sets whether the appearance settings of the columns and bands are also stored when the layout is saved to storage and restored when the layout is restored from storage.</value>
  </data>
  <data name="OptionsColumnLayoutStoreAllOptions" xml:space="preserve">
    <value>Gets or sets whether all the settings of a control's columns/bands (except for the appearance settings) are stored when the layout is saved to storage and restored when the layout is restored from storage.</value>
  </data>
  <data name="OptionsColumnLayoutRemoveOldColumns" xml:space="preserve">
    <value>Gets or sets whether the columns that exist in a layout when it's restored but that don't exist in the current control should be discarded or added to the control.</value>
  </data>
  <data name="OptionsColumnLayoutAddNewColumns" xml:space="preserve">
    <value>Gets or sets whether the columns that exist in the current control but do not exist in a layout when it's restored should be retained.</value>
  </data>
  <data name="OptionsLayoutBaseLayoutVersion" xml:space="preserve">
    <value>Gets or sets the version of the layout.</value>
  </data>
  <data name="OptionsLayoutGridColumns" xml:space="preserve">
    <value>Contains options that specify how the columns' and bands' settings are stored to and restored from storage (a stream, xml file or sysytem registry).</value>
  </data>
  <data name="OptionsLayoutGridStoreAllOptions" xml:space="preserve">
    <value>Gets or sets whether all the control's settings (except for the appearance settings and format rules) are stored when the layout is saved to storage and restored when the layout is restored from storage.</value>
  </data>
  <data name="OptionsLayoutGridStoreAppearance" xml:space="preserve">
    <value>Gets or sets whether the control's appearance settings are also stored when the layout is saved to storage and restored when the layout is restored from storage.</value>
  </data>
  <data name="OptionsLayoutGridStoreDataSettings" xml:space="preserve">
    <value>Gets or sets whether the control's grouping, sorting, filtering settings and summaries are stored when the layout is saved to storage and restored when the layout is restored from storage.</value>
  </data>
  <data name="OptionsLayoutGridStoreVisualOptions" xml:space="preserve">
    <value>Gets or sets whether the control's visual options are stored when the layout is saved to storage and restored when the layout is restored from storage.</value>
  </data>
  <data name="PaddingInfoBottom" xml:space="preserve">
    <value>Gets or sets the padding value for the bottom edge.</value>
  </data>
  <data name="PaddingInfoLeft" xml:space="preserve">
    <value>Gets or sets the padding value for the left edge.</value>
  </data>
  <data name="PaddingInfoRight" xml:space="preserve">
    <value>Gets or sets the padding value for the right edge.</value>
  </data>
  <data name="PaddingInfoTop" xml:space="preserve">
    <value>Gets or sets the padding value for the top edge.</value>
  </data>
  <data name="PLinqServerModeSourceElementType" xml:space="preserve">
    <value>This property is intended for internal use. </value>
  </data>
  <data name="RealTimeSourceDataSource" xml:space="preserve">
    <value>Specifies the data source from which the RealTimeSource component retrieves its data.</value>
  </data>
  <data name="RealTimeSourceDisplayableProperties" xml:space="preserve">
    <value>Specifies a semicolon-separated list of displayable property names.</value>
  </data>
  <data name="RealTimeSourceIgnoreItemEvents" xml:space="preserve">
    <value>Specifies whether to ignore &lt;a href=\"http://msdn.microsoft.com/en-us/library/vstudio/system.componentmodel.inotifypropertychanged.propertychanged(v=vs.110).aspx\"&gt;INotifyPropertyChanged.PropertyChanged events of the data source items.</value>
  </data>
</root>