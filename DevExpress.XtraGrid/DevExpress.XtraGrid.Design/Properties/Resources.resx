<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutVerbName" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddLevelCaption" xml:space="preserve">
    <value>Add level</value>
  </data>
  <data name="AddSplitContainerCaption" xml:space="preserve">
    <value>Add split container</value>
  </data>
  <data name="AppearanceDesignerDescription" xml:space="preserve">
    <value>Click on any of the XtraGrid's elements in the preview pane to display the Appearance objects associated with that element. Then select one or more of the Appearance objects to access and modify their settings via the property grid. Note that specific appearances are ignored when the Skin, WindowsXP or Office2003 paint schemes are applied. </value>
  </data>
  <data name="BandDesignerDescription" xml:space="preserve">
    <value>You can add and delete bands and modify their settings. Add columns to bands using drag and drop.</value>
  </data>
  <data name="BandOptionsCaption" xml:space="preserve">
    <value>Band options</value>
  </data>
  <data name="BandPropertiesCaption" xml:space="preserve">
    <value>Band properties</value>
  </data>
  <data name="ChangeLevelNameCaption" xml:space="preserve">
    <value>Change level name</value>
  </data>
  <data name="ChangeViewText" xml:space="preserve">
    <value>(Click here to change view)</value>
  </data>
  <data name="ChengeViewText" xml:space="preserve">
    <value>(Click here to change view)</value>
  </data>
  <data name="ChooseDataSourceCaption" xml:space="preserve">
    <value>Choose Data Source</value>
  </data>
  <data name="ColumnOptionsCaption" xml:space="preserve">
    <value>Column options</value>
  </data>
  <data name="ColumnPropertiesCaption" xml:space="preserve">
    <value>Column properties</value>
  </data>
  <data name="ColumnVisibleWarning" xml:space="preserve">
    <value>The column visible order is not changed. To change the column visible order, click the Layout button on the left.</value>
  </data>
  <data name="ComponentModifiedWarning" xml:space="preserve">
    <value>Component cannot be modified in designer while building or debugging.</value>
  </data>
  <data name="ConvertToCaption" xml:space="preserve">
    <value>Convert to</value>
  </data>
  <data name="CreateNewLevelText" xml:space="preserve">
    <value>(Click here to create a new level)</value>
  </data>
  <data name="CreateNewViewCaption" xml:space="preserve">
    <value>Create new view</value>
  </data>
  <data name="CreateViewText" xml:space="preserve">
    <value>(Click here to create a view)</value>
  </data>
  <data name="CustomizeLayoutVerbName" xml:space="preserve">
    <value>Customize Layout</value>
  </data>
  <data name="DeleteLevelCaption" xml:space="preserve">
    <value>Delete level</value>
  </data>
  <data name="ErrorCaption" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FilterOptionsCaption" xml:space="preserve">
    <value>Filter options</value>
  </data>
  <data name="FormatConditionDescription" xml:space="preserve">
    <value>You can add, remove or modify items to apply styles to columns or entire rows based upon a custom format rule.</value>
  </data>
  <data name="GridInitWarning" xml:space="preserve">
    <value>The GridControl property is not initialized.
Please select a grid control from its dropdown list.</value>
  </data>
  <data name="GridInitWarningCaption" xml:space="preserve">
    <value>{0}.GridControl is null...</value>
  </data>
  <data name="GroupSummaryDescription" xml:space="preserve">
    <value>Add, remove or modify the summary items responsible for calculating summary values when grouping is performed.</value>
  </data>
  <data name="HideColumnsSelectorCaption" xml:space="preserve">
    <value>Hide Column &amp;Selector</value>
  </data>
  <data name="LayoutsDescription" xml:space="preserve">
    <value>Modify the view's layout (sorting and grouping settings, column and band arrangement) and click the Apply button to apply the modifications to the current view. You can also save the layout to an XML file (this can be loaded and applied to other views at design time and runtime).</value>
  </data>
  <data name="LayoutViewMasterWarning" xml:space="preserve">
    <value>LayoutView cannot be master view in master detail</value>
  </data>
  <data name="LevelCaption" xml:space="preserve">
    <value>Level{0}</value>
  </data>
  <data name="LevelStyleDescription" xml:space="preserve">
    <value>You can convert the current view to another type, assign a new view to the main level and add new levels to represent master-detail relationships. Click the Retrieve Details button to automatically create levels for all the master-detail relationships in the bound data source (when the XtraGrid is bound to a DataTable).</value>
  </data>
  <data name="MainPropertiesCaption" xml:space="preserve">
    <value>Main properties</value>
  </data>
  <data name="MainViewCaption" xml:space="preserve">
    <value>(MainView)</value>
  </data>
  <data name="NameWarning" xml:space="preserve">
    <value>The name {0} is already in use by another component.</value>
  </data>
  <data name="NoneCaption" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="OptionsCaption" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PaintStyleCaption" xml:space="preserve">
    <value>Paint Style</value>
  </data>
  <data name="PopulateDetailsQuestion" xml:space="preserve">
    <value>The current detail tree will be destroyed. Do you want to continue?</value>
  </data>
  <data name="PreviewVerbName" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="PropertiesCaption" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="PropertyValueWarning" xml:space="preserve">
    <value>Property value is not valid.</value>
  </data>
  <data name="RemoveSplitContainerCaption" xml:space="preserve">
    <value>Remove split container</value>
  </data>
  <data name="RunDesignerVerbName" xml:space="preserve">
    <value>Run Designer</value>
  </data>
  <data name="RunWizardVerbName" xml:space="preserve">
    <value>Run Wizard</value>
  </data>
  <data name="SchemeDescription" xml:space="preserve">
    <value>Select the painting scheme and click the Apply button. This will change the appearance settings of the current View.</value>
  </data>
  <data name="ShowColumnsSelectorCaption" xml:space="preserve">
    <value>Show Column &amp;Selector</value>
  </data>
  <data name="ShowLevelDesignerCaption" xml:space="preserve">
    <value>Show level designer</value>
  </data>
  <data name="ShowLevelDesignerVerbName" xml:space="preserve">
    <value>Show Level Designer</value>
  </data>
  <data name="SummaryItemCaption" xml:space="preserve">
    <value>Summary Item - {0} ({1})</value>
  </data>
  <data name="SummaryItemIndexCaption" xml:space="preserve">
    <value>Summary Item - Index {0}</value>
  </data>
  <data name="SummaryItemsCaption" xml:space="preserve">
    <value>Summary Items ({0})</value>
  </data>
  <data name="UnassignedCaption" xml:space="preserve">
    <value>Unassigned</value>
  </data>
  <data name="UnassignedText" xml:space="preserve">
    <value>&lt;Unassigned&gt;</value>
  </data>
  <data name="ViewsEditorDescription" xml:space="preserve">
    <value>Manage the views in the grid's repository (add, remove, modify settings).</value>
  </data>
  <data name="ViewsEditorWarning" xml:space="preserve">
    <value>This will remove all unassigned views. Are you sure?</value>
  </data>
  <data name="WarningCaption" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="PersistentRepositoryGridEditorDescription" xml:space="preserve">
    <value>Manage the editors used for in-place editing within the cells (add, remove, modify their settings). Use the Columns page to assign editors to the selected view's columns. The editor can be removed from the collection if it isn't assigned to a column.</value>
  </data>
  <data name="BandsCaption" xml:space="preserve">
    <value>Bands</value>
  </data>
  <data name="ColumnsCaption" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="FormatConditionCaption" xml:space="preserve">
    <value>Format Rules</value>
  </data>
  <data name="GeneralCaption" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GridAppearancePreviewText" xml:space="preserve">
    <value>The preview text...
The second line of the preview text.</value>
  </data>
  <data name="GroupSummaryCaption" xml:space="preserve">
    <value>Group Summary</value>
  </data>
  <data name="PrintAppearanceDesignerDescription" xml:space="preserve">
    <value>Select one or more of the Appearance objects to customize the printing appearances of the corresponding visual elements.</value>
  </data>
  <data name="PrintingWarning" xml:space="preserve">
    <value>XtraPrinting Library is currently inaccesible.</value>
  </data>
  <data name="SampleViewCaption" xml:space="preserve">
    <value>Sample View</value>
  </data>
  <data name="YourViewCaption" xml:space="preserve">
    <value>Your View</value>
  </data>
  <data name="YourViewNameCaption" xml:space="preserve">
    <value>Your View ({0})</value>
  </data>
  <data name="AddNewBandCaption" xml:space="preserve">
    <value>Add New Band...</value>
  </data>
  <data name="ClickBandCaption" xml:space="preserve">
    <value>click a band in order to select it...</value>
  </data>
  <data name="DragBandCaption" xml:space="preserve">
    <value>Drag the Band to the Grid</value>
  </data>
  <data name="ShowInGroupRowCaption" xml:space="preserve">
    <value>(Show in GroupRow)</value>
  </data>
  <data name="NoneString" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="AddColumnDescription" xml:space="preserve">
    <value>Appends a new column to the View's Columns collection.</value>
  </data>
  <data name="AddColumnText" xml:space="preserve">
    <value>Add Column</value>
  </data>
  <data name="HideFieldListDescription" xml:space="preserve">
    <value>Hides the list of fields available in the data source.</value>
  </data>
  <data name="HideFieldListText" xml:space="preserve">
    <value>Hide Field List</value>
  </data>
  <data name="InsertColumnDescription" xml:space="preserve">
    <value>Inserts a new column at the current position within the View's Columns collection.</value>
  </data>
  <data name="InsertColumnText" xml:space="preserve">
    <value>Insert Column</value>
  </data>
  <data name="MovesColumnDownWarning" xml:space="preserve">
    <value>Moves the selected column towards the end of the Columns collection. The column's visible order is not changed. You can change the visible order via the Layout page. To open it, click the Layout button on the left.</value>
  </data>
  <data name="MovesColumnUpWarning" xml:space="preserve">
    <value>Moves the selected column towards the beginning of the Columns collection. The column's visible order is not changed. You can change the visible order via the Layout page. To open it, click the Layout button on the left.</value>
  </data>
  <data name="RemoveColumnDescription" xml:space="preserve">
    <value>Removes the selected column from the Column's collection.</value>
  </data>
  <data name="RemoveColumnText" xml:space="preserve">
    <value>Remove Column</value>
  </data>
  <data name="RetrieveFieldsDescription" xml:space="preserve">
    <value>Creates columns for all the fields in the bound data source. Any existing columns are deleted first.</value>
  </data>
  <data name="RetrieveFieldsText" xml:space="preserve">
    <value>Retrieve Fields</value>
  </data>
  <data name="ShowFieldListDescription" xml:space="preserve">
    <value>Displays fields available in the data source.</value>
  </data>
  <data name="ShowFieldListText" xml:space="preserve">
    <value>Show Field List</value>
  </data>
  <data name="AddSummaryItemDescription" xml:space="preserve">
    <value>Appends a new item to the View's GroupSummary collection.</value>
  </data>
  <data name="AddSummaryItemText" xml:space="preserve">
    <value>Add Summary Item</value>
  </data>
  <data name="RemoveSummaryItemDescription" xml:space="preserve">
    <value>Removes the selected item from the View's GroupSummary collection.</value>
  </data>
  <data name="RemoveSummaryItemText" xml:space="preserve">
    <value>Remove Summary Item</value>
  </data>
  <data name="AddStyleConditionDescription" xml:space="preserve">
    <value>Appends a new item to the View's FormatRules collection.</value>
  </data>
  <data name="AddStyleConditionText" xml:space="preserve">
    <value>Add Format Rule</value>
  </data>
  <data name="MoveItemTowardBeginningText" xml:space="preserve">
    <value>Move Toward Beginning</value>
  </data>
  <data name="MoveItemTowardEndText" xml:space="preserve">
    <value>Move Toward End</value>
  </data>
  <data name="MoveStyleConditionDownDescription" xml:space="preserve">
    <value>Moves the selected item towards the end of the FormatRules collection.</value>
  </data>
  <data name="MoveStyleConditionUpDescription" xml:space="preserve">
    <value>Moves the selected item towards the beginning of the FormatRules collection.</value>
  </data>
  <data name="MoveSummaryItemDownDescription" xml:space="preserve">
    <value>Moves the selected item towards the end of the GroupSummary collection.</value>
  </data>
  <data name="MoveSummaryItemUpDescription" xml:space="preserve">
    <value>Moves the selected item towards the beginning of the GroupSummary collection.</value>
  </data>
  <data name="RemoveStyleConditionDescription" xml:space="preserve">
    <value>Removes the selected item from the View's FormatRules collection.</value>
  </data>
  <data name="RemoveStyleConditionText" xml:space="preserve">
    <value>Remove Format Rule</value>
  </data>
  <data name="EditFormDescription" xml:space="preserve">
    <value>Customize the Edit Form invoked when editing Grid data or creating new records at runtime.</value>
  </data>
  <data name="WinExplorerViewColumnDesignerDescription" xml:space="preserve">
    <value>You can add and delete grid columns, modify their settings and assign in-place editors.</value>
  </data>
  <data name="WinExplorerViewLinkToLayoutPageText" xml:space="preserve">
    <value>To display grid columns in the WinExplorerView, assign them to the predefined WinExplorerView Columns in the &lt;href&gt;Layout&lt;/href&gt; page.</value>
  </data>
  <data name="WinExplorerViewColumnsCaption" xml:space="preserve">
    <value>Grid Columns</value>
  </data>
  <data name="HideColumnsBandsSelectorCaption" xml:space="preserve">
    <value>Hide Column/Band &amp;Selector</value>
  </data>
  <data name="ShowColumnsBandsSelectorCaption" xml:space="preserve">
    <value>Show Column/Band &amp;Selector</value>
  </data>
  <data name="SearchColumnDescription" xml:space="preserve">
    <value>Displays/hides search boxes.</value>
  </data>
  <data name="SearchColumnText" xml:space="preserve">
    <value>Search Boxes</value>
  </data>
</root>