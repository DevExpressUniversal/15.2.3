<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DevExpress.Xpf.Charts"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">

    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{dx:ChartsResource themes/Generic/LegendMarker.xaml}" />
    </ResourceDictionary.MergedDictionaries>

    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <local:IndicatorGeometryToGeometryConverter x:Key="indicatorGeometryToGeometryConverter"/>

    <Style x:Key="IndicatorDefaultStyle" TargetType="local:Indicator">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource IndicatorLegendMarkerDefaultTemplate}"/>
    </Style>

    <Style TargetType="local:RegressionLine"                     BasedOn="{StaticResource IndicatorDefaultStyle}"/>   
    <Style TargetType="local:FibonacciRetracement"               BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:FibonacciFans"                      BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:FibonacciArcs"                      BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:TrendLine"                          BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:SimpleMovingAverage"                BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:WeightedMovingAverage"              BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:ExponentialMovingAverage"           BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:TriangularMovingAverage"            BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:TripleExponentialMovingAverageTema" BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:AverageTrueRange"                   BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:ChaikinsVolatility"                 BasedOn="{StaticResource IndicatorDefaultStyle}"/>
    <Style TargetType="local:CommodityChannelIndex"              BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:DetrendedPriceOscillator"           BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:MassIndex"                          BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:MovingAverageConvergenceDivergence" BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:RateOfChange"                       BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:RelativeStrengthIndex"              BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:StandardDeviation"                  BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:TripleExponentialMovingAverageTrix" BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:WilliamsR"                          BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:BollingerBands"                     BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:TypicalPrice"                       BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:WeightedClose"                      BasedOn="{StaticResource IndicatorDefaultStyle}" />
    <Style TargetType="local:MedianPrice"                        BasedOn="{StaticResource IndicatorDefaultStyle}" />

    <Style TargetType="{x:Type local:IndicatorPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IndicatorPresentation}">
                    <Path x:Name="PART_IndicatorPath"
                        Data="{Binding Path=IndicatorGeometry, Converter={StaticResource indicatorGeometryToGeometryConverter}}"
                        Stroke="{Binding Path=Brush}"  
                        StrokeThickness="{Binding Path=ActualLineThickness}"
                        StrokeDashCap="{Binding Path=LineStyle.DashCap}"
                        StrokeLineJoin="{Binding Path=LineStyle.LineJoin}"
                        StrokeMiterLimit="{Binding Path=LineStyle.MiterLimit}"  
                        StrokeDashArray="{Binding Path=LineStyle.DashStyle.Dashes}"
                        StrokeDashOffset="{Binding Path=LineStyle.DashStyle.Offset}"
                        Visibility="{Binding Visible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}">
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:IndicatorLabelPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IndicatorLabelPresentation}">
                    <local:ChartContentPresenter Content="{Binding Path=LabelItem.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ContentTemplate="{Binding Path=Indicator.Item.Label.ElementTemplate,  RelativeSource={RelativeSource TemplatedParent}}"
                                                 TextElement.Foreground= "{Binding Path=Indicator.Item.Label.Foreground,  RelativeSource={RelativeSource TemplatedParent}}"
                                                 TextElement.FontFamily= "{Binding Path=Indicator.Item.Label.FontFamily,  RelativeSource={RelativeSource TemplatedParent}}"
                                                 TextElement.FontSize=   "{Binding Path=Indicator.Item.Label.FontSize,    RelativeSource={RelativeSource TemplatedParent}}"
                                                 TextElement.FontStretch="{Binding Path=Indicator.Item.Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                                                 TextElement.FontStyle=  "{Binding Path=Indicator.Item.Label.FontStyle,   RelativeSource={RelativeSource TemplatedParent}}"
                                                 TextElement.FontWeight= "{Binding Path=Indicator.Item.Label.FontWeight,  RelativeSource={RelativeSource TemplatedParent}}"
                                                 Visibility="{Binding Path=Indicator.Item.Visible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}"/>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>