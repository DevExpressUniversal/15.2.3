<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChartControlLegendItemChecked" xml:space="preserve">
    <value>Occurs when a legend item is checked in the legend checkbox.</value>
  </data>
  <data name="ChartControlLegend" xml:space="preserve">
    <value>Provides access to the chart control's legend.</value>
  </data>
  <data name="ChartControlIndicatorsPaletteName" xml:space="preserve">
    <value>Specifies the palette that is used to paint all indicators that exist in a chart control.</value>
  </data>
  <data name="ChartControlHardwareAcceleration" xml:space="preserve">
    <value>Gets or sets a value indicating whether a ChartControl uses a Video Card's resources (if any are available) when drawing 3D-charts.</value>
  </data>
  <data name="ChartControlFillStyle" xml:space="preserve">
    <value>Gets the chart control's background fill style.</value>
  </data>
  <data name="ChartControlEndLoading" xml:space="preserve">
    <value>Occurs when the Chart Control's object model is completely initialized.</value>
  </data>
  <data name="ChartControlEmptyChartText" xml:space="preserve">
    <value>Provides access to the settings of the text to be displayed in the chart control, when it has no data to display.</value>
  </data>
  <data name="ChartControlDiagram" xml:space="preserve">
    <value>Gets the chart control's diagram and provides access to its settings.</value>
  </data>
  <data name="ChartControlDataSource" xml:space="preserve">
    <value>Gets or sets the chart control's data source.</value>
  </data>
  <data name="ChartControlDataAdapter" xml:space="preserve">
    <value>Gets or sets the data adapter used to populate the chart control's data source.</value>
  </data>
  <data name="ChartControlCustomPaint" xml:space="preserve">
    <value>Occurs after all the chart's visual elements have been drawn.</value>
  </data>
  <data name="ChartControlCustomizeSimpleDiagramLayout" xml:space="preserve">
    <value>Occurs after the adaptive layout is enabled for the chart control to customize the  Simple Diagram's layout properties.</value>
  </data>
  <data name="ChartControlCustomizeAutoBindingSettings" xml:space="preserve">
    <value>Occurs after automatic settings are applied to a chart's data source.</value>
  </data>
  <data name="ChartControlCustomDrawSeriesPoint" xml:space="preserve">
    <value>Occurs before a series point is drawn when the chart's contents is being drawn.</value>
  </data>
  <data name="ChartControlCustomDrawSeries" xml:space="preserve">
    <value>Occurs before a series is drawn when the chart's contents are being drawn.</value>
  </data>
  <data name="ChartControlCustomDrawCrosshair" xml:space="preserve">
    <value>Occurs before crosshair items are drawn when the chart's contents are being drawn.</value>
  </data>
  <data name="ChartControlCustomDrawAxisLabel" xml:space="preserve">
    <value>Occurs before axis label items are drawn when the chart's contents are being drawn.</value>
  </data>
  <data name="ChartControlCrosshairOptions" xml:space="preserve">
    <value>Gets the settings for a crosshair cursor allowing you to specify its position and appearance on a diagram. </value>
  </data>
  <data name="ChartControlCrosshairEnabled" xml:space="preserve">
    <value>Gets or sets a value that specifies whether or not a crosshair cursor is enabled for a chart. </value>
  </data>
  <data name="ChartControlCacheToMemory" xml:space="preserve">
    <value>Gets or sets a value indicating if the chart should cache its data to the system memory.</value>
  </data>
  <data name="ChartControlBoundDataChanged" xml:space="preserve">
    <value>Occurs every time a chart control generates its series points from the underlying data source.</value>
  </data>
  <data name="ChartControlBorderOptions" xml:space="preserve">
    <value>Gets the chart control's border style.</value>
  </data>
  <data name="ChartControlBackImage" xml:space="preserve">
    <value>Gets the background image settings of the chart control.</value>
  </data>
  <data name="ChartControlBackColor" xml:space="preserve">
    <value>Gets or sets the chart control's background color.</value>
  </data>
  <data name="ChartControlAxisWholeRangeChanged" xml:space="preserve">
    <value>Occurs when the axis whole range has been changed.</value>
  </data>
  <data name="ChartControlAxisVisualRangeChanged" xml:space="preserve">
    <value>Occurs when the axis visual range has been changed.</value>
  </data>
  <data name="ChartControlAxisScaleChanged" xml:space="preserve">
    <value>Occurs when the scale mode, measure unit, grid alignment or grid spacing of the axis scale has been changed.</value>
  </data>
  <data name="ChartControlAutoLayout" xml:space="preserve">
    <value>Gets or sets a value, which specifies whether the adaptive layout feature is enabled for chart elements in the chart control.   </value>
  </data>
  <data name="ChartControlAppearanceName" xml:space="preserve">
    <value>Gets or sets the name of the appearance which is currently being used to draw the chart elements.</value>
  </data>
  <data name="ChartControlAnnotations" xml:space="preserve">
    <value>Provides access to the annotations collection of the ChartControl.</value>
  </data>
  <data name="ChartControlAnnotationRepository" xml:space="preserve">
    <value>Provides centralized access to all annotations that are present in the ChartControl.</value>
  </data>
  <data name="ChartControlAllowGesture" xml:space="preserve">
    <value>Gets or sets a value which specifies whether an end-user can interact with the chart using a touchscreen device.  </value>
  </data>
  <data name="ChartControlPaletteBaseColorNumber" xml:space="preserve">
    <value>Gets or sets the number of a color within the selected palette, which will be used as a base color to paint series points.</value>
  </data>
  <data name="ChartControlPadding" xml:space="preserve">
    <value>Specifies the internal space between the chart control's content (the diagram and legend) and its edge, in pixels.</value>
  </data>
  <data name="ChartControlOptionsPrint" xml:space="preserve">
    <value>Provides access to the chart's printing options.</value>
  </data>
  <data name="ChartControlObjectSelected" xml:space="preserve">
    <value>Occurs before any chart element is selected at runtime.</value>
  </data>
  <data name="ChartControlObjectHotTracked" xml:space="preserve">
    <value>Occurs before any chart element is hot-tracked at runtime.</value>
  </data>
  <data name="ChartControlLookAndFeel" xml:space="preserve">
    <value>Provides access to the settings that specify the look and feel of the Chart control.</value>
  </data>
  <data name="ChartControlPaletteName" xml:space="preserve">
    <value>Gets or sets the name of the palette currently used to draw the chart's series.</value>
  </data>
  <data name="ChartControlPieSeriesPointExploded" xml:space="preserve">
    <value>Fires when a pie slice, representing a series point, is moved to or from the pie center.</value>
  </data>
  <data name="ChartControlPivotChartingCustomizeLegend" xml:space="preserve">
    <value>Occurs before automatic settings are applied to the legend's layout properties.</value>
  </data>
  <data name="ChartControlPivotChartingCustomizeResolveOverlappingMode" xml:space="preserve">
    <value>Occurs before an automatic setting is applied to the overlap resolving mode of series labels.</value>
  </data>
  <data name="ChartControlPivotChartingCustomizeXAxisLabels" xml:space="preserve">
    <value>Occurs after automatic layout settings are applied to the X-axis' labels.</value>
  </data>
  <data name="ChartControlPivotGridDataSourceOptions" xml:space="preserve">
    <value>Provides access to the settings that determine the Chart's behavior after it has bridged with a Pivot Grid.</value>
  </data>
  <data name="ChartControlPivotGridSeriesExcluded" xml:space="preserve">
    <value>Occurs after a chart has been bound to a Pivot Grid.</value>
  </data>
  <data name="ChartControlPivotGridSeriesPointsExcluded" xml:space="preserve">
    <value>Occurs after a chart has been bound to a Pivot Grid.</value>
  </data>
  <data name="ChartControlQueryCursor" xml:space="preserve">
    <value>Occurs when there is a request to display the cursor.</value>
  </data>
  <data name="ChartControlRefreshDataOnRepaint" xml:space="preserve">
    <value>Gets or sets a value indicating whether to refresh data in the underlying data source every time a chart is repainted.</value>
  </data>
  <data name="ChartControlRightToLeft" xml:space="preserve">
    <value>Overrides the Control.RightToLeft property.</value>
  </data>
  <data name="ChartControlRuntimeHitTesting" xml:space="preserve">
    <value>Specifies whether or not hit-testing is enabled for a Chart control. </value>
  </data>
  <data name="ChartControlScroll" xml:space="preserve">
    <value>Occurs when an end-user scrolls the ChartControl.</value>
  </data>
  <data name="ChartControlScroll3D" xml:space="preserve">
    <value>Occurs when an end-user scrolls the 3D diagram.</value>
  </data>
  <data name="ChartControlSelectedItems" xml:space="preserve">
    <value>Gets the collection of selected items (chart points and series) and business data objects (in the case of using a data source) of the ChartControl object.</value>
  </data>
  <data name="ChartControlSelectionMode" xml:space="preserve">
    <value>Gets or sets a value which specifies how the chart elements are selected. </value>
  </data>
  <data name="ChartControlSeries" xml:space="preserve">
    <value>Provides access to the chart control's collection of series objects.</value>
  </data>
  <data name="ChartControlSeriesDataMember" xml:space="preserve">
    <value>Gets or sets the name of the data field that contains names for automatically generated series.</value>
  </data>
  <data name="ChartControlSeriesNameTemplate" xml:space="preserve">
    <value>Gets the settings used to name data bound series.</value>
  </data>
  <data name="ChartControlSeriesSelectionMode" xml:space="preserve">
    <value>Gets or sets a value specifying how the series is selected in the chart control.</value>
  </data>
  <data name="ChartControlSeriesSorting" xml:space="preserve">
    <value>Gets or sets a value that specifies how series are sorted within the chart control based upon the series names.</value>
  </data>
  <data name="ChartControlSeriesTemplate" xml:space="preserve">
    <value>Gets the template settings for bound series.</value>
  </data>
  <data name="ChartControlSmallChartText" xml:space="preserve">
    <value>Gets the settings for the text to be displayed in the chart control, when it's too small to fit the diagram.</value>
  </data>
  <data name="ChartControlTitles" xml:space="preserve">
    <value>Gets the collection of chart titles.</value>
  </data>
  <data name="ChartControlToolTipController" xml:space="preserve">
    <value>Specifies the tooltip controller component that controls the appearance, position and other settings of tooltips displayed for the Chart control. </value>
  </data>
  <data name="ChartControlToolTipEnabled" xml:space="preserve">
    <value>Gets or sets a value that specifies whether or not a tooltip is enabled for a chart. </value>
  </data>
  <data name="ChartControlToolTipOptions" xml:space="preserve">
    <value>Gets the tooltip settings allowing you to specify its position and appearance on a diagram. </value>
  </data>
  <data name="ChartControlZoom" xml:space="preserve">
    <value>Occurs when an end-user zooms in or out of the ChartControl.</value>
  </data>
  <data name="ChartControlZoom3D" xml:space="preserve">
    <value>Occurs when an end-user zooms in or out of the 3D diagram.</value>
  </data>
</root>