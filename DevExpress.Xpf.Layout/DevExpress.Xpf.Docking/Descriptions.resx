<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BaseLayoutItemCloseCommand" xml:space="preserve">
    <value>Gets or sets a command executed when the current item's close button ('x') is clicked. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionWidth" xml:space="preserve">
    <value>Gets or sets the width of the item's caption, which is in effect when the CaptionAlignMode property is set to Custom.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionVerticalAlignment" xml:space="preserve">
    <value>Gets or sets the vertical alignment of the item's caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionTemplate" xml:space="preserve">
    <value>Gets or sets the template used to visualize the current item's BaseLayoutItem.Caption.</value>
  </data>
  <data name="BaseLayoutItemCaptionLocation" xml:space="preserve">
    <value>Gets or sets the position of the item's caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionImageLocation" xml:space="preserve">
    <value>Gets or sets the relative position of an image within the item's caption. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionImage" xml:space="preserve">
    <value>Gets or sets the image displayed within the item's caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionHorizontalAlignment" xml:space="preserve">
    <value>Gets or sets the horizontal alignment of the item's caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionFormat" xml:space="preserve">
    <value>Gets or sets the format string used to format the layout item's caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaptionAlignMode" xml:space="preserve">
    <value>Gets or sets the alignment settings of a control(s) displayed by a LayoutControlItem object(s).This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCaption" xml:space="preserve">
    <value>Gets or sets the layout item's caption.</value>
  </data>
  <data name="BaseLayoutItemAppearance" xml:space="preserve">
    <value>Gets or sets the object that provides appearance settings for the item's captions.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowSizing" xml:space="preserve">
    <value>Gets or sets if the BaseLayoutItem resizing at runtime is enabled.</value>
  </data>
  <data name="BaseLayoutItemAllowSelection" xml:space="preserve">
    <value>Gets or sets whether the current layout item can be selected in Customization Mode.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowRestore" xml:space="preserve">
    <value>Gets or sets whether the item can be restored from the hidden state.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowRename" xml:space="preserve">
    <value>Allows you to prevent an item's caption from being renamed when the DockLayoutManager.AllowLayoutItemRename option is enabled.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowMove" xml:space="preserve">
    <value>Gets or sets whether the item is allowed to be moved.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowMinimize" xml:space="preserve">
    <value>Gets or sets whether the current item can be minimized. This property is supported for floating DocumentPanel objects.</value>
  </data>
  <data name="BaseLayoutItemAllowMaximize" xml:space="preserve">
    <value>Gets or sets whether the current item can be maximized. This property is supported for floating LayoutPanel and DocumentPanel objects.</value>
  </data>
  <data name="BaseLayoutItemAllowHide" xml:space="preserve">
    <value>Gets or sets whether the item can be hidden (auto-hidden, for dock items).This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowFloat" xml:space="preserve">
    <value>Gets or sets whether the dock item can float.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowDrag" xml:space="preserve">
    <value>Gets or sets whether the layout item may be dragged.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowDock" xml:space="preserve">
    <value>Gets or sets whether the dock item can be docked to another item (panel or group).This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowContextMenu" xml:space="preserve">
    <value>Gets or sets whether a context menu is enabled for the current layout item.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowClose" xml:space="preserve">
    <value>Gets or sets whether the current dock item can be closed.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemAllowActivate" xml:space="preserve">
    <value>Gets or sets whether the item can be activated.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemActualPadding" xml:space="preserve">
    <value>Gets the actual padding (inner indents) for the current item.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemActualMargin" xml:space="preserve">
    <value>Gets the actual margins (outer indents) for the current item.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemActualCaptionWidth" xml:space="preserve">
    <value>Gets the actual width of the item's caption.This is a dependency property.</value>
  </data>
  <data name="AutoHideGroupDockType" xml:space="preserve">
    <value>Gets or sets the side of the DockLayoutManager at which the current AutoHideGroup object is docked.This is a dependency property.</value>
  </data>
  <data name="AutoHideGroupAutoHideSpeed" xml:space="preserve">
    <value>Gets or sets the time, in milliseconds, required to open/close an auto-hidden panel belonging to the current group.This is a dependency property.</value>
  </data>
  <data name="AutoHideGroupAutoHideSize" xml:space="preserve">
    <value>Gets or sets the size of panels belonging to the current AutoHideGroup, in pixels.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemDescription" xml:space="preserve">
    <value>Gets or sets the item's description displayed within the header of the Document Selector window.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemCustomizationCaption" xml:space="preserve">
    <value>Gets or sets the caption that represents the current item within the Customization Window.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemControlBoxContentTemplate" xml:space="preserve">
    <value>Gets or sets the template that defines how the object assigned to the BaseLayoutItem.ControlBoxContent property is represented onscreen. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemControlBoxContent" xml:space="preserve">
    <value>Gets or sets the content of the control box region.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemClosingBehavior" xml:space="preserve">
    <value>Gets or sets the way the current item acts if closed.</value>
  </data>
  <data name="BaseLayoutItemClosed" xml:space="preserve">
    <value>Gets or sets whether a Dock Item is closed.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemFloatOnDoubleClick" xml:space="preserve">
    <value>Gets or sets whether an end-user can double-click the item's caption to float it.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemFloatSize" xml:space="preserve">
    <value>Gets or sets the size of the item when it is floating.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemFooterDescription" xml:space="preserve">
    <value>Gets or sets the item's description displayed within the footer of the Document Selector window.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemHasCaption" xml:space="preserve">
    <value>Gets whether a non-empty caption is assigned to the BaseLayoutItem.Caption property.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemHasCaptionTemplate" xml:space="preserve">
    <value>Gets whether a DataTemplate is used to render the caption. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemHasImage" xml:space="preserve">
    <value>Gets whether a caption image is assigned to the BaseLayoutItem.CaptionImage property.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemHeaderBarContainerControlAllowDrop" xml:space="preserve">
    <value>Gets or sets whether a bar can be dropped onto the bar container displayed in the current panel.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemHeaderBarContainerControlName" xml:space="preserve">
    <value>Gets or sets the name of the bar container, used to embed bars from the DXBars library.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemImageToTextDistance" xml:space="preserve">
    <value>Gets or sets the distance between the item's caption and image. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsActive" xml:space="preserve">
    <value>Gets or sets whether the item is active.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsAutoHidden" xml:space="preserve">
    <value>Gets whether the item is auto-hidden.</value>
  </data>
  <data name="BaseLayoutItemIsCaptionImageVisible" xml:space="preserve">
    <value>Gets whether the caption image (BaseLayoutItem.CaptionImage) is visible.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsCaptionVisible" xml:space="preserve">
    <value>Gets whether the item's caption is visible.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsCloseButtonVisible" xml:space="preserve">
    <value>Gets whether the Close ('x') button is visible for the current item.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsClosed" xml:space="preserve">
    <value>Gets whether the item is closed.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsControlBoxVisible" xml:space="preserve">
    <value>Gets whether the control box region is visible.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsFloating" xml:space="preserve">
    <value>Gets whether the item floats.</value>
  </data>
  <data name="BaseLayoutItemIsHidden" xml:space="preserve">
    <value>Gets whether the current Layout Item is hidden.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsInitializing" xml:space="preserve">
    <value>Gets whether the item is being initialized.</value>
  </data>
  <data name="BaseLayoutItemIsSelected" xml:space="preserve">
    <value>Gets whether the item is selected in Customization Mode.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsSelectedItem" xml:space="preserve">
    <value>Gets whether the current item is selected within any LayoutGroup. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsTabPage" xml:space="preserve">
    <value>Gets whether the current item is represented as a tab page.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemIsVisible" xml:space="preserve">
    <value>Gets whether the current item is visible.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemItemType" xml:space="preserve">
    <value>Gets the current item's type.</value>
  </data>
  <data name="BaseLayoutItemLayoutSize" xml:space="preserve">
    <value>This member supports the internal infrastructure, and is not intended to be used directly from your code.</value>
  </data>
  <data name="BaseLayoutItemMargin" xml:space="preserve">
    <value>Gets or sets the outer indents of the item's borders. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemPadding" xml:space="preserve">
    <value>Gets or sets the amount of space between the item's borders and its contents.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemParent" xml:space="preserve">
    <value>Gets or sets the item's parent group.</value>
  </data>
  <data name="BaseLayoutItemShowCaption" xml:space="preserve">
    <value>Gets or sets whether the item's caption is visible.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemShowCaptionImage" xml:space="preserve">
    <value>Gets or sets whether the BaseLayoutItem.CaptionImage is visible.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemShowCloseButton" xml:space="preserve">
    <value>Allows you to hide the Close ('x') button for the current item.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemShowControlBox" xml:space="preserve">
    <value>Gets or sets whether the object assigned to the BaseLayoutItem.ControlBoxContent property is visible.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemTabCaption" xml:space="preserve">
    <value>Gets or sets the layout item's tab caption.</value>
  </data>
  <data name="BaseLayoutItemTabCaptionFormat" xml:space="preserve">
    <value>Gets or sets the format string used to format the layout item's tab caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemTabCaptionWidth" xml:space="preserve">
    <value>Gets or sets the width of the corresponding tab. This property is in effect when the current object represents items as tabs or when it represents one of the tabs.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemTextTrimming" xml:space="preserve">
    <value>Gets or sets text trimming options applied to the BaseLayoutItem.Caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemTextWrapping" xml:space="preserve">
    <value>Gets or sets text wrapping options applied to the BaseLayoutItem.Caption.This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemToolTip" xml:space="preserve">
    <value>Gets or sets a tool tip, displayed at runtime when hovering a BaseLayoutItem's caption or tab caption. This is a dependency property.</value>
  </data>
  <data name="BaseLayoutItemVisibility" xml:space="preserve">
    <value>Gets or sets whether the current item is visible.This is a dependency property.</value>
  </data>
  <data name="ContentItemContent" xml:space="preserve">
    <value>Gets or sets the item's content. This is a dependency property.</value>
  </data>
  <data name="ContentItemContentTemplate" xml:space="preserve">
    <value>Gets or sets the template used to display the item's ContentItem.Content. This is a dependency property.</value>
  </data>
  <data name="ContentItemContentTemplateSelector" xml:space="preserve">
    <value>Gets or sets an object that chooses the item's ContentItem.ContentTemplate based on custom logic.</value>
  </data>
  <data name="DockLayoutManagerActiveDockItem" xml:space="preserve">
    <value>Gets or sets the active dock item.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerActiveLayoutItem" xml:space="preserve">
    <value>Gets or sets the active layout item. Setting this property doesn't move keyboard focus.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerActiveMDIItem" xml:space="preserve">
    <value>Gets or sets the active MDI child panel. This property is in effect when the assigned item represents an MDI child panel (DocumentPanel) within a DocumentGroup, and the group's DocumentGroup.MDIStyle property is set to MDI.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerAllowCustomization" xml:space="preserve">
    <value>Gets or sets whether Customization Mode can be invoked.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerAllowDockItemRename" xml:space="preserve">
    <value>Gets or sets whether dock items can be renamed.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerAllowDocumentSelector" xml:space="preserve">
    <value>Gets or sets whether the Document Selector feature is enabled.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerAllowLayoutItemRename" xml:space="preserve">
    <value>Gets or sets whether layout items can be renamed.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerAutoHideExpandMode" xml:space="preserve">
    <value>Gets or sets how an auto-hidden panel is expanded.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerAutoHideGroups" xml:space="preserve">
    <value>Provides access to the collection of AutoHideGroup objects, containing auto-hidden panels. Allows you to create auto-hidden panels in XAML.</value>
  </data>
  <data name="DockLayoutManagerBeforeItemAdded" xml:space="preserve">
    <value>Fires before an item is added to the current DockLayoutManager object.</value>
  </data>
  <data name="DockLayoutManagerClosedPanels" xml:space="preserve">
    <value>Provides access to closed panels.</value>
  </data>
  <data name="DockLayoutManagerClosedPanelsBarVisibility" xml:space="preserve">
    <value>Gets or sets the visibility state for the Closed Panels bar.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerClosingBehavior" xml:space="preserve">
    <value>Gets or sets the way in which a panel is closed.</value>
  </data>
  <data name="DockLayoutManagerContextMenuCustomizations" xml:space="preserve">
    <value>A collection of modification actions to be performed on context menus for dock panels.</value>
  </data>
  <data name="DockLayoutManagerCustomizationFormVisibleChanged" xml:space="preserve">
    <value>Fires after the Customization Window has been displayed or hidden.</value>
  </data>
  <data name="DockLayoutManagerDefaultAutoHidePanelCaptionImage" xml:space="preserve">
    <value>Gets or sets the image displayed within a dock panel's header when the panel in the auto-hide state, and if no caption and image are explicitly assigned to the panel.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerDefaultTabPageCaptionImage" xml:space="preserve">
    <value>Gets or sets the image displayed within a dock panel's tab when the panel belongs to a tabbed group, and if no caption and image are explicitly assigned to the panel.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerDockController" xml:space="preserve">
    <value>Gets the controller that provides methods to perform docking operations on panels.</value>
  </data>
  <data name="DockLayoutManagerDockItemActivated" xml:space="preserve">
    <value>Fires after a dock item has been activated.</value>
  </data>
  <data name="DockLayoutManagerDockItemActivating" xml:space="preserve">
    <value>Fires before a dock item is activated, and allows you to prevent this action.</value>
  </data>
  <data name="DockLayoutManagerDockItemClosed" xml:space="preserve">
    <value>Fires after a dock item has been closed (hidden). </value>
  </data>
  <data name="DockLayoutManagerDockItemClosing" xml:space="preserve">
    <value>Fires before a dock item is closed (hidden), and allows you to prevent this action.</value>
  </data>
  <data name="DockLayoutManagerDockItemCollapsed" xml:space="preserve">
    <value>Fires after a visible auto-hidden dock panel has slid away.</value>
  </data>
  <data name="DockLayoutManagerDockItemDocking" xml:space="preserve">
    <value>Fires before a dock item is dragged over dock hints, and allows you to prevent dock zones from being displayed. </value>
  </data>
  <data name="DockLayoutManagerDockItemDragging" xml:space="preserve">
    <value>Fires repeatedly while a dock panel is being dragged.</value>
  </data>
  <data name="DockLayoutManagerDockItemEndDocking" xml:space="preserve">
    <value>Fires after a dock item has been dropped, and allows you to prevent this action. </value>
  </data>
  <data name="DockLayoutManagerDockItemExpanded" xml:space="preserve">
    <value>Fires after a hidden auto-hidden dock panel has slid out.</value>
  </data>
  <data name="DockLayoutManagerDockItemHidden" xml:space="preserve">
    <value>Fires after a dock item has been made auto-hidden.</value>
  </data>
  <data name="DockLayoutManagerDockItemHiding" xml:space="preserve">
    <value>Fires before a dock item is auto-hidden, and allows you to prevent this action. </value>
  </data>
  <data name="DockLayoutManagerDockItemRestored" xml:space="preserve">
    <value>Fires after a dock item has been restored from the closed (hidden) state. </value>
  </data>
  <data name="DockLayoutManagerDockItemRestoring" xml:space="preserve">
    <value>Fires before a dock item is restored from the closed (hidden) state, and allows you to prevent this action. </value>
  </data>
  <data name="DockLayoutManagerDockItemStartDocking" xml:space="preserve">
    <value>Fires when a docking operation starts, and allows you to prevent this operation. </value>
  </data>
  <data name="DockLayoutManagerFloatGroups" xml:space="preserve">
    <value>Provides access to floating groups of panels. Allows you to create floating panels in XAML.</value>
  </data>
  <data name="DockLayoutManagerFloatingMode" xml:space="preserve">
    <value>Gets or sets how floating panels can be dragged, within or outside the boundaries of the current window.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerIsCustomization" xml:space="preserve">
    <value>Gets whether Customization Mode is enabled.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerIsCustomizationChanged" xml:space="preserve">
    <value>Fires when Customization Mode is enabled or disabled.</value>
  </data>
  <data name="DockLayoutManagerIsCustomizationFormVisible" xml:space="preserve">
    <value>Gets whether the Customization Window is visible.</value>
  </data>
  <data name="DockLayoutManagerIsRenaming" xml:space="preserve">
    <value>Gets whether an item is being renamed.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerIsSynchronizedWithCurrentItem" xml:space="preserve">
    <value>Gets or sets if a DockLayoutManager is synchronized with the currently selected child item.</value>
  </data>
  <data name="DockLayoutManagerItemIsVisibleChanged" xml:space="preserve">
    <value>Fires when the item's BaseLayoutItem.IsVisible property is changed.</value>
  </data>
  <data name="DockLayoutManagerItemSelectorMenuCustomizations" xml:space="preserve">
    <value>A collection of modification actions to be performed on selector menus for dock panels.</value>
  </data>
  <data name="DockLayoutManagerLayoutControlItemContextMenuCustomizations" xml:space="preserve">
    <value>This member supports the internal infrastructure, and is not intended to be used directly from your code.</value>
  </data>
  <data name="DockLayoutManagerLayoutControlItemCustomizationMenuCustomizations" xml:space="preserve">
    <value>This member supports the internal infrastructure, and is not intended to be used directly from your code.</value>
  </data>
  <data name="DockLayoutManagerLayoutController" xml:space="preserve">
    <value>Gets the controller that provides methods to perform layout operations on layout items.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemActivated" xml:space="preserve">
    <value>Fires after a layout item has been activated.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemActivating" xml:space="preserve">
    <value>Fires when a layout item is about to be activated.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemEndRenaming" xml:space="preserve">
    <value>Fires when layout item renaming is completed.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemHidden" xml:space="preserve">
    <value>Fires when a layout item is hidden.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemMoved" xml:space="preserve">
    <value>Fires after a layout item has been moved to a new position.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemRestored" xml:space="preserve">
    <value>Fires when a hidden layout item is restored (added to the layout).</value>
  </data>
  <data name="DockLayoutManagerLayoutItemSelectionChanged" xml:space="preserve">
    <value>Fires after the layout item's selection state has changed.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemSelectionChanging" xml:space="preserve">
    <value>Fires when the layout item's selection state is about to be changed.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemSizeChanged" xml:space="preserve">
    <value>Fires after a layout item's width/height has changed.</value>
  </data>
  <data name="DockLayoutManagerLayoutItemStartRenaming" xml:space="preserve">
    <value>Fires when layout item renaming is initiated.</value>
  </data>
  <data name="DockLayoutManagerLayoutRoot" xml:space="preserve">
    <value>Gets or sets a root group for items (panels and other groups).This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerMDIController" xml:space="preserve">
    <value>Gets the controller that provides methods to perform operations on MDI panels.</value>
  </data>
  <data name="DockLayoutManagerMDIItemActivated" xml:space="preserve">
    <value>Fires when an MDI child document has been activated.</value>
  </data>
  <data name="DockLayoutManagerMDIItemActivating" xml:space="preserve">
    <value>Fires before an MDI child panel is activated.</value>
  </data>
  <data name="DockLayoutManagerMerge" xml:space="preserve">
    <value>Allows you to customize menus and bars when the merging mechanism is invoked.</value>
  </data>
  <data name="DockLayoutManagerRequestUniqueName" xml:space="preserve">
    <value>Allows you to provide unique names for layout items, whose names conflict with existing names.</value>
  </data>
  <data name="DockLayoutManagerShowingDockHints" xml:space="preserve">
    <value>Allows you to hide and disable individual dock hints.</value>
  </data>
  <data name="DockLayoutManagerShowingMenu" xml:space="preserve">
    <value>Fires before showing a context menu, and allows it to be customized.</value>
  </data>
  <data name="DockLayoutManagerShowInvisibleItems" xml:space="preserve">
    <value>Gets or sets whether invisible items are displayed within a layout.This is a dependency property.</value>
  </data>
  <data name="DockLayoutManagerShowInvisibleItemsChanged" xml:space="preserve">
    <value>Fires when the value of the DockLayoutManager.ShowInvisibleItems property is changed.</value>
  </data>
  <data name="DockLayoutManagerShowInvisibleItemsInCustomizationForm" xml:space="preserve">
    <value>Gets or sets if invisible BaseLayoutItems should be displayed in the Customization Mode.</value>
  </data>
  <data name="DockLayoutManagerShowMaximizedDocumentCaptionInWindowTitle" xml:space="preserve">
    <value>Gets or sets whether the caption of a maximized DocumentPanel is displayed within the window's title. This property is in effect in MDIStyle.MDI mode.</value>
  </data>
  <data name="DockLayoutManagerUnMerge" xml:space="preserve">
    <value>Allows you to undo bars customizations performed via the DockLayoutManager.Merge event. </value>
  </data>
  <data name="DockLayoutManagerWindowTitleFormat" xml:space="preserve">
    <value>Gets or sets the format string used to format the window's title.This is a dependency property.</value>
  </data>
  <data name="DocumentGroupClosePageButtonShowMode" xml:space="preserve">
    <value>Gets or sets whether Close buttons are displayed in individual tab pages and the tab container's header. This is a dependency property.</value>
  </data>
  <data name="DocumentGroupIsDropDownButtonVisible" xml:space="preserve">
    <value>Gets whether the DropDown button is displayed within the DocumentGroup's header.</value>
  </data>
  <data name="DocumentGroupIsRestoreButtonVisible" xml:space="preserve">
    <value>Gets whether the DocumentGroup displays the Restore button.This is a dependency property.</value>
  </data>
  <data name="DocumentGroupMDIStyle" xml:space="preserve">
    <value>Gets or sets how the DocumentGroup presents its child panels, as floaing windows, or using the tabbed UI.This is a dependency property.</value>
  </data>
  <data name="DocumentGroupShowDropDownButton" xml:space="preserve">
    <value>Gets or sets whether the DropDown button is visible within the current DocumentGroup.</value>
  </data>
  <data name="DocumentGroupShowRestoreButton" xml:space="preserve">
    <value>Gets or sets whether the Restore button is displayed within the DocumentGroup's title, allowing an end-user to restore a maximized panel to its normal state.This is a dependency property.</value>
  </data>
  <data name="DocumentPanelIsMinimized" xml:space="preserve">
    <value>Gets whether the DocumentPanel is minimized.This is a dependency property.</value>
  </data>
  <data name="DocumentPanelShowMinimizeButton" xml:space="preserve">
    <value>Gets or sets whether the DocumentPanel contains the Minimize button, allowing an end-user to minimize the panel. This property is in effect when the panel is represented as a regular MDI child window within a DocumentGroup (the DocumentGroup.MDIStyle property is set to MDI).</value>
  </data>
  <data name="FloatGroupBorderStyle" xml:space="preserve">
    <value>Gets the FloatGroup's border style.This is a dependency property.</value>
  </data>
  <data name="FloatGroupFloatLocation" xml:space="preserve">
    <value>Gets or sets the location of the FloatGroup object, relative to the top left corner of the DockLayoutManager container.This is a dependency property.</value>
  </data>
  <data name="FloatGroupIsMaximized" xml:space="preserve">
    <value>Gets whether the FloatGroup displays a panel that is currently maximized to the window's size.This is a dependency property.</value>
  </data>
  <data name="FloatGroupIsOpen" xml:space="preserve">
    <value>Gets or sets whether the current FloatGroup object is visible.This is a dependency property.</value>
  </data>
  <data name="LabelItemContent" xml:space="preserve">
    <value>Gets or sets a LabelItem's caption. This is a dependency property.</value>
  </data>
  <data name="LabelItemContentHorizontalAlignment" xml:space="preserve">
    <value>Gets or sets a horizontal alignment for a Label Item's LabelItem.Content. This is a dependency property.</value>
  </data>
  <data name="LabelItemContentTemplate" xml:space="preserve">
    <value>Gets or sets a DataTemplate object to visualize a LabelItem.Content object.This is a dependency property.</value>
  </data>
  <data name="LabelItemContentTemplateSelector" xml:space="preserve">
    <value>Gets or sets an object that chooses a LabelItem.ContentTemplate used to visualize objects defined as a Label Item's LabelItem.Content. This is a dependency property. </value>
  </data>
  <data name="LabelItemContentVerticalAlignment" xml:space="preserve">
    <value>Gets or sets a vertical alignment for a Label Item's LabelItem.Content. This is a dependency property.</value>
  </data>
  <data name="LabelItemHasContent" xml:space="preserve">
    <value>Gets if the current LabelItem has a caption. This is a dependency property.</value>
  </data>
  <data name="LayoutControlItemCaptionToControlDistance" xml:space="preserve">
    <value>Gets or sets the distance between the item's caption and control.This is a dependency property.</value>
  </data>
  <data name="LayoutControlItemControl" xml:space="preserve">
    <value>Gets or sets the control displayed by the current item.This is a dependency property.</value>
  </data>
  <data name="LayoutControlItemControlHorizontalAlignment" xml:space="preserve">
    <value>Gets or sets the horizontal alignment of the control within the current LayoutControlItem.This is a dependency property.</value>
  </data>
  <data name="LayoutControlItemControlVerticalAlignment" xml:space="preserve">
    <value>Gets or sets the vertical alignment of the control within the current LayoutControlItem.This is a dependency property.</value>
  </data>
  <data name="LayoutControlItemHasControl" xml:space="preserve">
    <value>Gets whether a control is assigned to the LayoutControlItem.Control property.This is a dependency property.</value>
  </data>
  <data name="LayoutControlItemShowControl" xml:space="preserve">
    <value>Gets or sets whether the LayoutControlItem.Control is visible.This is a dependency property.</value>
  </data>
  <data name="LayoutControllerActiveItem" xml:space="preserve">
    <value>Gets the active layout item.</value>
  </data>
  <data name="LayoutControllerContainer" xml:space="preserve">
    <value>Gets the DockLayoutManager container whose dock functionality is controlled by the current LayoutController.</value>
  </data>
  <data name="LayoutControllerFixedItems" xml:space="preserve">
    <value>Gets a collection of the items that are always available in the Customization Window.</value>
  </data>
  <data name="LayoutControllerHiddenItems" xml:space="preserve">
    <value>Gets the collection of hidden items.</value>
  </data>
  <data name="LayoutControllerIsCustomization" xml:space="preserve">
    <value>Gets whether Customization Mode is enabled.</value>
  </data>
  <data name="LayoutControllerSelection" xml:space="preserve">
    <value>Gets a list of items that are selected in Customization Mode.</value>
  </data>
  <data name="LayoutGroupAllowExpand" xml:space="preserve">
    <value>Gets or sets whether a group can be expanded/collapsed.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupAllowSplitters" xml:space="preserve">
    <value>Gets or sets whether item resizing is enabled for the group's children.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupCaptionOrientation" xml:space="preserve">
    <value>Gets or sets the orientation of the group's header.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupControlItemsHost" xml:space="preserve">
    <value>This member supports the internal infrastructure, and is not intended to be used directly from your code. This is a dependency property.</value>
  </data>
  <data name="LayoutGroupDestroyContentOnTabSwitching" xml:space="preserve">
    <value>Gets or sets if a tab item's content is destroyed when another tab item is selected. This is a dependency property.</value>
  </data>
  <data name="LayoutGroupDestroyOnClosingChildren" xml:space="preserve">
    <value>Gets or sets whether the current group is destroyed when removing all its children.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupDockItemInterval" xml:space="preserve">
    <value>Gets or sets the distance between immediate child dock items.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupExpanded" xml:space="preserve">
    <value>Gets or sets whether the group is expanded.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupGroupBorderStyle" xml:space="preserve">
    <value>Gets or sets the group's border style. This option is in effect when the LayoutGroup is used to combine layout items, rather than dock items.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupGroupTemplate" xml:space="preserve">
    <value>Gets or sets the template used to render the LayoutGroup.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupGroupTemplateSelector" xml:space="preserve">
    <value>Gets or sets an object that chooses the group's template based on custom logic.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupHasAccent" xml:space="preserve">
    <value>Gets or sets whether the group is marked with a special flag (has a special accent) that makes the group painted with different outer indents.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupHasSingleItem" xml:space="preserve">
    <value>Gets whether the group owns a single item.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupHasVisibleItems" xml:space="preserve">
    <value>Gets whether the current group contains items whose BaseLayoutItem.Visibility property is set to true.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupIsAnimated" xml:space="preserve">
    <value>Gets whether an animation is in progress.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupIsExpanded" xml:space="preserve">
    <value>Gets whether the group is actually expanded.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupIsScrollNextButtonVisible" xml:space="preserve">
    <value>Gets whether the Scroll Next button is visible.</value>
  </data>
  <data name="LayoutGroupIsScrollPrevButtonVisible" xml:space="preserve">
    <value>Gets whether the Scroll Prev button is visible.</value>
  </data>
  <data name="LayoutGroupIsSplittersEnabled" xml:space="preserve">
    <value>Gets whether item resizing is actually currently enabled for the LayoutGroup's children.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupItemCaptionTemplate" xml:space="preserve">
    <value>Gets or sets the template used to visualize captions of objects stored as elements in the DockLayoutManager.ItemsSource collection.This is a dependency property. </value>
  </data>
  <data name="LayoutGroupItemCaptionTemplateSelector" xml:space="preserve">
    <value>Gets or sets an object that chooses a template used to visualize captions of objects stored as elements in the DockLayoutManager.ItemsSource collection. This is a dependency property. </value>
  </data>
  <data name="LayoutGroupItemContentTemplate" xml:space="preserve">
    <value>Gets or sets the template used to visualize contents of objects stored as elements in the LayoutGroup.ItemsSource collection.This is a dependency property. </value>
  </data>
  <data name="LayoutGroupItemContentTemplateSelector" xml:space="preserve">
    <value>Gets or sets an object that chooses a template used to visualize contents of objects stored as elements in the LayoutGroup.ItemsSource collection. This is a dependency property. </value>
  </data>
  <data name="LayoutGroupItems" xml:space="preserve">
    <value>Provides access to child items.</value>
  </data>
  <data name="LayoutGroupItemsAppearance" xml:space="preserve">
    <value>Gets or sets the settings used to customize the appearance of captions for the group's children.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupItemsSource" xml:space="preserve">
    <value>Gets or sets a collection of objects providing information to generate and initialize groups, panels and layout items for the current LayoutGroup container.This is a dependency property. </value>
  </data>
  <data name="LayoutGroupLayoutGroupInterval" xml:space="preserve">
    <value>Gets or sets the distance between immediate child LayoutGroup objects.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupLayoutItemInterval" xml:space="preserve">
    <value>Gets or sets the distance between immediate child LayoutControlItem objects.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupOrientation" xml:space="preserve">
    <value>Gets or sets whether child items are arranged horizontally or vertically within the group.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupSelectedItem" xml:space="preserve">
    <value>Gets the selected child item within the current group (mostly, this property is used when the current group represents child items as tabs).This is a dependency property.</value>
  </data>
  <data name="LayoutGroupSelectedItemChanged" xml:space="preserve">
    <value>Fires when a new child item is selected within the current group. This event is supported for LayoutGroups representing its children as tabs.</value>
  </data>
  <data name="LayoutGroupSelectedTabIndex" xml:space="preserve">
    <value>Gets or sets the index of the active child item. This property is supported for groups representing its children as tabs.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupShowScrollNextButton" xml:space="preserve">
    <value>Allows you to hide the Scroll Next button within the group's header. This property is in effect if the scroll buttons have been enabled via the LayoutGroup.TabHeaderLayoutType property.</value>
  </data>
  <data name="LayoutGroupShowScrollPrevButton" xml:space="preserve">
    <value>Allows you to hide the Scroll Prev button within the group's header. This property is in effect if the scroll buttons have been enabled via the LayoutGroup.TabHeaderLayoutType property.</value>
  </data>
  <data name="LayoutGroupTabHeaderCanScrollNext" xml:space="preserve">
    <value>Gets whether it's possible to scroll forward through tab headers corresponding to the group's child items. This property is in effect if the current group represents child items as tabs.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupTabHeaderCanScrollPrev" xml:space="preserve">
    <value>Gets whether it's possible to scroll backward through tab headers corresponding to the group's child items. This property is in effect if the current group represents child items as tabs.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupTabHeaderHasScroll" xml:space="preserve">
    <value>Gets whether the group's header displays scroll buttons used to scroll through the tab headers corresponding to the group's child items. This property is in effect if the current group represents child items as tabs.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupTabHeaderLayoutType" xml:space="preserve">
    <value>Gets or sets how the LayoutGroup displays the tab headers corresponding to the group's child items. This property is in effect if the current group represents child items as tabs.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupTabHeaderMaxScrollIndex" xml:space="preserve">
    <value>Gets the maximum tab header scroll position. This member supports the internal infrastructure, and is not intended to be used directly from your code.</value>
  </data>
  <data name="LayoutGroupTabHeadersAutoFill" xml:space="preserve">
    <value>Gets or sets whether the tab headers, corresponding to the group's child items, must be automatically stretched to fill the empty space in a tab row. This property is in effect if the current group represents child items as tabs.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupTabHeaderScrollIndex" xml:space="preserve">
    <value>Gets the index that defines the tab header scroll position. This member supports the internal infrastructure, and is not intended to be used directly from your code.This is a dependency property.</value>
  </data>
  <data name="LayoutGroupTabItemContainerStyle" xml:space="preserve">
    <value>Gets or sets a style applied to the part of the LayoutGroup containing tab headers. This is a dependency property.</value>
  </data>
  <data name="LayoutGroupTabItemContainerStyleSelector" xml:space="preserve">
    <value>Gets or sets an object that chooses a style applied to the LayoutGroup.TabItemContainerStyle property. This is a dependency property. </value>
  </data>
  <data name="LayoutGroupVisiblePagesCount" xml:space="preserve">
    <value>Gets the number of items in the LayoutGroup.VisiblePages collection.This is a dependency property.</value>
  </data>
  <data name="LayoutPanelControl" xml:space="preserve">
    <value>Gets a UIElement that has been assigned to the ContentItem.Content property.This is a dependency property.</value>
  </data>
  <data name="LayoutPanelHasBorder" xml:space="preserve">
    <value>Gets whether the panel's border is visible.This is a dependency property.</value>
  </data>
  <data name="LayoutPanelHorizontalScrollBarVisibility" xml:space="preserve">
    <value>Gets or sets a horizontal scroll bar's visibility mode. This is a dependency property.</value>
  </data>
  <data name="LayoutPanelIsMaximized" xml:space="preserve">
    <value>Gets whether the LayoutPanel is maximized. This property is in effect for floating panels.</value>
  </data>
  <data name="LayoutPanelIsPinButtonVisible" xml:space="preserve">
    <value>Gets whether the Pin button is visible.</value>
  </data>
  <data name="LayoutPanelLayout" xml:space="preserve">
    <value>Gets a LayoutGroup object that has been assigned to the ContentItem.Content property.This is a dependency property.</value>
  </data>
  <data name="LayoutPanelShowBorder" xml:space="preserve">
    <value>Gets or sets whether the panel's border is visible.This is a dependency property.</value>
  </data>
  <data name="LayoutPanelShowMaximizeButton" xml:space="preserve">
    <value>Gets or sets whether the maximize button is shown within the LayoutPanel. This property is supported for floating panels.</value>
  </data>
  <data name="LayoutPanelShowPinButton" xml:space="preserve">
    <value>Gets or sets whether the Pin button is visible.</value>
  </data>
  <data name="LayoutPanelShowRestoreButton" xml:space="preserve">
    <value>Gets of sets whether the restore button is displayed within the LayoutPanel. This property is supported for floating panels.</value>
  </data>
  <data name="LayoutPanelUri" xml:space="preserve">
    <value>Gets a System.Uri object used to assign the current LayoutPanel's content. This is a dependency property.</value>
  </data>
  <data name="LayoutPanelVerticalScrollBarVisibility" xml:space="preserve">
    <value>Gets or sets a vertical scroll bar's visibility mode. This is a dependency property.</value>
  </data>
</root>