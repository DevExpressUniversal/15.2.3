<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DevExpress.Xpf.Docking"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:ve="clr-namespace:DevExpress.Xpf.Docking.VisualElements"        
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxt="clr-namespace:DevExpress.Xpf.Docking.ThemeKeys"
    >
    <!-- AutoHide Theme Elements -->
    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=LeftMargin}" />
    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=TopMargin}" />
    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=RightMargin}" />
    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=BottomMargin}" />
    <ControlTemplate x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=Caption}" TargetType="ve:AutoHidePaneHeaderItem">
        <Grid x:Name="itemHeader" ve:DockPane.HitTestType="Header" Visibility="{Binding Path=Visibility}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="PART_CaptionControlPresenter">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFD4E4F8" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation To="1" Duration="0" Storyboard.TargetProperty="(Control.Opacity)" Storyboard.TargetName="back" />
                            <DoubleAnimation To="0.15" Duration="0" Storyboard.TargetProperty="(Control.Opacity)" Storyboard.TargetName="shadow" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="LocationStates">
                    <VisualState x:Name="Left" />
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Padding)" Storyboard.TargetName="back">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,1,1,1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="back">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>-1,0,1,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="shadow">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>3,0,0,-3</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>2,8,3,8</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Padding)" Storyboard.TargetName="back">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>1,1,1,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="back">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,1,0,-1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="shadow">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,4,-3,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>8,4,8,1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Padding)" Storyboard.TargetName="back">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>1,0,1,1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="back">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,-1,0,1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="shadow">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,3,-3,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>8,1,8,4</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="4,0,0,-3" x:Name="shadow" Opacity="0" Background="#FF000000" />
            <Border Margin="1,0,-1,0" x:Name="back" Opacity="0" Background="#FF466392" Padding="1,1,0,1">
                <Border Background="#FF6D8EBD" />
            </Border>
            <Border Padding="4,8,1,8" x:Name="border">
                <ve:AutoHideTransformPanel x:Name="PART_TransformPanel">
                    <ve:AutoHideTransformPanel.Orientation>
                        <Binding Path="(ve:AutoHideTray.Orientation)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <ve:OrientationInvertConverter />
                            </Binding.Converter>
                        </Binding>
                    </ve:AutoHideTransformPanel.Orientation>
                    <ve:TemplatedTabCaptionControl x:Name="PART_CaptionControlPresenter" LayoutItem="{Binding}" />
                </ve:AutoHideTransformPanel>
            </Border>
        </Grid>
    </ControlTemplate>
    <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}">6</sys:Double>
    <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=TouchSizerThickness}">24</sys:Double>
    <ControlTemplate x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=Template}" TargetType="ve:AutoHidePane">
        <!--BEGIN WPF-->
        <ve:AutoHidePanePresenter x:Name="PART_Presenter">
            <!--END WPF-->
            <DockPanel Background="Transparent">
                <DockPanel.Resources>
                    <ve:DockToVerticalAlignmentConverter x:Key="dockToVerticalAlignmentConverter" />
                    <ve:DockToHorizontalAlignmentConverter x:Key="dockToHorizontalAlignmentConverter" />
                    <ve:DockTypeToThicknessConverter x:Key="dockTypeToThicknessConverter" All="5" Inverted="True" />
                    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
                    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter" />
                    <ve:DockInverseConverter x:Key="dockInverseConverter" />
                </DockPanel.Resources>
                <Grid  DockPanel.Dock="{Binding DockType,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dockInverseConverter}}"
                      Background="Transparent" Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}"
                      HorizontalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToHorizontalAlignmentConverter}}"
                      VerticalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToVerticalAlignmentConverter}}"
                      ve:DockPane.HitTestType="Border" Cursor="{Binding ElementName=PART_Sizer, Path=Cursor}">
                    <ve:ElementSizer x:Name="PART_Sizer" Thickness="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}}" Orientation="{Binding Path=(ve:AutoHideTray.Orientation), RelativeSource={RelativeSource TemplatedParent}}"
                                     HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <Grid x:Name="PART_PaneContent" Background="Transparent">
                    <Grid ve:DockPane.HitTestType="Border">
                        <Border Margin="3,3,-3,-3" x:Name="shadow" ClipToBounds="False" Opacity="0.15" Background="#FF000000"
                                        Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}"/>
                        <Border Background="#FF6D8EBD" BorderThickness="1" BorderBrush="#FF466392" Padding="1">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                    </Grid>
                    <Border x:Name="PART_PaneBorder" BorderBrush="Transparent" ve:DockPane.HitTestType="Border"
                                    Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}"
                                    BorderThickness="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessConverter}}">
                    </Border>
                </Grid>
            </DockPanel>
            <!--BEGIN WPF-->
        </ve:AutoHidePanePresenter>
        <!--END WPF-->
    </ControlTemplate>
    <!-- AutoHide Theme Elements -->
    <ControlTemplate TargetType="ve:ElementSizer" x:Key="{dxt:DockElementsThemeKey ResourceKey=ElementSizer}">
        <dx:Container Background="{TemplateBinding Background}" UseLayoutRounding="True">
            <dx:Container x:Name="HorizontalRootElement" Width="16" Height="{TemplateBinding Thickness}" Cursor="SizeNS" Visibility="Collapsed"/>
            <dx:Container x:Name="VerticalRootElement" Width="{TemplateBinding Thickness}" Height="16" Cursor="SizeWE"/>
        </dx:Container>
    </ControlTemplate>
</ResourceDictionary>