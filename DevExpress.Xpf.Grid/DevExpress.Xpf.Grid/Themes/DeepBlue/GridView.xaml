<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"        
	xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"             
    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"        
    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid"        
    xmlns:dxgt="clr-namespace:DevExpress.Xpf.Grid.Themes"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"    
	xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{dx:GridResource themes/Generic/HeaderFooterItemsControlStyles.xaml}" />
        <ResourceDictionary Source="{dx:GridResource themes/DeepBlue/Constants.xaml}" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->

    <ControlTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=FootersContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border BorderBrush="#FF90B3E6">
                <Border.BorderThickness>
                    <Binding Path="View.IsRootView">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="0,1,0,0" FalseValue="0,0,0,1" />
                        </Binding.Converter>
                    </Binding>
                </Border.BorderThickness>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,0.001" StartPoint="0.5,0.999">
                        <GradientStop Color="#FFB6CEEC" Offset="0" />
                        <GradientStop Color="#FFCBE2FF" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <ContentPresenter Margin="0,3,0,2" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=DataPresenterTemplate}" TargetType="{x:Type dxg:DataPresenter}">
        <Border Background="White">
            <ContentPresenter/>
        </Border>
    </ControlTemplate>
    <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserDragTextStyle}" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="#FF4B6CA7" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="35,4" />
    </Style>
    <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelDragTextStyle}" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Foreground" Value="#FF4B6CA7" />
        <Setter Property="Margin" Value="4,4,4,6" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    
    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderThickness}">0</Thickness>
    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelMargin}">5,7,5,9</Thickness>
    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelSeparatorMargin}">0,-23,0,0</Thickness>
    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderBrush}" Color="Transparent"/>

    <DataTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryItemTemplate}">
        <TextBlock Text="{Binding Column.TotalSummaryText}" Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}"/>
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=OuterBorderElementTemplate}" TargetType="{x:Type dxg:OuterBorderElement}">
        <Border HorizontalAlignment="Stretch"
					BorderBrush="#FF668CC4" 
					CornerRadius="0,0,3,3" 
					BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
                <Grid HorizontalAlignment="Left" Margin="-1,0,0,-1" VerticalAlignment="Bottom" Width="4" Height="4">
                    <Path Stretch="Fill" Fill="#FF668CC4" Data="F1 M 635,525L 635,524L 634,524L 634,528L 638,528L 638,527L 637,527C 635.896,527 635,526.104 635,525 Z " />
                    <Path Stretch="Fill" Fill="#FF7FA1D4" Data="F1 M 634,525L 634,528L 637,528C 635.343,528 634,526.657 634,525 Z " Margin="0,1,1,0" />
                </Grid>
                <Grid HorizontalAlignment="Right" Margin="0,0,-1,-1" VerticalAlignment="Bottom" Width="4" Height="4">
                    <Path Stretch="Fill" Fill="#FF668CC4" Data="F1 M 649,525L 649,524L 650,524L 650,528L 646,528L 646,527L 647,527C 648.104,527 649,526.104 649,525 Z " />
                    <Path Stretch="Fill" Fill="#FF88A6CC" Data="F1 M 650,525L 650,528L 647,528C 648.657,528 650,526.657 650,525 Z " Margin="1,1,0,0" />
                </Grid>
            </Grid>
        </Border>
    </ControlTemplate>

    <dxg:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueContentStyle}" TargetType="{x:Type Border}">
    </dxg:DefaultStyle>
    <dxg:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Control.Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                    <GradientStop Color="#FFCBE2FF" Offset="0" />
                    <GradientStop Color="#FFDDECFF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
            </DataTrigger>
        </Style.Triggers>
    </dxg:DefaultStyle>
    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="groupRowBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
            >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Width="22">
                    <Border.Visibility>
                        <Binding Path="(dxgcore:RowData.CurrentRowData).View" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxg:CardViewCheckToVisibilityConverter />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Border Width="22" Grid.Column="1" Visibility="{Binding View.ActualShowCheckBoxSelectorInGroupRow, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Border Grid.Column="2" x:Name="borderSelected" CornerRadius="3,3,3,3" Margin="1,1,1,1" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                            <GradientStop Color="#FFB4CEF3" Offset="0" />
                            <GradientStop Color="#FFC1D8F7" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border Grid.Column="2" x:Name="borderFocused" CornerRadius="3,3,3,3" Margin="1,1,1,1" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                            <GradientStop Color="#FF5B7DAF" Offset="0" />
                            <GradientStop Color="#FF7C9BC8" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <ContentPresenter Grid.ColumnSpan="3" />
            </Grid>
        </Border>
    </ControlTemplate>

    <dxgcore:DefaultDataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueTemplate}">
        <Border Style="{Binding Path=View.GroupValueContentStyle}">
            <TextBlock Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=DisplayText}" />
        </Border>
    </dxgcore:DefaultDataTemplate>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryPadding}">4,2,4,3</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryPadding}">4,2,4,3</Thickness>
    <sys:Double x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedViewGroupSummaryMinHeight}">21</sys:Double>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupDefaultSummaryPadding}">0,2,0,3</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandButtonMargin}">5,2,0,3</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowExpandButtonMargin}">5,2,0,4</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValuePresenterMargin}">0,2,0,3</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=CheckBoxSelectorMargin}">5,0,0,1</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedGroupValuePresenterMargin}">5,2,20,3</Thickness>

    <Style TargetType="{x:Type dxg:GroupSummaryContentPresenter}">
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterRowTemplate}" TargetType="{x:Type ContentControl}">
        <Border Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" Padding="0,0,0,1">
            <Border Background="#E0EDFD">
                <Grid>
                    <Border x:Name="borderFocused" Margin="0" SnapsToDevicePixels="True" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                        <Border.Visibility>
                            <Binding Path="SelectionState">
                                <Binding.Converter>
                                    <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                                </Binding.Converter>
                            </Binding>
                        </Border.Visibility>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                                <GradientStop Color="#FF5B7DAF" Offset="0" />
                                <GradientStop Color="#FF7C9BC8" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <ContentControl HorizontalContentAlignment="Stretch">
                        <ContentPresenter/>
                    </ContentControl>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=NewItemRowTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Margin="0,0,0,1">
            <Border x:Name="borderFocused" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,-0.002" StartPoint="0.5,1.002">
                        <GradientStop Color="#FF5B7DAF" Offset="0" />
                        <GradientStop Color="#FF7C9BC8" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border.Visibility>
                    <Binding Path="SelectionState">
                        <Binding.Converter>
                            <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
            </Border>
            <ContentControl HorizontalContentAlignment="Stretch">
                <ContentPresenter/>
            </ContentControl>
            <Border x:Name="backgroundBorder" IsHitTestVisible="False" Background="#FFFFFFFF"
                        Visibility="{Binding Path=IsFocused, Converter={StaticResource BooleanToVisibilityConverterInverted}}">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="PART_GridNewRowText">
                        <TextBlock.Text>
                            <Binding Path="View.LocalizationDescriptor" ConverterParameter="GridNewRowText">
                                <Binding.Converter>
                                    <dxg:DynamicLocalizationStringValueConvertor />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Text>
                </TextBlock>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Thickness x:Key="RightOnePixelThickness">0,0,1,0</Thickness>
    <Thickness x:Key="ZeroPixelThickness">0</Thickness>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterCellContentPresenterTemplate}" TargetType="{x:Type dxg:FilterCellContentPresenter}">
        <Border x:Name="ContentBorder" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderState}" BorderBrush="{TemplateBinding BorderBrush}">
            <!--BEGIN WPF-->
            <Border.Background>
                <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
            </Border.Background>
            <!--END WPF-->
            <!--ONLY SL
            <Border.Background>
                <Binding Path="SelectionState" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="None" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderNoneBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Selected" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Focused" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="FocusedAndSelected" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.Background>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            ONLY SL-->
            <dxgcore:FilterRowCellEditor x:Name="PART_CellEditor">
                <!--ONLY SL
                <dxgcore:FilterRowCellEditor.FocusedRowForeground>
                    <Binding Path="RowData.SelectionState">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="Black">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="Focused" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dxgcore:FilterRowCellEditor.FocusedRowForeground>
                <dxgcore:FilterRowCellEditor.FocusedCellForeground>
                    <Binding Path="SelectionState">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter>
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="Focused" Value="Black"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dxgcore:FilterRowCellEditor.FocusedCellForeground>
                ONLY SL-->
            </dxgcore:FilterRowCellEditor>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="ContentBorder" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBackgroundBrush}" Color="#FFFFFFFF" />
    <LinearGradientBrush  x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBorderBrush}" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF5B81BE" Offset="0" />
        <GradientStop Color="#FF43609B" Offset="1" />
    </LinearGradientBrush>
    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
        <Border Background="#FFAFD1FD" BorderThickness="1,1,1,1" BorderBrush="#FF062B63" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=CellContentPresenterTemplate}" TargetType="{x:Type dxgcore:CellContentPresenter}">
        <Border x:Name="ContentBorder" Padding="{TemplateBinding Padding}"
            BorderThickness="{Binding Path=BorderState, RelativeSource={RelativeSource TemplatedParent}}">
            <!--ONLY SL<Border.BorderBrush>
                <SolidColorBrush x:Name="ContentBorderBorderBrush" Color="#FFC3CEDC"/>
            </Border.BorderBrush>
            <Border.Background>
                <SolidColorBrush x:Name="InnerBorderBackground" Color="Transparent"/>
            </Border.Background>ONLY SL-->
            <!--BEGIN WPF-->
            <Border.BorderBrush>
                <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}" />
            </Border.BorderBrush>
            <Border.Background>
                <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
            </Border.Background>
            <!--END WPF-->
            <!--ONLY SL<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFD5E5F8" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF5B7DAF" Duration="0"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowVerticalLineStates">
                    <VisualState x:Name="Visible"/>
                    <VisualState x:Name="VisibleFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorderBorderBrush" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>ONLY SL-->
            <dxgcore:CellEditor x:Name="PART_CellEditor">
                <!--ONLY SL<dxgcore:CellEditor.Foreground>
                    <SolidColorBrush x:Name="Foreground" Color="Black"/>
                </dxgcore:CellEditor.Foreground>
                <dxgcore:CellEditor.Template>
                    <ControlTemplate TargetType="ContentControl">
                        <dxe:InplaceEditorContentPresenter/>
                    </ControlTemplate>
                </dxgcore:CellEditor.Template>ONLY SL-->
            </dxgcore:CellEditor>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=RowData.SelectionState}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="ContentBorder" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnContentTemplate}">
        <Border Name="fitColumnVerticalLine" Background="Transparent" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}">
            <Border.Opacity>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Border.BorderThickness>
                <Binding Path="SelectionState">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="1,0,0,0">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Focused" Value="0" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.ShowVerticalLines}" Value="False">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnLeftContentTemplate}">
        <Border Name="fitColumnVerticalLine" Background="Transparent" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}">
            <Border.Opacity>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Border.BorderThickness>
                <Binding Path="SelectionState">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="0,0,1,0">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Focused" Value="0" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.ShowVerticalLines}" Value="False">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
        <Border x:Name="border" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" 
                BorderThickness="1,0,1,0">
            <Border.Background>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="#00FFFFFF" TrueValue="#FFFFFFFF" />
                    </Binding.Converter>
                </Binding>
            </Border.Background>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}" Background="#FFFFFFFF" MinHeight="32">
            <Border.BorderThickness>
                <Binding Path="FooterPosition">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Top"    Value="0,0,0,0"/>
                                <dx:EnumObjectProvider x:Key="Bottom" Value="0,1,0,1"/>
                                <dx:EnumObjectProvider x:Key="Middle" Value="0,1,0,0"/>
                                <dx:EnumObjectProvider x:Key="Single" Value="0,0,0,1"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
            <ContentPresenter Margin="0,2,0,2" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryControlTemplate}">
        <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
            <Grid Margin="{TemplateBinding Padding}" Name="rootGrid">
                <!--BEGIN WPF-->
                <Grid.Visibility>
                    <Binding Path="HasSummary">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="Visible" FalseValue="Hidden" />
                        </Binding.Converter>
                    </Binding>
                </Grid.Visibility>
                <!--END WPF-->
                <!--ONLY SL
                <Grid.Opacity>
                    <Binding Path="HasSummary">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="1" FalseValue="0"/>
                        </Binding.Converter>
                    </Binding>
                </Grid.Opacity>
                ONLY SL-->
                <Border Background="#FFFFFFFF" BorderBrush="#FF99bce4" CornerRadius="2" BorderThickness="1" MinHeight="22" Margin="1,1,2,1" >
                    <dx:DataContentPresenter Style="{Binding Path=Column.View.GroupFooterSummaryContentStyle}" Content="{Binding}" ContentTemplateSelector="{Binding Path=Column.View.ActualGroupFooterSummaryItemTemplateSelector}"  />
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryContentStyle}" TargetType="{x:Type dx:DataContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextElement.Foreground" Value="#FF262933" />
        <Setter Property="Margin" Value="4,1,4,1" />
    </Style>

    <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryContentStyle}" TargetType="{x:Type dxg:GroupBandSummaryControl}">
        <Setter Property="Padding" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryPadding}}" />
        <Setter Property="NormalBorderBrush" Value="#FF99bce4" />
        <Setter Property="FocusedBorderBrush" Value="#FF99bce4" />
        <Setter Property="NormalForeground"  Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
        <Setter Property="FocusedForeground"  Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
        <Setter Property="NormalBackground" Value="Transparent" />
        <Setter Property="FocusedBackground" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:GroupColumnSummaryControl}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" BorderThickness="1" MinHeight="22">
                        <Border.Margin>
                            <Binding Path="HasTopElement" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter TrueValue="0,0,2,2" FalseValue="0,2,2,2" />
                                </Binding.Converter>
                            </Binding>
                        </Border.Margin>
                        <ContentPresenter x:Name="PART_Content" Margin="4,1,4,1" Content="{Binding}" ContentTemplate="{Binding View.GroupColumnSummaryItemTemplate}" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryItemTemplate}">
        <TextBlock Text="{Binding Value}" Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}"/>
    </DataTemplate>

    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=EditFormBackground}" Color="#FFA3C3EC" />

</ResourceDictionary>