<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxschdui="clr-namespace:DevExpress.Xpf.Scheduler.UI"
    xmlns:dxsch="clr-namespace:DevExpress.Xpf.Scheduler"
    xmlns:dxscht="clr-namespace:DevExpress.Xpf.Scheduler.ThemeKeys"
    xmlns:dxschd="clr-namespace:DevExpress.Xpf.Scheduler.Drawing"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <Style x:Key="{dxscht:TimelineViewThemeKey ResourceKey=TimelineViewSelectionBarCellStyle}" TargetType="{x:Type dxschd:VisualTimeCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid SnapsToDevicePixels="True" dxsch:SchedulerControl.HitTestType="SelectionBarCell">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxschd:CellBorder Grid.Row="0" Grid.RowSpan="2" SnapsToDevicePixels="True" UseLayoutRounding="True"
                                          DefaultBorderThickness="1" DefaultMargin="0,0,0,0" 
                                          BorderBrush="{Binding Brushes.CellBorderDark}" 
                                          ElementPosition="{Binding Path=(dxschd:SchedulerItemsControl.ElementPosition), RelativeSource={RelativeSource TemplatedParent}}" 
                                          Background="{Binding Brushes.Cell}"/>
                        <dxschd:CellContent x:Name="PART_CONTENT" Background="Transparent" Grid.Row="1" 
                                           dxsch:SchedulerControl.HitTestType="Cell" 
                                           IsHitTestVisible="True" 
                                           DefaultMargin="1" 
                                           ElementPosition="{Binding Path=(dxschd:SchedulerItemsControl.ElementPosition), RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
</ResourceDictionary>
