<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RuleObjectExistsPropertiesMessageTemplateMustExist" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleObjectExistsPropertiesLooksFor" xml:space="preserve">
    <value>Specifies the name of the class whose objects will be searched for in the database.</value>
  </data>
  <data name="RuleObjectExistsPropertiesCriteria" xml:space="preserve">
    <value>Specifies the criteria according to which objects are searched in the database. </value>
  </data>
  <data name="RuleIsReferencedPropertiesReferencePropertyName" xml:space="preserve">
    <value>Specifies the property which is checked as to whether it contains a reference to an object of the type specified by the RuleBaseProperties.TargetType property. The specified property must belong to the class specified by the RuleIsReferencedProperties.LooksFor property.</value>
  </data>
  <data name="RuleIsReferencedPropertiesMessageTemplateMustBeReferenced" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleIsReferencedPropertiesLooksFor" xml:space="preserve">
    <value>Specifies the type of the objects which are checked as to whether they have a reference to the object of the type specified by the RuleBaseProperties.TargetType property.</value>
  </data>
  <data name="RuleFromBoolPropertyPropertiesUsedProperties" xml:space="preserve">
    <value>Specifies the names of the properties to be highlighted when the Validation Rule is broken.</value>
  </data>
  <data name="RuleFromBoolPropertyPropertiesMessageTemplateMustBeTrue" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleCriteriaPropertiesUsedProperties" xml:space="preserve">
    <value>Specifies the names of the properties to be highlighted when the Validation Rule is broken.</value>
  </data>
  <data name="RuleCriteriaPropertiesMessageTemplateMustSatisfyCriteria" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleCriteriaPropertiesCriteria" xml:space="preserve">
    <value> Specifies the criteria that must be satisfied by the objects of the type set for the RuleBaseProperties.TargetType property.</value>
  </data>
  <data name="RuleCombinationOfPropertiesIsUniquePropertiesTargetProperties" xml:space="preserve">
    <value>Specifies the properties which must satisfy the current Validation Rule.</value>
  </data>
  <data name="RuleCombinationOfPropertiesIsUniquePropertiesMessageTemplateCombinationOfPropertiesMustBeUnique" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleBasePropertiesTargetType" xml:space="preserve">
    <value>Specifies the type of the object for which the Validation Rule will be checked.</value>
  </data>
  <data name="RuleBasePropertiesTargetCriteria" xml:space="preserve">
    <value>Specifies the criteria that must be satisfied by the validated object to allow checking the Validation Rule.</value>
  </data>
  <data name="RuleBasePropertiesTargetContextIDs" xml:space="preserve">
    <value>Specifies the Contexts for checking the current Validation Rule.</value>
  </data>
  <data name="RuleBasePropertiesSkipNullOrEmptyValues" xml:space="preserve">
    <value>Specifies whether the Validation Rule is checked for the properties that are set to null (Nothing in VB), an empty string (for string type properties) or a minimal date (for DateTime type properties).</value>
  </data>
  <data name="RuleBasePropertiesName" xml:space="preserve">
    <value>Specifies the name of the Validation Rule.</value>
  </data>
  <data name="RuleBasePropertiesMessageTemplateTargetDoesNotSatisfyTargetCriteria" xml:space="preserve">
    <value>Specifies the template for the message displayed when the Validation Rule was not checked because the criteria specified by the RuleBaseProperties.TargetCriteria property is not satisfied by the validated object.</value>
  </data>
  <data name="RuleBasePropertiesMessageTemplateSkipNullOrEmptyValues" xml:space="preserve">
    <value>Specifies the template for the message displayed when the Validation Rule was not checked because the target properties are not specified.</value>
  </data>
  <data name="RuleBasePropertiesInvertResult" xml:space="preserve">
    <value>Specifies whether the Validation Rule is applied directly.</value>
  </data>
  <data name="RuleBasePropertiesId" xml:space="preserve">
    <value>Specifies the Validation Rule identifier.</value>
  </data>
  <data name="RuleBasePropertiesCustomMessageTemplate" xml:space="preserve">
    <value>Specifies a custom informational text that is displayed in a validation error message for a broken Validation Rule, instead of the default message templates specified by the MessageTemplate... properties. </value>
  </data>
  <data name="IRuleSupportsCollectionAggregatesPropertiesTargetCollectionAggregate" xml:space="preserve">
    <value>Specifies the aggregate function to be checked by the Validation Rule, if a Rule is applied to a collection property.</value>
  </data>
  <data name="IRuleCollectionPropertyPropertiesTargetCollectionPropertyName" xml:space="preserve">
    <value>Specifies the collection property for which the current Validation Rule will be checked.</value>
  </data>
  <data name="IRuleCollectionPropertyPropertiesTargetCollectionOwnerType" xml:space="preserve">
    <value>If the Validation Rule is applied to a collection property, specifies the type in which the collection property is declared.</value>
  </data>
  <data name="IRuleCollectionPropertyPropertiesMessageTemplateTargetDoesNotSatisfyCollectionCriteria" xml:space="preserve">
    <value>Specifies the message displayed when the Validation Rule was not checked because a validated object is not an element of the target collection.</value>
  </data>
  <data name="IRuleCollectionPropertyPropertiesMessageTemplateCollectionValidationMessageSuffix" xml:space="preserve">
    <value>Specifies the additional text that will be displayed in the Validation Error window when the Validation Rule applied to a collection property is broken.</value>
  </data>
  <data name="DataSourceBaseTopReturnedRecords" xml:space="preserve">
    <value>Specifies the maximum number of records to be retrieved from a data store.</value>
  </data>
  <data name="DataSourceBaseSorting" xml:space="preserve">
    <value>Specifies the sorting to be applied to data.</value>
  </data>
  <data name="DataSourceBaseObjectTypeName" xml:space="preserve">
    <value>Specifies the business object type name to be used by the DataSourceBase to load data. </value>
  </data>
  <data name="DataSourceBaseCriteria" xml:space="preserve">
    <value>The criteria used to filter data in a report.</value>
  </data>
  <data name="RuleRangePropertiesMinimumValueExpression" xml:space="preserve">
    <value>Specifies the expression whose value is treated as the minimum allowed property value.</value>
  </data>
  <data name="RuleRangePropertiesMinimumValue" xml:space="preserve">
    <value>Specifies the minimum value allowed for the property value.</value>
  </data>
  <data name="RuleRangePropertiesMessageTemplateMustBeInRange" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleRangePropertiesMaximumValueExpression" xml:space="preserve">
    <value>Specifies the expression whose value is treated as the maximum allowed property value.</value>
  </data>
  <data name="RuleRangePropertiesMaximumValue" xml:space="preserve">
    <value>Specifies the maximum value allowed for the property value.</value>
  </data>
  <data name="RulePropertyValuePropertiesTargetPropertyName" xml:space="preserve">
    <value>Specifies the property which must satisfy the Validation Rule.</value>
  </data>
  <data name="RuleRegularExpressionPropertiesMessageTemplateMustMatchPattern" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleRegularExpressionPropertiesPattern" xml:space="preserve">
    <value>Specifies the pattern which the target property must match.</value>
  </data>
  <data name="RuleRequiredFieldPropertiesMessageTemplateMustNotBeEmpty" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleSearchObjectPropertiesCriteriaEvaluationBehavior" xml:space="preserve">
    <value>Specifies whether to look for objects that are currently retrieved from the database, in addition to the objects in the database itself.</value>
  </data>
  <data name="RuleSearchObjectPropertiesFoundObjectMessageFormat" xml:space="preserve">
    <value>Specifies the format for the list of found objects.</value>
  </data>
  <data name="RuleSearchObjectPropertiesFoundObjectMessagesSeparator" xml:space="preserve">
    <value>Specifies the character used to separate objects in the list of found objects (see RuleSearchObjectProperties.FoundObjectMessageFormat). </value>
  </data>
  <data name="RuleSearchObjectPropertiesIncludeCurrentObject" xml:space="preserve">
    <value>Specifies whether to check the current business object by the Validation Rule.</value>
  </data>
  <data name="RuleSearchObjectPropertiesMessageTemplateFoundObjects" xml:space="preserve">
    <value>Specifies the text that is displayed before the list of found objects (see RuleSearchObjectProperties.FoundObjectMessageFormat).</value>
  </data>
  <data name="RuleStringComparisonPropertiesIgnoreCase" xml:space="preserve">
    <value>Specifies whether to perform a case-sensitive string comparison.</value>
  </data>
  <data name="RuleStringComparisonPropertiesMessageTemplateMustBeEqual" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleStringComparisonProperties.OperatorType is set to StringComparisonType.Equals.</value>
  </data>
  <data name="RuleStringComparisonPropertiesMessageTemplateMustBeginWith" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleStringComparisonProperties.OperatorType is set to StringComparisonType.StartsWith.</value>
  </data>
  <data name="RuleStringComparisonPropertiesMessageTemplateMustContain" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the StringComparisonType.Contains.</value>
  </data>
  <data name="RuleStringComparisonPropertiesMessageTemplateMustEndWith" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleStringComparisonProperties.OperatorType is set to StringComparisonType.EndsWith.</value>
  </data>
  <data name="RuleStringComparisonPropertiesMessageTemplateMustNotBeEqual" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleStringComparisonProperties.OperatorType is set to StringComparisonType.NotEquals.</value>
  </data>
  <data name="RuleStringComparisonPropertiesOperandValue" xml:space="preserve">
    <value>Specifies the value which the property value is compared with.</value>
  </data>
  <data name="RuleStringComparisonPropertiesOperatorType" xml:space="preserve">
    <value>Specifies the operator type that must be used when comparing string values.</value>
  </data>
  <data name="RuleUniqueValuePropertiesMessageTemplateMustBeUnique" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken.</value>
  </data>
  <data name="RuleValueComparisonPropertiesMessageTemplateMustBeEqualToOperand" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleValueComparisonProperties.OperatorType is set to ValueComparisonType.Equals.</value>
  </data>
  <data name="RuleValueComparisonPropertiesMessageTemplateMustBeGreaterThanOperand" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleValueComparisonProperties.OperatorType is set to ValueComparisonType.GreaterThan.</value>
  </data>
  <data name="RuleValueComparisonPropertiesMessageTemplateMustBeGreaterThanOrEqualToOperand" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleValueComparisonProperties.OperatorType is set to ValueComparisonType.GreaterThanOrEqual.</value>
  </data>
  <data name="RuleValueComparisonPropertiesMessageTemplateMustBeLessThanOperand" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleValueComparisonProperties.OperatorType is set to ValueComparisonType.LessThan.</value>
  </data>
  <data name="RuleValueComparisonPropertiesMessageTemplateMustBeLessThanOrEqualToOperand" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleValueComparisonProperties.OperatorType is set to ValueComparisonType.LessThanOrEqual.</value>
  </data>
  <data name="RuleValueComparisonPropertiesMessageTemplateMustNotBeEqualToOperand" xml:space="preserve">
    <value>Specifies the text that will be displayed in the Validation Error window when the Validation Rule is broken. In effect if the RuleValueComparisonProperties.OperatorType is set to ValueComparisonType.NotEquals.</value>
  </data>
  <data name="RuleValueComparisonPropertiesOperatorType" xml:space="preserve">
    <value>Specifies the operator type to be used for comparison.</value>
  </data>
  <data name="RuleValueComparisonPropertiesRightOperand" xml:space="preserve">
    <value>Specifies the value to be compared with the target property's value.</value>
  </data>
  <data name="ValidationIModelValidationdDefaultErrorMessageTemplates" xml:space="preserve">
    <value>The ErrorMessageTemplates node defines the default templates for the messages displayed when validation rules are broken.</value>
  </data>
  <data name="ViewDataSourceProperties" xml:space="preserve">
    <value>Gets the list of fields to be loaded from the data store.</value>
  </data>
</root>