<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BarString.AddOrRemove" xml:space="preserve">
    <value>Schalt&amp;flächen hinzufügen oder entfernen</value>
  </data>
  <data name="BarString.ResetBar" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie die Änderungen der '{0}' Symbolleiste zurücksetzen wollen?</value>
  </data>
  <data name="BarString.ResetBarCaption" xml:space="preserve">
    <value>Anpassen</value>
  </data>
  <data name="BarString.ResetButton" xml:space="preserve">
    <value>Symbolleiste &amp;zurücksetzen</value>
  </data>
  <data name="BarString.CustomizeButton" xml:space="preserve">
    <value>&amp;Anpassen...</value>
  </data>
  <data name="BarString.ToolBarMenu" xml:space="preserve">
    <value>&amp;Zurücksetzen$&amp;Löschen$!&amp;Name$!&amp;Standard Stil$N&amp;ur Text (immer)$Nu&amp;r Text  (in Menüs)$&amp;Bilder und Text$!&amp;Gruppenbeginn$&amp;Sichtbar$&amp;Am häufigsten genutzte</value>
  </data>
  <data name="BarString.NewToolbarCustomNameFormat" xml:space="preserve">
    <value>Benutzerdefiniert {0}</value>
  </data>
  <data name="BarString.NewToolbarCaption" xml:space="preserve">
    <value>Neue Werkzeugleiste</value>
  </data>
  <data name="BarString.RenameToolbarCaption" xml:space="preserve">
    <value>Werkzeugleiste umbenennen</value>
  </data>
  <data name="BarString.CustomizeWindowCaption" xml:space="preserve">
    <value>Anpassen</value>
  </data>
  <data name="BarString.MenuAnimationSystem" xml:space="preserve">
    <value>(Systemstandard)</value>
  </data>
  <data name="BarString.MenuAnimationNone" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="BarString.MenuAnimationSlide" xml:space="preserve">
    <value>Abrollen</value>
  </data>
  <data name="BarString.MenuAnimationFade" xml:space="preserve">
    <value>Einblenden</value>
  </data>
  <data name="BarString.MenuAnimationUnfold" xml:space="preserve">
    <value>Entfalten</value>
  </data>
  <data name="BarString.MenuAnimationRandom" xml:space="preserve">
    <value>Zufällig</value>
  </data>
  <data name="BarString.ToolbarNameCaption" xml:space="preserve">
    <value>&amp;Name der Werkzeugleiste:</value>
  </data>
  <data name="BarString.RibbonToolbarAbove" xml:space="preserve">
    <value>&amp;Symbolleiste für den Schnellzugriff über dem Menüband anzeigen</value>
  </data>
  <data name="BarString.RibbonToolbarAdd" xml:space="preserve">
    <value>&amp;Zur Symbolleiste für den Schnellzugriff hinzufügen</value>
  </data>
  <data name="BarString.RibbonToolbarRemove" xml:space="preserve">
    <value>&amp;Aus Symbolleiste für den Schnellzugriff entfernen</value>
  </data>
  <data name="BarString.RibbonToolbarBelow" xml:space="preserve">
    <value>&amp;Symbolleiste für den Schnellzugriff unter dem Menüband anzeigen</value>
  </data>
  <data name="BarString.RibbonToolbarMinimizeRibbon" xml:space="preserve">
    <value>Menüband mi&amp;nimieren</value>
  </data>
  <data name="BarString.RibbonGalleryFilter" xml:space="preserve">
    <value>Alle Gruppen</value>
  </data>
  <data name="BarString.RibbonGalleryFilterNone" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="BarString.BarUnassignedItems" xml:space="preserve">
    <value>(Nicht zugeordnete Befehle)</value>
  </data>
  <data name="BarString.BarAllItems" xml:space="preserve">
    <value>(Alle Befehle)</value>
  </data>
  <data name="BarString.RibbonUnassignedPages" xml:space="preserve">
    <value>(Nicht zugeordnete Seiten)</value>
  </data>
  <data name="BarString.RibbonAllPages" xml:space="preserve">
    <value>(Alle Seiten)</value>
  </data>
  <data name="BarString.NewToolbarName" xml:space="preserve">
    <value>Befehle</value>
  </data>
  <data name="BarString.NewMenuName" xml:space="preserve">
    <value>Hauptmenü</value>
  </data>
  <data name="BarString.NewStatusBarName" xml:space="preserve">
    <value>Statusleiste</value>
  </data>
  <data name="BarString.PopupMenuEditor" xml:space="preserve">
    <value>Menüeditor</value>
  </data>
  <data name="BarString.CloseButton" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="BarString.MinimizeButton" xml:space="preserve">
    <value>Minimieren</value>
  </data>
  <data name="BarString.MaximizeButton" xml:space="preserve">
    <value>Maximieren</value>
  </data>
  <data name="BarString.RestoreButton" xml:space="preserve">
    <value>Wieder nach unten</value>
  </data>
  <data name="BarString.HelpButton" xml:space="preserve">
    <value>Hilfe</value>
  </data>
  <data name="BarString.ShowShortcutKeysOnScreenTipsName" xml:space="preserve">
    <value>Tastenkürzel in Bildschirmhinweisen anzeigen</value>
  </data>
  <data name="BarString.ShowScreenTipsOnToolbarsName" xml:space="preserve">
    <value>Bildschirmhinweise auf Werkzeugleisten anzeigen</value>
  </data>
  <data name="BarString.CustomizeToolbarSuperTipText" xml:space="preserve">
    <value>Symbolleiste für den Schnellzugriff anpassen</value>
  </data>
  <data name="BarString.CustomizeToolbarText" xml:space="preserve">
    <value>Symbolleiste anpassen</value>
  </data>
  <data name="BarString.ExpandRibbonSuperTipHeader" xml:space="preserve">
    <value>Menüband erweitern (Strg+F1)</value>
  </data>
  <data name="BarString.CollapseRibbonSuperTipHeader" xml:space="preserve">
    <value>Menüband minimieren (Strg+F1)</value>
  </data>
  <data name="BarString.CollapseRibbonSuperTipText" xml:space="preserve">
    <value>Nur Registerkartennamen im Menüband anzeigen</value>
  </data>
  <data name="BarString.ExpandRibbonSuperTipText" xml:space="preserve">
    <value>Das Menüband anzeigen, sodass es immer erweitert ist, auch nachdem auf einen Befehl geklickt wurde.</value>
  </data>
  <data name="BarString.MoreCommands" xml:space="preserve">
    <value>&amp;Mehr Befehle...</value>
  </data>
  <data name="BarString.CustomizeQuickAccessToolbar" xml:space="preserve">
    <value>&amp;Anpassung Schnellzugriffsleiste...</value>
  </data>
  <data name="BarString.CustomizeRibbon" xml:space="preserve">
    <value>&amp;Menüband anpassen...</value>
  </data>
  <data name="BarString.SkinsCustom" xml:space="preserve">
    <value>Benutzerdefinierte Skins</value>
  </data>
  <data name="BarString.None" xml:space="preserve">
    <value></value>
  </data>
  <data name="BarString.CancelButton" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="BarString.SkinsTheme" xml:space="preserve">
    <value>Themen Skins</value>
  </data>
  <data name="BarString.RibbonCustomizationOptionAllCommands" xml:space="preserve">
    <value>Alle Befehle</value>
  </data>
  <data name="BarString.RibbonCustomizationRenameText" xml:space="preserve">
    <value>Umbenennen</value>
  </data>
  <data name="BarString.RibbonCustomizationRemoveText" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="BarString.RibbonCustomizationNewCategoryCommand" xml:space="preserve">
    <value>Neue Kategorie</value>
  </data>
  <data name="BarString.RibbonCustomizationNewCategoryDefaultAlias" xml:space="preserve">
    <value>Neue Kategorie</value>
  </data>
  <data name="BarString.RibbonCustomizationNewPageCommand" xml:space="preserve">
    <value>Neue Registerkarte</value>
  </data>
  <data name="BarString.RibbonCustomizationNewTabDefaultAlias" xml:space="preserve">
    <value>Neue Registerkarte</value>
  </data>
  <data name="BarString.RibbonCustomizationResetSettingsCommand" xml:space="preserve">
    <value>Alle Anpassungen zurücksetzen</value>
  </data>
  <data name="BarString.RibbonCustomizationUpText" xml:space="preserve">
    <value>Nach oben</value>
  </data>
  <data name="BarString.SkinsBonus" xml:space="preserve">
    <value>Bonus Skins</value>
  </data>
  <data name="BarString.SkinsMain" xml:space="preserve">
    <value>Standard Skins</value>
  </data>
  <data name="BarString.SkinsOffice" xml:space="preserve">
    <value>Office-Skins</value>
  </data>
  <data name="BarString.RibbonCaptionTextNone" xml:space="preserve">
    <value>Kein Name</value>
  </data>
  <data name="BarString.RibbonCustomizationAddText" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="BarString.RibbonCustomizationDownText" xml:space="preserve">
    <value>Nach unten verschieben</value>
  </data>
  <data name="BarString.RibbonCustomizationNewGroupCommand" xml:space="preserve">
    <value>Neue Gruppe</value>
  </data>
  <data name="BarString.RibbonCustomizationNewGroupDefaultAlias" xml:space="preserve">
    <value>Neue Gruppe</value>
  </data>
  <data name="BarString.RibbonCustomizationOptionAllTabs" xml:space="preserve">
    <value>Alle Registerkarten</value>
  </data>
  <data name="BarString.ColorAuto" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="BarString.RibbonCustomizationExportSettingsCommand" xml:space="preserve">
    <value>Alle Anpassungen exportieren</value>
  </data>
  <data name="BarString.RibbonCustomizationStandardCustomItemSuffix" xml:space="preserve">
    <value>Benutzerdefiniert</value>
  </data>
  <data name="BarString.RibbonTouchMouseModeMouseItemText" xml:space="preserve">
    <value>Maus</value>
  </data>
  <data name="BarString.RibbonTouchMouseModeGalleryGroupText" xml:space="preserve">
    <value>Abstand zwischen Befehlen zu optimieren.</value>
  </data>
  <data name="BarString.RibbonTouchMouseModeTouchItemText" xml:space="preserve">
    <value>Tippen Sie auf</value>
  </data>
  <data name="BarString.FullScreenButton" xml:space="preserve">
    <value>Automatisches Ausblenden Ribbon</value>
  </data>
  <data name="BarString.RibbonCustomizationImportSettingsCommand" xml:space="preserve">
    <value>Anpassungsdatei importieren</value>
  </data>
  <data name="BarString.RibbonCustomizationResetSelectedTabSettingsCommand" xml:space="preserve">
    <value>Zurücksetzen nur ausgewählte Multifunktionsleisten-Registerkarte</value>
  </data>
  <data name="BarString.RibbonTouchMouseModeMouseItemDescription" xml:space="preserve">
    <value>Standard-Band und Befehle. Optimiert für den Einsatz mit einer Maus.</value>
  </data>
  <data name="BarString.RibbonTouchMouseModeTouchItemDescription" xml:space="preserve">
    <value>Befehle mehr Platz zwischen. Optimiert für den Einsatz mit Touch.</value>
  </data>
  <data name="BarString.Visible" xml:space="preserve">
    <value>Sichtbar</value>
  </data>
  <data name="BarString.AccordionControlSearchBoxPromptText" xml:space="preserve">
    <value>Schlüsselwörter hier eingeben</value>
  </data>
  <data name="BarString.ColorTabWebSafeColors" xml:space="preserve">
    <value>Web-Safe</value>
  </data>
</root>