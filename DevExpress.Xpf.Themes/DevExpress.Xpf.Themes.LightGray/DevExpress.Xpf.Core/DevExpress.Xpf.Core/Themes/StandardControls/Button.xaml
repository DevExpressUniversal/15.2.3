<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">
    
    <Visibility x:Key="Visible">Visible</Visibility>
    <LinearGradientBrush x:Key="Border.Root.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF596372"/>
        <GradientStop Color="#FF535962" Offset="1"/>
        <GradientStop Color="#FF414346" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Normal.Background" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFC0D7F4" Offset="0"/>
        <GradientStop Color="#FFE2F0FD" Offset="1"/>
        <GradientStop Color="#FFDBECFF" Offset="0.5"/>
        <GradientStop Color="#FFE4F1FF" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Inner.Normal.Background" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFBED9F7" Offset="0"/>
        <GradientStop Color="#FFD7E9FB" Offset="1"/>
        <GradientStop Color="#FFA9C9F7" Offset="0.5"/>
        <GradientStop Color="#FFC8DEF5" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Hover.Background" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFE0EEFF" Offset="0"/>
        <GradientStop Color="#FFEEF6FF" Offset="1"/>
        <GradientStop Color="#FFE4F1FF" Offset="0.5"/>
        <GradientStop Color="#FFF1F8FF" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Inner.Hover.Background" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFDDEDFF" Offset="0"/>
        <GradientStop Color="#FFE4F1FF" Offset="1"/>
        <GradientStop Color="#FFCCE0FD" Offset="0.5"/>
        <GradientStop Color="#FFDCEBFB" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Checked.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC0D7F4" Offset="1"/>
        <GradientStop Color="#FF8898AB"/>
        <GradientStop Color="#FFA4C1E2" Offset="0.5"/>
        <GradientStop Color="#FF84A6CA" Offset="0.2"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Inner.Checked.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFADCCED" Offset="0"/>
        <GradientStop Color="#FF9CB5D2" Offset="1"/>
        <GradientStop Color="#FF95B5DA" Offset="0.5"/>
        <GradientStop Color="#FF83A0D2" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Pressed.Background" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFC0D7F4" Offset="0"/>
        <GradientStop Color="#FF7297C2" Offset="1"/>
        <GradientStop Color="#FFA4C1E2" Offset="0.5"/>
        <GradientStop Color="#FF84A6CA" Offset="0.8"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Border.Inner.Pressed.Background" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFAAC8EA" Offset="0"/>
        <GradientStop Color="#FF81A3D4" Offset="1"/>
        <GradientStop Color="#FF9ABCEE" Offset="0.2"/>
        <GradientStop Color="#FFADC6EA" Offset="0.9"/>
    </LinearGradientBrush>
    
    <dxcn:RenderTemplate x:Key="{dxdst:ButtonThemeKey ResourceKey=RenderTemplate}">
        <dxcn:RenderPanel>
            <dxcn:RenderBorder Name="Focused" Margin="-2" Background="#BFADCCF7" CornerRadius="4" Visibility="Collapsed"/>
            <dxcn:RenderBorder Name="Root" CornerRadius="3" Padding="1" Background="{StaticResource Border.Root.Background}">                
                <dxcn:RenderPanel>
                    <dxcn:RenderBorder Name="Outer" CornerRadius="2" Padding="1" Background="{StaticResource Border.Outer.Normal.Background}">
                        <dxcn:RenderBorder Name="Inner" CornerRadius="2" Background="{StaticResource Border.Inner.Normal.Background}"/>                        
                    </dxcn:RenderBorder>
                </dxcn:RenderPanel>
            </dxcn:RenderBorder>
            <dxcn:RenderPanel Name="RenderPanel" >
                <dxcn:RenderPanel Margin="1" LayoutProvider="{dxcn:DockPanelLayoutProvider LastChildFill=True}">
                    <dxcn:RenderImage Name="Image" Dock="Left" Stretch="None" VerticalAlignment="Center"/>
                    <dxcn:RenderBorder Name="OffsetBorder"/>
                    <dxcn:RenderContentPresenter Name="ContentPresenter" Dock="Right"/>
                </dxcn:RenderPanel>
            </dxcn:RenderPanel>
        </dxcn:RenderPanel>
        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphProperty}" TargetName="Image" TargetProperty="Source"/>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphToContentOffsetProperty}" TargetName="OffsetBorder" TargetProperty="Width"/>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.ContentProperty}" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.ContentTemplateProperty}" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.ContentTemplateSelectorProperty}" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.VerticalContentAlignmentProperty}" TargetProperty="VerticalAlignment" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.HorizontalContentAlignmentProperty}" TargetProperty="HorizontalAlignment" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.PaddingProperty}" TargetProperty="Margin" TargetName="RenderPanel" />
            <dxcn:MultiRenderTrigger>
                <dxcn:MultiRenderTrigger.Conditions>
                    <dxcn:RenderConditionGroup Operator="Or">
                        <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphProperty}" Value="{x:Null}"/>
                        <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.ContentProperty}" Value="{x:Null}"/>
                    </dxcn:RenderConditionGroup>
                </dxcn:MultiRenderTrigger.Conditions>
                <dxcn:RenderSetter Property="Visibility" TargetName="OffsetBorder" Value="Collapsed"/>
            </dxcn:MultiRenderTrigger>
            <dxcn:RenderTrigger ValueSource="TemplatedParent" DependencyProperty="{x:Static FrameworkElement.IsFocusedProperty}" Value="True">
                <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
            </dxcn:RenderTrigger>
            <dxcn:RenderTrigger ValueSource="TemplatedParent" DependencyProperty="{x:Static ToggleButton.IsCheckedProperty}" Value="True">
                <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Border.Outer.Checked.Background}" />
                <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Border.Inner.Checked.Background}" />
            </dxcn:RenderTrigger>            
            <dxcn:MultiRenderTrigger>
                <dxcn:MultiRenderTrigger.Conditions>
                    <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static ButtonBase.IsPressedProperty}" Value="True" />
                    <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static ToggleButton.IsCheckedProperty}" Value="False" />
                </dxcn:MultiRenderTrigger.Conditions>
                <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Border.Outer.Pressed.Background}" />
                <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Border.Inner.Pressed.Background}" />
            </dxcn:MultiRenderTrigger>            
            <dxcn:MultiRenderTrigger>
                <dxcn:MultiRenderTrigger.Conditions>
                    <dxcn:RenderConditionGroup Operator="Or">
                        <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static FrameworkElement.IsMouseOverProperty}" Value="True" />
                        <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static Button.IsDefaultedProperty}" Value="True" />
                    </dxcn:RenderConditionGroup>
                    <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static ToggleButton.IsCheckedProperty}" Value="False" />
                    <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static ButtonBase.IsPressedProperty}" Value="False" />
                </dxcn:MultiRenderTrigger.Conditions>
                <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Border.Outer.Hover.Background}" />
                <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Border.Inner.Hover.Background}" />
            </dxcn:MultiRenderTrigger>           
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>
    
    <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type ButtonBase}">
        <dxcn:Chrome x:Name="Chrome" RenderTemplate="{StaticResource {dxdst:ButtonThemeKey ResourceKey=RenderTemplate}}"/>
        <ControlTemplate.Triggers>            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Chrome" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, FullName=System.Windows.Controls.Button}" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
        <Setter Property="Padding" Value="11,2,11,2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, Type=ToggleButton}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
        <Setter Property="Padding" Value="11,2,11,2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, Type=RepeatButton}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Type RepeatButton}}">
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
        <Setter Property="Padding" Value="11,2,11,2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SimpleButton}" TargetType="{x:Type dx:SimpleButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
        <Setter Property="GlyphToContentOffset" Value="10"/>
    </Style>
</ResourceDictionary>