<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework" 
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" 
    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <!--treeView-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/TextBox.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Button.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Expander.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/CheckBox.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/ComboBox.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/ToolTip.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/ProgressBar.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/TreeView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dx:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <dx:EnumToObjectConverter x:Key="ScrollBarModeToScrollBackVisibilityConverter" DefaultValue="Visible">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Collapsed"/>
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:EnumToObjectConverter x:Key="ScrollBarModeToHardWidthScrollConverter" DefaultValue="Collapsed">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Standard" Value="Visible"/>
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>

    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, FullName=DevExpress.Xpf.PivotGrid.Internal.FilterCheckedTreeView}" TargetType="{x:Type dxpgi:FilterCheckedTreeView}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.TreeView}}" xmlns:dxpgi="clr-namespace:DevExpress.Xpf.PivotGrid.Internal;assembly=DevExpress.Xpf.PivotGrid.v15.2" />
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, FullName=DevExpress.Xpf.PivotGrid.Internal.FilterCheckedTreeViewItem}" TargetType="{x:Type dxpgi:FilterCheckedTreeViewItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.TreeViewItem}}" xmlns:dxpgi="clr-namespace:DevExpress.Xpf.PivotGrid.Internal;assembly=DevExpress.Xpf.PivotGrid.v15.2" >
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=FilterCheckedTreeViewItemHeaderTemplate}}" />
    </Style>
    <ControlTemplate x:Key="{dxt:GroupBoxThemeKey ThemeName=LightGray, ResourceKey=ControlTemplate}" TargetType="{x:Type GroupBox}">
        <Grid SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border x:Name="border" Grid.Row="1" BorderBrush="#FFB9BABF" BorderThickness="1,0,1,1" CornerRadius="0,0,3,3"/>
            <Grid x:Name="grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*" />
                    <RowDefinition Height="0.5*" />
                </Grid.RowDefinitions>
                <Border Width="9" Grid.Row="1" BorderBrush="#FFB9BABF" BorderThickness="1,1,0,0" CornerRadius="3,0,0,0"/>
                <ContentControl IsTabStop="False" Foreground="#FF000000" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Grid.Column="1" Grid.RowSpan="2"
                                            Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                <Border Grid.Column="2" Grid.Row="1" BorderBrush="#FFB9BABF" BorderThickness="0,1,1,0" CornerRadius="0,3,0,0"/>
            </Grid>
            <ContentPresenter x:Name="content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Row="1" Margin="{TemplateBinding Padding}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HeaderVisiblity">
                    <VisualState x:Name="HeaderVisible"/>
                    <VisualState x:Name="HeaderCollapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="CornerRadius">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius>3</CornerRadius>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>12</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, FullName=System.Windows.Controls.GroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="Template" Value="{DynamicResource {dxt:GroupBoxThemeKey ThemeName=LightGray, ResourceKey=ControlTemplate}}"/>
        <Setter Property="Padding" Value="12,8,12,12"/>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.GroupFrame}" TargetType="{x:Type dx:GroupFrame}">
        <Setter Property="Template" Value="{DynamicResource {dxt:GroupBoxThemeKey ResourceKey=ControlTemplate}}"/>
        <Setter Property="Padding" Value="12,8,12,12"/>
    </Style>

    <!--TabControl-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, FullName=System.Windows.Controls.TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,2,10,2"/>
        <Setter Property="BorderBrush" Value="#8C8E94"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#F3F3F3" Offset="0"/>
                    <GradientStop Color="#EBEBEB" Offset="0.5"/>
                    <GradientStop Color="#DDDDDD" Offset="0.5"/>
                    <GradientStop Color="#CDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true" >
                        <Border x:Name="TemplateTopUnselected" CornerRadius="2,2,0,0" Background="#FFB9BABF" Margin="0,0,1,0" Opacity="1">
                            <Border x:Name="GradientTop" CornerRadius="1,1,0,0" Background="#FFD5D8E0" Margin="1,1,1,0"/>
                        </Border>
                        <Border x:Name="TemplateBottomUnselected" CornerRadius="0,0,2,2" Background="#FFB9BABF" Margin="0,0,1,0" Opacity="0" >
                            <Border x:Name="GradientBottom" CornerRadius="0,0,1,1" Background="#FFD5D8E0" Margin="1,0,1,1"/>
                        </Border>
                        <Border x:Name="TemplateLeftUnselected" CornerRadius="2,0,0,2" Background="#FFB9BABF" Margin="0,0,0,1" Opacity="0">
                            <Border x:Name="GradientLeft" CornerRadius="1,0,0,1" Background="#FFD5D8E0" Margin="1,1,0,1"/>
                        </Border>
                        <Border x:Name="TemplateRightUnselected" CornerRadius="0,2,2,0" Background="#FFB9BABF" Margin="0,0,0,1" Opacity="0">
                            <Border x:Name="GradientRight" CornerRadius="0,1,1,0" Background="#FFD5D8E0" Margin="0,1,1,1"/>
                        </Border>
                        <Border x:Name="TemplateTopSelected" CornerRadius="2,2,0,0" Background="#FFB9BABF" Margin="0,-2,1,0" Opacity="0">
                            <Border CornerRadius="1,1,0,0" Margin="1,1,1,-1" Background="#FFEBEEF3">
                                <Border x:Name="FocusTop" Margin="1,1,1,0" Opacity="0" CornerRadius="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFADCCF7" Offset="0"/>
                                            <GradientStop Color="#00ADCCF7" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="TemplateBottomSelected" CornerRadius="0,0,2,2" Margin="0,0,1,-2" Background="#FFB9BABF" Opacity="0">
                            <Border CornerRadius="0,0,1,1" Margin="1,-1,1,1" Background="#FFEBEEF3">
                                <Border x:Name="FocusBottom" Margin="1,0,1,1" Opacity="0" CornerRadius="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                            <GradientStop Color="#FFADCCF7" Offset="0"/>
                                            <GradientStop Color="#00ADCCF7" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="TemplateRightSelected" CornerRadius="0,2,2,0" Margin="0,0,-2,1" Background="#FFB9BABF" Opacity="0">
                            <Border CornerRadius="0,1,1,0" Margin="-1,1,1,1" Background="#FFEBEEF3">
                                <Border x:Name="FocusRight" Margin="0,1,1,1" Opacity="0" CornerRadius="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                            <GradientStop Color="#FFADCCF7" Offset="0"/>
                                            <GradientStop Color="#00ADCCF7" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="TemplateLeftSelected" CornerRadius="2,0,0,2" Margin="-2,0,0,1" Background="#FFB9BABF" Opacity="0">
                            <Border CornerRadius="1,0,0,1" Margin="1,1,-1,1" Background="#FFEBEEF3">
                                <Border x:Name="FocusLeft" Margin="1,1,0,1" Opacity="0" CornerRadius="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                            <GradientStop Color="#FFADCCF7" Offset="0"/>
                                            <GradientStop Color="#00ADCCF7" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                        <ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter
                            Property="Background" TargetName="GradientTop" Value="#FFC2DBF7"/>
                            <Setter
                            Property="Background" TargetName="GradientBottom" Value="#FFC2DBF7"/>
                            <Setter
                            Property="Background" TargetName="GradientLeft" Value="#FFC2DBF7"/>
                            <Setter
                            Property="Background" TargetName="GradientRight" Value="#FFC2DBF7"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomUnselected" Value="1"/>
                            <Setter Property="Margin" TargetName="Content" Value="10,2,10,3"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftUnselected" Value="1"/>
                            <Setter Property="Margin" TargetName="Content" Value="10,3,10,4"/>
                            <Setter Property="HorizontalAlignment" TargetName="Content" Value="Center"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightUnselected" Value="1"/>
                            <Setter Property="Margin" TargetName="Content" Value="10,3,10,4"/>
                            <Setter Property="HorizontalAlignment" TargetName="Content" Value="Center"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="FocusTop" Value="0.6"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="FocusBottom" Value="0.6"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="FocusLeft" Value="0.6"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="FocusRight" Value="0.6"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="1"/>
                            <Setter Property="Margin" TargetName="Content" Value="10,2,10,3"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="1"/>
                            <Setter Property="Margin" TargetName="Content" Value="10,2,10,3"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftSelected" Value="1"/>
                            <Setter Property="Margin" TargetName="Content" Value="10,3,10,4"/>
                            <Setter Property="HorizontalAlignment" TargetName="Content" Value="Center"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="TemplateTopUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateTopSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateBottomUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftSelected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateLeftUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightUnselected" Value="0"/>
                            <Setter Property="Opacity" TargetName="TemplateRightSelected" Value="1"/>
                            <Setter Property="Margin" TargetName="Content" Value="10,3,10,4"/>
                            <Setter Property="HorizontalAlignment" TargetName="Content" Value="Center"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey ThemeName=LightGray, FullName=System.Windows.Controls.TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#8C8E94"/>
        <Setter Property="Background" Value="#F9F9F9"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="3,2,3,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel" CornerRadius="3" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Background="#FFB9BABF">
                            <Border CornerRadius="2" Background="#FFEBEEF3" Margin="1">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="11"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="3,0,3,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,3,0,3"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,3,2,3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Separator-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Separator}" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template" Value="{DynamicResource {dxt:SeparatorThemeKey ResourceKey=ControlTemplate}}" />
    </Style>
    <ControlTemplate x:Key="{dxt:SeparatorThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type Separator}">
        <Border x:Name="Separator" BorderBrush="#3F000000" BorderThickness="0,1,0,0" Height="2" Background="#E5FFFFFF"/>
    </ControlTemplate>
    <!--RadioButton-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" />
        <Setter Property="Background" Value="#FF003255" />
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="dxeh:ControlHelper.ShowFocusedState" Value="{Binding Path=IsFocused, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent" x:Name="RootElement" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Top">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="InternalFocusStates">
                                <VisualState x:Name="InternalFocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InternalUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.Resources>
                            <!-- Visual constants used by the template -->
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                            <LinearGradientBrush x:Key="control-emboss" EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Pad">
                                <GradientStop Color="#3E8A8A8A" Offset="0"/>
                                <GradientStop Color="#80FFFFFF" Offset="1"/>
                                <GradientStop Color="#3FDEDEDE" Offset="0.2"/>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="control-border" EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF414345" Offset="0"/>
                                <GradientStop Color="#FFADB0B5" Offset="1"/>
                                <GradientStop Color="#FF424347" Offset="0.2"/>
                                <GradientStop Color="#FF7E8288" Offset="0.7"/>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="control-fill" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
                                <GradientStop Color="#FFD6D6D6" Offset="0"/>
                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                <GradientStop Color="#FFF0F0F0" Offset="0.5"/>
                            </LinearGradientBrush>
                        </Grid.Resources>
                        
                        <Grid Margin="{TemplateBinding Padding}">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- RadioButton visual -->
                        <Grid Width="15" Height="15" Margin="0,1,0,0" Grid.Column="0">
                            <Ellipse x:Name="FocusElement" Margin="-2" Fill="#FF4882D8" Opacity="0"/>

                            <Ellipse Fill="{StaticResource control-border}"/>
                            <Ellipse Margin="1" Fill="{StaticResource control-fill}"/>
                            <Border UseLayoutRounding="True" Margin="3">
                                <Grid x:Name="CheckElement" Width="Auto" Height="Auto" Opacity="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="0.5*"/>
                                    </Grid.RowDefinitions>
                                    <Ellipse Margin="0" Grid.RowSpan="2">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF4E586E" Offset="0"/>
                                                <GradientStop Color="#FF687695" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Margin="1" Grid.RowSpan="2" x:Name="ellipse1">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF5885E6" Offset="0"/>
                                                <GradientStop Color="#FFE9F4FF" Offset="1"/>
                                                <GradientStop Color="#FF668FE8" Offset="0.3"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Margin="3,1,3,0" x:Name="ellipse2">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                                <GradientStop Color="#19FFFFFF" Offset="0"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </Border>
                        </Grid>
                        
                        <!-- Focus indicator -->
                        <Rectangle Grid.Column="1" x:Name="ContentFocusVisualElement" StrokeDashCap="Round" Margin="2" StrokeDashArray=".2 2" Visibility="Collapsed" IsHitTestVisible="false">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="Black" />
                            </Rectangle.Stroke>
                        </Rectangle>

                        <!-- RadioButton content -->
                        <ContentPresenter
                      Grid.Column="1" 
                      Content="{TemplateBinding Content}" 
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      Margin="4,0,0,0"
                      IsHitTestVisible="true" RecognizesAccessKey="True"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <!-- Disabled -->
                        <!--<Ellipse x:Name="DisabledState" Width="13" Height="13" Fill="Silver" Opacity="0" VerticalAlignment="Center" IsHitTestVisible="False"/>-->
                    </Grid>
                    
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="CheckElement" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="RootElement" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ListBoxItem-->
    <Style  x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.ListBoxItem}" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="3,2,3,2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}" x:Name="RootElement" SnapsToDevicePixels="True">
                        <Rectangle x:Name="FocusVisual" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" Opacity="0" />
                        <Rectangle x:Name="fillColor" Opacity="0" Margin="0" IsHitTestVisible="False" RadiusX="2" RadiusY="2" SnapsToDevicePixels="True">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FFBDD9F8"/>
                                    <GradientStop Color="#FFD2E5FA" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="fillColor2" Opacity="0" Margin="0" IsHitTestVisible="False" RadiusX="2" RadiusY="2" SnapsToDevicePixels="True">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FF6FA2DD"/>
                                    <GradientStop Color="#FF8FB8E5" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="fillColor3" Opacity="0" IsHitTestVisible="False" RadiusX="2" RadiusY="2" SnapsToDevicePixels="True">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                    <GradientStop Color="#FFB7C9D8"/>
                                    <GradientStop Color="#FFC7D6E7" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="RootElement" Value="0.35"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="fillColor" Value="1"/>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Opacity" TargetName="fillColor2" Value="0" />
                            <Setter Property="Opacity" TargetName="fillColor3" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Opacity" TargetName="fillColor" Value="0"/>
                            <Setter Property="Opacity" TargetName="fillColor2" Value="0" />
                            <Setter Property="Opacity" TargetName="fillColor3" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Opacity" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="fillColor2" Value="1"/>
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ListBox-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.ListBox}" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Background"  Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FF7E7E7E"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.35"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DXListBox-->
    <Style x:Key="{dxt:DefaultStyleThemeKey Type=dx:DXListBox}" TargetType="{x:Type dx:DXListBox}" BasedOn="{StaticResource {dxt:DefaultStyleThemeKey Type=ListBox}}">
    </Style>
    <!--Slider-->
    <ControlTemplate x:Key="SliderRepeatButtonTemplate">
        <Grid x:Name="Root" Opacity="0" Background="Transparent"/>
    </ControlTemplate>
    <ControlTemplate x:Key="ThumbTemplate" TargetType="Thumb">
        <Grid SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="0,2,0,0" x:Name="shadow1" CornerRadius="3" Padding="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#26000000" Offset="0.509"/>
                        <GradientStop Color="#0C000000" Offset="1"/>
                        <GradientStop Color="#19000000" Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Margin="1" x:Name="thumb" Background="#FF808080" CornerRadius="2" Padding="1">
                <Border x:Name="border" CornerRadius="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop x:Name="gs1" Color="#FFEDEDED"/>
                            <GradientStop x:Name="gs2" Color="#FFC8C8C8" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFEDEDED"/>
                            <GradientStop Color="#FFB3B3B3" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFD6D6D6"/>
                            <GradientStop Color="#FFB3B3B3" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Slider}" TargetType="{x:Type Slider}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Maximum" Value="10" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Value" Value="0" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- Horizontal Template -->
                        <Grid x:Name="HorizontalTemplate" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition MinHeight="{TemplateBinding MinHeight}" Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TickBar x:Name="TopTick" Height="4" Visibility="Collapsed" Grid.Row="0" Fill="{TemplateBinding Foreground}" Placement="Top" />
                            <TickBar x:Name="BottomTick" Height="4" Visibility="Collapsed" Grid.Row="2" Fill="{TemplateBinding Foreground}" Placement="Bottom" />

                            <!-- Track Layer -->
                            <Border x:Name="Focus" Margin="-1" Opacity="0" Background="#FFADCCF7" CornerRadius="3" Grid.ColumnSpan="1" Grid.RowSpan="3" VerticalAlignment="Center" Height="9" />
                            <Border Height="7" Grid.RowSpan="3" CornerRadius="3" Padding="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00FFFFFF"/>
                                        <GradientStop Color="#7FFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border Height="Auto" x:Name="line" Width="Auto" CornerRadius="2" Padding="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF6E6E6E"/>
                                            <GradientStop Color="#FF9C9C9C" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border CornerRadius="1">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFB6B6B6"/>
                                                <GradientStop Color="#FFCCCCCC" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Canvas>
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" VerticalAlignment="Stretch" Width="0"/>
                                        </Canvas>
                                    </Border>
                                </Border>
                            </Border>

                            <!-- Repeat Buttons + Thumb -->
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseLarge">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Template" Value="{StaticResource SliderRepeatButtonTemplate}"/>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseLarge">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Template" Value="{StaticResource SliderRepeatButtonTemplate}"/>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" FocusVisualStyle="{x:Null}" Height="19" Width="11" Template="{StaticResource ThumbTemplate}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Margin" TargetName="Thumb" Value="0,0,0,4"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Margin" TargetName="Thumb" Value="0,4,0,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" TargetName="Thumb" Value="#FF0000FF " />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="Focus" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Grid x:Name="Root">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <TickBar x:Name="TopTick" Width="4" Visibility="Collapsed" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" />
                                    <TickBar x:Name="BottomTick" Width="4" Visibility="Collapsed" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" />

                                    <!-- Track Layer -->
                                    <Border x:Name="Focus" Margin="-1" Opacity="0" Background="#FFADCCF7" CornerRadius="3" Grid.ColumnSpan="3" Width="9" />
                                    <Border Width="7" Grid.ColumnSpan="3" CornerRadius="3" Padding="1">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                <GradientStop Color="#00FFFFFF"/>
                                                <GradientStop Color="#7FFFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border Height="Auto" x:Name="line" Width="Auto" CornerRadius="2" Padding="1">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#FF6E6E6E"/>
                                                    <GradientStop Color="#FF9C9C9C" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border CornerRadius="1">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="#FFB6B6B6"/>
                                                        <GradientStop Color="#FFCCCCCC" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <Canvas>
                                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" HorizontalAlignment="Stretch" Width="0"/>
                                                </Canvas>
                                            </Border>
                                        </Border>
                                    </Border>

                                    <!-- Repeat Buttons + Thumb -->
                                    <Track x:Name="PART_Track" Grid.Row="0" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="Slider.DecreaseLarge">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="Template" Value="{StaticResource SliderRepeatButtonTemplate}"/>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="Slider.IncreaseLarge">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="Template" Value="{StaticResource SliderRepeatButtonTemplate}"/>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" FocusVisualStyle="{x:Null}" Height="11" Width="19" Template="{StaticResource ThumbTemplate}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                                    <Setter Property="Margin" TargetName="PART_Track" Value="0,0,4,0"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                                    <Setter Property="Margin" TargetName="PART_Track" Value="4,0,0,0"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Foreground" TargetName="Thumb" Value="#FF0000FF " />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Opacity" TargetName="Focus" Value="0.75"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ScrollBar ScrollViewer-->
    <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFDEDEDE" Offset="0"/>
        <GradientStop Color="#FFF0F0F0" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.125" />
                                    <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.25" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ButtonColor" Storyboard.TargetProperty="Color" To="#FF3E3E3E" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonVisual" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="ButtonVisual" Stretch="Uniform" Data="F1 M 766,610L 766,611L 772,614L 772,607L 766,610 Z " Height="7" Width="6" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path.Fill>
                                <SolidColorBrush x:Name="ButtonColor" Color="#FF757A82" />
                            </Path.Fill>
                        </Path>
                        <Rectangle x:Name="FocusVisual" Stroke="#666666" Fill="#00000000"  StrokeDashArray=".2 5" StrokeDashCap="Round" IsHitTestVisible="false" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Style" Value="{x:Null}"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="horizontalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Color x:Key="BackgroundColor">#FF93969B</Color>
                        <Color x:Key="GradientStartColor">#FFD8D8D8</Color>
                        <Color x:Key="GradientEndColor">#FFF5F5F5</Color>
                        <Color x:Key="GradientStartMouseOverColor">#FFC8C8CA</Color>
                        <Color x:Key="GradientEndMouseOverColor">#FFE8E8E9</Color>
                        <Storyboard x:Key="horizontalThumbStoryboardToMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.13" Value="{StaticResource GradientEndMouseOverColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.13" Value="{StaticResource GradientStartMouseOverColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="horizontalThumbStoryboardFromMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="{StaticResource GradientEndColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="{StaticResource GradientStartColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="ThumbVisual" CornerRadius="3" Margin="0,1,0,1">
                            <Border.Background>
                                <SolidColorBrush x:Name="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
                            </Border.Background>
                            <Border x:Name="border" CornerRadius="2" Margin="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop x:Name="GradientStart" Color="{StaticResource GradientStartColor}" Offset="0"/>
                                        <GradientStop x:Name="GradientEnd" Color="{StaticResource GradientEndColor}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource horizontalThumbStoryboardFromMouseOver}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource horizontalThumbStoryboardToMouseOver}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDEDEDE" Offset="0"/>
        <GradientStop Color="#FFF0F0F0" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="horizontalIncreaseRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="horizontalIncreaseRepeatButtonStoryboardToMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF757A82"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="#FF3E3E3E"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="horizontalIncreaseRepeatButtonStoryboardFromMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF3E3E3E"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="#FF757A82"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Root" Background="Transparent">
                        <Path x:Name="ButtonVisual" Stretch="Uniform" Data="F1 M 759,611L 759,610L 753,607L 753,614L 759,611 Z " Height="7" Width="6" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path.Fill>
                                <SolidColorBrush x:Name="ButtonColor" Color="#FF757A82" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="horizontalIncreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard"/>
                                <BeginStoryboard x:Name="horizontalIncreaseRepeatButtonStoryboardFromMouseOver_BeginStoryboard" Storyboard="{StaticResource horizontalIncreaseRepeatButtonStoryboardFromMouseOver}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="horizontalIncreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard" Storyboard="{StaticResource horizontalIncreaseRepeatButtonStoryboardToMouseOver}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Fill" TargetName="ButtonVisual" Value="#FF3E3E3E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="horizontalDecreaseRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="horizontalDecreaseRepeatButtonStoryboardToMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF757A82"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="#FF3E3E3E"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="horizontalDecreaseRepeatButtonStoryboardFromMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF3E3E3E"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="#FF757A82"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Root" Background="Transparent">
                        <Path x:Name="ButtonVisual" Stretch="Uniform" Data="F1 M 766,610L 766,611L 772,614L 772,607L 766,610 Z " Height="7" Width="6" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path.Fill>
                                <SolidColorBrush x:Name="ButtonColor" Color="#FF757A82" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="horizontalDecreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard"/>
                                <BeginStoryboard x:Name="horizontalDecreaseRepeatButtonStoryboardFromMouseOver_BeginStoryboard" Storyboard="{StaticResource horizontalDecreaseRepeatButtonStoryboardFromMouseOver}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="horizontalDecreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard" Storyboard="{StaticResource horizontalDecreaseRepeatButtonStoryboardToMouseOver}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Fill" TargetName="ButtonVisual" Value="#FF3E3E3E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="verticalIncreaseRepeatButton" TargetType="{x:Type RepeatButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="verticalIncreaseRepeatButtonStoryboardToMouseOver">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                    <EasingColorKeyFrame KeyTime="0" Value="#FF757A82"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.13" Value="#FF3E3E3E"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="verticalIncreaseRepeatButtonStoryboardFromMouseOver">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                    <EasingColorKeyFrame KeyTime="0" Value="#FF3E3E3E"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.25" Value="#FF757A82"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Root" Background="Transparent">
            <Path x:Name="ButtonVisual" Stretch="Uniform" Data="F1 M 769,610L 770,610L 773,604L 766,604L 769,610 Z " Height="6" Width="7" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Path.Fill>
                    <SolidColorBrush x:Name="ButtonColor" Color="#FF757A82" />
                </Path.Fill>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="verticalIncreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard"/>
                    <BeginStoryboard x:Name="verticalIncreaseRepeatButtonStoryboardFromMouseOver_BeginStoryboard" Storyboard="{StaticResource verticalIncreaseRepeatButtonStoryboardFromMouseOver}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="verticalIncreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard" Storyboard="{StaticResource verticalIncreaseRepeatButtonStoryboardToMouseOver}"/>
                </Trigger.EnterActions>
                <Setter Property="Fill" TargetName="ButtonVisual" Value="#FF3E3E3E"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="verticalDecreaseRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="verticalDecreaseRepeatButtonStoryboardToMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF757A82"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.13" Value="#FF3E3E3E"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="verticalDecreaseRepeatButtonStoryboardFromMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonVisual">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF3E3E3E"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="#FF757A82"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Root" Background="Transparent">
                        <Path x:Name="ButtonVisual" Stretch="Uniform" Data="F1 M 758,604L 757,604L 754,610L 761,610L 758,604 Z " Height="6" Width="7" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Path.Fill>
                                <SolidColorBrush x:Name="ButtonColor" Color="#FF757A82" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="verticalDecreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard"/>
                                <BeginStoryboard x:Name="verticalDecreaseRepeatButtonStoryboardFromMouseOver_BeginStoryboard" Storyboard="{StaticResource verticalDecreaseRepeatButtonStoryboardFromMouseOver}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="verticalDecreaseRepeatButtonStoryboardToMouseOver_BeginStoryboard" Storyboard="{StaticResource verticalDecreaseRepeatButtonStoryboardToMouseOver}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Fill" TargetName="ButtonVisual" Value="#FF3E3E3E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="verticalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Color x:Key="BackgroundColor">#FF93969B</Color>
                        <Color x:Key="GradientStartColor">#FFD8D8D8</Color>
                        <Color x:Key="GradientEndColor">#FFF5F5F5</Color>
                        <Color x:Key="GradientStartMouseOverColor">#FFC8C8CA</Color>
                        <Color x:Key="GradientEndMouseOverColor">#FFE8E8E9</Color>
                        <Storyboard x:Key="verticalThumbStoryboardToMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.13" Value="{StaticResource GradientEndMouseOverColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.13" Value="{StaticResource GradientStartMouseOverColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="verticalThumbStoryboardFromMouseOver">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="{StaticResource GradientEndColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                <EasingColorKeyFrame KeyTime="0:0:0.25" Value="{StaticResource GradientStartColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="ThumbVisual" CornerRadius="3" Margin="1,0,1,0">
                            <Border.Background>
                                <SolidColorBrush x:Name="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
                            </Border.Background>
                            <Border x:Name="border" CornerRadius="2" Margin="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                        <GradientStop x:Name="GradientStart" Color="{StaticResource GradientStartColor}" Offset="0"/>
                                        <GradientStop x:Name="GradientEnd" Color="{StaticResource GradientEndColor}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource verticalThumbStoryboardFromMouseOver}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource verticalThumbStoryboardToMouseOver}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=PageButtonTouchStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=ScrollThumbHorzTouchStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" Margin="1" Opacity="0.75"/>
                        <Rectangle x:Name="border" Stroke="{TemplateBinding BorderBrush}" Fill="{x:Null}" StrokeThickness="1" Opacity="0.5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=ScrollThumbVertTouchStyle}" TargetType="{x:Type Thumb}" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" Margin="1" Opacity="0.75"/>
                        <Rectangle x:Name="border" Stroke="{TemplateBinding BorderBrush}" Fill="{x:Null}" StrokeThickness="1" Opacity="0.5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxdst:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=ScrollBarVertTouchTemplate}" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="Root" SnapsToDevicePixels="true" Background="{x:Null}">
            <Grid x:Name="stretchableGrid" HorizontalAlignment="Right" Width="6">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                    Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToScrollBackVisibilityConverter}}"/>
                <Border x:Name="MouseHoverBorder" Background="#808080" Opacity="0.2">
                    <Border.Visibility>
                        <Binding Path="Width" ElementName="stretchableGrid">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultTarget="Visible">
                                    <dxmvvm:MapItem Source="6" Target="Collapsed"/>
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Track x:Name="PART_Track" IsDirectionReversed="true" Width="6" HorizontalAlignment="Center"
                   Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToHardWidthScrollConverter}}">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxt:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageUpCommand}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxt:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageDownCommand}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource {dxt:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=ScrollThumbVertTouchStyle}}" x:Name="thumb" Background="#808080" BorderBrush="White"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True"/>
                    <Condition Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:01.5" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sb">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="16" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stretchableGrid"/>
                            <DoubleAnimation To="13" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="PART_Track"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sb"/>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.35" To="6" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stretchableGrid"/>
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.35" To="6" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="PART_Track"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sbSizeChanged">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sbSizeChanged"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="thumb" Property="Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate TargetType="{x:Type ScrollBar}" x:Key="{dxdst:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=ScrollBarHorzTouchTemplate}">
        <Grid x:Name="Root" SnapsToDevicePixels="true" Background="{x:Null}">
            <Grid x:Name="stretchableGrid" VerticalAlignment="Bottom" Height="6">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                    Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToScrollBackVisibilityConverter}}"/>
                <Border x:Name="MouseHoverBorder" Background="#808080" Opacity="0.2">
                    <Border.Visibility>
                        <Binding Path="Height" ElementName="stretchableGrid">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultTarget="Visible">
                                    <dxmvvm:MapItem Source="6" Target="Collapsed"/>
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Height="6" VerticalAlignment="Center"
                       Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToHardWidthScrollConverter}}">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxt:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageLeftCommand}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxt:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageRightCommand}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource {dxt:ScrollBarThemeKey ThemeName=LightGray, ResourceKey=ScrollThumbHorzTouchStyle}}" Background="#808080" BorderBrush="White" x:Name="thumb" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True"/>
                    <Condition Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:01.5" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sbMouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="16" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="stretchableGrid"/>
                            <DoubleAnimation To="13" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="PART_Track"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sbMouseOver"/>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.5" To="6" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="stretchableGrid"/>
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.5" To="6" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="PART_Track"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sbSizeChanged">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sbSizeChanged"/>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxdst:ScrollBarThemeKey ResourceKey=ScrollingCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFF0F0F0 " />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.ScrollBar}" TargetType="{x:Type ScrollBar}">
        <!--BEGIN WPF-->
        <Setter Property="dx:ScrollBarExtensions.ListeningScrollBarThumbDragDelta" Value="True"/>
        <Setter Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerMouseMoved), RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerSizeChanged), RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="dx:ScrollBarExtensions.IsTouchScrollBarMode">
            <Setter.Value>
                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="True">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Standard" Value="False"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
        <!--END WPF-->
        <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="17"/>
        <Setter Property="MinWidth" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <RepeatButton x:Name="up" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource verticalDecreaseRepeatButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{StaticResource verticalThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="down" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" Template="{StaticResource verticalIncreaseRepeatButton}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="thumb" Value="0"/>
                            <Setter Property="Opacity" TargetName="up" Value="0.35"/>
                            <Setter Property="Opacity" TargetName="down" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Vertical"/>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Width" Value="16" />
                    <Setter Property="MinWidth" Value="16" />
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarVertTouchTemplate}}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal"/>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="17"/>
                    <Setter Property="MinHeight" Value="13"/>
                    <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid IsHitTestVisible="True">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton x:Name="left" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource horizontalDecreaseRepeatButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                        <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="thumb" Style="{StaticResource horizontalThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton x:Name="right" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource horizontalIncreaseRepeatButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="thumb" Value="0"/>
                                        <Setter Property="Opacity" TargetName="left" Value="0.35"/>
                                        <Setter Property="Opacity" TargetName="right" Value="0.35"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal"/>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="16" />
                    <Setter Property="MinHeight" Value="16" />
                    <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarHorzTouchTemplate}}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ScrollViewerTemplate"  TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1" Fill="#FFE9E9E9">
                <!--BEGIN WPF-->
                <Rectangle.Visibility>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="Visible">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Collapsed"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Rectangle.Visibility>
                <!--END WPF-->
            </Rectangle>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0">
                <!--BEGIN WPF-->
                <Grid.RowSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.RowSpan>
                <Grid.ColumnSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.ColumnSpan>
                <!--END WPF-->
            </ScrollContentPresenter>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}">
                <!--BEGIN WPF-->
                <Grid.RowSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:VerticalScrollBarRowSpanConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.RowSpan>
                <!--END WPF-->
            </ScrollBar>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" >
                <!--BEGIN WPF-->
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:HorizontalScrollBarRowSpanConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
                <!--END WPF-->
            </ScrollBar>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <!--BEGIN WPF-->
        <Setter Property="dx:ScrollViewerTouchBehavior.IsEnabled" Value="True"/>
        <!--END WPF-->
        <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}"/>
    </Style>

    <!--Page-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Page}" TargetType="{x:Type Page}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <Border Background="#FFEAEDF3">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="#FFC0C0C0" Opacity="0.5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.GridSplitter}" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="#7FC0C0C0"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="Transparent" Margin="{TemplateBinding Margin}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFC0C0C0"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Pressed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" MinWidth="2" MinHeight="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Label}" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FF000000 " />
        <Setter Property="Background" Value="#00FFFFFF " />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,3,0,3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"  RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,0L 5,10L 5,5L 0,0 Z " Width="5" Height="10" />
                            <Path x:Name="CheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,5L 5,0L 5,10L 0,5 Z " Width="5" Height="10" Opacity="0"/>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="CheckedPath" Value="1" />
                            <Setter Property="Opacity" TargetName="UncheckedPath" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,5L 5,0L 5,10L 0,5 Z " Width="5" Height="10"/>
                            <Path x:Name="CheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,0L 5,10L 5,5L 0,0 Z " Width="5" Height="10" Opacity="0" />
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="CheckedPath" Value="1" />
                            <Setter Property="Opacity" TargetName="UncheckedPath" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,5L 5,0L 10,5.00012L 0,5 Z " Width="10" Height="5"/>
                            <Path x:Name="CheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,0L 10,0L 5,5.00012L 0,0 Z " Width="10" Height="5" Opacity="0" />
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="CheckedPath" Value="1" />
                            <Setter Property="Opacity" TargetName="UncheckedPath" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,0L 10,0L 5,5.00012L 0,0 Z " Width="10" Height="5" />
                            <Path x:Name="CheckedPath" Stretch="Fill" Fill="#FF1B293E" Data="F1 M 0,5L 5,0L 10,5.00012L 0,5 Z " Width="10" Height="5" Opacity="0" />
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" RecognizesAccessKey="True" Grid.Row="1" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="CheckedPath" Value="1" />
                            <Setter Property="Opacity" TargetName="UncheckedPath" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1" MinWidth="0" MinHeight="0"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ExpanderDownHeaderStyle}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
<!--todo
    RadioButtonList
    ListBoxItem
    TabItem
    Page
    ListBox
    -->