<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:mvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Grid/Generic/HeaderFooterItemsControlStyles.xaml" />
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.LightGray.v15.2;component/DevExpress.Xpf.Grid/LightGray/Constants.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->
    <dxg:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <dxg:NavigationRowConverter x:Key="NavigationRowConverter" />
    <dx:EnumToObjectConverter x:Key="ScrollBarModeToVerticalAlignmentConverter" DefaultValue="Stretch">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Bottom" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dxg:FootersPanelMarginConverter x:Key="FootersPanelMarginConverter" />
    <ControlTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=FootersContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border BorderBrush="Transparent" Background="#FF6E6E6E">
                <Border.BorderThickness>
                    <Binding Path="View.IsRootView">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="0,1,0,0" FalseValue="0,0,0,1" />
                        </Binding.Converter>
                    </Binding>
                </Border.BorderThickness>
            </Border>
            <ContentPresenter Margin="0,3,0,2" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=DataPresenterTemplate}" TargetType="{x:Type dxg:DataPresenter}">
        <Border Background="White">
            <ContentPresenter />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=OuterBorderElementTemplate}" TargetType="{x:Type dxg:OuterBorderElement}">
    </ControlTemplate>
    <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserDragTextStyle}" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="#FFA3A3A3 " />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="35,4" />
    </Style>
    <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelDragTextStyle}" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="0,4,0,5" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    
    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderThickness}">0,0,0,1</Thickness>
    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelMargin}">8</Thickness>
    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelSeparatorMargin}">0,-23,0,0</Thickness>
    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderBrush}" Color="White" />
   
    <DataTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryItemTemplate}">
        <TextBlock Text="{Binding Column.TotalSummaryText}" Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}" />
    </DataTemplate>
    <!--BEGIN WPF-->
    <dxg:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueContentStyle}" TargetType="{x:Type Border}">
    </dxg:DefaultStyle>
    <!--END WPF-->
    <dxg:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Control.Foreground" Value="#FF6E6E6E " />
        <Setter Property="Control.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
            </DataTrigger>
        </Style.Triggers>
    </dxg:DefaultStyle>
    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="groupRowBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="#FFD3D3D3 " BorderThickness="0,0,0,1">
            <Grid>
                <Border x:Name="groupRowBorderSelected" Background="#FFD8D8D8" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Border x:Name="groupRowBorderFocused" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF9F9F9F" />
                            <GradientStop Color="#FF8C8C8C" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <ContentPresenter />
            </Grid>
        </Border>
    </ControlTemplate>

    <dxgcore:DefaultDataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueTemplate}">
        <Border Style="{Binding Path=View.GroupValueContentStyle}" VerticalAlignment="Center" Padding="0,0,0,1">
            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=DisplayText}" />
        </Border>
    </dxgcore:DefaultDataTemplate>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryPadding}">4,2,4,2</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryPadding}">4,2,4,2</Thickness>
    <sys:Double x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedViewGroupSummaryMinHeight}">21</sys:Double>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupDefaultSummaryPadding}">0,2,0,2</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandButtonMargin}">8,2,0,2</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowExpandButtonMargin}">8,2,0,3</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValuePresenterMargin}">4,2,20,2</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=CheckBoxSelectorMargin}">4,0,0,0</Thickness>
    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedGroupValuePresenterMargin}">4,2,20,2</Thickness>
    
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupSummaryContentPresenter}" TargetType="{x:Type dxg:GroupSummaryContentPresenter}">
        <Setter Property="Margin" Value="0,0,4,0" />
    </Style>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterRowTemplate}" TargetType="{x:Type ContentControl}">
        <Border Background="White" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="0,0,0,1">
            <Grid>
                <Border x:Name="borderFocused" Margin="0" SnapsToDevicePixels="True" Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <ContentControl HorizontalContentAlignment="Stretch">
                    <ContentPresenter />
                </ContentControl>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=NewItemRowTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Margin="0,0,0,1">
            <Border x:Name="borderFocused" Margin="0" SnapsToDevicePixels="True" Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                <Border.Visibility>
                    <Binding Path="SelectionState">
                        <Binding.Converter>
                            <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
            </Border>
            <ContentControl HorizontalContentAlignment="Stretch">
                <ContentPresenter />
            </ContentControl>
            <Border x:Name="backgroundBorder" Background="#FFFFFFFF " IsHitTestVisible="False" Visibility="{Binding Path=IsFocused, Converter={StaticResource BooleanToVisibilityConverterInverted}}">
                <dx:MeasurePixelSnapper>
                    <TextBlock Foreground="#FFA3A3A3 " Margin="0,1,0,2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="PART_GridNewRowText">
                               <TextBlock.Text>
                                    <Binding Path="View.LocalizationDescriptor" ConverterParameter="GridNewRowText">
                                        <Binding.Converter>
                                            <dxg:DynamicLocalizationStringValueConvertor />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Text>
                    </TextBlock>
                </dx:MeasurePixelSnapper>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterCellContentPresenterTemplate}" TargetType="{x:Type dxg:FilterCellContentPresenter}">
        <Border x:Name="ContentBorder" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderState}">
            <!--ONLY SL<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>ONLY SL-->
            <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                <!--BEGIN WPF-->
                <Border.Background>
                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
                </Border.Background>
                <!--END WPF-->
                <!--ONLY SL<Border.Background>
                <Binding Path="SelectionState" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="None" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderNoneBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Selected" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Focused" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="FocusedAndSelected" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
                </Border.Background>ONLY SL-->
                <dxgcore:FilterRowCellEditor x:Name="PART_CellEditor">
                    <!--ONLY SL
                <dxgcore:FilterRowCellEditor.FocusedRowForeground>
                    <Binding Path="RowData.SelectionState">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="Black">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="Focused" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dxgcore:FilterRowCellEditor.FocusedRowForeground>
                <dxgcore:FilterRowCellEditor.FocusedCellForeground>
                    <Binding Path="SelectionState" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter>
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="Focused" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellTextFocusedBrush}}"/>
                                    <dx:EnumObjectProvider x:Key="FocusedAndSelected" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dxgcore:FilterRowCellEditor.FocusedCellForeground>
                <dxgcore:FilterRowCellEditor.Template>
                    <ControlTemplate TargetType="ContentControl">
                        <dxe:InplaceEditorContentPresenter/>
                    </ControlTemplate>
                </dxgcore:FilterRowCellEditor.Template>
                ONLY SL-->
                </dxgcore:FilterRowCellEditor>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="ContentBorder" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" TargetName="PART_CellEditor" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellTextFocusedBrush}}" TargetName="PART_CellEditor" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBackgroundBrush}" Color="#FFFFFFFF " />
    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBorderBrush}" Color="#FF7E7E7E" />
    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
        <Border BorderBrush="#FFFFFFFF" BorderThickness="1,0,1,0" Background="#FF6E6E6E" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=CellContentPresenterTemplate}" TargetType="{x:Type dxgcore:CellContentPresenter}">
        <Border x:Name="ContentBorder" Background="Transparent" BorderThickness="{Binding Path=BorderState, RelativeSource={RelativeSource TemplatedParent}}">
            <Border.BorderBrush>
                <!--BEGIN WPF-->
                <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}" />
                <!--END WPF-->
                <!--ONLY SL<SolidColorBrush x:Name="ContentBorderBorderBrush" Color="#FFD3D3D3"/>ONLY SL-->
            </Border.BorderBrush>
            <!--ONLY SL<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFDBE9F9" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFdbe9f9" Duration="0"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF6DA2DE" Duration="0"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowVerticalLineStates">
                    <VisualState x:Name="Visible"/>
                    <VisualState x:Name="VisibleFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorderBorderBrush" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>ONLY SL-->
            <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                <!--ONLY SL<Border.Background>
                    <SolidColorBrush x:Name="InnerBorderBackground" Color="Transparent"/>
                </Border.Background>ONLY SL-->
                <!--BEGIN WPF-->
                <Border.Background>
                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
                </Border.Background>
                <!--END WPF-->
                <dxgcore:CellEditor x:Name="PART_CellEditor">
                    <!--ONLY SL<dxgcore:CellEditor.Foreground>
                        <SolidColorBrush x:Name="Foreground" Color="Black"/>
                    </dxgcore:CellEditor.Foreground>
                    <dxgcore:CellEditor.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <dxe:InplaceEditorContentPresenter/>
                        </ControlTemplate>
                    </dxgcore:CellEditor.Template>ONLY SL-->
                </dxgcore:CellEditor>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=RowData.SelectionState}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="ContentBorder" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnContentTemplate}">
        <Border Name="fitColumnVerticalLine" Background="Transparent" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}">
            <Border.Opacity>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Border.BorderThickness>
                <Binding Path="SelectionState">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="1,0,0,0">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Focused" Value="0" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
        </Border>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnLeftContentTemplate}">
        <Border Name="fitColumnVerticalLine" Background="Transparent" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}">
            <Border.Opacity>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Border.BorderThickness>
                <Binding Path="SelectionState">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="0,0,1,0">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Focused" Value="0" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
        </Border>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
        <Border x:Name="border" Background="Transparent" BorderThickness="1,0,1,0" Margin="0,0,0,-1" BorderBrush="White">
            <Border Background="#FF6E6E6E">
                <Border.Visibility>
                    <Binding Path="View.ShowVerticalLines">
                        <Binding.Converter>
                            <dx:BoolToVisibilityConverter />
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
            </Border>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=AutoFilterRowItemTemplate}">
        <dxg:FilterCellContentPresenter RowData="{Binding RowData}" IsFocusedCell="{Binding Path=IsFocusedCell}" Column="{Binding Path=Column}" dxg:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.VisibleIndex)}" Style="{Binding Path=Column.ActualAutoFilterRowCellStyle}" HasRightSibling="{Binding Path=Column.HasRightSibling}" HasLeftSibling="{Binding Path=Column.HasLeftSibling}" ShowVerticalLines="{Binding Path=Column.View.ShowVerticalLines}" Width="{Binding Path=Column.ActualAdditionalRowDataWidth}" SelectionState="{Binding Path=SelectionState}" ShowHorizontalLines="{Binding Path=Column.View.ShowHorizontalLines}" HasTopElement="{Binding Path=Column.HasTopElement}" ColumnPosition="{Binding Path=Column.ColumnPosition}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=NewItemRowItemTemplate}">
        <dxg:NewItemRowCellContentPresenter RowData="{Binding RowData}" IsFocusedCell="{Binding Path=IsFocusedCell}" Column="{Binding Path=Column}" dxg:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.VisibleIndex)}" Style="{Binding Path=Column.ActualNewItemRowCellStyle}" HasRightSibling="{Binding Path=Column.HasRightSibling}" HasLeftSibling="{Binding Path=Column.HasLeftSibling}" ShowVerticalLines="{Binding Path=Column.View.ShowVerticalLines}" Width="{Binding Path=Column.ActualAdditionalRowDataWidth}" SelectionState="{Binding Path=SelectionState}" ShowHorizontalLines="{Binding Path=Column.View.ShowHorizontalLines}" HasTopElement="{Binding Path=Column.HasTopElement}" ColumnPosition="{Binding Path=Column.ColumnPosition}" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=ScrollViewerTemplate}">
        <!--ONLY SL <dxg:ScrollViewerContentDecorator View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">ONLY SL-->
        <Grid ClipToBounds="True" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:BestFitDecorator x:Name="PART_BestFitControlDecorator" Width="0" Height="0" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxg:GridControl.CurrentViewChangedListener>
                    <dxg:BestFitControlDecoratorInitializer />
                </dxg:GridControl.CurrentViewChangedListener>
            </dx:BestFitDecorator>
            <!--ONLY SL 
            <dx:PopupContainer x:Name="PART_PopupContainerDecorator" 
                               dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxg:GridControl.CurrentViewChangedListener>
                    <dxg:PopupContainerDecoratorInitializer/>
                </dxg:GridControl.CurrentViewChangedListener>
            </dx:PopupContainer>ONLY SL-->
            <dxg:GroupPanelControl x:Name="PART_GroupPanel" Grid.Row="1" Visibility="Collapsed" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
            </dxg:GroupPanelControl>
            <dxgcore:AdditionalRowItemsControl Grid.Row="4" Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RowPresenterGridMargin}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxg:AutoFilterRowControl x:Name="PART_FilterRow" DataContext="{Binding Path=(dxg:GridControl.CurrentView).AutoFilterRowData, RelativeSource={RelativeSource TemplatedParent}}" RowTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FilterRowTemplate}}" ItemTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=AutoFilterRowItemTemplate}}" IndicatorWidth="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowAutoFilterRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                <dxg:NewItemRowControl x:Name="PART_NewItemRow" Visibility="Collapsed" DataContext="{Binding Path=(dxg:GridControl.CurrentView).NewItemRowData, RelativeSource={RelativeSource TemplatedParent}}" RowTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=NewItemRowTemplate}}" ItemTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=NewItemRowItemTemplate}}" IndicatorWidth="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:NewItemRowInitializer />
                    </dxg:GridControl.CurrentViewChangedListener>
                </dxg:NewItemRowControl>
            </dxgcore:AdditionalRowItemsControl>
            <Border Width="1" HorizontalAlignment="Left" Grid.Row="4" Background="#FF6E6E6E" Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Grid Grid.Row="5" Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RowPresenterGridMargin}}" x:Name="rowPresenterGrid" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dx:ScrollBarExtensions.ScrollBehavior>
                    <Binding Path="(dxg:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
                        </Binding.Converter>
                    </Binding>
                </dx:ScrollBarExtensions.ScrollBehavior>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <ContentPresenter x:Name="PART_FootersPanel" Grid.Row="2" Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).FooterTemplate, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(dxg:GridControl.CurrentView).VerticalScrollBarWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FootersPanelMarginConverter}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <!--BEGIN WPF-->
                    <Grid.ColumnSpan>2</Grid.ColumnSpan>
                    <!--END WPF-->
                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:TotalSummaryPanelTableViewHitTestAcceptor />
                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                </ContentPresenter>

                <Grid Background="White" Grid.Row="1">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <mvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <mvvm:MapItem Source="TouchOverlap" Target="2" />
                                </mvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=IndicatorMargin}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}">

                    </ContentControl>
                    <ScrollContentPresenter Grid.Row="1" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding Path=(dxg:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgcore:FocusRectPresenter.IsVerticalScrollHost>True</dxgcore:FocusRectPresenter.IsVerticalScrollHost>
                        <!--BEGIN WPF-->
                        <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
                        <ScrollContentPresenter.Name>PART_ScrollContentPresenter</ScrollContentPresenter.Name>
                        <!--END WPF-->
                        <!--ONLY SL<ScrollContentPresenter.Name>ScrollContentPresenter</ScrollContentPresenter.Name>ONLY SL-->
                        <dxg:GridControl.CurrentViewChangedListener>
                            <dxg:ScrollContentPresenterInitializer />
                        </dxg:GridControl.CurrentViewChangedListener>

                        <ScrollContentPresenter.Content>
                            <dxg:DataPresenter x:Name="dataPresenter" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataPresenterTemplate}}" />
                        </ScrollContentPresenter.Content>
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:DataAreaTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollContentPresenter>
                    <ContentControl Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                            </ControlTemplate>
                        </ContentControl.Template>
                        <ContentControl.Visibility>
                            <Binding Path="(dxg:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.Visibility>
                        <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxg:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxg:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ContentControl>
                    <dxg:FixedGroupsAdorner Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ParentControl="{Binding Content, ElementName=dataPresenter}" FixedElements="{Binding Content.FixedElements, ElementName=dataPresenter}" />
                </Grid>

                <ScrollBar HorizontalAlignment="Right" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1">
                    <!--ONLY SL<ScrollBar.IsEnabled>
                    <Binding Path="(dxg:GridControl.CurrentView).ValidationError" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dxg:ValidationErrorToIsEnabledConverter/>
                        </Binding.Converter>
                    </Binding>
                    </ScrollBar.IsEnabled>
                    <Grid.Column>1</Grid.Column>
                    <Grid.RowSpan>3</Grid.RowSpan>
                    ONLY SL-->
                    <!--BEGIN WPF-->
                    <ScrollBar.Name>PART_VerticalScrollBar</ScrollBar.Name>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:VerticalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>               
                    <!--END WPF-->
                    <!--ONLY SL<ScrollBar.Name>VerticalScrollBar</ScrollBar.Name>ONLY SL-->

                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:VerticalScrollBarBlendCustomizationExtension />
                    </dxg:GridControl.CurrentViewChangedListener>
                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:VerticalScrollBarTableViewHitTestAcceptor />
                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                </ScrollBar>
                <Grid x:Name="gridTouchModeDataNavigator" VerticalAlignment="Stretch" Grid.Row="4" Background="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBackground}}" Visibility="Collapsed" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="borderUpDataNavigatorTouch" Grid.Column="0" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TotalSummaryBorderBrush}}" BorderThickness="0" />
                    <dxg:DataNavigator Grid.Column="1" Height="{Binding Height, ElementName=PART_HorizontalScrollBar}" x:Name="PART_DataNavigationScrollTouchMode" HorizontalAlignment="Right" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>

                <Grid x:Name="gridScroll" VerticalAlignment="Bottom" Margin="{DynamicResource ResourceKey={dxgt:TableViewThemeKey ResourceKey=HorizontalScrollbarMargin}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--ONLY SL
                    <Grid.Row>3</Grid.Row>
                    ONLY SL-->
                    <!--BEGIN WPF-->
                    <Grid.Row>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:HorizontalScrollBarRowConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.Row>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:HorizontalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <Grid.ColumnSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:HorizontalScrollBarGridColumnSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.ColumnSpan>
                    <!--END WPF-->
                    <Border x:Name="scrollLeftCorner" Width="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingCornerLeftStyle}}">
                        <!--BEGIN WPF-->
                        <Border.VerticalAlignment>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" />
                        </Border.VerticalAlignment>
                        <Border.BorderThickness>
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxg:HorizontalScrollBarLeftCornerBorderThicknessConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </Border.BorderThickness>
                        <!--END WPF-->
                        <Border.Visibility>
                            <!--BEGIN WPF-->
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowIndicator" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxg:HorizontalScrollBarIndicatorVisibilityConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                            <!--END WPF-->
                            <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                        </Border.Visibility>
                    </Border>
                    <Border Grid.Column="1" x:Name="scrollFixedLeftThumb" dxg:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedLeftThumbStyle}}">
                        <!--BEGIN WPF-->
                        <Border.VerticalAlignment>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" />
                        </Border.VerticalAlignment>
                        <Border.Width>
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).TotalGroupAreaIndent" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ActualShowDetailButtons" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ExpandDetailButtonWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxg:HorizontalScrollBarFixedLeftThumbWidthConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </Border.Width>
                        <!--END WPF-->
                        <Border.Visibility>
                            <!--BEGIN WPF-->
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxg:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                            <!--END WPF-->
                            <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                        </Border.Visibility>
                    </Border>
                    <Border Grid.Column="2" x:Name="scrollFixedLeftLine" Width="{Binding Path=(dxg:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedLineStyle}}" dxg:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}">
                        <!--BEGIN WPF-->
                        <Border.VerticalAlignment>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" />
                        </Border.VerticalAlignment>
                        <!--END WPF-->
                        <Border.Visibility>
                            <!--BEGIN WPF-->
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxg:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                            <!--END WPF-->
                            <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                        </Border.Visibility>
                    </Border>
                    <Border Grid.Column="4" x:Name="scrollFixedRightLine" Width="{Binding Path=(dxg:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedLineStyle}}" DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}">
                        <!--BEGIN WPF-->
                        <Border.VerticalAlignment>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" />
                        </Border.VerticalAlignment>
                        <!--END WPF-->
                        <Border.Visibility>
                            <!--BEGIN WPF-->
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxg:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                            <!--END WPF-->
                            <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                        </Border.Visibility>
                    </Border>
                    <Border Grid.Column="5" x:Name="scrollFixedRightThumb" Width="{Binding Path=(dxg:GridControl.CurrentView).FixedRightContentWidth, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedRightThumbStyle}}" dxg:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}">
                        <!--BEGIN WPF-->
                        <Border.VerticalAlignment>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" />
                        </Border.VerticalAlignment>
                        <!--END WPF-->
                        <Border.Visibility>
                            <!--BEGIN WPF-->
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />                                    
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxg:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                            <!--END WPF-->
                            <!--ONLY SL
                        <Visibility>Collapsed</Visibility>
                        ONLY SL-->
                        </Border.Visibility>
                    </Border>

                    <Grid Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        
                        <ScrollBar Orientation="Horizontal" Grid.Column="0" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <!--ONLY SL<ScrollBar.IsEnabled>
                        <Binding Path="(dxg:GridControl.CurrentView).ValidationError" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxg:ValidationErrorToIsEnabledConverter/>
                            </Binding.Converter>
                        </Binding>
                        </ScrollBar.IsEnabled>
                        ONLY SL-->
                        <!--BEGIN WPF-->
                        <ScrollBar.Name>PART_HorizontalScrollBar</ScrollBar.Name>
                        <!--END WPF-->
                        <!--ONLY SL<ScrollBar.Name>HorizontalScrollBar</ScrollBar.Name>ONLY SL-->
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:HorizontalScrollBarTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>

                        <dxg:DataNavigator Height="{Binding Height, ElementName=PART_HorizontalScrollBar}" Grid.Column="1" x:Name="PART_DataNavigation" Visibility="Visible" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />

                    </Grid>

                </Grid>

                <Border Grid.Row="3" Grid.Column="1" x:Name="PART_HorizontalScrollCorner" dxg:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridScrollBarHelper.ExtendScrollBarToFixedColumns="{Binding Path=(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingCornerStyle}}">
                    <!--BEGIN WPF-->
                    <Border.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxg:FitContentContainerConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Border.Visibility>
                    <dxg:GridScrollBarHelper.HasFixedRightColumns>
                        <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <mvvm:ObjectToObjectConverter DefaultTarget="True">
                                    <mvvm:ObjectToObjectConverter.Map>
                                        <mvvm:MapItem Source="0" Target="False" />
                                    </mvvm:ObjectToObjectConverter.Map>
                                </mvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </dxg:GridScrollBarHelper.HasFixedRightColumns>
                    <!--END WPF-->
                </Border>
                <Grid Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" IsHitTestVisible="False" Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Path x:Name="LeftBottomCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 754,628L 754,629C 754,630.657 755.343,632 757,632L 758,632L 758,633L 753,633L 753,628L 754,628 Z " Height="5" Margin="0,0,0,-1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" />
                    <Path x:Name="RightBottomCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 773,624L 773,625C 773,626.657 771.657,628 770,628L 769,628L 769,629L 774,629L 774,624L 773,624 Z " Height="5" Margin="0,0,0,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="5" />
                </Grid>
                <Border Background="#FF6E6E6E" Width="1" HorizontalAlignment="Left" Grid.RowSpan="2" Grid.Row="1" Margin="0,0,0,3" Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Border BorderBrush="Transparent" BorderThickness="0,1,0,0" Margin="0,-1,0,0" Grid.Row="2" VerticalAlignment="Top" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Grid x:Name="TopRoundCorners" IsHitTestVisible="False" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Top" RenderTransform="1,0,0,-1,0,1" RenderTransformOrigin="0.5,0.5" Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Path x:Name="LeftTopCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 754,628L 754,629C 754,630.657 755.343,632 757,632L 758,632L 758,633L 753,633L 753,628L 754,628 Z " Height="5" Margin="0,0,0,-1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" />
                <Path x:Name="RightTopCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 773,624L 773,625C 773,626.657 771.657,628 770,628L 769,628L 769,629L 774,629L 774,624L 773,624 Z " Height="5" Margin="0,0,0,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="5" />
            </Grid>
            <Border Background="#FF6E6E6E" Height="1" Margin="3,0,3,0" Grid.Row="0" Grid.RowSpan="6" VerticalAlignment="Top" Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Border Background="#FF6E6E6E" Width="1" HorizontalAlignment="Right" Grid.RowSpan="3" Grid.Row="3" Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Border BorderBrush="#FF6E6E6E" BorderThickness="1,0,1,1" Height="3" Grid.Row="0" Grid.RowSpan="6" VerticalAlignment="Bottom" Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <ContentControl Grid.Row="0" x:Name="part_SearchControlContainer" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelContentTemplate}}" />

            <dxg:BandsContainerControl x:Name="PART_BandsContainer" Grid.Row="2" Visibility="Collapsed" BandsLayout="{Binding Path=(dxg:GridControl.CurrentView).DataControl.BandsLayout, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxg:GridViewHitInfoBase.HitTestAcceptor>
                    <dxght:BandHeaderPanelTableViewHitTestAcceptor />
                </dxg:GridViewHitInfoBase.HitTestAcceptor>
                <dxg:GridControl.CurrentViewChangedListener>
                    <dxg:BandsContainerInitializer />
                </dxg:GridControl.CurrentViewChangedListener>
            </dxg:BandsContainerControl>

            <ContentPresenter Name="PART_HeadersPanel" Grid.Row="3" Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(dxg:GridControl.CurrentView).HeaderPanelMinHeight, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxg:GridControl.CurrentViewChangedListener>
                    <dxg:HeadersPanelInitializer />
                </dxg:GridControl.CurrentViewChangedListener>
                <dxg:GridViewHitInfoBase.HitTestAcceptor>
                    <dxght:ColumnHeaderPanelTableViewHitTestAcceptor />
                </dxg:GridViewHitInfoBase.HitTestAcceptor>
            </ContentPresenter>

            <dxg:OuterBorderElement Grid.Row="4" Grid.RowSpan="2" x:Name="outerBorder" ShowColumnHeaders="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
            
            <dxg:FixedTotalSummaryContainerControl Grid.Row="6" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowFixedTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridPopupMenu.GridMenuType="FixedTotalSummary">
            </dxg:FixedTotalSummaryContainerControl>

            <dxg:FilterPanelContainer Grid.Row="7" x:Name="PART_FilterPanelContainer" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
            <!--<dxg:FilterPanelControl Grid.Row="6" x:Name="PART_FilterPanel" DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=ActualShowFilterPanel, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->

            <dxgcore:FocusRectPresenter x:Name="PART_FocusRectPresenter" Grid.RowSpan="8" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" VerticalAlignment="Top" />        
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="gridTouchModeDataNavigator" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_DataNavigation" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="borderUpDataNavigatorTouch" Property="BorderThickness" Value="0,1,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="gridTouchModeDataNavigator" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_DataNavigation" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
        <!--ONLY SL </dxg:ScrollViewerContentDecorator>ONLY SL-->
    </ControlTemplate>    

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" Background="#FFFFFFFF" MinHeight="32">
            <Border.BorderThickness>
                <Binding Path="FooterPosition">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Top" Value="0,0,0,1" />
                                <dx:EnumObjectProvider x:Key="Bottom" Value="0,0,0,1" />
                                <dx:EnumObjectProvider x:Key="Middle" Value="0,0,0,1" />
                                <dx:EnumObjectProvider x:Key="Single" Value="0,0,0,1" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
            <ContentPresenter Margin="0,2,0,2" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryControlTemplate}">
        <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
            <Grid Margin="{TemplateBinding Padding}" Name="rootGrid">
                <!--BEGIN WPF-->
                <Grid.Visibility>
                    <Binding Path="HasSummary">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="Visible" FalseValue="Hidden" />
                        </Binding.Converter>
                    </Binding>
                </Grid.Visibility>
                <!--END WPF-->
                <!--ONLY SL
                <Grid.Opacity>
                    <Binding Path="HasSummary">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="1" FalseValue="0"/>
                        </Binding.Converter>
                    </Binding>
                </Grid.Opacity>
                ONLY SL-->
                <Border Background="#FFFFFFFF" BorderBrush="#FFD3D3D3" CornerRadius="2" BorderThickness="1" MinHeight="22" Margin="1,1,2,1">
                    <dx:DataContentPresenter Style="{Binding Path=Column.View.GroupFooterSummaryContentStyle}" Content="{Binding}" ContentTemplateSelector="{Binding Path=Column.View.ActualGroupFooterSummaryItemTemplateSelector}" />
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryContentStyle}" TargetType="{x:Type dx:DataContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!--BEGIN WPF-->
        <Setter Property="TextBlock.Foreground" Value="White" />
        <!--END WPF-->
        <!--ONLY SL<Setter Property="Foreground" Value="White"/>ONLY SL-->
        <Setter Property="Margin" Value="4,1,4,1" />
    </Style>

    <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryContentStyle}" TargetType="{x:Type dxg:GroupBandSummaryControl}">
        <Setter Property="Padding" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryPadding}}" />
        <Setter Property="NormalBorderBrush" Value="#FF797979" />
        <Setter Property="FocusedBorderBrush" Value="#FF797979" />
        <Setter Property="NormalForeground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
        <Setter Property="FocusedForeground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
        <Setter Property="NormalBackground" Value="Transparent" />
        <Setter Property="FocusedBackground" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:GroupColumnSummaryControl}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" MinHeight="22">
                        <Border.Margin>
                            <Binding Path="HasTopElement" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter TrueValue="0,0,2,2" FalseValue="0,2,2,2" />
                                </Binding.Converter>
                            </Binding>
                        </Border.Margin>
                        <ContentPresenter x:Name="PART_Content" Margin="4,1,4,1" Content="{Binding}" ContentTemplate="{Binding View.GroupColumnSummaryItemTemplate}" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryItemTemplate}">
        <TextBlock Foreground="#FF000000" Text="{Binding Value}" Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}" />
    </DataTemplate>

    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=EditFormBackground}" Color="#FFF7F7F7" />

</ResourceDictionary>