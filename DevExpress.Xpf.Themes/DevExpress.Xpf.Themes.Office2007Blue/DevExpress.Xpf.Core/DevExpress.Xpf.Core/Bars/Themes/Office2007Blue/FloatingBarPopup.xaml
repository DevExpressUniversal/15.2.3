<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal">

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
		<Grid x:Name="grid" Margin="3"   SnapsToDevicePixels="True">
			<Border  Margin="5,5,0,0" x:Name="shadow"    Opacity="0.15" Background="#FF000000 " CornerRadius="2" />
			<Border Margin="3" x:Name="windowBorder" Background="#FF3764A0 " Padding="3">
				<Border x:Name="window"   Background="#FFC2DCFF " Padding="1">
					<Border Background="#FFBFDBFF ">
						<ContentPresenter Content="{TemplateBinding Content}" />
					</Border>
				</Border>
			</Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="AppType">
                    <VisualState x:Name="Standalone" />
                    <VisualState x:Name="BrowserHosted">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="shadow" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="Margin" dxcn:ValueSetter.Thickness="0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="windowBorder" Storyboard.TargetProperty="Margin" dxcn:ValueSetter.Thickness="0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Margin" dxcn:ValueSetter.Thickness="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
	<ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionBackgroundTemplate}" TargetType="{x:Type ContentControl}">
		<!--ONLY SL<Border Margin="0,0,0,0"   Background="{DynamicResource BaseBrush#FF3764A0}" CornerRadius="0,0,0,0">ONLY SL-->
        <!--BEGIN WPF-->
        <Border Cursor="SizeAll" Background="#FF3764A0 ">
        <!--END WPF-->
            <ContentPresenter Content="{TemplateBinding Content}" />
		</Border>
	</ControlTemplate>
    <!--BEGIN WPF-->
	<ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=SizeGripTemplate}" TargetType="{x:Type Thumb}">
		<Border Background="#00000000 "  HorizontalAlignment="Right" Width="2" />
	</ControlTemplate>
    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=ContentTemplate}" TargetType="{x:Type dxb:FloatingBarPopupContentControl}">
        <ContentControl Template="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=BorderTemplate}}" x:Name="PART_Border">
            <StackPanel  >
                <ContentControl Template="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionBackgroundTemplate}}" x:Name="PART_Caption">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition  />
                        </Grid.ColumnDefinitions>
                        <dxb:DragWidget x:Name="PART_DragWidget" Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=DragWidgetStyle}}" Grid.ColumnSpan="2" OwnerPoint="0,0" />
                        <Border ClipToBounds="True">
                            <TextBlock Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionStyle}}" Grid.Column="0" Grid.ColumnSpan="3" Text="{Binding Path=DataContext.Caption, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <Button x:Name="PART_CloseButton" Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonStyle}}" Grid.Column="1" VerticalAlignment="Top" />
                    </Grid>
                </ContentControl>
                <Grid Grid.Row="1">
                    <dxb:FloatingBarContainerControl x:Name="PART_FloatingBarContainer" />
                    <Thumb HorizontalAlignment="Right" x:Name="PART_SizeGrip" Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=SizeGripStyle}}" />
                </Grid>
            </StackPanel>
        </ContentControl>
    </ControlTemplate>
    <!--END WPF-->
    <SolidColorBrush x:Key="CloseButtonGlyphBrushHover" Color="#FF000000 " />

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonTemplate}" TargetType="{x:Type Button}">
		<Grid Margin="2" x:Name="close_button">
			<Border x:Name="hover"  Opacity="0" Background="#FFFFBD69 " Padding="1">
				<Border   Opacity="1" Background="#FFFFE7A2 " CornerRadius="0,0,0,0" />
			</Border>
			<Border x:Name="pressed"  Opacity="0" Background="#FFFB8C3C " Padding="1">
				<Border   Opacity="1" Background="#FFFB8C3C " CornerRadius="0,0,0,0" />
			</Border>
			<Border Cursor="Hand" Margin="0,0,0,0" x:Name="glyph" Width="17" Height="17" Background="#00FFFEFE ">
				<Path Stretch="Fill" Fill="#FFFFFFFF " Data="F1 M 1222,760L 1224,760L 1220.5,763.5L 1224,767L 1222,767L 1219.5,764.5L 1217,767L 1215,767L 1218.5,763.5L 1215,760L 1217,760L 1219.5,762.5L 1222,760 Z " Width="9" Height="7" x:Name="path" />
			</Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible"/>
                            <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource CloseButtonGlyphBrushHover}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible"/>
                            <DoubleAnimation Storyboard.TargetName="pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource CloseButtonGlyphBrushHover}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
		</Grid>
	</ControlTemplate>
	<Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="IsHitTestVisible" Value="False" />
		<Setter Property="Foreground" Value="#FFFFFFFF " />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="Margin" Value="3" />
	</Style>
	<Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}">
		<Setter Property="Template" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonTemplate}}" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonTemplate}" TargetType="{x:Type Button}">
		<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
	</ControlTemplate>
	<Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonStyle}" TargetType="{x:Type Button}">
		<Setter Property="Template" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonTemplate}}" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Content" Value="Y" />
		<Setter Property="Foreground" Value="White" />
	</Style> 
</ResourceDictionary>