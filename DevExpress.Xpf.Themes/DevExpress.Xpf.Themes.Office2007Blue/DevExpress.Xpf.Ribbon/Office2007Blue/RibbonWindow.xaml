<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"                                    
                    >        
    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <Thickness x:Key="{dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}">6</Thickness>
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerCaptionTemplate}">
        <Grid>
            <dxb:ContentViewport KeepPositiveLeftContentPosition="True" ClipToBounds="True">
                <TextBlock x:Name="TitleTextBlock"
                    Foreground="#FF33548B"
                    Text="{Binding}"
                    TextWrapping="Wrap"
                    Margin="6,3,6,3"
                    VerticalAlignment="Center"
                    IsHitTestVisible="False"
                    HorizontalAlignment="Center" />
            </dxb:ContentViewport>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"/>
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22" /> 
        <Setter Property="Height" Value="22" /> 
        <Setter Property="Template" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}}"/>
    </Style>
    
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}}" />
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}"     TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}"        TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}"      TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}}"/>
        

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}" TargetType="{x:Type dxr:RibbonShowModeSelectorItem}">
        <Grid x:Name="Button" Width="22" Height="22" Background="#00FFFEFE ">
            <Border x:Name="hoveredState" Visibility="Hidden" Background="#FF9CB8D7 " CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF8FBFF " Offset="0" />
                            <GradientStop Color="#FFF6FAFE " Offset="1" />
                            <GradientStop Color="#FFDAE9FA " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF4F8FF " Offset="0" />
                                <GradientStop Color="#FFEFF5FD " Offset="1" />
                                <GradientStop Color="#FFE5F0FE " Offset="0.5" />
                                <GradientStop Color="#FFD6E7FC " Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="pressedState" Visibility="Hidden" Background="#FF9CB8D7 " CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC1D7F4 " Offset="0" />
                            <GradientStop Color="#FFDBE4EE " Offset="1" />
                            <GradientStop Color="#FFDAE9FA " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD4E2FB " Offset="0" />
                                <GradientStop Color="#FFE3EBF5 " Offset="1" />
                                <GradientStop Color="#FFCEDBEC " Offset="0.5" />
                                <GradientStop Color="#FFC0D4EC " Offset="0.5" />
                                <GradientStop Color="#FFD9E3F4 " Offset="0.1" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Grid x:Name="Glyph"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Width="10" Height="10">
                <Path Stretch="Fill" Fill="#FF7C90AC" Data="F1 M 1,1L 9,1L 9,2L 5,2L 9,6L 6,6L 6,9L 4,9L 4,6L 1,6L 5,2L 1,2L 1,1 Z " Width="8" Height="8" />           
            </Grid>            
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hoveredState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressedState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Button" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid x:Name="Button" Background="#00FFFEFE ">
            <Border x:Name="hoveredState" Visibility="Hidden" Background="#FF9CB8D7 " CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF8FBFF " Offset="0" />
                            <GradientStop Color="#FFF6FAFE " Offset="1" />
                            <GradientStop Color="#FFDAE9FA " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF4F8FF " Offset="0" />
                                <GradientStop Color="#FFEFF5FD " Offset="1" />
                                <GradientStop Color="#FFE5F0FE " Offset="0.5" />
                                <GradientStop Color="#FFD6E7FC " Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="pressedState" Visibility="Hidden" Background="#FF9CB8D7 " CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC1D7F4 " Offset="0" />
                            <GradientStop Color="#FFDBE4EE " Offset="1" />
                            <GradientStop Color="#FFDAE9FA " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD4E2FB " Offset="0" />
                                <GradientStop Color="#FFE3EBF5 " Offset="1" />
                                <GradientStop Color="#FFCEDBEC " Offset="0.5" />
                                <GradientStop Color="#FFC0D4EC " Offset="0.5" />
                                <GradientStop Color="#FFD9E3F4 " Offset="0.1" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Grid x:Name="Glyph"
                  HorizontalAlignment="Right" VerticalAlignment="Center"
                  Width="13" Height="9" Margin="9,0,9,0">
                <Path Stretch="Fill" Fill="#FF7C90AC" Data="F1 M 1,1L 4,1L 4,4L 1,4L 1,1 Z M 5,1L 8,1L 8,4L 5,4L 5,1 Z M 9,1L 12,1L 12,4L 9,4L 9,1 Z " Width="11" Height="3" Margin="1" VerticalAlignment="Bottom" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hoveredState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressedState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Button" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBorder" Background="#FF97A5B7" CornerRadius="0" Padding="1,1,1,1">
            <Border x:Name="FloatingContainerBackground" Background="#FFDFEBFA" CornerRadius="0">
                <ContentPresenter />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBorder" Value="#FFAEBCCE" />
                <Setter Property="Background" TargetName="FloatingContainerBackground" Value="#FFE3E8EF" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxr:RibbonControlHelper.IsAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Padding" TargetName="FloatingContainerBorder" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="PART_Header" CornerRadius="0">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFDDE8F5" Offset="0" />
                    <GradientStop Color="#FFDFEBFA" Offset="1" />
                    <GradientStop Color="#FFD2E0F0" Offset="0.2" />
                    <GradientStop Color="#FFC9D9EE" Offset="0.2" />
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="PART_Header" Value="#FFE3E8EF" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBody" Background="#FF97A5B7" Padding="1,1,1,1">
            <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                <ContentPresenter />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBody" Value="#FFAEBCCE" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="4,0,4,4" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}" TargetType="{x:Type ContentControl}">
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="2" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="6,3,6,3" />
        <Setter Property="Foreground" Value="#FF294C82" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="6,3,0,3" /> 
        <Setter Property="Stretch" Value="None" />
    </Style>
</ResourceDictionary>