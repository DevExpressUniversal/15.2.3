<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys">
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid Background="Transparent" SnapsToDevicePixels="True">
            <Border x:Name="HoverHighlight"
                    Width="14" Height="14" Opacity="0">
                <Border.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="#FF1CC4F7"/>
                        <GradientStop Color="#001CC4F7" Offset="1"/>
                    </RadialGradientBrush>
                </Border.Background>
            </Border>
            <Grid x:Name="GlyphClose"
                  Width="7" Height="7" Margin="1,0,0,1">
                <Path x:Name="GlyphClosePath1"
                      Stretch="Fill" Fill="#FF303336"
                      Data="F1 M 15.8421,49L 8.88364,49L 7.90432,48.0207L 7.90432,40.9152L 15.8421,49 Z"/>
                <Path x:Name="GlyphClosePath2"
                      Stretch="Fill" Fill="#FF303336"
                      Data="F1 M 15.8421,49L 8.88364,49L 7.90432,48.0207L 7.90432,40.9152L 15.8421,49 Z"/>
                <Path x:Name="GlyphClosePath3"
                      Stretch="Fill" Fill="#FF87898A"
                      Data="F1 M 8.75877,48L 8.75877,43.0409L 13.7593,48.0415L 8.75877,48 Z" Margin="1,2,2,1"/>
            </Grid>
            <Grid x:Name="GlyphOpen"
                  Width="5" Height="10" Margin="0,0,1,0"
                  Visibility="Hidden">
                <Path x:Name="GlyphOpenPath1"
                      Stretch="Fill" Fill="#FF818181"
                      Data="F1 M 29,36.0956L 29,46.0956L 24,41.0956L 29,36.0956 Z"/>
                <Path x:Name="GlyphOpenPath2"
                      Stretch="Fill" Fill="#FF818181"
                      Data="F1 M 29,36.0956L 29,46.0956L 24,41.0956L 29,36.0956 Z"/>
                <Path x:Name="GlyphOpenPath3"
                      Stretch="Fill" Fill="#FFF8F8F8"
                      Data="F1 M 28,38.0956L 28,44.0956L 25,41.0956L 28,38.0956 Z" Margin="1,2,1,2"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="GlyphClosePath1" Property="Fill" Value="#FF1CC4F7"/>
                <Setter TargetName="GlyphClosePath2" Property="Fill" Value="#FF1CC4F7"/>
                <Setter TargetName="GlyphClosePath3" Property="Fill" Value="#FFCDEEFB"/>
                <Setter TargetName="GlyphOpenPath1" Property="Fill" Value="#FF1CC4F7"/>
                <Setter TargetName="GlyphOpenPath2" Property="Fill" Value="#FF1CC4F7"/>
                <Setter TargetName="GlyphOpenPath3" Property="Fill" Value="#FFCDEEFB"/>
                <Setter TargetName="HoverHighlight" Property="Opacity" Value="0.15"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Visibility" TargetName="GlyphOpen" Value="Visible"/>
                <Setter Property="Visibility" TargetName="GlyphClose" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"/>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="Shadow" Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#14000000" Offset="0"/>
                        <GradientStop Color="#40000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="Focus" Background="#FF66CCFF" Margin="-2" Opacity="0" />
            <Border Background="#FF979797" Margin="1" Padding="1" Grid.RowSpan="1">
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Shadow" Property="Opacity" Value="0.25"/>
                <Setter TargetName="Shadow" Property="Opacity" Value="0.35"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.Foreground" Value="#FF000000"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,3,0"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="11"/>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="11,3,11,3"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="Root" Background="#FFF0F0F0" BorderBrush="#FFD6D6D6" BorderThickness="0,1,0,0">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="#FF93C9E3"/>
                <Setter TargetName="Root" Property="Background" Value="#FFFAFAFA"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(dxg:GridViewBase.IsFocusedRow), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Root" Property="BorderBrush" Value="#FFD6D6D6"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter TargetName="Root" Property="Background" Value="#FFFAFAFA"/>
            </DataTrigger>            
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False"/> 
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Background="White">
            <Border x:Name="Root" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                        <GradientStop Color="#FFE9E9E9" Offset="1"/>
                        <GradientStop Color="#FFF1F1F1" Offset="0.5"/> 
                        <GradientStop Color="#FFE8E8E8" Offset="0.5"/> 
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <ContentPresenter/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="dxg:FadeSelectionHelper.Opacity" TargetName="Root" Value="1"/>
                <Setter Property="Background" TargetName="Root">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE3F7FF" Offset="0"/> 
                            <GradientStop Color="#FFB7E7FB" Offset="1"/>
                            <GradientStop Color="#FFE3F7FF" Offset="0.5"/>
                            <GradientStop Color="#FFBDEDFF" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="Background" TargetName="Root">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFECF7FC" Offset="0"/>
                            <GradientStop Color="#FFCFEAF5" Offset="1"/>
                            <GradientStop Color="#FFECF7FC" Offset="0.5"/>
                            <GradientStop Color="#FFD3EEF8" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="dxg:FadeSelectionHelper.Opacity" TargetName="Root" Value="1"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card"
                        Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}"
                        Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0"
                                        Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}"/>
                            </ContentControl>
                            <ContentControl Grid.Column="1"
                                        Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}"/>
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}" />
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse" Value="True" TargetName="gridCardPanel"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>