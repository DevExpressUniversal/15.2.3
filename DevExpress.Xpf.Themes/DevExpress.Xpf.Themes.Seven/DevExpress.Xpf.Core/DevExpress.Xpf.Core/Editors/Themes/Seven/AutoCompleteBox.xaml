<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/AutoCompleteBox.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <SolidColorBrush x:Key="TokenBox.BorderBrush" Color="#FFA5A5A5" />
    <LinearGradientBrush x:Key="TokenBox.HighlightedBorder" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF4F4F4" Offset="0" />
        <GradientStop Color="#FFECECEC" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TokenBox.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEBEBEB" Offset="0" />
        <GradientStop Color="#FFE0E0E0" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TokenBox.Hover.BorderBrush" Color="#FF7DA2CE" />
    <LinearGradientBrush x:Key="TokenBox.Hover.HighlightedBorder" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEBF4FD" Offset="0" />
        <GradientStop Color="#FFDBEAFD" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TokenBox.Hover.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFDCEBFC" Offset="0" />
        <GradientStop Color="#FFC1DBFC" Offset="1" />
    </LinearGradientBrush>
    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=CellPresenterTemplate}" TargetType="{x:Type dxei:TokenEditorPresenter}">
        <Grid Background="Transparent">
            <Border UseLayoutRounding="True" Margin="1,1,0,1">
                <ContentControl Focusable="False" Template="{TemplateBinding BorderTemplate}"/>
            </Border>
            <dxei:CellEditor Focusable="False"/>
        </Grid>
    </ControlTemplate>
    
    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="grid">
            <Grid x:Name="default">
                <Border Background="{StaticResource TokenBox.BorderBrush}" Padding="1" CornerRadius="1" Opacity="0.5">
                    <Border Background="{StaticResource TokenBox.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="hover" Opacity="0">
                <Border Background="{StaticResource TokenBox.Hover.BorderBrush}" Padding="1" CornerRadius="1">
                    <Border Background="{StaticResource TokenBox.Hover.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Hover.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Opacity="0">
                <Border Background="{StaticResource TokenBox.Hover.BorderBrush}" Padding="1" CornerRadius="1">
                    <Border Background="{StaticResource TokenBox.Hover.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Hover.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="editable" Opacity="0">
            </Grid>
            <Grid x:Name="focused" Opacity="0">
                <Border Background="{StaticResource TokenBox.Hover.BorderBrush}" Padding="1" CornerRadius="1">
                    <Border Background="{StaticResource TokenBox.Hover.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Hover.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="focusedunselected" Opacity="0">
                <Border Background="#00000000" BorderBrush="#FF66CCFF" BorderThickness="1" CornerRadius="1" />
                <Border Background="#00000000" BorderBrush="#FF66CCFF" BorderThickness="2" CornerRadius="1" Opacity="0.35" />
            </Grid>       
            <ContentPresenter/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="default"            Property="Opacity" Value="0" />
                <Setter TargetName="hover"              Property="Opacity" Value="1" />
                <Setter TargetName="pressed"            Property="Opacity" Value="0" />
                <Setter TargetName="editable"           Property="Opacity" Value="0" />
                <Setter TargetName="focused"            Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected"  Property="Opacity" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="default"            Property="Opacity" Value="0" />
                <Setter TargetName="hover"              Property="Opacity" Value="0" />
                <Setter TargetName="pressed"            Property="Opacity" Value="1" />
                <Setter TargetName="editable"           Property="Opacity" Value="0" />
                <Setter TargetName="focused"            Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected"  Property="Opacity" Value="0" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="default"            Property="Opacity" Value="0" />
                <Setter TargetName="hover"              Property="Opacity" Value="0" />
                <Setter TargetName="pressed"            Property="Opacity" Value="0" />
                <Setter TargetName="editable"           Property="Opacity" Value="0" />
                <Setter TargetName="focused"            Property="Opacity" Value="1" />
                <Setter TargetName="focusedunselected"  Property="Opacity" Value="0" />
            </MultiDataTrigger>     
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="focused"            Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected"  Property="Opacity" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="default"            Property="Opacity" Value="0" />
                <Setter TargetName="hover"              Property="Opacity" Value="0" />
                <Setter TargetName="pressed"            Property="Opacity" Value="0" />
                <Setter TargetName="editable"           Property="Opacity" Value="1" />
                <Setter TargetName="focused"            Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected"  Property="Opacity" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate> 
    
    
  

    <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=DeleteButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,2,0">
                        <Path x:Name="Path" Stretch="Fill" Fill="#FF4C6198" Data="F1 M 385,283L 386,283L 388,285L 390,283L 391,283L 391,284L 389,286L 391,288L 391,289L 390,289L 388,287L 386,289L 385,289L 385,288L 387,286L 385,284L 385,283 Z " Width="6" Height="6"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="#FF4C6198"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="#FF042271" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="#FF042271"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>