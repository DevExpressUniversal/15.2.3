<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Seven/Brushes.xaml" />
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/CheckEdit.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->
    
    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxTemplate}" TargetType="{x:Type dxe:CheckEditBox}">
        <Grid Background="Transparent" SnapsToDevicePixels="True">
            <Grid.Resources>
                <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiContentControl" Storyboard.TargetProperty="VisibleChildIndex" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="0.35" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="CheckBox" Storyboard.TargetProperty="Opacity" To="0.35" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="check" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IndeterminateState" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="CheckBox" Background="Transparent" Width="14" Height="14" Margin="0,3,0,3">
                    <!--ONLY SL
                    <Grid.RenderTransform>
                        <Binding Path="FlowDirection" Converter="{StaticResource EnumToObjectConverter}" RelativeSource="{RelativeSource TemplatedParent}" />
                    </Grid.RenderTransform>
                    ONLY SL-->
                    <Border x:Name="FocusElement" Margin="-1" Opacity="0" Background="#FF66CCFF" CornerRadius="1" />
                    <dxcn:MultiContentControl x:Name="MultiContentControl" VisibleChildIndex="0">
                        <Border Background="#FFF4F4F4" BorderBrush="#FF8E8F8F" BorderThickness="1">
                            <Border Margin="1" BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#FFAEB3B9" Offset="0" />
                                        <GradientStop Color="#FFE9E9EA" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#FFCBCFD5" Offset="0" />
                                        <GradientStop Color="#FFF6F6F6" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border Background="#FFDEF9FA" BorderBrush="#FF5586A3" BorderThickness="1">
                            <Border Margin="1" BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#FF79C6F9" Offset="0" />
                                        <GradientStop Color="#FFCFECFD" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#FFB1DFFD" Offset="0" />
                                        <GradientStop Color="#FFE7F7FE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                    </dxcn:MultiContentControl>
                    <Border x:Name="IndeterminateState" Background="#FF18354A" Width="10" Height="10" CornerRadius="1" Padding="1" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                        <Border>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFA0CDF2" Offset="0" />
                                    <GradientStop Color="#FF5AB6EA" Offset="1" />
                                    <GradientStop Color="#FF177FC7" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                    <Path x:Name="check" Fill="#FF4C6198" Stretch="Fill" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="10" Opacity="0" />
                </Grid>
                <ContentPresenter x:Name="contentPresenter" Margin="4,0,0,0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" Grid.Column="1" Visibility="{Binding HasContent, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="LayoutTransform" TargetName="CheckBox">
                    <Setter.Value>
                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="-1" ScaleY="1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}" BasedOn="{StaticResource BaseCheckEditBoxStyle}" TargetType="{x:Type dxe:CheckEditBox}">
        <Setter Property="FocusVisualStyle" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).FocusVisualStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxTemplate}}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}" BasedOn="{StaticResource BaseCheckEditBoxInplaceStyle}" TargetType="{x:Type dxe:CheckEditBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxTemplate}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Thickness x:Key="{dxet:CheckEditThemeKey ResourceKey=Padding}">0,1,0,1</Thickness>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=DisplayTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditTemplate}">
        <dxe:CheckEditBox
            x:Name="PART_Editor"
            Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=DisplayInplaceTemplate}">
        <dxe:CheckEditBox  
            x:Name="PART_Editor"
            Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}"
        />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditInplaceTemplate}">
        <dxe:CheckEditBox
            x:Name="PART_Editor"
            Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:CheckEdit}">
        <dxe:EditorControl x:Name="PART_Content" Grid.Column="0" Template="{TemplateBinding ActualEditorControlTemplate}">
            <!--ONLY SL
            <dxe:EditorControl.Resources>
                <dx:EnumToObjectConverter x:Key="EnumToObjectConverter">
                    <dx:EnumToObjectConverter.DefaultValue>
                        <HorizontalAlignment>Stretch</HorizontalAlignment>
                    </dx:EnumToObjectConverter.DefaultValue>
                    <dx:EnumToObjectConverter.Values>
                        <dx:EnumObjectProvider x:Key="InpaceActive">
                            <dx:EnumObjectProvider.Value>
                                <HorizontalAlignment>Center</HorizontalAlignment>
                            </dx:EnumObjectProvider.Value>
                        </dx:EnumObjectProvider>
                        <dx:EnumObjectProvider x:Key="InpaceInactive">
                            <dx:EnumObjectProvider.Value>
                                <HorizontalAlignment>Center</HorizontalAlignment>
                            </dx:EnumObjectProvider.Value>
                        </dx:EnumObjectProvider>
                    </dx:EnumToObjectConverter.Values>
                </dx:EnumToObjectConverter>
            </dxe:EditorControl.Resources>
            <dxe:EditorControl.HorizontalAlignment>
                <Binding Path="EditMode" RelativeSource="{RelativeSource TemplatedParent}" Converter="{StaticResource EnumToObjectConverter}"/>
            </dxe:EditorControl.HorizontalAlignment>
            ONLY SL-->
        </dxe:EditorControl>
        <ControlTemplate.Triggers>
            <Trigger Property="EditMode" Value="InplaceInactive">
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Trigger>
            <Trigger Property="EditMode" Value="InplaceActive">
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>