<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <ControlTemplate x:Key="DefaultWaitIndicator" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Glyph" RepeatBehavior="Forever" Duration="00:00:1" From="-32" To="32" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Border Background="{TemplateBinding BorderBrush}" CornerRadius="128">
                    <Grid Margin="{TemplateBinding BorderThickness}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="128"/>
                    </Grid>
                </Border>
                <Grid Margin="{TemplateBinding BorderThickness}" dx:FrameworkElementHelper.IsClipped="True" ClipToBounds="True">
                    <Path x:Name="Glyph" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 506,131L 522.898,131L 513,122L 518.097,122L 530.097,133L 518.097,144L 513.097,144L 522.916,135L 506,135L 506,131 Z " Width="24" Height="22" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ColumnWaitIndicator}" TargetType="{x:Type dx:ColumnWaitIndicator}">
        <Setter Property="IsHitTestVisible" Value="{Binding IsHitTestVisible, FallbackValue=true, TargetNullValue=true}" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="Background" Value="#FF333333" />
        <Setter Property="BorderBrush" Value="#FFF78A09" />
        <Setter Property="Foreground" Value="#FFF78A09" />
        <Setter Property="BorderThickness" Value="4" />
        <Setter Property="Margin" Value="12" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource DefaultWaitIndicator}" />
    </Style>
    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Border Background="#FF333333" BorderBrush="#FF515151" BorderThickness="1" cs:Name="Border_0002">
            <ContentPresenter />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}" TargetType="{x:Type dx:WaitIndicator}">
        <Grid x:Name="Root" Margin="{TemplateBinding ContentPadding}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Visibility">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.1" Duration="0:0:0.1" From="1" To="0" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:WaitIndicatorContainer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ProgressBar x:Name="progressBar" Background="#FF333333" BorderBrush="#FFF78A09" Foreground="#FFF78A09" BorderThickness="4" Margin="18,18,12,18" Width="40" Height="40" HorizontalAlignment="Center" VerticalAlignment="Center" Template="{StaticResource DefaultWaitIndicator}" IsIndeterminate="True" />
                    <ContentPresenter Grid.Column="1" Content="{TemplateBinding ActualContent}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" />
                </Grid>
            </dx:WaitIndicatorContainer>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}">
        <TextBlock Text="{Binding}" TextWrapping="Wrap" VerticalAlignment="Center" />
    </DataTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicatorContainer}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}}" />
        <Setter Property="Foreground" Value="#bfffffff" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicator}" TargetType="{x:Type dx:WaitIndicator}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}}" />
        <Setter Property="Padding" Value="0,0,18,0" />
        <Setter Property="ContentPadding" Value="25"/>
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="ContentTemplate" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}}" />
    </Style>
</ResourceDictionary>