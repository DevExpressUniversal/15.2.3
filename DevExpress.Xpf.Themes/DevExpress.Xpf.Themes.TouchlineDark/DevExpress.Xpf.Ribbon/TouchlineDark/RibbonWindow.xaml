<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <Thickness x:Key="{dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}">17</Thickness>
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerCaptionTemplate}">
        <Grid>
            <dxb:ContentViewport KeepPositiveLeftContentPosition="True" ClipToBounds="True">
                <TextBlock x:Name="TitleTextBlock" Foreground="#FFF78A09" Text="{Binding}" TextWrapping="Wrap" FontWeight="Light" FontSize="24" Margin="8,5,8,5" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" />
            </dxb:ContentViewport>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="44" />
        <Setter Property="Height" Value="44" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="44" />
        <Setter Property="Height" Value="44" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="44" />
        <Setter Property="Height" Value="44" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="44" />
        <Setter Property="Height" Value="44" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"/>
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="44" />
        <Setter Property="Height" Value="44" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}}"/>
    </Style>
    
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}}" />
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}"     TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}"        TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}"      TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}}"/>
            
    
    
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}" TargetType="{x:Type dxr:RibbonShowModeSelectorItem}">
        <Grid x:Name="Button" Background="#00000000" Margin="1,0,0,0" >
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Path" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFCACACA"  />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Path" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF828282"  />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Path" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="HoverState" Background="#FF333333" BorderBrush="#FF515151" BorderThickness="1" Opacity="0"  />
            <Border x:Name="PressedState" Background="#FF3C3C3C" BorderBrush="#FF515151" BorderThickness="1" Opacity="0"  />
            <Grid x:Name="Glyph" Width="16" Height="12" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8,0,8,0">
                <Path x:Name="Path" Stretch="Fill" Fill="#FFCACACA" Data="F1 M 0,0L 16,0L 16,12L 0,12L 0,0 Z M 15,11L 15,3L 8,3L 12,7L 12,9L 9,6L 9,11L 15,11 Z M 1,3L 1,11L 7,11L 7,6L 4,9L 4,7L 8,3L 1,3 Z M 15,1L 1,1L 1,2L 15,2L 15,1 Z " Width="16" Height="12"  />
            </Grid>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid x:Name="Button" Background="#00000000" Margin="1,0,0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Path" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFCACACA"  />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Path" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF828282"  />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Path" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="HoverState" Background="#FF333333" BorderBrush="#FF515151" BorderThickness="1" Opacity="0"  />
            <Border x:Name="PressedState" Background="#FF3C3C3C" BorderBrush="#FF515151" BorderThickness="1" Opacity="0"  />
            <Grid x:Name="Glyph" Width="15" Height="3" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0">
                <Path x:Name="Path" Stretch="Fill" Fill="#FFCACACA" Data="F1 M 1.5,0C 2.32843,0 3,0.671573 3,1.5C 3,2.32843 2.32843,3 1.5,3C 0.671573,3 -1.58946e-007,2.32843 -1.58946e-007,1.5C -1.58946e-007,0.671573 0.671573,0 1.5,0 Z M 7.5,2.38419e-007C 8.32843,2.38419e-007 9,0.671573 9,1.5C 9,2.32843 8.32843,3 7.5,3C 6.67157,3 6,2.32843 6,1.5C 6,0.671573 6.67157,2.38419e-007 7.5,2.38419e-007 Z M 13.5,0C 14.3284,0 15,0.671573 15,1.5C 15,2.32843 14.3284,3 13.5,3C 12.6716,3 12,2.32843 12,1.5C 12,0.671573 12.6716,0 13.5,0 Z " Width="15" Height="3"  />
            </Grid>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBorder" Background="#FF333333" BorderBrush="#FF111111" BorderThickness="1" cs:Name="Border_0002">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False" />
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsMaximized)}" Value="True" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="PART_Header" Background="#FF333333" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="PART_Header" Value="#FF333333" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBody" Background="#FF333333" cs:Name="Border_0004">
            <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                <ContentPresenter />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="30,0,30,30" />
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}" TargetType="{x:Type ContentControl}">
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="30,30,30,0" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="#bfffffff" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="30,30,30,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="Margin" Value="0,0,8,0" />
    </Style>
    
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerTemplate}">
        <Grid>
            <Border x:Name="FloatingContainerBorder" Background="#FF111111" cs:Name="Border_0005">
                <Border x:Name="FloatingContainerBackground" Background="#FF333333" Margin="1" cs:Name="Border_0006">
                    <Grid>
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Header" IsHitTestVisible="False" Height="{Binding Path=RenderSize.Height, ElementName=FloatingContainerHeaderContent}" Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="PART_CaptionContentPresenter" Grid.Column="0" Panel.ZIndex="100" Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <ContentPresenter x:Name="PART_RibbonCaptionContentPresenter" HorizontalAlignment="Left" Grid.Column="0" Panel.ZIndex="100" Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=RibbonFloatingContainerCaptionTemplate}}" Visibility="{Binding Path=IsRibbonCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <StackPanel x:Name="stackPanel" Margin="2" Orientation="Horizontal" Grid.Column="1">
                                        <Button x:Name="PART_Minimize" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}" Width="31" Height="17" Focusable="False" />
                                        <Button x:Name="PART_Restore" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}" Width="31" Height="17" Focusable="False" />
                                        <Button x:Name="PART_Maximize" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" Width="31" Height="17" Focusable="False" />
                                        <Button x:Name="PART_CloseButton" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}" Width="31" Height="17" Focusable="False" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <Border x:Name="FloatingContainerBody" Grid.Row="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}" Grid.Row="0" Grid.RowSpan="2">
                                        <dxc:BackgroundPanel x:Name="PART_ContainerContent" Content="{Binding}" />
                                    </Grid>
                                    <StackPanel x:Name="PART_StatusPanel" Grid.Row="1">
                                        <Thumb x:Name="PART_SizeGrip" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" Cursor="SizeNWSE" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Opacity" TargetName="PART_CaptionContentPresenter" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsMaximized)}" Value="True">
                <Setter Property="Margin" TargetName="FloatingContainerBorder" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>