<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <dx:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <ControlTemplate x:Key="DefaultWaitIndicator" TargetType="{x:Type ProgressBar}">
        <Grid SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation RepeatBehavior="Forever" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="borderLoading" Duration="00:00:2" To="360" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#FFA5ACB5" CornerRadius="128" cs:Name="Border_0001">
                <Grid Margin="1">
                    <Border Background="#FFF3F4F5" CornerRadius="128" cs:Name="Border_0002">
                        <Border Background="#FFE9EDF1" Margin="1" CornerRadius="128" cs:Name="Border_0003" />
                    </Border>
                    <Border x:Name="borderLoading" CornerRadius="128">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_0046">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5" />
                                        <SkewTransform CenterY="0.5" CenterX="0.5" />
                                        <RotateTransform CenterY="0.5" CenterX="0.5" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#BFFFCC00" Offset="0" cs:Name="GradientStop_0001" />
                                <GradientStop Color="#00FFCC00" Offset="0.5" cs:Name="GradientStop_0002" />
                                <GradientStop Color="#00FFCC00" Offset="1" cs:Name="GradientStop_0003" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border Background="#FFF3F4F5" Margin="{TemplateBinding Padding}" CornerRadius="128" cs:Name="Border_0004">
                        <Border Background="#FFA5ACB5" Margin="1" CornerRadius="128" cs:Name="Border_0005">
                            <Border Background="{TemplateBinding Background}" Margin="1" CornerRadius="128" />
                        </Border>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ColumnWaitIndicator}" TargetType="{x:Type dx:ColumnWaitIndicator}">
        <Setter Property="IsHitTestVisible" Value="{Binding IsHitTestVisible, FallbackValue=true, TargetNullValue=true}" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="#FFE9EDF1" cs:Name="Setter_0001" />
        <Setter Property="Margin" Value="25" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="MinHeight" Value="8" />
        <Setter Property="Template" Value="{StaticResource DefaultWaitIndicator}" />
    </Style>
    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border x:Name="Shadow" Background="#FF000000" Margin="2,2,-3,-3" CornerRadius="4" Opacity="0.12" cs:Name="Border_0006" Visibility="{Binding ShowShadow, RelativeSource={RelativeSource AncestorType=dx:WaitIndicator}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Border Background="#FFA5ACB5" CornerRadius="3" Opacity="0.9" cs:Name="Border_0007">
                <Border Margin="1" CornerRadius="2">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_0047">
                            <GradientStop Color="#FFE5E9EE" Offset="0" cs:Name="GradientStop_0004" />
                            <GradientStop Color="#FFFDFEFF" Offset="1" cs:Name="GradientStop_0005" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <ContentPresenter />
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}" TargetType="{x:Type dx:WaitIndicator}">
        <Grid x:Name="Root" Margin="{TemplateBinding ContentPadding}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Visibility">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.1" Duration="0:0:0.1" From="1" To="0" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:WaitIndicatorContainer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ProgressBar x:Name="progressBar" Background="#FFE9EDF1" Margin="12,12,8,12" Padding="5" Height="31" Width="31" MinWidth="8" MinHeight="8" HorizontalAlignment="Center" VerticalAlignment="Center" Template="{StaticResource DefaultWaitIndicator}" IsIndeterminate="True" cs:Name="ProgressBar_0001" />
                    <ContentPresenter Grid.Column="1" Content="{TemplateBinding ActualContent}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" />
                </Grid>
            </dx:WaitIndicatorContainer>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}">
        <TextBlock Text="{Binding}" VerticalAlignment="Center" TextWrapping="Wrap" />
    </DataTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicatorContainer}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}}" />
        <Setter Property="Foreground" Value="#FF3C3C3C" cs:Name="Setter_0002" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicator}" TargetType="{x:Type dx:WaitIndicator}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}}" />
        <Setter Property="Padding" Value="0,0,12,0" />
        <Setter Property="ContentPadding" Value="25" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="ContentTemplate" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}}" />
    </Style>
</ResourceDictionary>