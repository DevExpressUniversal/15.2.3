<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Blue.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.xaml" />
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Blue.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.Window.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--Tab Button Background Templates-->
    <SolidColorBrush x:Key="Button.Normal.Background" Color="Transparent" cs:Name="SolidColorBrush_0001" />
    <LinearGradientBrush x:Key="Button.Hover.BorderBrush1" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1596">
        <GradientStop Color="#FFECC757" Offset="0" cs:Name="GradientStop_0001" />
        <GradientStop Color="#FFF1D449" Offset="1" cs:Name="GradientStop_0002" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button.Hover.BorderBrush2" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1597">
        <GradientStop Color="#FFFCF7E4" Offset="0" cs:Name="GradientStop_0003" />
        <GradientStop Color="#FFFCF8E7" Offset="1" cs:Name="GradientStop_0004" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button.Hover.Background" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1598">
        <GradientStop Color="#FFF8EBB2" Offset="0" cs:Name="GradientStop_0005" />
        <GradientStop Color="#FFFCF7E4" Offset="1" cs:Name="GradientStop_0006" />
        <GradientStop Color="#FFFFE575" Offset="0.5" cs:Name="GradientStop_0007" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button.Pressed.BorderBrush" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1599">
        <GradientStop Color="#FFC28E35" Offset="0" cs:Name="GradientStop_0008" />
        <GradientStop Color="#FFC2A44D" Offset="1" cs:Name="GradientStop_0009" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button.Pressed.Background" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_0005">
        <GradientStop Color="#FFFFE575" Offset="0" cs:Name="GradientStop_0010" />
        <GradientStop Color="#FFF8EBB2" Offset="1" cs:Name="GradientStop_0011" />
        <GradientStop Color="#FFFFD86C" Offset="0.5" cs:Name="GradientStop_0012" />
    </LinearGradientBrush>
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonNormalBackground}">
        <Border Background="{StaticResource Button.Normal.Background}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}">
        <Border CornerRadius="2" Background="{StaticResource Button.Hover.BorderBrush1}">
            <Border Margin="1" CornerRadius="1" Background="{StaticResource Button.Hover.BorderBrush2}">
                <Border Margin="1" CornerRadius="1" Background="{StaticResource Button.Hover.Background}" />
            </Border>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonPressedBackground}">
        <Border CornerRadius="2" Background="{StaticResource Button.Pressed.BorderBrush}">
            <Border Margin="1" CornerRadius="1" Background="{StaticResource Button.Pressed.Background}" />
        </Border>
    </DataTemplate>
    <!--Tab Button Styles-->
    <SolidColorBrush x:Key="Button.Normal.Foreground" Color="#FF515D7A" cs:Name="SolidColorBrush_0002" />
    <SolidColorBrush x:Key="Button.Hover.Foreground" Color="#FF515D7A" cs:Name="SolidColorBrush_0003" />
    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#FF515D7A" cs:Name="SolidColorBrush_0004" />
    <SolidColorBrush x:Key="CloseButton.SelectedTab.Foreground" Color="#FF000000" cs:Name="SolidColorBrush_0005" />
    <Style x:Key="ButtonStyle" BasedOn="{StaticResource ButtonDefaultStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource Button.Normal.Foreground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Hover.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HeaderPanelButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="2,0,2,0" />
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
    </Style>
    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Margin" Value="7,0,-3,0" />
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=-1}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=dx:DXTabItem}, Path=IsSelected}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource CloseButton.SelectedTab.Foreground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=CloseButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelNewButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="5,0,4,0" />
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MainNewButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0, GlyphLeftPadding='0,0,1,0'}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0, GlyphRightPadding='1,0,0,0'}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MenuButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <!--TabControl and TabItem Background Templates-->
    <SolidColorBrush x:Key="TabControl.BorderBrush" Color="#FF859EBF" cs:Name="SolidColorBrush_0006" />
    <SolidColorBrush x:Key="TabControl.Background" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0007" />
    <SolidColorBrush x:Key="TabItem.Normal.Background" Color="#FFB5CBE3" cs:Name="SolidColorBrush_0008" />
    <SolidColorBrush x:Key="TabItem.Hover.Background" Color="#FFD4E4F7" cs:Name="SolidColorBrush_0009" />
    <SolidColorBrush x:Key="TabItem.Focused.Background" Color="#7FFFB400" cs:Name="SolidColorBrush_0017" />
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=Background}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabControl.Background}" BorderBrush="{StaticResource TabControl.BorderBrush}" BorderThickness="1" BorderMode="BorderBrush" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=NormalBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabItem.Normal.Background}" BorderBrush="{StaticResource TabControl.BorderBrush}" BorderThickness="1,1,1,0" BorderMargin="0,0,-1,0" HoldBorderThickness="1" HoldBorderMargin="0,0,1,1" BorderMode="BorderBrush" BackgroundMode="BorderBackground" LeaveOriginBackgroundColor="False" CustomBackgroundBrightness="-0.15" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=HoverBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabItem.Hover.Background}" BorderBrush="{StaticResource TabControl.BorderBrush}" BorderThickness="1,1,1,0" BorderMargin="0,0,-1,0" HoldBorderThickness="1" HoldBorderMargin="0,0,1,1" BorderMode="BorderBrush" BackgroundMode="BorderBackground" LeaveOriginBackgroundColor="False" CustomBackgroundBrightness="0.5" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=SelectedBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabControl.Background}" BorderBrush="{StaticResource TabControl.BorderBrush}" BorderThickness="1,1,1,0" BorderMargin="0,-2,-1,-1" HoldBorderThickness="1" HoldBorderMargin="0,0,1,1" BorderMode="BorderBrush" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=FocusedBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabItem.Focused.Background}" BorderMargin="0,-2,-1,-1" HoldBorderMargin="0,0,1,1" BackgroundMode="BorderBackground" LeaveOriginBackgroundColor="False">
            <dxcn:TabBorder.BorderOpacityMask>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" cs:Name="LinearGradientBrush_6442">
                    <GradientStop Color="#FF000000" Offset="0" cs:Name="GradientStop_0017" />
                    <GradientStop Color="Transparent" Offset="1" cs:Name="GradientStop_0018" />
                </LinearGradientBrush>
            </dxcn:TabBorder.BorderOpacityMask>
        </dxcn:TabBorder>
    </DataTemplate>
    <!--TabControl and TabItem Styles-->
    <SolidColorBrush x:Key="TabControl.Foreground" Color="#FF000000" cs:Name="SolidColorBrush_0010" />
    <SolidColorBrush x:Key="TabItem.Normal.Foreground" Color="#FF000000" cs:Name="SolidColorBrush_0011" />
    <SolidColorBrush x:Key="TabItem.Selected.Foreground" Color="#FF000000" cs:Name="SolidColorBrush_0012" />
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}" BasedOn="{StaticResource PanelContainerDefaultStyle}" TargetType="{x:Type dxcn:TabPanelContainer}">
        <Setter Property="NormalMargin" Value="1,0,1,-1" />
        <Setter Property="NormalPadding" Value="0,2,1,1" />
        <Setter Property="HoldMargin" Value="0,0,-1,0" />
        <Setter Property="HoldPadding" Value="0,0,0,0" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabControl}" TargetType="{x:Type dx:DXTabControl}" BasedOn="{StaticResource TabControlDefaultStyle}">
        <Setter Property="Padding" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabItem}" TargetType="{x:Type dx:DXTabItem}" BasedOn="{StaticResource TabItemDefaultStyle}">
        <Setter Property="Padding" Value="9,3,9,3" />
        <Setter Property="Foreground" Value="{StaticResource TabItem.Normal.Foreground}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.IsHeaderOrientationDifferent, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Padding" Value="8,4,8,4" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabItem.Selected.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=SeparatorStyle}" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <!--TabbedWindow-->
    <LinearGradientBrush x:Key="Window.Header.Active.Background" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1601">
        <GradientStop Color="#FFC1D4EC" Offset="0" cs:Name="GradientStop_0015" />
        <GradientStop Color="#FFBDD0E8" Offset="1" cs:Name="GradientStop_0016" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Window.Header.InActive.Background" Color="#FFD5DEE8" cs:Name="SolidColorBrush_0013" />
    <SolidColorBrush x:Key="Window.Border.Active.BorderBrush" Color="#FF728EAD" cs:Name="SolidColorBrush_0014" />
    <SolidColorBrush x:Key="Window.Border.Active.Background" Color="#FFBDD0E8" cs:Name="SolidColorBrush_0015" />
    <SolidColorBrush x:Key="Window.Border.InActive.Background" Color="#FFD5DEE8" cs:Name="SolidColorBrush_0016" />
    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=HeaderTemplate}">
        <Border x:Name="border" Background="{StaticResource Window.Header.Active.Background}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Window.Header.InActive.Background}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=BorderTemplate}">
        <Grid>
            <Grid x:Name="Shadow" Margin="2,2,-3,-3">
                <Border Background="#FF000000" CornerRadius="3" Opacity="0.01" cs:Name="Border_0001" />
                <Border Background="#FF000000" CornerRadius="2" Margin="1" Opacity="0.02" cs:Name="Border_0002" />
                <Border Background="#FF000000" CornerRadius="1" Margin="2" Opacity="0.03" cs:Name="Border_0003" />
            </Grid>
            <Border x:Name="border" BorderThickness="1" BorderBrush="{StaticResource Window.Border.Active.BorderBrush}" Background="{StaticResource Window.Border.Active.Background}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Window.Border.InActive.Background}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MainContainerStyle}" TargetType="Panel">
        <Setter Property="Margin" Value="1" />
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CaptionPresenterStyle}" TargetType="ContentPresenter">
        <Setter Property="Margin" Value="5,5,5,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ContentBorderStyle}" TargetType="Border">
        <Setter Property="Margin" Value="5,0,5,5" />
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}" TargetType="ItemsControl" BasedOn="{StaticResource DefaultButtonContainerStyle}">
        <Setter Property="Margin" Value="2,6,5,2" />
    </Style>
    <Style x:Key="WindowButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonDefaultStyle}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="31" />
        <Setter Property="Height" Value="17" />
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MinimizeButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}" />
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=RestoreButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}" />
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MaximizeButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}" />
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}" />
</ResourceDictionary>