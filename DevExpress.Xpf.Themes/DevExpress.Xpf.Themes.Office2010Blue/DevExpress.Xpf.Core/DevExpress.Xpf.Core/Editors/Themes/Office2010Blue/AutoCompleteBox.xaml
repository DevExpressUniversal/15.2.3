<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Blue.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/AutoCompleteBox.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=CellPresenterTemplate}" TargetType="{x:Type dxei:TokenEditorPresenter}">
        <Grid Background="Transparent" cs:Name="Grid_0001">
            <Border UseLayoutRounding="True" Margin="1,1,0,1">
                <ContentControl Focusable="False" Template="{TemplateBinding BorderTemplate}" />
            </Border>
            <dxei:CellEditor Focusable="False" TextElement.Foreground="#FF000000" cs:Name="CellEditor_0001" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="grid">
            <Border x:Name="default" Background="#FF95ABC3" Opacity="0.5" cs:Name="Border_0001" />
            <Border x:Name="hover" Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1554">
                        <GradientStop Color="#FFE6B763" Offset="0" cs:Name="GradientStop_0001" />
                        <GradientStop Color="#FFFFE48A" Offset="1" cs:Name="GradientStop_0002" />
                        <GradientStop Color="#FFFCDF85" Offset="0.1" cs:Name="GradientStop_0003" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="pressed" Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1602">
                        <GradientStop Color="#7FF6C867" Offset="0" cs:Name="GradientStop_0004" />
                        <GradientStop Color="#7FFFE48A" Offset="1" cs:Name="GradientStop_0005" />
                        <GradientStop Color="#7FFFE48A" Offset="0.5" cs:Name="GradientStop_0006" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="editable" Opacity="0" />
            <Border x:Name="focused" Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1603">
                        <GradientStop Color="#FFF6C867" Offset="0" cs:Name="GradientStop_0007" />
                        <GradientStop Color="#FFFFE48A" Offset="1" cs:Name="GradientStop_0008" />
                        <GradientStop Color="#FFFFE48A" Offset="0.5" cs:Name="GradientStop_0009" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border BorderBrush="#3F000000" BorderThickness="1" cs:Name="Border_0004" />
            <Grid x:Name="focusedunselected" Opacity="0">
                <Border BorderBrush="#7FFFCC00" BorderThickness="2" cs:Name="Border_0005" />
                <Border BorderBrush="#BF866D0C" BorderThickness="1" cs:Name="Border_0006" />
            </Grid>
            <ContentPresenter />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="default" Property="Opacity" Value="0" />
                <Setter TargetName="hover" Property="Opacity" Value="1" />
                <Setter TargetName="pressed" Property="Opacity" Value="0" />
                <Setter TargetName="editable" Property="Opacity" Value="0" />
                <Setter TargetName="focused" Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected" Property="Opacity" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="default" Property="Opacity" Value="0" />
                <Setter TargetName="hover" Property="Opacity" Value="0" />
                <Setter TargetName="pressed" Property="Opacity" Value="1" />
                <Setter TargetName="editable" Property="Opacity" Value="0" />
                <Setter TargetName="focused" Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected" Property="Opacity" Value="0" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="default" Property="Opacity" Value="0" />
                <Setter TargetName="hover" Property="Opacity" Value="0" />
                <Setter TargetName="pressed" Property="Opacity" Value="0" />
                <Setter TargetName="editable" Property="Opacity" Value="0" />
                <Setter TargetName="focused" Property="Opacity" Value="1" />
                <Setter TargetName="focusedunselected" Property="Opacity" Value="0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="focused" Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected" Property="Opacity" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="default" Property="Opacity" Value="0" />
                <Setter TargetName="hover" Property="Opacity" Value="0" />
                <Setter TargetName="pressed" Property="Opacity" Value="0" />
                <Setter TargetName="editable" Property="Opacity" Value="1" />
                <Setter TargetName="focused" Property="Opacity" Value="0" />
                <Setter TargetName="focusedunselected" Property="Opacity" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=DeleteButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" x:Name="Border" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,2,0" cs:Name="Border_0002">
                        <Grid>
                            <Border x:Name="hoverState" Background="#FFCC0000" CornerRadius="32" Margin="2" Opacity="0" cs:Name="Border_0003" />
                            <Path x:Name="Path" Stretch="Fill" Fill="#FF515D7A" Data="F1 M 385,283L 386,283L 388,285L 390,283L 391,283L 391,284L 389,286L 391,288L 391,289L 390,289L 388,287L 386,289L 385,289L 385,288L 387,286L 385,284L 385,283 Z " Width="6" Height="6" cs:Name="Path_0001" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="#FF515D7A" cs:Name="Setter_0001" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="Path" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0002" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="hoverState" Property="Opacity" Value="0.75" />
                            <Setter TargetName="Path" Property="Fill" Value="#BFFFFFFF" cs:Name="Setter_0003" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>