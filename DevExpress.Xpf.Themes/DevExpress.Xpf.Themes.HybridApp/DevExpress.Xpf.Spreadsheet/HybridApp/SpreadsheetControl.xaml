<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/themekeys" xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet" xmlns:dxspsi="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.HybridApp.v15.2;component/DevExpress.Xpf.Spreadsheet/Generic/DefaultStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter" />
    <dx:ColorOverlayConverter x:Key="ColorOverlayConveter"/>
    
    <!-- General Resources -->
    <Color x:Key="{themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}"  >#FFD3D3D3</Color>
    <Color x:Key="GlyphColor"  >#FF404040</Color>
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetForegroundBrush}" Color="#FF191919"   />
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBackgroundBrush}" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=VisualFeedbackLineBrush}" Color="#FF404040"   />
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=FrozenSeparatorBrush}" Color="#FF9B9B9B"   />
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetBorderBrush}" Color="#FF062B63"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=AutoFilterBackgroundBrush}" Color="#E5FFFFFF" />

    <SolidColorBrush x:Key="Spreadsheet.BorderBrush" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="Selection.BorderBrush" Color="#FFE3E3E3"   />
    <SolidColorBrush x:Key="Selection.Background" Color="#7F92C0E0"   />
    <SolidColorBrush x:Key="TabPanel.BorderBrush" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="TabPanel.Background" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="GridLine" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="ResizeThumb.Background" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="ResizeThumb.GlyphBrush" Color="#FFC3C3C3"   />
    <SolidColorBrush x:Key="ResizeThumb.GlyphBrush.IsMouseOver" Color="#FF404040"   />
    <SolidColorBrush x:Key="ScrollBar.Corner.BorderBrush" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="ScrollBar.Corner.Background" Color="#FFF0F0F0"   />
    <SolidColorBrush x:Key="GlyphBrush" Color="#FF404040"   />
    <!--Grouping-->
    <SolidColorBrush x:Key="GroupButton.BorderBrush" Color="Red" />
    <SolidColorBrush x:Key="GroupButton.Background" Color="LightGreen"/>
    <SolidColorBrush x:Key="GroupButton.BorderBrush.IsHovered" Color="Blue" />
    <SolidColorBrush x:Key="GroupButton.Background.IsHovered" Color="LightCoral"/>
    <SolidColorBrush x:Key="GroupButton.BorderBrush.IsPressed" Color="Yellow" />
    <SolidColorBrush x:Key="GroupButton.Background.IsPressed" Color="Black"/>
    <SolidColorBrush x:Key="GroupButton.BorderBrush.IsExpanded" Color="LightCoral" />
    <SolidColorBrush x:Key="GroupButton.Background.IsExpanded" Color="Blue"/>
    <SolidColorBrush x:Key="GroupButton.BorderBrush.IsCollapsed" Color="DarkOrange" />
    <SolidColorBrush x:Key="GroupButton.Background.IsCollapsed" Color="Green"/>
    <SolidColorBrush x:Key="GroupHeader.BorderBrush" Color="Green" />
    <SolidColorBrush x:Key="GroupHeader.Background" Color="Yellow"/>
    <SolidColorBrush x:Key="GroupHeader.BorderBrush.IsHovered" Color="Red" />
    <SolidColorBrush x:Key="GroupHeader.Background.IsHovered" Color="BlueViolet"/>
    <SolidColorBrush x:Key="GroupHeader.BorderBrush.IsPressed" Color="DeepSkyBlue" />
    <SolidColorBrush x:Key="GroupHeader.Background.IsPressed" Color="Gray"/>
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupControlBackgroundBrush}" Color="LightBlue"/>
    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupLineThickness}">2</sys:Double>
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupLineBrush}" Color="Orange"/>
    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupDotThickness}">2</sys:Double>
    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupDotBrush}" Color="Brown"/>
    <!-- Header -->
    <SolidColorBrush x:Key="Header.BorderBrush" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="Header.Background" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="Header.BorderBrush.IsMouseOver" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="Header.Background.IsMouseOver" Color="#FFF0F0F0"   />
    <SolidColorBrush x:Key="Header.BorderBrush.IsSelected" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="Header.Background.IsSelected" Color="#FFEAEAEA"   />
    <!-- TabSelectorItem -->
    <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border1" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border2" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border3" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border1" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border2" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border3" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border1" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border2" Color="#FFF0F0F0"   />
    <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border3" Color="#FFF0F0F0"   />
    <!-- NavButton -->
    <SolidColorBrush x:Key="NavButton.Background" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="NavButton.HoverState.Border1" Color="#FFE0E5F2"   />
    <SolidColorBrush x:Key="NavButton.HoverState.Border2" Color="#FFE0E5F2"   />
    <SolidColorBrush x:Key="NavButton.PressedState.Border1" Color="#FFE3E3E3"   />
    <SolidColorBrush x:Key="NavButton.PressedState.Border2" Color="#FFE3E3E3"   />
    <!-- AddButton -->
    <SolidColorBrush x:Key="AddButton.DefaultState.Border1" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="AddButton.DefaultState.Border2" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="AddButton.DefaultState.Border3" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="AddButton.HoverState.Border1" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="AddButton.HoverState.Border2" Color="#FFF0F0F0"   />
    <SolidColorBrush x:Key="AddButton.HoverState.Border3" Color="#FFF0F0F0"   />
    <SolidColorBrush x:Key="AddButton.PressedState.Border1" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="AddButton.PressedState.Border2" Color="#FFEAEAEA"   />
    <SolidColorBrush x:Key="AddButton.PressedState.Border3" Color="#FFEAEAEA"   />
    <!-- FormulaBarItem Hover/Pressed -->
    <SolidColorBrush x:Key="FormulaBarItem.HoverState" Color="#FFE0E5F2"   />
    <SolidColorBrush x:Key="FormulaBarItem.PressedState" Color="#FFE3E3E3"   />
    <SolidColorBrush x:Key="FormulaBarItem.Editor.BorderBrush" Color="#FFC3C3C3"   />
    <!-- FormulaBar Collapse/Expand Button -->
    <SolidColorBrush x:Key="ExpandButton.DefaultState.Border" Color="#FFC3C3C3"   />
    <SolidColorBrush x:Key="ExpandButton.DefaultState.Background" Color="#FFFFFFFF"   />
    <SolidColorBrush x:Key="ExpandButton.HoverState" Color="#FFE0E5F2"   />
    <SolidColorBrush x:Key="ExpandButton.PressedState" Color="#FFE3E3E3"   />
    <!--FormulaBarContol-->
    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlMinHeight}">46</sys:Double>
    <Style x:Key="SpreadsheetNameBoxControlStyle" TargetType="{x:Type dxspsi:SpreadsheetNameBoxControl}">
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="EditValuePostMode" Value="Immediate"/>
        <Setter Property="ValidateOnTextInput" Value="True"/>
        <Setter Property="IsReadOnly" Value="False"/>
    </Style>
    <Style x:Key="FormulaBarEditorStyle" TargetType="{x:Type dxspsi:FormulaBarEditor}">
        <Setter Property="Padding" Value="2,2,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinHeight" Value="24"/>
    </Style>
    <Style x:Key="FormulaBarEditorBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource FormulaBarItem.Editor.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="Margin" Value="3,10,5,10"/>
    </Style>
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlTemplate}" TargetType="{x:Type dxsps:SpreadsheetFormulaBarControl}">
        <Border>
            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid x:Name="PART_HorizontalContainer">
                    <Grid x:Name="PART_FormulaBarEditorContainer" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" MinWidth="100" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{TemplateBinding MinHeight}" MaxHeight="{TemplateBinding MinHeight}" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxspsi:SpreadsheetNameBoxControl x:Name="PART_Combobox"
                                                          MaxHeight="{TemplateBinding MinHeight}" 
                                                          SpreadsheetControl="{Binding SpreadsheetControl, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          Style="{StaticResource SpreadsheetNameBoxControlStyle}"/>
                        <Thumb x:Name="PART_VerticalThumb" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}}" Grid.Column="1" />
                        <Border Background="#FFFFFFFF" BorderBrush="{StaticResource FormulaBarItem.Editor.BorderBrush}" BorderThickness="1" VerticalAlignment="Top" MinHeight="26" Margin="0,10,0,10" MaxHeight="{TemplateBinding MaxHeight}" Grid.Column="2"  >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_CancelButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}}" />
                                <Button x:Name="PART_OkButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}}" Grid.Column="1" />
                                <Button x:Name="PART_FunctionButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}}" Grid.Column="2" />
                            </Grid>
                        </Border>
                        <Border Style="{StaticResource FormulaBarEditorBorderStyle}" Grid.Column="3" Grid.RowSpan="2"  >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <dxspsi:FormulaBarEditor x:Name="PART_Editor" Style="{StaticResource FormulaBarEditorStyle}"  />
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" MinHeight="24" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="PART_ExpandButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                    <ScrollBar Minimum="0" Maximum="{Binding ScrollViewer.ScrollableHeight, ElementName=PART_Editor}" ViewportSize="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}" Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Grid.Row="1" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
                <Thumb x:Name="PART_HorizontalThumb" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}}" VerticalAlignment="Bottom" />
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Root" Background="#FFFFFFFF" SnapsToDevicePixels="True"  >
                        <Grid>
                            <Path x:Name="GlyphCollapsed" Stretch="Fill" Fill="#FF404040" Data="F1 M 0,2L 1,2L 1,3L 2,3L 2,4L 3,4L 3,5L 4,5L 4,6L 5,6L 5,5L 6,5L 6,4L 7,4L 7,3L 8,3L 8,2L 9,2L 9,1L 8,1L 8,4.76837e-007L 7,4.76837e-007L 7,1L 6,1L 6,2L 5,2L 5,3L 4,3L 4,2L 3,2L 3,1L 2,1L 2,4.76837e-007L 1,4.76837e-007L 1,1L 0,1L 0,2 Z " Width="9" Height="6"   />
                            <Path x:Name="GlyphExpanded" Stretch="Fill" Fill="#FF404040" Data="F1 M 0,4L 1,4L 1,3L 2,3L 2,2L 3,2L 3,1L 4,1L 4,0L 5,0L 5,1L 6,1L 6,2L 7,2L 7,3L 8,3L 8,4L 9,4L 9,5L 8,5L 8,6L 7,6L 7,5L 6,5L 6,4L 5,4L 5,3L 4,3L 4,4L 3,4L 3,5L 2,5L 2,6L 1,6L 1,5L 0,5L 0,4 Z " Width="9" Height="6" Opacity="0"   />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FF2F51A5"   />
                            <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FF2F51A5"   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FF2F51A5"   />
                            <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FF2F51A5"   />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="GlyphExpanded" Value="1" />
                            <Setter Property="Opacity" TargetName="GlyphCollapsed" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinWidth="24" MinHeight="24">
                        <Grid Margin="4">
                            <Image x:Name="image1" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v15.2;component/Images/FormulaBarCancel_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                            <Image x:Name="image2" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v15.2;component/Images/FormulaBarCancel_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="image1" Property="dxb:ImageColorizer.Color" Value="#FFD13434"   />
                            <Setter TargetName="image2" Property="dxb:ImageColorizer.Color" Value="#FFD13434"   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="image1" Property="dxb:ImageColorizer.Color" Value="#FFD13434"   />
                            <Setter TargetName="image2" Property="dxb:ImageColorizer.Color" Value="#FFD13434"   />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinWidth="24" MinHeight="24">
                        <Grid Margin="4">
                            <Image x:Name="image1" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v15.2;component/Images/FormulaBarOk_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                            <Image x:Name="image2" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v15.2;component/Images/FormulaBarOk_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="image1" Property="dxb:ImageColorizer.Color" Value="#FF3883B7"   />
                            <Setter TargetName="image2" Property="dxb:ImageColorizer.Color" Value="#FF3883B7"   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="image1" Property="dxb:ImageColorizer.Color" Value="#FF3883B7"   />
                            <Setter TargetName="image2" Property="dxb:ImageColorizer.Color" Value="#FF3883B7"   />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinWidth="24" MinHeight="24">
                        <Grid Margin="4">
                            <Image x:Name="image1" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v15.2;component/Images/FormulaBarInsertFunction_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                            <Image x:Name="image2" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" Source="/DevExpress.Xpf.Spreadsheet.v15.2;component/Images/FormulaBarInsertFunction_16x16.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" dxb:ImageColorizer.IsEnabled="True" Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="image1" Property="dxb:ImageColorizer.Color" Value="#FF439467"   />
                            <Setter TargetName="image2" Property="dxb:ImageColorizer.Color" Value="#FF439467"   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="image1" Property="dxb:ImageColorizer.Color" Value="#FF439467"   />
                            <Setter TargetName="image2" Property="dxb:ImageColorizer.Color" Value="#FF439467"   />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent" Height="3"   />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent" Padding="14,0,14,0"  >
                        <Path Stretch="Fill" Fill="#FFB3B3B3" Data="F1 M 0,0L 2,0L 2,2L 0,2L 0,0 Z M 0,4L 2,4L 2,6L 0,6L 0,4 Z M 0,8L 2,8L 2,10L 0,10L 0,8 Z " Width="2" Height="10"   />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type dxspsi:FormulaBarEditor}">
        <Setter Property="Background" Value="#FFFFFFFF"   />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxspsi:FormulaBarEditor}">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Border x:Name="focus" Opacity="0" BorderThickness="0" />
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Center" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" IsTabStop="False" />
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Grouping-->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupButtonTemplate}" TargetType="{x:Type dxspsi:GroupItem}">
        <Border x:Name="Root" Background="{StaticResource GroupButton.Background}" BorderBrush="{StaticResource GroupButton.BorderBrush}" BorderThickness="1">
            <TextBlock Text="{TemplateBinding Text}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource GroupButton.Background.IsExpanded}"/>
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource GroupButton.BorderBrush.IsExpanded}"/>
            </Trigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource GroupButton.Background.IsCollapsed}"/>
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource GroupButton.BorderBrush.IsCollapsed}"/>
            </Trigger>
            <Trigger Property="IsHovered" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource GroupButton.Background.IsHovered}"/>
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource GroupButton.BorderBrush.IsHovered}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource GroupButton.Background.IsPressed}"/>
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource GroupButton.BorderBrush.IsPressed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupHeaderTemplate}" TargetType="{x:Type dxspsi:GroupItem}">
        <Border x:Name="Root" Background="{StaticResource GroupHeader.Background}" BorderBrush="{StaticResource GroupHeader.BorderBrush}" BorderThickness="1">
            <TextBlock Text="{TemplateBinding Text}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHovered" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource GroupHeader.Background.IsHovered}"/>
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource GroupHeader.BorderBrush.IsHovered}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource GroupHeader.Background.IsPressed}"/>
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource GroupHeader.BorderBrush.IsPressed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Comments-->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=CommentTemplate}" TargetType="{x:Type dxspsi:CommentItem}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentLineBrush}}" BorderThickness="1">
            <TextBox  x:Name="PART_CommentBox" BorderThickness="0" AcceptsReturn="True" dx:ThemeManager.ThemeName="None"
                     Focusable="{TemplateBinding Focusable}"
                     Background="{TemplateBinding Background}" 
                     IsReadOnly="{TemplateBinding IsReadOnly}" 
                     Cursor="{TemplateBinding Cursor}" 
                     
                     Text="{TemplateBinding Text}" 
                     FontFamily="{Binding TextSettings.FontFamily, RelativeSource={RelativeSource TemplatedParent}}" 
                     FontSize="{Binding TextSettings.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                     FontStyle="{Binding TextSettings.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                     FontWeight="{Binding TextSettings.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                     Foreground="{Binding TextSettings.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                     TextWrapping="{Binding TextSettings.TextWrapping, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Border>
    </ControlTemplate>

    <!--HeaderControl-->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HeadersControlTemplate}" TargetType="{x:Type dxspsi:WorksheetHeadersControl}">
        <Border>
            <dxspsi:HeadersPanel LayoutInfo="{Binding Path=(dxspsi:SpreadsheetViewControl.ActiveSpreadsheetView).LayoutInfo, RelativeSource={RelativeSource Self}}" Orientation="{TemplateBinding Orientation}" />
        </Border>
    </ControlTemplate>
    <!-- Header Item -->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HorizontalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <Border x:Name="Root" Background="{StaticResource Header.Background}" BorderBrush="{StaticResource Header.BorderBrush}" BorderThickness="1,0,0,1" Margin="-1,0,0,-1">
            <TextBlock Text="{TemplateBinding Text}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource Header.BorderBrush.IsMouseOver}" />
                <Setter TargetName="Root" Property="Background" Value="{StaticResource Header.Background.IsMouseOver}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource Header.BorderBrush.IsSelected}" />
                <Setter TargetName="Root" Property="Background" Value="{StaticResource Header.Background.IsSelected}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=VerticalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <Border x:Name="Root" Background="{StaticResource Header.Background}" BorderBrush="{StaticResource Header.BorderBrush}" BorderThickness="0,1,1,0" Margin="0,-1,-1,0">
            <TextBlock Text="{TemplateBinding Text}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource Header.BorderBrush.IsSelected}" />
                <Setter TargetName="Root" Property="Background" Value="{StaticResource Header.Background.IsSelected}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--TabSelector-->
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid x:Name="PART_Root">
            <Grid Margin="0,1,0,-1">
                <Grid x:Name="UnselectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                    <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border3}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="HoverState" Opacity="0">
                    <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border3}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="SelectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border Background="{StaticResource TabSelectorItem.SelectedState.Border1}" Padding="0,0,1,0" Margin="0,-1,0,0">
                        <Border Background="{StaticResource TabSelectorItem.SelectedState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.SelectedState.Border3}" />
                        </Border>
                    </Border>
                </Grid>
            </Grid>
            <TextBlock Margin="12,0,12,0" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" Focusable="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HoverState" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid  x:Name="PART_Root">
            <Grid.Resources>
                <SolidColorBrush x:Key="UnselectedStateBorderBrush1" Color="Red"/>
                <SolidColorBrush x:Key="UnselectedStateBorderBrush2" Color="Red"/>
                <SolidColorBrush x:Key="UnselectedStateBrush" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF808080}" />

                <SolidColorBrush x:Key="SelectedStateBorderBrush1" Color="Green"/>
                <SolidColorBrush x:Key="SelectedStateBorderBrush2" Color="Green"/>
                <LinearGradientBrush x:Key="SelectedStateBrush" StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="White" Offset="0.4" />
                    <GradientStop Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF808080}" Offset="1" />
                </LinearGradientBrush>

                <SolidColorBrush x:Key="HoveredStateBorderBrush1" Color="Green"/>
                <SolidColorBrush x:Key="HoveredStateBorderBrush2" Color="Green"/>
                <SolidColorBrush x:Key="HoveredStateBrush" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF808080}" />
            </Grid.Resources>
            <Grid Margin="0,1,0,-1">
                <Grid x:Name="UnselectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                    <Border Background="{StaticResource UnselectedStateBorderBrush1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource UnselectedStateBorderBrush2}" Padding="0,1,1,1">
                            <Border Background="{StaticResource UnselectedStateBrush}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="SelectedState" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border Background="{StaticResource SelectedStateBorderBrush1}" Padding="0,0,1,0" Margin="0,-1,0,0">
                        <Border Background="{StaticResource SelectedStateBorderBrush2}" Padding="0,1,1,1">
                            <Border Background="{StaticResource SelectedStateBrush}" />
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="HoveredState" Opacity="0" Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                    <Border Background="{StaticResource HoveredStateBorderBrush1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource HoveredStateBorderBrush2}" Padding="0,1,1,1">
                            <Border Background="{StaticResource HoveredStateBrush}" />
                        </Border>
                    </Border>
                </Grid>
            </Grid>
            <TextBlock Margin="12,0,12,0" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" Focusable="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HoveredState" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorTemplate}" TargetType="{x:Type dxspsi:SpreadsheetTabSelector}">
        <Border>
            <Grid x:Name="PART_RootContainer">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Background="{StaticResource TabPanel.BorderBrush}" Padding="0,0,1,0">
                    <Grid x:Name="PART_NavButtonContainer">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_FirstButton" Focusable="False" Grid.Column="0" Width="20" Command="{Binding FirstTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1351,926L 1347,922L 1347,926L 1346,926L 1346,918L 1347,918L 1347,922L 1351,918L 1351,922L 1355,918L 1355,926L 1351,922L 1351,926 Z" Width="9" Height="8" Margin="0,1,0,-1"   />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1351,926L 1347,922L 1347,926L 1346,926L 1346,918L 1347,918L 1347,922L 1351,918L 1351,922L 1355,918L 1355,926L 1351,922L 1351,926 Z" Width="9" Height="8" />
                            </Grid>
                        </Button>
                        <Button x:Name="PART_PrevButton" Focusable="False" Grid.Column="1" Width="20" Command="{Binding PrevTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1314,926L 1310,922L 1314,918L 1314,926 Z" Width="4" Height="8" Margin="0,1,0,-1"   />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1314,926L 1310,922L 1314,918L 1314,926 Z" Width="4" Height="8" />
                            </Grid>
                        </Button>
                        <Button x:Name="PART_NextButton" Focusable="False" Grid.Column="2" Width="20" Command="{Binding NextTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1423,918L 1427,922L 1423,926L 1423,918 Z " Width="4" Height="8" Margin="0,1,0,-1"   />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1423,918L 1427,922L 1423,926L 1423,918 Z " Width="4" Height="8" />
                            </Grid>
                        </Button>
                        <Button x:Name="PART_LastButton" Focusable="False" Grid.Column="3" Width="20" Command="{Binding LastTabCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}">
                            <Grid>
                                <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 1386,918L 1390,922L 1390,918L 1391,918L 1391,926L 1390,926L 1390,922L 1386,926L 1386,922L 1382,926L 1382,918L 1386,922L 1386,918 Z " Width="9" Height="8" Margin="0,1,0,-1"   />
                                <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 1386,918L 1390,922L 1390,918L 1391,918L 1391,926L 1390,926L 1390,922L 1386,926L 1386,922L 1382,926L 1382,918L 1386,922L 1386,918 Z " Width="9" Height="8" />
                            </Grid>
                        </Button>
                    </Grid>
                </Border>
                <dxspsi:TabSelectorPanel Grid.Column="1" 
                                         Grid.ColumnSpan="2" 
                                         AddButtonTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AddButtonDataTemplate}}"
                                         TabSelectorItemDefaultTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}}"
                                         TabSelectorItemColoredTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}}"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" Margin="0,1,0,0">
                        <Border x:Name="DefaultState" Background="{StaticResource NavButton.Background}" />
                        <Border x:Name="HoverState" Background="{StaticResource NavButton.HoverState.Border2}" BorderBrush="{StaticResource NavButton.HoverState.Border1}" BorderThickness="1,0,1,0" Opacity="0" />
                        <Border x:Name="PressedState" Background="{StaticResource NavButton.PressedState.Border2}" BorderBrush="{StaticResource NavButton.PressedState.Border1}" BorderThickness="1,0,1,0" Opacity="0" />
                        <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=AddButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" MinHeight="17">
                        <Grid x:Name="DefaultState">
                            <Border Background="{StaticResource AddButton.DefaultState.Border1}" Padding="0,1,1,0">
                                <Border Background="{StaticResource AddButton.DefaultState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.DefaultState.Border3}" />
                                </Border>
                            </Border>
                        </Grid>
                        <Grid x:Name="HoverState" Opacity="0">
                            <Border Background="{StaticResource AddButton.HoverState.Border1}" Padding="0,1,1,0">
                                <Border Background="{StaticResource AddButton.HoverState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.HoverState.Border3}" />
                                </Border>
                            </Border>
                        </Grid>
                        <Grid x:Name="PressedState" Opacity="0">
                            <Border Background="{StaticResource AddButton.PressedState.Border1}" Padding="0,1,1,0">
                                <Border Background="{StaticResource AddButton.PressedState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.PressedState.Border3}" />
                                </Border>
                            </Border>
                        </Grid>
                        <Grid Margin="0,1,0,-1">
                            <Path Stretch="Fill" Fill="#3FFFFFFF" Data="F1 M 119,100L 122,100L 122,97L 124,97L 124,100L 127,100L 127,102L 124,102L 124,105L 122,105L 122,102L 119,102L 119,100 Z " Width="8" Height="8" Margin="0,1,0,-1"   />
                            <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" Data="F1 M 119,100L 122,100L 122,97L 124,97L 124,100L 127,100L 127,102L 124,102L 124,105L 122,105L 122,102L 119,102L 119,100 Z " Width="8" Height="8" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=AddButtonDataTemplate}">
        <Button Focusable="False" Content="+" Width="32" Command="{Binding}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AddButtonStyle}}" />
    </DataTemplate>
    <!--Spreadsheet-->
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorPanelStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource TabPanel.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabPanel.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BottomRightCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ScrollBar.Corner.Background}"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetSelectionControlStyle}" TargetType="{x:Type dxspsi:WorksheetSelectionControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SelectionBorderBrush" Value="{StaticResource Selection.BorderBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Selection.Background}"/>
        <Setter Property="AutoFilterBackgroundBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AutoFilterBackgroundBrush}}"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TopLeftCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Header.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Header.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Margin" Value="0,0,-1,-1"/>
    </Style>
    
    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=ResizeThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Root" Background="Transparent"  >
                        <Border Background="{StaticResource ResizeThumb.Background}" BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,1,0" />
                        <Grid Width="9" Height="15" Cursor="SizeWE">
                            <Path x:Name="Path" Stretch="Fill" Fill="{StaticResource ResizeThumb.GlyphBrush}" Data="F1 M 0,0L 1,0L 1,12L 0,12L 0,0 Z M 2,9.53674e-007L 3,9.53674e-007L 3,12L 2,12L 2,9.53674e-007 Z " Width="3" Height="12" Margin="3,0,3,0" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource ResizeThumb.GlyphBrush.IsMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=Template}" TargetType="{x:Type dxsps:SpreadsheetControl}">
        <Border x:Name="rootBorder" BorderThickness="1" BorderBrush="{StaticResource Spreadsheet.BorderBrush}" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
            <dxspsi:SpreadsheetViewControl Focusable="False" IsTabStop="False" 
                                           ShowTabSelector="{TemplateBinding ShowTabSelector}"/>
        </Border>
    </ControlTemplate>
    <Style TargetType="{x:Type dxspsi:XpfCellInplaceEditor}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Background" Value="#FFFF0000"   />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxspsi:XpfCellInplaceEditor}">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Center" IsTabStop="False" />
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>