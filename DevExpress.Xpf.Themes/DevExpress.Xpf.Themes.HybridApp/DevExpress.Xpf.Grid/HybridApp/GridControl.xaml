<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=ErrorPanelTemplate}" TargetType="dxg:ErrorPanel">
        <Grid Margin="5">
            <Border Background="#FFFFFFFF" BorderBrush="#FFD9D9D9" BorderThickness="1" Padding="8,3,8,4"  >
                <Border>
                    <Grid Width="247" Margin="5,5,5,18">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Padding="9,3,0,0" Foreground="#FF191919" Text="Error" TextAlignment="Left" FontSize="18" Grid.Row="0" Grid.Column="1"   />
                        <Image x:Name="icon" Grid.RowSpan="2" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Image.Source>
                                <Binding Source="DevExpress.Xpf.Core.Core.Images.ErrorIcon.png" Converter="{dx:EmbeddedResourceImageConverter}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Padding="9,3,0,0" Foreground="#FF191919" Text="{Binding}" TextWrapping="Wrap" TextAlignment="Left" Grid.Row="1" Grid.Column="1"   />
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border Background="#FFBFBFBF"  >
            <Border.Padding>
                <Binding Path="(dxg:GridBorderHelper.ShowBorder)" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                    </Binding.Converter>
                </Binding>
            </Border.Padding>
            <Border Background="#FFFFFFFF"  >
                <ContentPresenter />
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=Template}" TargetType="{x:Type dxg:DataControlBase}">
        <!--BEGIN WPF-->
        <AdornerDecorator>
            <!--END WPF-->
            <Grid>
                <dx:DXArranger>
                    <dxgcore:DXGridThemesLoader x:Name="PART_ThemesLoader" dxgcore:GridBorderHelper.ShowBorder="{Binding Path=ShowBorder, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=BorderTemplate}}" />
                </dx:DXArranger>
                <dxgcore:ErrorPanel x:Name="PART_ErrorPanel" Visibility="Collapsed" />
                <dx:WaitIndicator x:Name="PART_LoadingPanel" DeferedVisibility="{TemplateBinding ShowLoadingPanel}" Style="{Binding Path=View.WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                <Canvas>
                    <Border 
                        x:Name="PART_selectionRectangle"
                        Style="{Binding Path=View.SelectionRectangleStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="Collapsed"/>
                </Canvas>
            </Grid>
            <!--BEGIN WPF-->
        </AdornerDecorator>
        <!--END WPF-->
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedGroupRowBorderTemplate}">
        <Rectangle StrokeThickness="1" Stroke="#FF191919" StrokeDashArray="1 2" SnapsToDevicePixels="True"   />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=VerticalFocusedGroupRowBorderTemplate}">
        <Rectangle StrokeThickness="1" Stroke="#FF191919" StrokeDashArray="1 2" SnapsToDevicePixels="True"   />
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailHeaderControl}" TargetType="{x:Type dxg:DetailHeaderControl}">
        <Setter Property="Foreground" Value="#FF191919"   />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=DetailHeaderControlTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupPanelCaptionControl}" TargetType="{x:Type dxg:GroupPanelCaptionControl}">
        <Setter Property="Foreground" Value="#FF191919"   />
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=GroupPanelCaptionTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailDescriptorContentBorder}" TargetType="{x:Type dxg:DetailDescriptorContentBorder}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="ShowBottomLine" Value="{Binding ShowBottomLine, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:DetailDescriptorContentBorder}">
                    <Border BorderBrush="#FFD9D9D9"  >
                        <Border.BorderThickness>
                            <Binding Path="ShowBottomLine" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter TrueValue="0,0,0,1" FalseValue="0" />
                                </Binding.Converter>
                            </Binding>
                        </Border.BorderThickness>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedRowBorderTemplate}">
        <Rectangle StrokeThickness="1" Stroke="#FF191919" StrokeDashArray="1 2" SnapsToDevicePixels="True"   />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderTemplate}">
        <Rectangle StrokeThickness="1" Stroke="#FF191919" StrokeDashArray="1 2" SnapsToDevicePixels="True"   />
    </ControlTemplate>
    <!--BEGIN WPF-->
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderCardViewTemplate}">
        <Rectangle StrokeThickness="1" Stroke="#FF191919" StrokeDashArray="1 2" SnapsToDevicePixels="True"   />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedCardBorderTemplate}">
        <Rectangle StrokeThickness="1" Stroke="#FF191919" StrokeDashArray="1 2" SnapsToDevicePixels="True"   />
    </ControlTemplate>

    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <dx:BoolInverseConverter x:Key="boolInverseConverter"/>
    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter"/>

    <ControlTemplate x:Key="GridSearchControlStandaloneTemplate">
        <ContentControl dx:FocusHelper2.Focusable="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <dxe:ComboBoxEdit MinHeight="22"
                    ImmediatePopup="{Binding Path= SearchControlPropertyProvider.ActualImmediateMRUPopup, RelativeSource={RelativeSource TemplatedParent}}"
                    x:Name="editor" AllowDefaultButton ="False" 
                    NullText="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpSearch, Converter={StaticResource EditorStringIdConverter}}"
                    ShowNullText="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverseConverter}}"
                    dxeh:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding Path=MRU, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="0"
                    ValidateOnEnterKeyPressed="True"
                    EditValuePostDelay="{Binding Path=SearchTextPostDelay, RelativeSource={RelativeSource TemplatedParent}}"
                    EditValuePostMode="{Binding Path=SearchControlPropertyProvider.ActualPostMode, RelativeSource={RelativeSource TemplatedParent}}"
                    EditValue="{Binding Path=SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <dxe:ComboBoxEdit.Resources>
                        <Style x:Key="borderStyle" TargetType="{x:Type Border}">
                            <Setter Property="BorderThickness" Value="1,0,0,0"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Width" Value="26"/>
                            <Setter Property="Height" Value="34"/>
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
                                    <Setter Property="Background" Value="#FFF6F6F6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </dxe:ComboBoxEdit.Resources>
                    <dxe:ComboBoxEdit.Buttons>
                        <dxe:ButtonInfo GlyphKind="Custom" x:Name="buttonClear"
                                        Command="{Binding Path=SetNullValueCommand, ElementName=editor}"
                                        Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <dxe:ButtonInfo.Template>
                                <DataTemplate>
                                    <Button Command="{Binding Command}" Visibility="{Binding Visibility}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Border Visibility="{Binding Visibility}" Style="{StaticResource borderStyle}">
                                                    <Image Source="/DevExpress.Xpf.Themes.HybridApp.v15.2;component/Images/Toolbar/Cancel.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-1" Stretch="Uniform" Height="20" Width="20" dxb:ImageColorizer.IsEnabled="True" dxb:ImageColorizer.Color="#FFA6A6A6"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </DataTemplate>
                            </dxe:ButtonInfo.Template>
                        </dxe:ButtonInfo>
                        <dxe:ButtonInfo GlyphKind="DropDown"
                                        Command="{Binding Path=OpenPopupCommand, ElementName=editor}"
                                        Visibility="{Binding Path=ShowMRUButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}"/>
                        <dxe:ButtonInfo GlyphKind="Custom"
                                        Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        CommandParameter="{Binding Path=FilterCriteria, RelativeSource={RelativeSource TemplatedParent}}" ButtonKind="Simple"
                                        Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}">
                            <dxe:ButtonInfo.Template>
                                <DataTemplate>
                                    <Border Visibility="{Binding Visibility}" Style="{StaticResource borderStyle}">
                                        <Image Source="pack://application:,,,/DevExpress.Images.v15.2;component/GrayScaleImages/Find/Find_32x32.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-1" Stretch="Uniform" Height="20" Width="20" dxb:ImageColorizer.IsEnabled="True" dxb:ImageColorizer.Color="#FFA6A6A6"/>
                                    </Border>
                                </DataTemplate>
                            </dxe:ButtonInfo.Template>
                        </dxe:ButtonInfo>
                    </dxe:ComboBoxEdit.Buttons>
                </dxe:ComboBoxEdit>
                <Button Grid.Column="1" Margin="4,0,0,0" MinWidth="55"
                        Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        CommandParameter="{Binding Path=FilterCriteria, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=FindButtonStyle}}"
                        />
                <Button Grid.Column="2" Margin="4,0,0,0" MinWidth="55"
                        Command="{Binding Path=SearchControlPropertyProvider.CloseCommandInternal, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"                        
                        Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}}"
                        Visibility="{Binding Path=ShowCloseButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                        />
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=StandaloneStyle}" TargetType="{x:Type dxg:GridSearchControl}">
        <Setter Property="Margin" Value="0,0,22,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Template" Value="{StaticResource GridSearchControlStandaloneTemplate}"/>
    </Style>
    <!--END WPF-->
</ResourceDictionary>