<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid Background="#00000000" Width="22" Height="22" SnapsToDevicePixels="True"  >
            <Path x:Name="GlyphExpanded" Stretch="Fill" Fill="#FFA0A0A0" Data="F1 M 11,0C 17.0751,0 22,4.92487 22,11C 22,17.0751 17.0751,22 11,22C 4.92487,22 -1.27157e-006,17.0751 -1.27157e-006,11C -1.27157e-006,4.92487 4.92487,0 11,0 Z M 11,2C 6.02943,2 2,6.02944 2,11C 2,15.9706 6.02943,20 11,20C 15.9706,20 20,15.9706 20,11C 20,6.02944 15.9706,2 11,2 Z M 11,8L 16,13L 6,13L 11,8 Z " Width="22" Height="22" />
            <Path x:Name="GlyphCollapsed" Stretch="Fill" Fill="#FFA0A0A0" Data="F1 M 11,0C 17.0751,0 22,4.92487 22,11C 22,17.0751 17.0751,22 11,22C 4.92487,22 -1.27157e-006,17.0751 -1.27157e-006,11C -1.27157e-006,4.92487 4.92487,0 11,0 Z M 11,2C 6.02943,2 2,6.02944 2,11C 2,15.9706 6.02943,20 11,20C 15.9706,20 20,15.9706 20,11C 20,6.02944 15.9706,2 11,2 Z M 11,15L 6,10L 16,10L 11,15 Z " Width="22" Height="22" Visibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFA0A0A0"   />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFA0A0A0"   />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFA0A0A0"   />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFA0A0A0"   />
            </Trigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFA0A0A0"   />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFA0A0A0"   />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFA0A0A0"   />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFA0A0A0"   />
            </DataTrigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Visibility" TargetName="GlyphCollapsed" Value="Visible" />
                <Setter Property="Visibility" TargetName="GlyphExpanded" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Border x:Name="Border" Grid.RowSpan="1">
                <ContentPresenter />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#FFFFFFFF"   />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="dx:TouchInfo.Margin" Value="{dx:TouchMarginInfo Value='0,0,4,0'}" />
    </Style>
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="12" />
    </Style>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="12,8,12,9" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="0,0,2,1" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="Focus" Background="#FF97A8D2" Margin="-3,0,-3,-3" Opacity="0" />
            <Border x:Name="Root" Background="#FFFFFFFF" BorderBrush="#FFC3C3C3" BorderThickness="1,0,1,1">
                <ContentPresenter />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Root" Property="Background" Value="#FFFFFFFF"   />
                <Setter TargetName="Root" Property="BorderBrush" Value="#FF7582A1"   />
                <Setter TargetName="Focus" Property="Opacity" Value="1" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter TargetName="Root" Property="BorderBrush" Value="#FF7582A1"   />
                <Setter TargetName="Focus" Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter TargetName="Root" Property="BorderBrush" Value="#FF7582A1"   />
                <Setter TargetName="Focus" Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="Focus" Background="#FF97A8D2" Margin="-3,-3,-3,0" Opacity="0" />
            <Border x:Name="Root"  Background="#FFF6F6F6" BorderBrush="#FFC3C3C3" BorderThickness="1,1,1,0"  >
                <ContentPresenter />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Focus" Property="Opacity" Value="1" />
                <Setter TargetName="Root" Property="BorderBrush" Value="#FF7582A1"   />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter TargetName="Root"  Property="BorderBrush" Value="#FF7582A1"   />
                <Setter TargetName="Focus" Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter TargetName="Root" Property="BorderBrush" Value="#FF7582A1"   />  
                <Setter TargetName="Focus" Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
                <Setter TargetName="Root" Property="BorderThickness" Value="1" />
                <Setter TargetName="Focus" Property="Margin" Value="-3" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}" Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl x:Name="cardHeader" Foreground="#FF404040">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}" />
                            </ContentControl>
                            <ContentControl Grid.Column="1" Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}" />
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}" />
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse" Value="True" TargetName="gridCardPanel" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="Foreground" Value="#FF404040" TargetName="cardHeader"   />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="Foreground" Value="#FF404040" TargetName="cardHeader"   />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>