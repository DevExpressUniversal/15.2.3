<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisLight.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/MetropolisLight/Brushes.xaml" />
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisLight.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/PopupListBox.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <dx:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid x:Name="Root">
            <Rectangle x:Name="FocusVisual" StrokeThickness="1" Stroke="#FF373A3D" StrokeDashArray="1 2" Opacity="0" cs:Name="Rectangle_0001" />
            <Rectangle x:Name="FocusedState" StrokeThickness="1" Stroke="#FFF78A09" StrokeDashArray="1 2" Opacity="0" cs:Name="Rectangle_0002" />
            <Border x:Name="InactiveSelectedState" Background="#FFB9B9B9" Opacity="0" cs:Name="Border_0001" />
            <Border x:Name="HoverState" Background="#FFE3E3E3" Opacity="0" cs:Name="Border_0003" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border x:Name="SelectedState" Background="#FFF78A09" Opacity="0" cs:Name="Border_0002" />
            <dx:ContentContainer x:Name="content" cs:Name="ContentContainer_0001">
                <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" LastChildFill="True">
                    <dxei:ImagePresenter Padding="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemImagePadding}}" DockPanel.Dock="Left" />
                    <ContentPresenter x:Name="contentPresenter" Margin="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemContentPadding}}" Width="Auto" Height="Auto" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </DockPanel>
            </dx:ContentContainer>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="content" Property="ForegroundSolidColor1" Value="#FF373A3D" cs:Name="Setter_0005" />
            </DataTrigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="content" Property="ForegroundSolidColor1" Value="#FF373A3D" cs:Name="Setter_0001" />
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="content" Property="ForegroundSolidColor1" Value="#FF373A3D" cs:Name="Setter_0002" />
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="content" Property="ForegroundSolidColor1" Value="#FFFFFFFF" cs:Name="Setter_0003" />
                <Setter TargetName="SelectedState" Property="Opacity" Value="1" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="content" Property="ForegroundSolidColor1" Value="#FF373A3D" cs:Name="Setter_0004" />
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="1" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="0" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="content" Property="Opacity" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>