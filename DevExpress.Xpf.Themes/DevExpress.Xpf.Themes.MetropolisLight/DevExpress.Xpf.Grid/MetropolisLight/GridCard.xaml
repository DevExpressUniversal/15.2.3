<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid Background="#00000000" Width="14" Height="14" SnapsToDevicePixels="True" cs:Name="Grid_0001">
            <Path x:Name="GlyphExpanded" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 227,30.4999C 227,26.91 224.09,24 220.5,24C 216.91,24 214,26.91 214,30.4999C 214,34.0897 216.91,36.9999 220.5,36.9999C 224.09,36.9999 227,34.0897 227,30.4999 Z M 226,30.5001C 226,33.5377 223.537,36.0001 220.5,36.0001C 217.462,36.0001 215,33.5377 215,30.5001C 215,27.4625 217.462,25.0001 220.5,25.0001C 223.537,25.0001 226,27.4625 226,30.5001 Z M 220,33.9999L 220,33.9999L 221,33.9999L 221,33.9999L 224,30.9999L 224,28.9999L 221,31.9999L 221,26.9999L 220,26.9999L 220,31.9999L 217,28.9999L 217,30.9999L 220,33.9999 Z " Width="13" Height="13" cs:Name="Path_0001" />
            <Path x:Name="GlyphCollapsed" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 227,16.5C 227,20.0898 224.09,22.9999 220.5,22.9999C 216.91,22.9999 214,20.0898 214,16.5C 214,12.9102 216.91,10 220.5,10C 224.09,10 227,12.9102 227,16.5 Z M 226,16.4999C 226,13.4623 223.537,10.9999 220.5,10.9999C 217.462,10.9999 215,13.4623 215,16.4999C 215,19.5374 217.462,21.9998 220.5,21.9998C 223.537,21.9998 226,19.5374 226,16.4999 Z M 220,13L 220,13L 221,13L 221,13.0001L 224,16L 224,18L 221,15L 221,20L 220,20L 220,15L 217,18L 217,16L 220,13 Z " Width="13" Height="13" Visibility="Collapsed" cs:Name="Path_0002" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0001" />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0002" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0003" />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0004" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0012" />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0013" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter TargetName="GlyphCollapsed" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0014" />
                <Setter TargetName="GlyphExpanded" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0015" />
            </DataTrigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Visibility" TargetName="GlyphCollapsed" Value="Visible" />
                <Setter Property="Visibility" TargetName="GlyphExpanded" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Border x:Name="Focus" BorderBrush="#FFF78A09" BorderThickness="1" Margin="-2" Opacity="0" cs:Name="Border_0004" />
            <Border x:Name="Border" Grid.RowSpan="1">
                <ContentPresenter />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#FFFFFFFF" cs:Name="Setter_0005" />
                <Setter TargetName="Focus" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,4,0" />
    </Style>
    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="11" />
    </Style>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="11,3,11,3" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="Root" Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1,0,1,1" cs:Name="Border_0002">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="BorderBrush" TargetName="Root" Value="#FFFFFFFF" cs:Name="Setter_0045" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="BorderBrush" TargetName="Root" Value="#FFB9B9B9" cs:Name="Setter_0046" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Background="#FFF78A09" cs:Name="Grid_0002">
            <Border x:Name="Root" Background="#FFB9B9B9" BorderBrush="#FFB9B9B9" BorderThickness="1,1,1,0" cs:Name="Border_0003" />
            <ContentPresenter />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="Background" TargetName="Root" Value="#FFF78A09" cs:Name="Setter_0009" />
                <Setter Property="BorderBrush" TargetName="Root" Value="#FFF78A09" cs:Name="Setter_0047" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="Background" TargetName="Root" Value="#FFF78A09" cs:Name="Setter_0011" />
                <Setter Property="BorderBrush" TargetName="Root" Value="#FFF78A09" cs:Name="Setter_0048" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
                <Setter Property="BorderThickness" TargetName="Root" Value="1" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}" Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
                <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                    <dxg:GridCardPanel.Header>
                        <dxg:GridCardHeaderControl x:Name="cardHeader" Foreground="#FFFFFFFF" cs:Name="GridCardHeaderControl_0001">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                    <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}" />
                                </ContentControl>
                                <ContentControl Grid.Column="1" Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}">
                                    <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}" />
                                </ContentControl>
                            </Grid>
                        </dxg:GridCardHeaderControl>
                    </dxg:GridCardPanel.Header>
                    <dxg:GridCardPanel.Body>
                        <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                            <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}" />
                        </ContentControl>
                    </dxg:GridCardPanel.Body>
                </dxg:GridCardPanel>
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse" Value="True" TargetName="gridCardPanel" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="Foreground" Value="#FFFFFFFF" TargetName="cardHeader" cs:Name="Setter_0033" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="Foreground" Value="#FFFFFFFF" TargetName="cardHeader" cs:Name="Setter_0044" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>