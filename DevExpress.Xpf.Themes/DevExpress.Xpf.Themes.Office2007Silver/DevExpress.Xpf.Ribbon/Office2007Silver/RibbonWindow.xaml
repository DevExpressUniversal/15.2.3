<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"                       
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys">
            
    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <Thickness x:Key="{dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}">6</Thickness>
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerCaptionTemplate}">
        <Grid>
            <dxb:ContentViewport KeepPositiveLeftContentPosition="True" ClipToBounds="True">
                <TextBlock x:Name="TitleTextBlock" Foreground="#FF5C626A" Text="{Binding}" TextWrapping="Wrap" Margin="6,3,6,3" VerticalAlignment="Center" IsHitTestVisible="False" HorizontalAlignment="Center" />
            </dxb:ContentViewport>
        </Grid>  
    </DataTemplate>
     
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"/>
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22" />  
        <Setter Property="Height" Value="22" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}}"/>
    </Style>
    
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}}" />
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}"     TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}"        TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}"      TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}}"/>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}" TargetType="{x:Type dxr:RibbonShowModeSelectorItem}">
        <Grid x:Name="Button" Width="22" Height="22" Background="#00FFFEFE ">
            <Border x:Name="hoveredState" Visibility="Hidden" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB6BEC8 " Offset="0" />
                        <GradientStop Color="#FFD4DAE2 " Offset="1" />
                        <GradientStop Color="#FFB5C0CE " Offset="0.5" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFEFEFF " Offset="0" />
                            <GradientStop Color="#FFFCFDFE " Offset="1" />
                            <GradientStop Color="#FFF4F7FB " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFBFBFD " Offset="0" />
                                <GradientStop Color="#FFE9EEF4 " Offset="1" />
                                <GradientStop Color="#FFF9FAFC " Offset="0.5" />
                                <GradientStop Color="#FFEBF0F7 " Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="pressedState" Visibility="Hidden" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF8D949A " Offset="0" />
                        <GradientStop Color="#FFADB2B8 " Offset="1" />
                        <GradientStop Color="#FF989CA2 " Offset="0.5" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFEEF1F5 " Offset="0" />
                            <GradientStop Color="#FFFBFDFF " Offset="1" />
                            <GradientStop Color="#FFC5C8CC " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFE2E5E8 " Offset="0" />
                                <GradientStop Color="#FFD3E0E7 " Offset="1" />
                                <GradientStop Color="#FFBABDC2 " Offset="0.5" />
                                <GradientStop Color="#FF9399A1 " Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Grid x:Name="Glyph"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Width="10" Height="10">
                <Path Stretch="Fill" Fill="#FF454545" Data="F1 M 1,1L 9,1L 9,2L 5,2L 9,6L 6,6L 6,9L 4,9L 4,6L 1,6L 5,2L 1,2L 1,1 Z " Width="8" Height="8" />           
            </Grid>            
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hoveredState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressedState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Button" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid x:Name="Button" Background="#00FFFEFE ">
            <Border x:Name="hoveredState" Visibility="Hidden" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB6BEC8 " Offset="0" />
                        <GradientStop Color="#FFD4DAE2 " Offset="1" />
                        <GradientStop Color="#FFB5C0CE " Offset="0.5" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFEFEFF " Offset="0" />
                            <GradientStop Color="#FFFCFDFE " Offset="1" />
                            <GradientStop Color="#FFF4F7FB " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFBFBFD " Offset="0" />
                                <GradientStop Color="#FFE9EEF4 " Offset="1" />
                                <GradientStop Color="#FFF9FAFC " Offset="0.5" />
                                <GradientStop Color="#FFEBF0F7 " Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="pressedState" Visibility="Hidden" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF8D949A " Offset="0" />
                        <GradientStop Color="#FFADB2B8 " Offset="1" />
                        <GradientStop Color="#FF989CA2 " Offset="0.5" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFEEF1F5 " Offset="0" />
                            <GradientStop Color="#FFFBFDFF " Offset="1" />
                            <GradientStop Color="#FFC5C8CC " Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFE2E5E8 " Offset="0" />
                                <GradientStop Color="#FFD3E0E7 " Offset="1" />
                                <GradientStop Color="#FFBABDC2 " Offset="0.5" />
                                <GradientStop Color="#FF9399A1 " Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Grid x:Name="Glyph"
                  HorizontalAlignment="Right" VerticalAlignment="Center"
                  Width="13" Height="9" Margin="9,0,9,0">
                <Path Stretch="Fill" Fill="#FF535666" Data="F1 M 1,1L 4,1L 4,4L 1,4L 1,1 Z M 5,1L 8,1L 8,4L 5,4L 5,1 Z M 9,1L 12,1L 12,4L 9,4L 9,1 Z " Width="11" Height="3" Margin="1" VerticalAlignment="Bottom" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hoveredState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressedState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Button" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBorder" Background="#FF949494" CornerRadius="0" Padding="1,1,1,1">
            <Border x:Name="FloatingContainerBackground" Background="#FFE8EDF6" CornerRadius="0">
                <ContentPresenter />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBorder" Value="#FFC8C8C8" />
                <Setter Property="Background" TargetName="FloatingContainerBackground" Value="#FFF2F5F9" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxr:RibbonControlHelper.IsAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Padding" TargetName="FloatingContainerBorder" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="PART_Header" CornerRadius="0">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE3E4E7" Offset="0" />
                    <GradientStop Color="#FFE8EDF6" Offset="1" />
                    <GradientStop Color="#FFC9CCD1" Offset="0.3" />
                    <GradientStop Color="#FFBCC3CC" Offset="0.3" />
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="PART_Header" Value="#FFF2F5F9" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBody" Background="#FFBBBABA" Padding="1,1,1,1">
            <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                <ContentPresenter />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBody" Value="#FFD6D6D6" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="4,0,4,4" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}" TargetType="{x:Type ContentControl}">
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="2" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="6,3,6,3" />
        <Setter Property="Foreground" Value="#FF5C626A" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="6,3,0,3" />
        <Setter Property="Stretch" Value="None" />
    </Style>
    
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerTemplate}">
        <Border x:Name="FloatingContainerBorder" Background="#FF949494" CornerRadius="0" Padding="1,1,1,1">
            <Border x:Name="FloatingContainerBackground" Background="#ffe8edf6" CornerRadius="0">
                <Grid>
                    <Grid x:Name="PART_Header">
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" Grid.Column="0" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="FloatingContainerHeaderBorder" CornerRadius="0" IsHitTestVisible="False"
                                      Height="{Binding Path=RenderSize.Height, ElementName=FloatingContainerHeaderContent}"
                                      Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}"> 
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFe3e4e7" Offset="0" />
                                        <GradientStop Color="#FFe8edf6" Offset="1" />
                                        <GradientStop Color="#FFc9ccd1" Offset="0.3" />
                                        <GradientStop Color="#FFbcc3cc" Offset="0.3" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border Margin="4,0,4,4" x:Name="FloatingContainerBody" Grid.Row="1" Background="#FFbbbaba" Padding="1,1,1,1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Grid.RowSpan="2" Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                                        <ContentPresenter x:Name="PART_ContainerContent" Content="{Binding}" />
                                    </Grid>
                                    <StackPanel x:Name="PART_StatusPanel" Grid.Row="1">
                                        <Border Height="Auto" Background="{x:Null}" HorizontalAlignment="Right">
                                            <Thumb Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
                                Cursor="SizeNWSE"
                                HorizontalAlignment="Right"
                                x:Name="PART_SizeGrip"
                                VerticalAlignment="Bottom"
                                Width="16"
                                Height="16" />
                                        </Border>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>

                        <Grid x:Name="FloatingContainerHeaderContent" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_CaptionContentPresenter"
                                Panel.ZIndex="100"
                                Grid.Column="0"
                                Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}"
                                Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                            <ContentPresenter x:Name="PART_RibbonCaptionContentPresenter"
                                HorizontalAlignment="Left"
                                Panel.ZIndex="100"
                                Grid.Column="0"
                                Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=RibbonFloatingContainerCaptionTemplate}}"
                                Visibility="{Binding Path=IsRibbonCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                            <StackPanel Margin="2" Grid.Column="1" Orientation="Horizontal" x:Name="stackPanel">
                                <Button Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"
                                x:Name="PART_Minimize"
                                Width="22"
                                Height="22"
                                Focusable="False"
                                />
                                <Button Focusable="False"
                                Height="22"
                                Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"
                                Width="22"
                                x:Name="PART_Restore"
                                Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}" />
                                <Button Focusable="False"
                                Height="22"
                                Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"
                                Width="22"
                                x:Name="PART_Maximize"
                                Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" />
                                <Button Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"
                                x:Name="PART_CloseButton"
                                Width="22"
                                Height="22"
                                Focusable="False"
                                />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBorder" Value="#ffc8c8c8" />
                <Setter Property="Background" TargetName="FloatingContainerBackground" Value="#fff2f5f9" />
                <Setter Property="Background" TargetName="PART_Header" Value="#fff2f5f9" />
                <Setter Property="Background" TargetName="FloatingContainerBody" Value="#ffd6d6d6" />
                <Setter Property="Opacity" TargetName="stackPanel" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsMaximized)}" Value="True">
                <Setter Property="Margin" TargetName="FloatingContainerBorder" Value="0,0,0,0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>