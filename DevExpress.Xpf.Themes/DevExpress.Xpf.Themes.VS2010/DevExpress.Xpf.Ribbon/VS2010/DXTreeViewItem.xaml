<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Ribbon.v15.2;component/Themes/Generic/DXTreeViewItem.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->

    <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid>
            <Grid SnapsToDevicePixels="True"> 
                <Border x:Name="HoverHighlight" Width="14" Height="14" Opacity="0">
                    <Border.Background>
                        <RadialGradientBrush>
                            <GradientStop Color="#FFFFC815" Offset="0" />
                            <GradientStop Color="#00FFC815" Offset="1" />
                        </RadialGradientBrush>
                    </Border.Background>
                </Border>
                <Grid x:Name="GlyphExpanded" Width="7" Height="7" Margin="0,0,1,1" Visibility="Collapsed">
                    <Path x:Name="Path1" Stretch="Fill" Fill="#FF303336" Data="F1 M 5.98438,24.9948L 12.9428,24.9948L 13.9222,24.0155L 13.9222,16.91L 5.98438,24.9948 Z" />
                    <Path x:Name="Path2" Stretch="Fill" Fill="#FF303336" Data="F1 M 5.98438,24.9948L 12.9428,24.9948L 13.9222,24.0155L 13.9222,16.91L 5.98438,24.9948 Z" />
                    <Path x:Name="Path3" Stretch="Fill" Fill="#FF87898A" Data="F1 M 13.0677,23.9948L 13.0677,19.0358L 8.06719,24.0363L 13.0677,23.9948 Z" Margin="2,2,1,1" />
                </Grid>
                <Grid x:Name="GlyphCollapsed" Width="5" Height="10" Margin="1,0,0,0">
                    <Path x:Name="Path4" Stretch="Fill" Fill="#FF818181" Data="F1 M 22,13.9999L 22,24L 27,19L 22,13.9999 Z" />
                    <Path x:Name="Path5" Stretch="Fill" Fill="#FF818181" Data="F1 M 22,13.9999L 22,24L 27,19L 22,13.9999 Z" />
                    <Path x:Name="Path6" Stretch="Fill" Fill="#FFF8F8F8" Data="F1 M 22,13.9999L 22,24L 27,19L 22,13.9999 Z" Margin="1" Width="3" Height="6" />
                </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Checked">
                        <Storyboard>                            
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="Path1" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFFFC815" />
                                <ColorAnimation Storyboard.TargetName="Path2" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFFFC815" />
                                <ColorAnimation Storyboard.TargetName="Path3" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFFFF5BF" />
                                <ColorAnimation Storyboard.TargetName="Path4" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFFFC815" />
                                <ColorAnimation Storyboard.TargetName="Path5" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFFFC815" />
                                <ColorAnimation Storyboard.TargetName="Path6" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FFFFF5BF" />
                                <DoubleAnimation Storyboard.TargetName="HoverHighlight" Storyboard.TargetProperty="Opacity" Duration="0" To="0.15" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}}" />
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
        <Setter Property="Margin" Value="20,0,0,0" />
    </Style>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Foreground" Value="#FF1B293E" />
    </Style>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=GlyphStyle}" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!-- For Removing -->
    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=GlyphContainerStyle}" TargetType="{x:Type ContentControl}" />

    <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid SnapsToDevicePixels="True">
            <Grid x:Name="PART_Normal" />
            <Grid x:Name="PART_Hover" Opacity="0">
                <Border Background="#FFE4C97F" CornerRadius="2" Padding="1">
                    <Border CornerRadius="1" Padding="1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFFBF0" Offset="0" />
                                <GradientStop Color="#FFFFE8A6" Offset="1" />
                                <GradientStop Color="#FFFFF4D2" Offset="0.5" />
                                <GradientStop Color="#FFFFE8A6" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="PART_Pressed" Opacity="0">
                <Border Background="#FFE4C97F" CornerRadius="2" Padding="1">
                    <Border Background="#FFFFF9E9" CornerRadius="1" Padding="1">
                        <Border Background="#FFFFE8A6" CornerRadius="1" Padding="1" />
                    </Border>
                </Border>
            </Grid>
            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}}" />
    </Style>

    <!--GroupItem-->

    <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF4C607A" />
    </Style>

    <ControlTemplate x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
            <Border BorderBrush="#FFBAC2D1" BorderThickness="0,0,0,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFEEF1F3" Offset="0" />
                        <GradientStop Color="#FFDADFE7" Offset="1" />
                        <GradientStop Color="#FFDFE3EA" Offset="0.5" />
                        <GradientStop Color="#FFDADFE7" Offset="0.5" />
                    </LinearGradientBrush>
                </Border.Background>
                <ContentControl Content="{TemplateBinding Content}" Margin="1" />
            </Border>
    </ControlTemplate>

    <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}}" />
    </Style>

</ResourceDictionary>