<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxr="clr-namespace:DevExpress.Xpf.Ribbon"
                    xmlns:dxrt="clr-namespace:DevExpress.Xpf.Ribbon.Themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Ribbon.v15.2;component/Themes/Generic/DXTreeViewItem.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid Background="Transparent">
            <Path x:Name="Glyph"
                  Stretch="Fill" Fill="#FFB2C6E4"
                  Data="F1 M 379.5,270C 383.642,270 387,273.358 387,277.5C 387,281.642 383.642,285 379.5,285C 375.358,285 372,281.642 372,277.5C 372,273.358 375.358,270 379.5,270 Z M 380,281L 383,275L 376,275L 379,281L 380,281 Z"
                  Width="15" Height="15"
                  RenderTransformOrigin="0.5,0.5"
                  IsHitTestVisible="True"
                  >
                <Path.RenderTransform>                    
                        <RotateTransform Angle="-90" />                    
                </Path.RenderTransform>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Duration="00:00:00.2" To="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover" />
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFB2C6E4" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}}" />
        <Setter Property="Margin" Value="4" />        
    </Style>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
        <Setter Property="Margin" Value="20,0,0,0" />
    </Style>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Foreground" Value="#FF000000" />
    </Style>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=GlyphStyle}" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="2" />
    </Style>

    <!-- For Removing -->
    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=GlyphContainerStyle}" TargetType="{x:Type ContentControl}" />

    <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid SnapsToDevicePixels="True">
            <Grid x:Name="PART_Normal" />
            <Grid x:Name="PART_Hover" Opacity="0">
                <Border CornerRadius="2">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFAFC0DA" Offset="0" />
                            <GradientStop Color="#FFA5B7D2" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Grid>
            <Grid x:Name="PART_Pressed" Opacity="0">
                <Border CornerRadius="2">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FF4B6FA5" Offset="0" />
                            <GradientStop Color="#FF5E81B4" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Grid>
            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}}" />
    </Style>

    <!--GroupItem-->

    <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FFE5E9F2" />
    </Style>

    <ControlTemplate x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Border Background="#FF92B1DE" BorderBrush="#FF5F85BB" BorderThickness="0,0,0,1" DataContext="{Binding}">
            <ContentControl Content="{TemplateBinding Content}" Margin="1" />
        </Border>
    </ControlTemplate>

    <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}}" />
    </Style>

</ResourceDictionary>