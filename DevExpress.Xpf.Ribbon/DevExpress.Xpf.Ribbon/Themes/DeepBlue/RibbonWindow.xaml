<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"                       
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxr="clr-namespace:DevExpress.Xpf.Ribbon"
                    xmlns:dxrt="clr-namespace:DevExpress.Xpf.Ribbon.Themes"
                    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Core.v15.2;component/Themes/DeepBlue/PseudoWindow.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Core.v15.2;component/Themes/Generic/Window.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Ribbon.v15.2;component/Themes/Generic/RibbonWindow.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Thickness x:Key="{dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}">6</Thickness>
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerCaptionTemplate}">
        <Grid>
            <dxb:ContentViewport KeepPositiveLeftContentPosition="True" ClipToBounds="True">
                <TextBlock x:Name="TitleTextBlock" Foreground="#FFD4E4F8" Text="{Binding}" TextWrapping="Wrap" Margin="6,3,6,3" VerticalAlignment="Center" IsHitTestVisible="False" HorizontalAlignment="Center" />
            </dxb:ContentViewport>
        </Grid>
    </DataTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"/>
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="22" /> 
        <Setter Property="Height" Value="22" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}}"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>
    
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}}" />
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}"     TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}"        TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}}"/>
    <Style x:Key="{dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}"      TargetType="{x:Type Button}" BasedOn="{StaticResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}}"/>
        
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}" TargetType="{x:Type dxr:RibbonShowModeSelectorItem}">
        <Grid Background="#00FFFEFE">
            <Grid x:Name="hover" Visibility="Hidden">
                <Border Margin="2,2,0,0" Opacity="0.05" Background="#FF000000" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF5379AE" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border CornerRadius="2,2,2,2" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0" />
                                <GradientStop Color="#FFADD0F6" Offset="1" />
                                <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0" />
                                    <GradientStop Color="#FFAED1F6" Offset="1" />
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Visibility="Hidden">
                <Border Margin="2,2,1,0" Opacity="0.15" Background="#FFFFFFFF" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF3E6296" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border Background="#FF5576A6" CornerRadius="2,2,2,2" Padding="1,1,1,1" />
                </Border>
            </Grid>
            <Border x:Name="glyph" Opacity="0.85">
                <Grid Margin="0,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Stretch="Fill" Fill="#FFD2DFFB" Data="F1 M 1,1L 9,1L 9,2L 5,2L 9,6L 6,6L 6,9L 4,9L 4,6L 1,6L 5,2L 1,2L 1,1 Z " Width="8" Height="8" Margin="0,0,0,-1"  />
                    <Path Stretch="Fill" Fill="#FF2F4C8A" Data="F1 M 1,1L 9,1L 9,2L 5,2L 9,6L 6,6L 6,9L 4,9L 4,6L 1,6L 5,2L 1,2L 1,1 Z " Width="8" Height="8"  />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hover" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressed" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="glyph" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00FFFEFE" x:Name="Button">
            <Grid x:Name="hover" Visibility="Hidden">
                <Border Margin="2,2,0,0" Opacity="0.05" Background="#FF000000" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF5379AE" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border CornerRadius="2,2,2,2" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0" />
                                <GradientStop Color="#FFADD0F6" Offset="1" />
                                <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0" />
                                    <GradientStop Color="#FFAED1F6" Offset="1" />
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Visibility="Hidden">
                <Border Margin="2,2,1,0" Opacity="0.15" Background="#FFFFFFFF" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF3E6296" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border Background="#FF5576A6" CornerRadius="2,2,2,2" Padding="1,1,1,1" />
                </Border>
            </Grid>
            <Border x:Name="glyph" Opacity="0.85" HorizontalAlignment="Right" Margin="0,0,5,0">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Stretch="Fill" Fill="#FFD2DFFB" Data="F1 M 1,1L 4,1L 4,4L 1,4L 1,1 Z M 5,1L 8,1L 8,4L 5,4L 5,1 Z M 9,1L 12,1L 12,4L 9,4L 9,1 Z "  Width="11" Height="3" Margin="0,0,0,-1" />
                    <Path Stretch="Fill" Fill="#FF2F4C8A" Data="F1 M 1,1L 4,1L 4,4L 1,4L 1,1 Z M 5,1L 8,1L 8,4L 5,4L 5,1 Z M 9,1L 12,1L 12,4L 9,4L 9,1 Z "  Width="11" Height="3" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hover" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressed" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="glyph" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBorder" Background="#FF062B63" CornerRadius="0" Padding="1,1,1,1">
            <Border x:Name="FloatingContainerBackground" Background="#FF6489BC" CornerRadius="0">
                <ContentPresenter />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dxc:FloatingContainer.IsActive" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBorder" Value="#FF8295b1" />
                <Setter Property="Background" TargetName="FloatingContainerBackground" Value="#FFb1c4dd" />
            </Trigger>
            <Trigger Property="dxr:RibbonControlHelper.IsAutoHide" Value="True">
                <Setter Property="Padding" TargetName="FloatingContainerBorder" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="PART_Header" CornerRadius="0">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF88AAD7" Offset="0" />
                    <GradientStop Color="#FF6489BC" Offset="1" />
                    <GradientStop Color="#FF678BBF" Offset="0.5" />
                    <GradientStop Color="#FF587DB3" Offset="0.5" />
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dxc:FloatingContainer.IsActive" Value="False">
                <Setter Property="Background" TargetName="PART_Header">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFb1c4dd" Offset="1" />
                            <GradientStop Color="#FFc3d4ea" Offset="0" />
                            <GradientStop Color="#FFb3c5df" Offset="0.5" />
                            <GradientStop Color="#FFabbed9" Offset="0.5" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBody" Background="#FF4D6E9C" Padding="1,1,1,1">
            <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                <ContentPresenter />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dxc:FloatingContainer.IsActive" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBody" Value="#FFa6b6cd" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="4,0,4,4" />
    </Style>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}" TargetType="{x:Type ContentControl}">        
        <ContentPresenter />
    </ControlTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}" TargetType="{x:Type ContentControl}">                
        
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="2" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="6,3,6,3" />
        <Setter Property="Foreground" Value="#FFD4E4F8" />        
    </Style>
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

   
    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="6,3,0,3" />
        <Setter Property="Stretch" Value="None" />
    </Style>

</ResourceDictionary>