<local:BaseTabsCustomizationControl x:Class="DevExpress.Xpf.Ribbon.Customization.TabsCustomizationControl" x:Name="customizationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxmvvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:dxr="clr-namespace:DevExpress.Xpf.Ribbon"             
             xmlns:local="clr-namespace:DevExpress.Xpf.Ribbon.Customization"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxrt="clr-namespace:DevExpress.Xpf.Ribbon.Themes"                                    
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=local:TabsCustomizationControl, IsDesignTimeCreatable=False}"
             d:DesignHeight="500" d:DesignWidth="800">
    <local:BaseTabsCustomizationControl.Resources>
        <DataTemplate x:Key="itemContentTemplate">
            <ContentPresenter Content="{Binding}" Margin="24,2,24,2"/>
        </DataTemplate>
        <DataTemplate x:Key="arrowTemplate">
                <dxr:CustomizationArrowControl Direction="{Binding}" Margin="5"/>            
        </DataTemplate>
        <DataTemplate x:Key="itemHeaderTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="16"/>
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0" IsChecked="{Binding IsVisible}" Visibility="{Binding CanHide, Converter={dxmvvvm:BooleanToVisibilityConverter}}"/>
                <Image Grid.Column="1" Width="16" Source="{Binding Glyph}" Visibility="{Binding HasGlyph, Converter={dxmvvvm:BooleanToVisibilityConverter}}"/>
                <ContentControl Grid.Column="1" Content="{Binding Glyph}" ContentTemplate="{Binding GlyphTemplate}" Visibility="{Binding HasGlyphTemplate, Converter={dxmvvvm:BooleanToVisibilityConverter}}"/>
                <ContentPresenter x:Name="PART_ContentHost" Content="{Binding Content}" Grid.Column="2" />
                <dx:DXImage Grid.Column="3" Source="pack://application:,,,/DevExpress.Xpf.Ribbon.v15.2;component/Images/barEditItemCustomizationIcon.png" Visibility="{Binding IsEditor, Converter={dxmvvvm:BooleanToVisibilityConverter}}"/>
                <dx:DXImage Grid.Column="3" Source="pack://application:,,,/DevExpress.Xpf.Ribbon.v15.2;component/Images/barSplitButtonItemCustomizationIcon.png" Visibility="{Binding IsDropDown, Converter={dxmvvvm:BooleanToVisibilityConverter}}"/>
                <dx:DXImage Grid.Column="3" Source="pack://application:,,,/DevExpress.Xpf.Ribbon.v15.2;component/Images/barSubItemCustomizationIcon.png" Visibility="{Binding IsMenu, Converter={dxmvvvm:BooleanToVisibilityConverter}}"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding CreatedByCustomizationDialog}" Value="True">
                    <Setter TargetName="PART_ContentHost" Property="ContentStringFormat" Value="{}{0} (Custom)"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style TargetType="{x:Type TreeViewItem}" x:Key="itemContainerStyle">
            <Setter Property="ItemsSource" Value="{Binding Items}"/>
            <Setter Property="Header" Value="{Binding}"/>
            <Setter Property="Visibility" Value="{Binding IsRemoved, Converter={dxmvvvm:BooleanToVisibilityConverter Inverse=True}}"/>
            <Setter Property="HeaderTemplate" Value="{StaticResource itemHeaderTemplate}"/>
        </Style>
    </local:BaseTabsCustomizationControl.Resources>
    <local:BaseTabsCustomizationControl.LeftPartItems>
        <dxb:BarSubItem Content="Reset" IsPrivate="True">
            <dxb:BarButtonItem Content="Reset only selected ribon page" Command="{Binding ResetCurrentPageCommand}" IsPrivate="True" ContentTemplate="{StaticResource itemContentTemplate}"/>
            <dxb:BarButtonItem Content="Reset all customizations" Command="{Binding ResetAllCustomizationsCommand}" IsPrivate="True" ContentTemplate="{StaticResource itemContentTemplate}"/>
        </dxb:BarSubItem>
    </local:BaseTabsCustomizationControl.LeftPartItems>
    <Grid Margin="0,0,0,15">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TreeView x:Name="emptyView" Width="0" Height="0" IsHitTestVisible="False"/>
        <Grid x:Name="leftside" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Choose commands from:" Grid.Row="0"/>
            <ComboBox Grid.Row="1" SelectedIndex="{Binding LeftTabsMode}" Margin="0,0,0,8">
                <ComboBoxItem Content="All items" x:Name="allItemsLeft"/>
                <ComboBoxItem Content="All tabs" x:Name="allTabsLeft"/>
            </ComboBox>
            <Border Grid.Row="2" Background="{Binding ElementName=emptyView, Path=Background}" BorderBrush="{Binding ElementName=emptyView, Path=BorderBrush}" BorderThickness="{Binding ElementName=emptyView, Path=BorderThickness}">
                <ScrollViewer>
                    <TreeView local:CustomizationHelpers.StretchElement="PART_Header" x:Name="leftTreeView"
                      ItemsSource="{Binding Path=LeftSource}"
                      ItemContainerStyle="{StaticResource itemContainerStyle}"
                      BorderBrush="Transparent" Background="Transparent" BorderThickness="0"                      
                      />
                </ScrollViewer>
            </Border>
        </Grid>
        <Grid x:Name="center" Grid.Column="1">
            <dxb:ToolBarControl Orientation="Vertical" RotateWhenVertical="False" AllowQuickCustomization="False" VerticalAlignment="Center" ShowBackground="False" BarItemHorizontalIndent="3" BarItemVerticalIndent="3" Margin="12">
                <dxb:BarButtonItem Content="{x:Static dxr:CustomizationArrowControlDirection.Up}" Command="{Binding RightElement.MoveUpCommand}" IsEnabled="{Binding RightElement, Converter={dxmvvvm:ObjectToBooleanConverter}}" IsPrivate="True" ContentTemplate="{StaticResource arrowTemplate}"/>
                <dxb:BarButtonItem Content="{x:Static dxr:CustomizationArrowControlDirection.Down}" Command="{Binding RightElement.MoveDownCommand}" IsEnabled="{Binding RightElement, Converter={dxmvvvm:ObjectToBooleanConverter}}" IsPrivate="True" ContentTemplate="{StaticResource arrowTemplate}"/>
                <dxb:BarButtonItem Content="{x:Static dxr:CustomizationArrowControlDirection.Right}" Command="{Binding RightElement.AddCommand}" CommandParameter="{Binding LeftElement}" IsEnabled="{Binding RightElement, Converter={dxmvvvm:ObjectToBooleanConverter}}" IsPrivate="True" ContentTemplate="{StaticResource arrowTemplate}"/>
                <dxb:BarButtonItem Content="{x:Static dxr:CustomizationArrowControlDirection.Left}" Command="{Binding RightElement.RemoveCommand}" IsEnabled="{Binding RightElement, Converter={dxmvvvm:ObjectToBooleanConverter}}" IsPrivate="True" ContentTemplate="{StaticResource arrowTemplate}"/>
            </dxb:ToolBarControl>
        </Grid>
        <Grid x:Name="rightside" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Customize the Ribbon:" Grid.Row="0"/>
            <ComboBox Grid.Row="1" SelectedIndex="{Binding RightTabsMode, Mode=TwoWay}" Margin="0,0,0,8">
                <ComboBoxItem Content="All tabs" x:Name="allTabsRight"/>
                <ComboBoxItem Content="Main tabs" x:Name="mainTabsRight"/>
                <ComboBoxItem Content="Tool tabs" x:Name="toolTabsRight"/>
            </ComboBox>
            <Border Grid.Row="2" Background="{Binding ElementName=emptyView, Path=Background}" BorderBrush="{Binding ElementName=emptyView, Path=BorderBrush}" BorderThickness="{Binding ElementName=emptyView, Path=BorderThickness}">
                <ScrollViewer>
                    <TreeView x:Name="rightTreeView" local:CustomizationHelpers.StretchElement="PART_Header" ScrollViewer.CanContentScroll="True"
                      ItemsSource="{Binding Path=RibbonWrapper.Items}"
                      BorderBrush="Transparent" Background="Transparent" BorderThickness="0"                      
                      ItemContainerStyle="{StaticResource itemContainerStyle}"                      
                      />
                </ScrollViewer>
            </Border>
            <dxb:ToolBarControl ShowBackground="False" AllowQuickCustomization="False" Grid.Row="3" BarItemHorizontalIndent="12" BarItemVerticalIndent="12">
                <dxb:BarSubItem Content="New" IsPrivate="True">
                    <dxb:BarButtonItem Content="Page" Command="{Binding RightElement.CreateNewCommand}" CommandParameter="Page" IsEnabled="{Binding RightElement, Converter={dxmvvvm:ObjectToBooleanConverter}}" IsPrivate="True"/>
                    <dxb:BarButtonItem Content="Page Group" Command="{Binding RightElement.CreateNewCommand}" CommandParameter="PageGroup" IsEnabled="{Binding RightElement, Converter={dxmvvvm:ObjectToBooleanConverter}}" IsPrivate="True"/>
                </dxb:BarSubItem>
                <dxb:BarButtonItem Content="Rename" Command="{Binding RightElement.RenameCommand}" IsEnabled="{Binding RightElement, Converter={dxmvvvm:ObjectToBooleanConverter}}" IsPrivate="True"/>
                <dxb:BarSubItem Content="Import/Export" IsPrivate="True">
                    <dxb:BarButtonItem Content="Import customization file" IsPrivate="True" Command="{Binding ImportCustomizationsCommand}"/>
                    <dxb:BarButtonItem Content="Export all customizations" IsPrivate="True" Command="{Binding ExportCustomizationsCommand}"/>
                </dxb:BarSubItem>
            </dxb:ToolBarControl>
        </Grid>
    </Grid>
</local:BaseTabsCustomizationControl>
