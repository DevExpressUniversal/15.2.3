


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
module __aspxRichEdit {
	export class JSONMaskedParagraphPropertiesConverter {
		static convertFromJSON(obj: any): MaskedParagraphProperties {
			var result = new MaskedParagraphProperties();
			result.alignment = obj[JSONParagraphFormattingProperty.Alignment];
			result.firstLineIndent = obj[JSONParagraphFormattingProperty.FirstLineIndent];
			result.firstLineIndentType = obj[JSONParagraphFormattingProperty.FirstLineIndentType];
			result.leftIndent = obj[JSONParagraphFormattingProperty.LeftIndent];
			result.lineSpacing = obj[JSONParagraphFormattingProperty.LineSpacing];
			result.lineSpacingType = obj[JSONParagraphFormattingProperty.LineSpacingType];
			result.rightIndent = obj[JSONParagraphFormattingProperty.RightIndent];
			result.spacingBefore = obj[JSONParagraphFormattingProperty.SpacingBefore];
			result.spacingAfter = obj[JSONParagraphFormattingProperty.SpacingAfter];
			result.suppressHyphenation = obj[JSONParagraphFormattingProperty.SuppressHyphenation];
			result.suppressLineNumbers = obj[JSONParagraphFormattingProperty.SuppressLineNumbers];
			result.contextualSpacing = obj[JSONParagraphFormattingProperty.ContextualSpacing];
			result.pageBreakBefore = obj[JSONParagraphFormattingProperty.PageBreakBefore];
			result.beforeAutoSpacing = obj[JSONParagraphFormattingProperty.BeforeAutoSpacing];
			result.afterAutoSpacing = obj[JSONParagraphFormattingProperty.AfterAutoSpacing];
			result.keepWithNext = obj[JSONParagraphFormattingProperty.KeepWithNext];
			result.keepLinesTogether = obj[JSONParagraphFormattingProperty.KeepLinesTogether];
			result.widowOrphanControl = obj[JSONParagraphFormattingProperty.WidowOrphanControl];
			result.outlineLevel = obj[JSONParagraphFormattingProperty.OutlineLevel];
			result.backColor = obj[JSONParagraphFormattingProperty.BackColor];
			result.leftBorder = JSONBorderInfoConverter.convertFromJSON(obj[JSONParagraphFormattingProperty.LeftBorder]);
			result.rightBorder = JSONBorderInfoConverter.convertFromJSON(obj[JSONParagraphFormattingProperty.RightBorder]);
			result.topBorder = JSONBorderInfoConverter.convertFromJSON(obj[JSONParagraphFormattingProperty.TopBorder]);
			result.bottomBorder = JSONBorderInfoConverter.convertFromJSON(obj[JSONParagraphFormattingProperty.BottomBorder]);
			result.useValue = obj[JSONParagraphFormattingProperty.UseValue];
			return result;
		}
		static convertToJSON(source: MaskedParagraphProperties): any {
			var result = {};
			result[JSONParagraphFormattingProperty.Alignment] = source.alignment;
			result[JSONParagraphFormattingProperty.FirstLineIndent] = source.firstLineIndent;
			result[JSONParagraphFormattingProperty.FirstLineIndentType] = source.firstLineIndentType;
			result[JSONParagraphFormattingProperty.LeftIndent] = source.leftIndent;
			result[JSONParagraphFormattingProperty.LineSpacing] = source.lineSpacing;
			result[JSONParagraphFormattingProperty.LineSpacingType] = source.lineSpacingType;
			result[JSONParagraphFormattingProperty.RightIndent] = source.rightIndent;
			result[JSONParagraphFormattingProperty.SpacingBefore] = source.spacingBefore;
			result[JSONParagraphFormattingProperty.SpacingAfter] = source.spacingAfter;
			result[JSONParagraphFormattingProperty.SuppressHyphenation] = source.suppressHyphenation;
			result[JSONParagraphFormattingProperty.SuppressLineNumbers] = source.suppressLineNumbers;
			result[JSONParagraphFormattingProperty.ContextualSpacing] = source.contextualSpacing;
			result[JSONParagraphFormattingProperty.PageBreakBefore] = source.pageBreakBefore;
			result[JSONParagraphFormattingProperty.BeforeAutoSpacing] = source.beforeAutoSpacing;
			result[JSONParagraphFormattingProperty.AfterAutoSpacing] = source.afterAutoSpacing;
			result[JSONParagraphFormattingProperty.KeepWithNext] = source.keepWithNext;
			result[JSONParagraphFormattingProperty.KeepLinesTogether] = source.keepLinesTogether;
			result[JSONParagraphFormattingProperty.WidowOrphanControl] = source.widowOrphanControl;
			result[JSONParagraphFormattingProperty.OutlineLevel] = source.outlineLevel;
			result[JSONParagraphFormattingProperty.BackColor] = source.backColor;
			result[JSONParagraphFormattingProperty.LeftBorder] = JSONBorderInfoConverter.convertToJSON(source.leftBorder);
			result[JSONParagraphFormattingProperty.RightBorder] = JSONBorderInfoConverter.convertToJSON(source.rightBorder);
			result[JSONParagraphFormattingProperty.TopBorder] = JSONBorderInfoConverter.convertToJSON(source.topBorder);
			result[JSONParagraphFormattingProperty.BottomBorder] = JSONBorderInfoConverter.convertToJSON(source.bottomBorder);
			result[JSONParagraphFormattingProperty.UseValue] = source.useValue;
			return result;
		}
	}
}