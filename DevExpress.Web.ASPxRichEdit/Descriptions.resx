<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RichEditFileManagerStylesControl" xml:space="preserve">
    <value>Gets the style settings that relate to styles declared at the control level of the embedded ASPxFileManager.</value>
  </data>
  <data name="RichEditFileManagerFoldersSettingsShowLockedFolderIcons" xml:space="preserve">
    <value>Gets or sets a value specifying whether the FileManager embedded into some built-in dialogs displays a special icon for folders that are locked for upload.</value>
  </data>
  <data name="RichEditDocumentSelectorUploadSettingsEnabled" xml:space="preserve">
    <value>Gets or sets a value that indicates whether upload is enabled for the FileManager used within some built-in file dialogs. </value>
  </data>
  <data name="RichEditDocumentSelectorSettingsUploadSettings" xml:space="preserve">
    <value>Provides access to the upload panel's settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="RichEditDocumentSelectorSettingsToolbarSettings" xml:space="preserve">
    <value>Provides access to the toolbar item visibility settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="RichEditDocumentSelectorSettingsPermissionSettings" xml:space="preserve">
    <value>Provides access to permission settings that relate to the FileManager used in some built-in File Dialogs.</value>
  </data>
  <data name="RichEditDocumentSelectorSettingsFoldersSettings" xml:space="preserve">
    <value>Provides access to the folder container's settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="RichEditDocumentSelectorSettingsEditingSettings" xml:space="preserve">
    <value>Provides access to the editing settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="RichEditDocumentSelectorSettingsCommonSettings" xml:space="preserve">
    <value>Provides access to the main settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="RichEditClientSideEventsCustomCommandExecuted" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle the client ASPxClientRichEdit.CustomCommandExecuted event.</value>
  </data>
  <data name="ASPxRichEditWorkDirectory" xml:space="preserve">
    <value>Gets or sets the working directory path.</value>
  </data>
  <data name="ASPxRichEditStylesStatusBar" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of the ASPxRichEdit's status bar. </value>
  </data>
  <data name="ASPxRichEditStylesRuler" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of the ASPxRichEdit's horizontal ruler. </value>
  </data>
  <data name="ASPxRichEditStylesRibbon" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of the ASPxRichEdit's ribbon toolbar elements. </value>
  </data>
  <data name="ASPxRichEditStylesPopupMenu" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of the ASPxRichEdit's context menus. </value>
  </data>
  <data name="ASPxRichEditStylesFileManager" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of File Manager elements used by the ASPxRichEdit control (for instance, within the built-in file dialogs). </value>
  </data>
  <data name="ASPxRichEditStylesEditors" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of editor elements used by the ASPxRichEdit control (for instance, within built-in dialogs). </value>
  </data>
  <data name="ASPxRichEditStylesButton" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of button elements used by the ASPxRichEdit control (within built-in dialogs, for instance). </value>
  </data>
  <data name="ASPxRichEditStyles" xml:space="preserve">
    <value>Provides access to the style settings that control the appearance of the ASPxRichEdit elements.</value>
  </data>
  <data name="ASPxRichEditShowConfirmOnLosingChanges" xml:space="preserve">
    <value>Gets or sets a value that specifies whether a confirmation alert should be displayed when any unsaved changes are going to be lost due to an end-user action.</value>
  </data>
  <data name="ASPxRichEditSettingsDocumentSelector" xml:space="preserve">
    <value>Provides access to settings that are related to the FileManager used in some built-in File Dialogs.</value>
  </data>
  <data name="ASPxRichEditSaving" xml:space="preserve">
    <value>Allows the current rich text document to be processed before it is saved to the server.</value>
  </data>
  <data name="ASPxRichEditRibbonTabs" xml:space="preserve">
    <value>Provides access to the collection of ribbon tabs.</value>
  </data>
  <data name="ASPxRichEditImagesRuler" xml:space="preserve">
    <value>Provides access to the settings that define images displayed within the RichEdit's ruler.  </value>
  </data>
  <data name="ASPxRichEditImages" xml:space="preserve">
    <value>Provides access to the settings that define images displayed within the ASPxRichEdit.</value>
  </data>
  <data name="ASPxRichEditEnableClientSideAPI" xml:space="preserve">
    <value>Gets or sets a value that specifies whether the ASPxRichEdit can be manipulated on the client side in code.</value>
  </data>
  <data name="ASPxRichEditConfirmOnLosingChanges" xml:space="preserve">
    <value>Gets or sets the text of the confirmation message that is displayed when any unsaved data changes are going to be lost.</value>
  </data>
  <data name="ASPxRichEditClientSideEvents" xml:space="preserve">
    <value>Gets an object that lists the client-side events specific to the ASPxRichEdit.</value>
  </data>
  <data name="ASPxRichEditClientInstanceName" xml:space="preserve">
    <value>Gets or sets the ASPxRichEdit's client programmatic identifier.</value>
  </data>
  <data name="ASPxRichEditCallback" xml:space="preserve">
    <value>Fires when a round trip to the server has been initiated either manually (by a call to the client PerformCallback method) or automatically by the ASPxRichEdit (an internal service callback).</value>
  </data>
  <data name="ASPxRichEditAssociatedRibbonID" xml:space="preserve">
    <value>Specifies the ID of an ASPxRibbon control, used as an external toolbar.</value>
  </data>
  <data name="ASPxRichEditActiveTabIndex" xml:space="preserve">
    <value>Gets or sets the index of the active ribbon tab within the ASPxRichEdit control.</value>
  </data>
  <data name="RichEditRulerImagesLeftTabDragHandle" xml:space="preserve">
    <value>Gets the settings of an image displayed in the left tab drag handle.</value>
  </data>
  <data name="RichEditRulerImagesLeftIdentDragHandle" xml:space="preserve">
    <value>Gets the settings of an image displayed in the left indent drag handle.</value>
  </data>
  <data name="RichEditRulerImagesFirstLineIdentDragHandle" xml:space="preserve">
    <value>Gets the settings of an image displayed in the first line indent drag handle.</value>
  </data>
  <data name="RichEditRulerImagesDecimalTabDragHandle" xml:space="preserve">
    <value>Gets the settings of an image displayed in the decimal tab drag handle.</value>
  </data>
  <data name="RichEditRulerImagesCenterTabDragHandle" xml:space="preserve">
    <value>Gets the settings of an image displayed in the center tab drag handle.</value>
  </data>
  <data name="RichEditFileManagerValidationSettingsMaxFileSize" xml:space="preserve">
    <value>Gets or sets the maximum size of an uploaded file within the FileManager embedded into certain built-in dialogs.</value>
  </data>
  <data name="RichEditRulerImagesRightIdentDragHandle" xml:space="preserve">
    <value> Gets the settings of an image displayed in the right indent drag handle.</value>
  </data>
  <data name="RichEditRulerImagesRightTabDragHandle" xml:space="preserve">
    <value>Gets the settings of an image displayed in the right tab drag handle.</value>
  </data>
</root>