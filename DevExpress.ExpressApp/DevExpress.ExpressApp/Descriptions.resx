<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionUrlUrlFieldName" xml:space="preserve">
    <value>Specifies the name of a persistent object's property whose value is used to build a URL text based on the ActionUrl.UrlFormatString property value.</value>
  </data>
  <data name="ActionUrlTextFormatString" xml:space="preserve">
    <value>Specifies a caption which is used when an ActionUrl is displayed in a List View's grid editor.</value>
  </data>
  <data name="ActionUrlTextFieldName" xml:space="preserve">
    <value>Specifies the name of the property whose value is inserted in the ActionUrl.TextFormatString property value.</value>
  </data>
  <data name="ActionUrlOpenInNewWindow" xml:space="preserve">
    <value>Specifies whether to load an Action's page in a new window.</value>
  </data>
  <data name="ActionBaseToolTip" xml:space="preserve">
    <value>Specifies a tooltip for an Action.</value>
  </data>
  <data name="ActionBaseTargetViewType" xml:space="preserve">
    <value>Specifies the type of the View, for which an Action is intended.</value>
  </data>
  <data name="ActionBaseTargetViewNesting" xml:space="preserve">
    <value>Specifies whether the View, for which an Action is intended, must be root, nested or any.</value>
  </data>
  <data name="ActionBaseTargetViewId" xml:space="preserve">
    <value>Specifies the identifier of the View for which the Action is activated, or a semicolon-separated list of identifiers if the Action targets multiple Views.</value>
  </data>
  <data name="ActionBaseTargetObjectType" xml:space="preserve">
    <value>Specifies the type of the object(s) that must be represented by the current View to provide an Action activation.</value>
  </data>
  <data name="ActionBaseTargetObjectsCriteriaMode" xml:space="preserve">
    <value>Specifies whether all the currently selected objects must satisfy the ActionBase.TargetObjectsCriteria criteria to make an Action enabled.</value>
  </data>
  <data name="ActionBaseTargetObjectsCriteria" xml:space="preserve">
    <value>Specifies a logical expression (criteria) for enabling an Action.</value>
  </data>
  <data name="ActionBaseTag" xml:space="preserve">
    <value> Provides access to the object that contains data about the Action. </value>
  </data>
  <data name="ActionBaseShortcut" xml:space="preserve">
    <value>Defines the shortcut used to execute the current Action in a WinForms application.</value>
  </data>
  <data name="ActionBaseSelectionDependencyType" xml:space="preserve">
    <value>Specifies a context for enabling an Action.</value>
  </data>
  <data name="ActionBaseQuickAccess" xml:space="preserve">
    <value>Specifies whether the current Action is accessible via the Quick Access Toolbar (this toolbar is available when the Ribbon UI is used).</value>
  </data>
  <data name="ActionBasePaintStyle" xml:space="preserve">
    <value>Gets or sets the paint style for the current Action.</value>
  </data>
  <data name="ActionBaseModel" xml:space="preserve">
    <value>Gets the Action's settings. </value>
  </data>
  <data name="ActionBaseImageName" xml:space="preserve">
    <value>Specifies a name of the image displayed for an Action.</value>
  </data>
  <data name="ActionBaseId" xml:space="preserve">
    <value>Specifies an Action's identifier.</value>
  </data>
  <data name="ActionBaseConfirmationMessage" xml:space="preserve">
    <value>Specifies the confirmation message displayed when an end-user executes an Action.</value>
  </data>
  <data name="ActionBaseCategory" xml:space="preserve">
    <value>Specifies an Action's category.</value>
  </data>
  <data name="ActionBaseCaption" xml:space="preserve">
    <value>Specifies an Action's caption.</value>
  </data>
  <data name="ActionBaseActionMeaning" xml:space="preserve">
    <value>Specifies whether an Action is represented by an accept, cancel or ordinal button in a Window Forms application's pop-up Windows. </value>
  </data>
  <data name="ActionAttributeToolTip" xml:space="preserve">
    <value>Specifies the tooltip for the generated Action.</value>
  </data>
  <data name="ActionAttributeTargetObjectsCriteriaMode" xml:space="preserve">
    <value>Specifies whether all the currently selected objects must satisfy the ActionAttribute.TargetObjectsCriteria criteria to make an Action enabled.</value>
  </data>
  <data name="ActionAttributeTargetObjectsCriteria" xml:space="preserve">
    <value>Specifies the criteria for enabling the generated Action.</value>
  </data>
  <data name="ActionAttributeSelectionDependencyType" xml:space="preserve">
    <value>Specifies a context for enabling the generated Action.</value>
  </data>
  <data name="ActionAttributeImageName" xml:space="preserve">
    <value>Specifies the name of the image for the generated Action.</value>
  </data>
  <data name="ActionAttributeConfirmationMessage" xml:space="preserve">
    <value>Specifies the confirmation message displayed when an end-user executes the generated Action.</value>
  </data>
  <data name="ActionAttributeCategory" xml:space="preserve">
    <value>Specifies the category for the generated Action.</value>
  </data>
  <data name="ActionAttributeCaption" xml:space="preserve">
    <value>Specifies the caption for the generated Action.</value>
  </data>
  <data name="ActionAttributeAutoCommit" xml:space="preserve">
    <value>Specifies whether to commit the changes made to data when the Action attribute's target method is executed.</value>
  </data>
  <data name="ChoiceActionBaseShowItemsOnClick" xml:space="preserve">
    <value>Specifies whether to show the drop-down with the current Action's items when the Action is clicked.</value>
  </data>
  <data name="ChoiceActionBaseItems" xml:space="preserve">
    <value>Specifies a Choice Action's item collection.</value>
  </data>
  <data name="ChoiceActionBaseImageMode" xml:space="preserve">
    <value>Specifies the type of the image that is displayed by the current Action's control.</value>
  </data>
  <data name="ChoiceActionBaseEmptyItemsBehavior" xml:space="preserve">
    <value>Specifies how to display a Choice Action if its ChoiceActionBase.Items collection is empty.</value>
  </data>
  <data name="ChoiceActionBaseDefaultItemMode" xml:space="preserve">
    <value>Specifies how the Action's default item is determined.</value>
  </data>
  <data name="ActionUrlUrlFormatString" xml:space="preserve">
    <value>Specifies the URL of the page to be loaded when executing an ActionUrl Action.</value>
  </data>
  <data name="ChoiceActionItemActiveItemsBehavior" xml:space="preserve">
    <value>Specifies whether to display a Choice Action Item when its child items are deactivated.</value>
  </data>
  <data name="ChoiceActionItemBeginGroup" xml:space="preserve">
    <value>Specifies whether the current Choice Action Item starts a group.</value>
  </data>
  <data name="ChoiceActionItemCaption" xml:space="preserve">
    <value>Specifies a Choice Action Item's caption.</value>
  </data>
  <data name="ChoiceActionItemCollectionFirstActiveItem" xml:space="preserve">
    <value>Returns the Choice Action Item which is the first that is currently active.</value>
  </data>
  <data name="ChoiceActionItemData" xml:space="preserve">
    <value>Specifies the object which is associated with a Choice Action Item.</value>
  </data>
  <data name="ChoiceActionItemImageName" xml:space="preserve">
    <value>Specifies the name of the image which is displayed by the Choice Action Item's control.</value>
  </data>
  <data name="ChoiceActionItemItems" xml:space="preserve">
    <value>Provides access to a Choice Action Item's item collection.</value>
  </data>
  <data name="ChoiceActionItemShortcut" xml:space="preserve">
    <value>Specifies the a Choice Action Item's shortcut.</value>
  </data>
  <data name="ChoiceActionItemToolTip" xml:space="preserve">
    <value>Specifies the tooltip text that is displayed for the current ChoiceActionItem.</value>
  </data>
  <data name="ControllerActivated" xml:space="preserve">
    <value>Occurs when a Controller is activated.</value>
  </data>
  <data name="ControllerAfterConstruction" xml:space="preserve">
    <value>Occurs after a Controller is created.</value>
  </data>
  <data name="ControllerDeactivated" xml:space="preserve">
    <value>Occurs after a Controller has been deactivated.</value>
  </data>
  <data name="ControllerFrameAssigned" xml:space="preserve">
    <value>Occurs after a Frame (Window) has been assigned to a Controller.</value>
  </data>
  <data name="ControllerTag" xml:space="preserve">
    <value>Provides access to the object that contains data about the Controller. </value>
  </data>
  <data name="CreatableItemAttributeIsCreatableItem" xml:space="preserve">
    <value>Specifies whether an item is added to the New Action's item list.</value>
  </data>
  <data name="DataSourceCriteriaAttributeDataSourceCriteria" xml:space="preserve">
    <value>Returns criteria for filtering the List View of the target Object type property's Lookup Property Editor.</value>
  </data>
  <data name="DataSourcePropertyAttributeDataSourceProperty" xml:space="preserve">
    <value>Returns a name of a business class collection property, serving as a source for the Lookup Property Editor of the target Object type business class property.</value>
  </data>
  <data name="DataSourcePropertyAttributeDataSourcePropertyIsNullCriteria" xml:space="preserve">
    <value>Indicates criteria for filtering the List View of the target property's Lookup Property Editor, in case the DataSourcePropertyAttribute.DataSourceProperty is not specified.</value>
  </data>
  <data name="DataSourcePropertyAttributeDataSourcePropertyIsNullMode" xml:space="preserve">
    <value>Specifies the Lookup Property Editor's data source, in case the collection property specified by the DataSourcePropertyAttribute.DataSourceProperty is set to null (Nothing in VB).</value>
  </data>
  <data name="DeleteObjectsViewControllerAutoCommit" xml:space="preserve">
    <value>Specifies whether to remove objects immediately.</value>
  </data>
  <data name="DeleteObjectsViewControllerDeleteAction" xml:space="preserve">
    <value>Provides access to the DeleteObjectsViewController's Delete Action.</value>
  </data>
  <data name="DetailViewCurrentObject" xml:space="preserve">
    <value>Specifies an object displayed by the Detail View.</value>
  </data>
  <data name="DetailViewModel" xml:space="preserve">
    <value>Provides access to information on a View, which is stored in the Application Model. </value>
  </data>
  <data name="DetailViewScrollPosition" xml:space="preserve">
    <value>For internal use only.</value>
  </data>
  <data name="DetailViewSelectedObjects" xml:space="preserve">
    <value>Returns a Detail View's DetailView.CurrentObject.</value>
  </data>
  <data name="DetailViewSelectionType" xml:space="preserve">
    <value>Returns the selection type supported by the current Detail View.</value>
  </data>
  <data name="DetailViewViewEditMode" xml:space="preserve">
    <value>Specifies a mode of displaying a Detail View in an ASP.NET Web application.</value>
  </data>
  <data name="DialogControllerAcceptAction" xml:space="preserve">
    <value>Provides access to the current Dialog Controller's DialogOK Action.</value>
  </data>
  <data name="DialogControllerCancelAction" xml:space="preserve">
    <value>Provides access to the current Dialog Controller's Cancel Action.</value>
  </data>
  <data name="DialogControllerCanCloseWindow" xml:space="preserve">
    <value>Specifies whether to close the current pop-up Window when executing the Dialog Controller's DialogController.AcceptAction or DialogController.CancelAction. </value>
  </data>
  <data name="DialogControllerCloseAction" xml:space="preserve">
    <value>Provides access to the current DialogController's Close Action.</value>
  </data>
  <data name="DialogControllerSaveOnAccept" xml:space="preserve">
    <value>Specifies whether to save changes made to the object represented by the current pop-up Window's Detail View when executing the DialogController.AcceptAction.</value>
  </data>
  <data name="EditorsIModelRegisteredPropertyEditor" xml:space="preserve">
    <value>The PropertyEditor node specifies the Property Editor type, for a particular data type. This Property Editor will be used in a UI by default for properties of this data type.</value>
  </data>
  <data name="EditorsIModelRegisteredPropertyEditors" xml:space="preserve">
    <value>The PropertyEditors node represents a map of data types and Property Editors registered in an Application Model.</value>
  </data>
  <data name="EditorsIModelRegisteredViewItem" xml:space="preserve">
    <value>A ViewItem node specifies a particular View Item type to be used in a UI by default.</value>
  </data>
  <data name="EditorsIModelRegisteredViewItems" xml:space="preserve">
    <value>The ViewItems node specifies View Items to be used in a Detail View.</value>
  </data>
  <data name="ExpandObjectMembersAttributeExpandingMode" xml:space="preserve">
    <value>Specifies whether the target reference property is displayed via several Property Editors representing the referenced object's properties or via a single Lookup or Object Property Editor.</value>
  </data>
  <data name="FilterControllerFullTextFilterAction" xml:space="preserve">
    <value>Provides access to the FilterController's FullTextSearch Action.</value>
  </data>
  <data name="FilterControllerSetFilterAction" xml:space="preserve">
    <value>Provides access to the ModificationsController's SetFilter Action.</value>
  </data>
  <data name="FilterControllerView" xml:space="preserve">
    <value>Provides access to the current List View for which the FilterController is activated.</value>
  </data>
  <data name="FrameApplication" xml:space="preserve">
    <value>Provides access to an XafApplication object that can be used to manage the current application.</value>
  </data>
  <data name="FrameContext" xml:space="preserve">
    <value>Returns a Frame's context.</value>
  </data>
  <data name="FrameControllers" xml:space="preserve">
    <value>Provides access to the Controller collection.</value>
  </data>
  <data name="FrameTemplate" xml:space="preserve">
    <value>Provides access to a Frame's Template.</value>
  </data>
  <data name="FrameView" xml:space="preserve">
    <value>Provides access to a Frame's View.</value>
  </data>
  <data name="FriendlyKeyPropertyAttributeMemberName" xml:space="preserve">
    <value>Indicates the persistent property which the system uses as an identifier-like property.</value>
  </data>
  <data name="ImageNameAttributeImageName" xml:space="preserve">
    <value>Specifies the name of the image that will be associated with the target business class' objects or target enumeration value.</value>
  </data>
  <data name="IModelActionCaption" xml:space="preserve">
    <value>Specifies the Action's caption.</value>
  </data>
  <data name="IModelActionCaptionFormat" xml:space="preserve">
    <value>Specifies the format for a SingleChoiceAction caption.</value>
  </data>
  <data name="IModelActionCategory" xml:space="preserve">
    <value>Indicates the current Action category.</value>
  </data>
  <data name="IModelActionChoiceActionItems" xml:space="preserve">
    <value>Provides acess to the child ChoiceActionItems node. </value>
  </data>
  <data name="IModelActionConfirmationMessage" xml:space="preserve">
    <value>Specifies the message displayed when an end-user executes the current Action.</value>
  </data>
  <data name="IModelActionContainerId" xml:space="preserve">
    <value>Specifies the current Action Container identifier.</value>
  </data>
  <data name="IModelActionContainerViewItemActionContainer" xml:space="preserve">
    <value>Specifies the Action Container displayed by the Action Container View Item.</value>
  </data>
  <data name="IModelActionContainerViewItemOrientation" xml:space="preserve">
    <value>Specifies how Actions displayed by the Action Container View Item are arranged.</value>
  </data>
  <data name="IModelActionContainerViewItemPaintStyle" xml:space="preserve">
    <value>Specifies how the IModelActionContainerViewItem.ActionContainer displays its Actions.</value>
  </data>
  <data name="IModelActionController" xml:space="preserve">
    <value>Indicates the Controller in which the current Action is contained. </value>
  </data>
  <data name="IModelActionDefaultItemMode" xml:space="preserve">
    <value>Specifies the Choice Action Item that is executed when an end-user clicks the Choice Action.</value>
  </data>
  <data name="IModelActionDesignActions" xml:space="preserve">
    <value>Provides access to the Actions child node. </value>
  </data>
  <data name="IModelActionDesignContainerMappingActionToContainerMapping" xml:space="preserve">
    <value>Provides access to the Application Model's ActionToContainerMapping node. </value>
  </data>
  <data name="IModelActionDesignControllers" xml:space="preserve">
    <value>Provides access to the Controllers child node.</value>
  </data>
  <data name="IModelActionDesignDisableReasons" xml:space="preserve">
    <value>Provides access to the DisableReasons child node.</value>
  </data>
  <data name="IModelActionDisableReasons" xml:space="preserve">
    <value>Provides access to the child DisableReasons node. </value>
  </data>
  <data name="IModelActionId" xml:space="preserve">
    <value>Indicates the current Action identifier.</value>
  </data>
  <data name="IModelActionImageMode" xml:space="preserve">
    <value>Specifies the type of the image that is displayed by the current Action's control.</value>
  </data>
  <data name="IModelActionImageName" xml:space="preserve">
    <value>Specifies the name of the image that is displayed on the current action's control.</value>
  </data>
  <data name="IModelActionLinkAction" xml:space="preserve">
    <value>Specifies the current Action.</value>
  </data>
  <data name="IModelActionNullValuePrompt" xml:space="preserve">
    <value>Specifies the default text that is displayed in the Parameterized Action's control.</value>
  </data>
  <data name="IModelActionPaintStyle" xml:space="preserve">
    <value>Specifies how the current Action is displayed in Detail and List Views.</value>
  </data>
  <data name="IModelActionQuickAccess" xml:space="preserve">
    <value>Specifies whether the current Action is accessible via the Quick Access Toolbar (this toolbar is available when the Ribbon UI is used in Windows Forms application).</value>
  </data>
  <data name="IModelActionSelectionDependencyType" xml:space="preserve">
    <value>Specifies a context for enabling the Action. </value>
  </data>
  <data name="IModelActionShortCaption" xml:space="preserve">
    <value>Specifies the caption for a Parameterized Action's button.</value>
  </data>
  <data name="IModelActionShortcut" xml:space="preserve">
    <value>Specifies the current Action's shortcut.</value>
  </data>
  <data name="IModelActionShowItemsOnClick" xml:space="preserve">
    <value>Specifies whether to execute the Action when clicking it, or show its drop-down with items.</value>
  </data>
  <data name="IModelActionTargetObjectsCriteria" xml:space="preserve">
    <value>Specifies the criteria that must be satisfied by the selected object(s) to make the current Action enabled.</value>
  </data>
  <data name="IModelActionTargetObjectsCriteriaMode" xml:space="preserve">
    <value>Specifies whether all the currently selected objects must satisfy the IModelAction.TargetObjectsCriteria criteria to make the Action enabled. </value>
  </data>
  <data name="IModelActionTargetObjectType" xml:space="preserve">
    <value>Indicates the type of objects for which the current Action is available.</value>
  </data>
  <data name="IModelActionTargetViewId" xml:space="preserve">
    <value>Specifies the identifier of the View for which the Action is activated, or a semicolon-separated list of identifiers if the Action targets multiple Views.</value>
  </data>
  <data name="IModelActionTargetViewNesting" xml:space="preserve">
    <value>Indicates the type of the View for which the Action is activated.</value>
  </data>
  <data name="IModelActionTargetViewType" xml:space="preserve">
    <value>Indicates the type of the View for which the Action is activated.</value>
  </data>
  <data name="IModelApplicationAboutInfoString" xml:space="preserve">
    <value>Specifies summary information on the current application that is intended to be shown in the \"About\" informational block.</value>
  </data>
  <data name="IModelApplicationActionDesign" xml:space="preserve">
    <value>Provides access to the ActionDesign child node. </value>
  </data>
  <data name="IModelApplicationBOModel" xml:space="preserve">
    <value>Provides access to the BOModel child node. </value>
  </data>
  <data name="IModelApplicationCompany" xml:space="preserve">
    <value>Specifies the company that built the application.</value>
  </data>
  <data name="IModelApplicationCopyright" xml:space="preserve">
    <value>Specifies information about the company's copyright.</value>
  </data>
  <data name="IModelApplicationCreatableItemsCreatableItems" xml:space="preserve">
    <value>Provides access to the CreatableItems node.</value>
  </data>
  <data name="IModelApplicationDescription" xml:space="preserve">
    <value>Specifies information about the application.</value>
  </data>
  <data name="IModelApplicationImageSources" xml:space="preserve">
    <value>Provides access to the ImageSources child node.</value>
  </data>
  <data name="IModelApplicationLocalization" xml:space="preserve">
    <value>Provides access to the Localization child node.</value>
  </data>
  <data name="IModelApplicationLogo" xml:space="preserve">
    <value>Specifies the application logo image.</value>
  </data>
  <data name="IModelApplicationNavigationItemsNavigationItems" xml:space="preserve">
    <value>Provides access to the NavigationItems node.</value>
  </data>
  <data name="IModelApplicationOptions" xml:space="preserve">
    <value>Provides access to the Options child node.</value>
  </data>
  <data name="IModelApplicationPreferredLanguage" xml:space="preserve">
    <value>Specifies the language that will be used in the application.</value>
  </data>
  <data name="IModelApplicationProtectedContentText" xml:space="preserve">
    <value>Specifies text that is displayed instead of the data protected by the Security System.</value>
  </data>
  <data name="IModelApplicationTitle" xml:space="preserve">
    <value>Specifies the application's title.</value>
  </data>
  <data name="IModelApplicationVersionFormat" xml:space="preserve">
    <value>Specifies the format which defines how the application's version is displayed in the About Information block.</value>
  </data>
  <data name="IModelApplicationViewItems" xml:space="preserve">
    <value>Provides access to the ViewItems child node. </value>
  </data>
  <data name="IModelApplicationViews" xml:space="preserve">
    <value>Provides access to the Views child node.</value>
  </data>
  <data name="IModelAssemblyResourceImageSourceAssemblyName" xml:space="preserve">
    <value>Specifies the assembly from which images must be loaded.</value>
  </data>
  <data name="IModelBandCaption" xml:space="preserve">
    <value>Specifies the band caption.</value>
  </data>
  <data name="IModelBandsLayoutEnable" xml:space="preserve">
    <value>Enables bands (logical groups of columns) for the current List View. A band is visually represented by a header displayed above headers of the columns it combines.</value>
  </data>
  <data name="IModelBaseChoiceActionItemCaption" xml:space="preserve">
    <value>Specifies the current Item caption.</value>
  </data>
  <data name="IModelBaseChoiceActionItemId" xml:space="preserve">
    <value>Indicates the current Choice Action Item's identifier.</value>
  </data>
  <data name="IModelBaseChoiceActionItemImageName" xml:space="preserve">
    <value>Specifies the name of the image that is displayed for the current Item.</value>
  </data>
  <data name="IModelBaseChoiceActionItemShortcut" xml:space="preserve">
    <value>Specifies the current Item's shortcut.</value>
  </data>
  <data name="IModelChoiceActionItemChildItemsDisplayStyleChildItemsDisplayStyle" xml:space="preserve">
    <value>Specifies the navbar group style when the IModelRootNavigationItems.NavigationStyle property is set to NavigationStyle.NavBar. Has effect in WinForms applications only.</value>
  </data>
  <data name="IModelChoiceActionItemChoiceActionItems" xml:space="preserve">
    <value>Provides access to the ChoiceActionItems child node.</value>
  </data>
  <data name="IModelClassBaseClass" xml:space="preserve">
    <value>Indicates the current class' base class. </value>
  </data>
  <data name="IModelClassCaption" xml:space="preserve">
    <value>Specifies the current class' caption.</value>
  </data>
  <data name="IModelClassDefaultDetailView" xml:space="preserve">
    <value>Specifies what Detail View is displayed for the current object in any scenario, by default. </value>
  </data>
  <data name="IModelClassDefaultDetailViewImage" xml:space="preserve">
    <value>Specifies the name of the image that is displayed in the default Detail View of the current class.</value>
  </data>
  <data name="IModelClassDefaultListView" xml:space="preserve">
    <value>Specifies what List View is displayed for the current object in any scenario, by default.</value>
  </data>
  <data name="IModelClassDefaultListViewAllowEdit" xml:space="preserve">
    <value>Specifies whether inplace editing is allowed in the default List View.</value>
  </data>
  <data name="IModelClassDefaultListViewImage" xml:space="preserve">
    <value>Specifies the name of the image that is displayed in the default Detail View of the current class.</value>
  </data>
  <data name="IModelClassDefaultListViewMasterDetailMode" xml:space="preserve">
    <value>Specifies whether to display the default Detail View near the current List View.</value>
  </data>
  <data name="IModelClassDefaultLookupEditorMode" xml:space="preserve">
    <value>Specifies the default mode for Lookup Property Editors bound to reference properties of the current type.</value>
  </data>
  <data name="IModelClassDefaultLookupListView" xml:space="preserve">
    <value>Specifies what Lookup List View is displayed for the current object in any scenario, by default.</value>
  </data>
  <data name="IModelClassDefaultProperty" xml:space="preserve">
    <value>Specifies the property that represents the current class in a Property Editor by default.</value>
  </data>
  <data name="IModelClassEditorType" xml:space="preserve">
    <value>Specifies the List Editor that is used for objects of the current class in a UI.</value>
  </data>
  <data name="IModelClassFriendlyKeyProperty" xml:space="preserve">
    <value>Specifies the property that is considered an analog of the BaseObject.Oid property, to use more suitable values.</value>
  </data>
  <data name="IModelClassImageName" xml:space="preserve">
    <value>Specifies the name of the image that is displayed for the current class.</value>
  </data>
  <data name="IModelClassIsCreatableItem" xml:space="preserve">
    <value>Indicates whether the current class can represent an item in the New Action, when objects of another type are displayed in the List View.</value>
  </data>
  <data name="IModelClassKeyProperty" xml:space="preserve">
    <value>Specifies the property that is considered a key.</value>
  </data>
  <data name="IModelClassName" xml:space="preserve">
    <value>Indicates the current class type.</value>
  </data>
  <data name="IModelClassNavigationIsNavigationItem" xml:space="preserve">
    <value>Indicates whether the current class can represent an item of the navigation control.</value>
  </data>
  <data name="IModelClassNavigationNavigationGroupName" xml:space="preserve">
    <value>Indicates the navigation control group to which the current class belongs, according to code.</value>
  </data>
  <data name="IModelClassNewItemRowDefaultListViewNewItemRowPosition" xml:space="preserve">
    <value>Indicate whether to display the new item row in the default editable List View.</value>
  </data>
  <data name="IModelClassObjectCaptionFormat" xml:space="preserve">
    <value>Specifies the format of the current class caption.</value>
  </data>
  <data name="IModelClassOwnMembers" xml:space="preserve">
    <value>Provides access to the OwnMembers node.</value>
  </data>
  <data name="IModelClassReportsVisibilityIsVisibleInReports" xml:space="preserve">
    <value>Specifies whether the current class can serve as a data source for ReportData and Analysis objects.</value>
  </data>
  <data name="IModelClassShowAutoFilterRowDefaultListViewShowAutoFilterRow" xml:space="preserve">
    <value>Specifies whether to display the Auto Filter Row in the default List View.</value>
  </data>
  <data name="IModelColumnGroupIndex" xml:space="preserve">
    <value>Specifies the sequence of column grouping, when nested grouping is applied.</value>
  </data>
  <data name="IModelColumnGroupInterval" xml:space="preserve">
    <value>Specifies the group interval.</value>
  </data>
  <data name="IModelColumnSortIndex" xml:space="preserve">
    <value>Specifies the sequence of column sorting.</value>
  </data>
  <data name="IModelColumnSortOrder" xml:space="preserve">
    <value>Specifies the sorting type for the current column.</value>
  </data>
  <data name="IModelColumnSummary" xml:space="preserve">
    <value>Provides access to the Summary child node. </value>
  </data>
  <data name="IModelColumnSummaryItemSummaryType" xml:space="preserve">
    <value>Specifies the function that calculates a value over all records within the current column (total summary). </value>
  </data>
  <data name="IModelColumnWidth" xml:space="preserve">
    <value>Specifies the width of the current column in Windows Forms applications.</value>
  </data>
  <data name="IModelCommonMemberViewItemAllowClear" xml:space="preserve">
    <value>Specifies whether or not a user can clear a value in the lookup editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemAllowEdit" xml:space="preserve">
    <value>Specifies whether or not the current Property Editor should be read-only.</value>
  </data>
  <data name="IModelCommonMemberViewItemCaption" xml:space="preserve">
    <value>Specifies the caption of the current Property Editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemCaptionForFalse" xml:space="preserve">
    <value>Specifies the caption for the false value of the current Property Editor, if this Property Editor displays a property of the Boolean type.</value>
  </data>
  <data name="IModelCommonMemberViewItemCaptionForTrue" xml:space="preserve">
    <value>Specifies the caption for the true value of the current Property Editor, if this Property Editor displays a property of the Boolean type.</value>
  </data>
  <data name="IModelCommonMemberViewItemDataSourceCriteria" xml:space="preserve">
    <value>Specifies filtering criteria for the current Property Editor, if it displays a reference property.</value>
  </data>
  <data name="IModelCommonMemberViewItemDataSourcePropertyIsNullCriteria" xml:space="preserve">
    <value>Specifies the criteria upon which a list of objects is formed in the current lookup Property Editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemDataSourcePropertyIsNullMode" xml:space="preserve">
    <value>Specifies objects displayed in the current Lookup Property Editor, when the IModelMemberViewItem.DataSourceProperty property is null (Nothing in VB). </value>
  </data>
  <data name="IModelCommonMemberViewItemDisplayFormat" xml:space="preserve">
    <value>Specifies the display format of a value in the current Property Editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemEditMask" xml:space="preserve">
    <value>Specifies the edit mask of a value in the current Property Editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemEditMaskType" xml:space="preserve">
    <value>Specifies the edit mask type of a value in the current Property Editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemImageForFalse" xml:space="preserve">
    <value>Specifies the name of the image that is displayed for the property's False value.</value>
  </data>
  <data name="IModelCommonMemberViewItemImageForTrue" xml:space="preserve">
    <value>Specifies the name of the image that is displayed for the property's True value.</value>
  </data>
  <data name="IModelCommonMemberViewItemImageSizeMode" xml:space="preserve">
    <value>Specifies how the current Property Editor must resize images.</value>
  </data>
  <data name="IModelCommonMemberViewItemImmediatePostData" xml:space="preserve">
    <value>Indicates whether changing the current Property Editor value causes an immediate UI refresh.</value>
  </data>
  <data name="IModelCommonMemberViewItemIsPassword" xml:space="preserve">
    <value>Specifies whether the current Property Editor displays a password to determine whether its value should be typed as a password.</value>
  </data>
  <data name="IModelCommonMemberViewItemLookupEditorMode" xml:space="preserve">
    <value>Specifies the mode of the current Lookup Property Editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemLookupProperty" xml:space="preserve">
    <value>Specifies the property whose value is displayed in the text editor of the current Property Editor, if it represents a Lookup Property Editor.</value>
  </data>
  <data name="IModelCommonMemberViewItemPredefinedValues" xml:space="preserve">
    <value>Specifies predefined values for the current Property Editor, separated by semicolons.</value>
  </data>
  <data name="IModelCommonMemberViewItemPropertyEditorType" xml:space="preserve">
    <value>Specifies the Property Editor that is used for the current property in a UI.</value>
  </data>
  <data name="IModelCommonMemberViewItemRowCount" xml:space="preserve">
    <value>Specifies the row count of a Property Editor.</value>
  </data>
  <data name="IModelCompositeViewItems" xml:space="preserve">
    <value>Provides access to the Items node.</value>
  </data>
  <data name="IModelCompositeViewLayout" xml:space="preserve">
    <value>Provides access to the Layout node.</value>
  </data>
  <data name="IModelControlDetailItemControlTypeName" xml:space="preserve">
    <value>Specifies the type of the control that displays a Control Detail Item.</value>
  </data>
  <data name="IModelControllerActions" xml:space="preserve">
    <value>Specifies Actions declared in the current Controller. </value>
  </data>
  <data name="IModelControllerBaseController" xml:space="preserve">
    <value>Specifies the Controller from which the current Controller is inherited. </value>
  </data>
  <data name="IModelControllerName" xml:space="preserve">
    <value>Indicates the Controller type name.</value>
  </data>
  <data name="IModelCreatableItemModelClass" xml:space="preserve">
    <value>Specifies the Application Model's Class node representing the class whose instance is created when choosing the current item in the New Action. </value>
  </data>
  <data name="IModelDashboardViewItemActionsToolbarVisibility" xml:space="preserve">
    <value>Indicates whether the Action toolbar is visible in the DashboardViewItem's IModelDashboardViewItem.View.</value>
  </data>
  <data name="IModelDashboardViewItemCriteria" xml:space="preserve">
    <value>Specifies the criteria determining which object(s) are displayed by the DashboardViewItem's IModelDashboardViewItem.View.</value>
  </data>
  <data name="IModelDashboardViewItemView" xml:space="preserve">
    <value>Specifies the View displayed by a DashboardViewItem.</value>
  </data>
  <data name="IModelDetailViewDefaultFocusedItemDefaultFocusedItem" xml:space="preserve">
    <value>Specifies the Property Editor which will be focused when the current Detail View is displayed.</value>
  </data>
  <data name="IModelDetailViewFreezeLayout" xml:space="preserve">
    <value>Specifies whether the automatic update of the Detail View layout is disabled.</value>
  </data>
  <data name="IModelDetailViewObjectCaptionFormat" xml:space="preserve">
    <value>Specifies the format of the current Detail View's caption.</value>
  </data>
  <data name="IModelImageSourceFolder" xml:space="preserve">
    <value>Specifies the folder from which images must be loaded.</value>
  </data>
  <data name="IModelInterfaceLinkInterface" xml:space="preserve">
    <value>Specifies a Domain Component aggregated by the current Domain Component.</value>
  </data>
  <data name="IModelLayoutElementWithCaptionCaption" xml:space="preserve">
    <value>Specifies a layout element's caption.</value>
  </data>
  <data name="IModelLayoutElementWithCaptionOptionsCaptionHorizontalAlignment" xml:space="preserve">
    <value>Specifies the horizontal alignment of a layout element's caption.</value>
  </data>
  <data name="IModelLayoutElementWithCaptionOptionsCaptionLocation" xml:space="preserve">
    <value>Specifies a layout element's caption location.</value>
  </data>
  <data name="IModelLayoutElementWithCaptionOptionsCaptionVerticalAlignment" xml:space="preserve">
    <value>Specifies the vertical alignment of a layout element's caption.</value>
  </data>
  <data name="IModelLayoutElementWithCaptionOptionsCaptionWordWrap" xml:space="preserve">
    <value>Specifies a layout element's caption wrapping mode.</value>
  </data>
  <data name="IModelLayoutElementWithCaptionOptionsShowCaption" xml:space="preserve">
    <value>Specifies whether to show the caption specified by the IModelLayoutElementWithCaption.Caption property.</value>
  </data>
  <data name="IModelLayoutGroupDirection" xml:space="preserve">
    <value>Specifies the direction of a layout group.</value>
  </data>
  <data name="IModelLayoutGroupImageName" xml:space="preserve">
    <value>Specifies the name of the image that is displayed for the current layout group.</value>
  </data>
  <data name="IModelLayoutItemMaxSize" xml:space="preserve">
    <value>Specifies the maximum size of the layout item when the IModelLayoutItem.SizeConstraintsType is Custom.</value>
  </data>
  <data name="IModelLayoutItemMinSize" xml:space="preserve">
    <value>Specifies the minimum size of the layout item when the IModelLayoutItem.SizeConstraintsType is Custom.</value>
  </data>
  <data name="IModelLayoutItemSizeConstraintsType" xml:space="preserve">
    <value>Specifies the layout item's size constraints type.</value>
  </data>
  <data name="IModelLayoutManagerOptionsCaptionColon" xml:space="preserve">
    <value>Specifies a string used to separate layout items and their captions.</value>
  </data>
  <data name="IModelLayoutManagerOptionsCaptionHorizontalAlignment" xml:space="preserve">
    <value>Specifies the default horizontal alignment of the layout group and item captions.</value>
  </data>
  <data name="IModelLayoutManagerOptionsCaptionLocation" xml:space="preserve">
    <value>Specifies the default layout group and item captions location.</value>
  </data>
  <data name="IModelLayoutManagerOptionsCaptionVerticalAlignment" xml:space="preserve">
    <value>Specifies the default vertical alignment of layout group and item captions.</value>
  </data>
  <data name="IModelLayoutManagerOptionsCaptionWordWrap" xml:space="preserve">
    <value>Specifies the default layout group and item captions wrapping mode.</value>
  </data>
  <data name="IModelLayoutManagerOptionsEnableCaptionColon" xml:space="preserve">
    <value>Specifies whether a colon is used in captions displayed for View Items.</value>
  </data>
  <data name="IModelListViewAutoExpandAllGroups" xml:space="preserve">
    <value>Specifies whether all group rows displayed within the List View are automatically expanded.</value>
  </data>
  <data name="IModelListViewColumns" xml:space="preserve">
    <value>Provides access to the Columns node.</value>
  </data>
  <data name="IModelListViewCriteria" xml:space="preserve">
    <value>Specifies the criteria according to which the current List View is filtered.</value>
  </data>
  <data name="IModelListViewDataAccessMode" xml:space="preserve">
    <value>Specifies the mode used to access the collection of business objects displayed in the current List View.</value>
  </data>
  <data name="IModelListViewDetailView" xml:space="preserve">
    <value>Specifies the List View's Detail View. </value>
  </data>
  <data name="IModelListViewEditorType" xml:space="preserve">
    <value>Specifies the List Editor that displays the current List View in a UI.</value>
  </data>
  <data name="IModelListViewFilter" xml:space="preserve">
    <value>Specifies the current filter criteria which represent a combination of the  individual column filters.</value>
  </data>
  <data name="IModelListViewFilterFilters" xml:space="preserve">
    <value>Provides access to the Filters node.</value>
  </data>
  <data name="IModelListViewFilterItemCriteria" xml:space="preserve">
    <value>Specifies the criteria applied to the List View when the current filter is applied.</value>
  </data>
  <data name="IModelListViewFilterItemDescription" xml:space="preserve">
    <value>Specifies the current filter description.</value>
  </data>
  <data name="IModelListViewFiltersCurrentFilter" xml:space="preserve">
    <value>Specifies a filter that must be applied to the current List View.</value>
  </data>
  <data name="IModelListViewFreezeColumnIndices" xml:space="preserve">
    <value>Specifies whether automatic update of the List Views's column indices is disabled.</value>
  </data>
  <data name="IModelListViewGroupSummary" xml:space="preserve">
    <value>Specifies the current List View's group summary.</value>
  </data>
  <data name="IModelListViewIsFooterVisible" xml:space="preserve">
    <value>Specifies whether the footer of a grid that displays the current List View is visible.</value>
  </data>
  <data name="IModelListViewIsGroupPanelVisible" xml:space="preserve">
    <value>Specifies whether the group panel of a grid that displays the current List View is visible.</value>
  </data>
  <data name="IModelListViewMasterDetailMode" xml:space="preserve">
    <value>Specifies whether to display the Detail View of the currently selected object near the current List View.</value>
  </data>
  <data name="IModelListViewMasterDetailView" xml:space="preserve">
    <value>Specifies the Detail View that is displayed in MasterDetailMode.ListViewAndDetailView mode.</value>
  </data>
  <data name="IModelListViewNewItemRowNewItemRowPosition" xml:space="preserve">
    <value>Specifies whether to display the new item row in the current List View.</value>
  </data>
  <data name="IModelListViewPreviewColumnPreviewColumnName" xml:space="preserve">
    <value>Specifies the column whose content must be displayed in the preview section. </value>
  </data>
  <data name="IModelListViewShowAutoFilterRowShowAutoFilterRow" xml:space="preserve">
    <value>Specifies whether the auto filter row is visible in the grid that displays the current List View.</value>
  </data>
  <data name="IModelListViewSorting" xml:space="preserve">
    <value>Provides access to the Sorting node.</value>
  </data>
  <data name="IModelListViewSplitLayout" xml:space="preserve">
    <value>Provides access to the SplitLayout node. </value>
  </data>
  <data name="IModelListViewSplitLayoutViewsOrder" xml:space="preserve">
    <value>Specifies the display order of the List View and its Detail View.</value>
  </data>
  <data name="IModelListViewTopReturnedObjects" xml:space="preserve">
    <value>Specifies the number of objects retrieved by the collection of the List View's Collection Source from the database. </value>
  </data>
  <data name="IModelListViewUseServerMode" xml:space="preserve">
    <value>For internal use. Use the IModelListView.DataAccessMode property instead.</value>
  </data>
  <data name="IModelLocalizationGroupValue" xml:space="preserve">
    <value>Specifies the value of the current localization item.</value>
  </data>
  <data name="IModelLocalizationItemBaseName" xml:space="preserve">
    <value>Specifies the name of the current localization item/group.</value>
  </data>
  <data name="IModelLocalizationItemValue" xml:space="preserve">
    <value>Specifies the value of the current localization item.</value>
  </data>
  <data name="IModelMemberAllowAdd" xml:space="preserve">
    <value>Considered for the XPCollection type properties, with an abstract class as a generic parameter. Specifies whether instances of this abstract class are added to a List View that displays the current property. </value>
  </data>
  <data name="IModelMemberDataSourceCriteriaProperty" xml:space="preserve">
    <value>Specifies the name of the property of the CriteriaOperator type, whose value is used to filter a Lookup Property Editor displayed for the current property.</value>
  </data>
  <data name="IModelMemberDataSourceProperty" xml:space="preserve">
    <value>Specifies the property that the current Property Editor must display, instead of its predefined property.</value>
  </data>
  <data name="IModelMemberDetailViewImageEditorFixedHeight" xml:space="preserve">
    <value>Specifies the fixed height of Image Property Editors in Detail Views when displaying the property.</value>
  </data>
  <data name="IModelMemberDetailViewImageEditorFixedWidth" xml:space="preserve">
    <value>Specifies the fixed width of Image Property Editors in Detail Views when displaying the property.</value>
  </data>
  <data name="IModelMemberDetailViewImageEditorMode" xml:space="preserve">
    <value>Specifies the editor used to display the current property in Detail Views.</value>
  </data>
  <data name="IModelMemberExpression" xml:space="preserve">
    <value>Specifies an expression used to calculate the custom field value.</value>
  </data>
  <data name="IModelMemberGroupInterval" xml:space="preserve">
    <value>Specifies the default group interval for the current property.</value>
  </data>
  <data name="IModelMemberIsCalculated" xml:space="preserve">
    <value>Specifies whether or not the custom field is calculated.</value>
  </data>
  <data name="IModelMemberIsCustom" xml:space="preserve">
    <value>Specifies whether the current property is custom.</value>
  </data>
  <data name="IModelMemberIsVisibleInDetailView" xml:space="preserve">
    <value>Specifies whether the Property Editor that corresponds to a property is visible in a Detail View.</value>
  </data>
  <data name="IModelMemberIsVisibleInListView" xml:space="preserve">
    <value>Specifies whether the column that corresponds to a property is initially visible in a List View.</value>
  </data>
  <data name="IModelMemberIsVisibleInLookupListView" xml:space="preserve">
    <value>Specifies whether the current property is displayed in Lookup List Views, together with the default lookup property.</value>
  </data>
  <data name="IModelMemberListViewImageEditorCustomHeight" xml:space="preserve">
    <value> Specifies the height of inplace Image Property Editors in List Views, when displaying the property.</value>
  </data>
  <data name="IModelMemberListViewImageEditorMode" xml:space="preserve">
    <value>Specifies the inplace editor used to display the current property in List Views.</value>
  </data>
  <data name="IModelMemberName" xml:space="preserve">
    <value>Specifies the current property name.</value>
  </data>
  <data name="IModelMemberSize" xml:space="preserve">
    <value>Specifies the maximum number of characters that can be stored in the database column corresponding to the current property.</value>
  </data>
  <data name="IModelMemberType" xml:space="preserve">
    <value>Specifies the current property type.</value>
  </data>
  <data name="IModelMemberViewItemDataSourceCriteriaProperty" xml:space="preserve">
    <value>Specifies the name of the property of the CriteriaOperator type, whose value is used to filter a Lookup Property Editor displayed for the current property.</value>
  </data>
  <data name="IModelMemberViewItemDataSourceProperty" xml:space="preserve">
    <value>Specifies the property that the current Property Editor must display, instead of its predefined property.</value>
  </data>
  <data name="IModelMemberViewItemImageEditorCustomHeight" xml:space="preserve">
    <value>Specifies the height of inplace Image Property Editors.</value>
  </data>
  <data name="IModelMemberViewItemImageEditorFixedHeight" xml:space="preserve">
    <value>Specifies the fixed height of the current Property Editor.</value>
  </data>
  <data name="IModelMemberViewItemImageEditorFixedWidth" xml:space="preserve">
    <value>Specifies the fixed width of the current Property Editor.</value>
  </data>
  <data name="IModelMemberViewItemImageEditorMode" xml:space="preserve">
    <value>Specifies the repository item used to display the current property in List Views.</value>
  </data>
  <data name="IModelMemberViewItemMaxLength" xml:space="preserve">
    <value>Specifies the maximum number of characters that can be stored in the database column corresponding to the property displayed by the current Property Editor.</value>
  </data>
  <data name="IModelMemberViewItemModelMember" xml:space="preserve">
    <value>Specifies the property that the current Property Editor displays in a UI.</value>
  </data>
  <data name="IModelMemberViewItemPropertyName" xml:space="preserve">
    <value>Specifies the name of the property that the current column displays in a UI.</value>
  </data>
  <data name="IModelMemberViewItemView" xml:space="preserve">
    <value>Specifies a View that can be displayed by a Property Editor.</value>
  </data>
  <data name="IModelNavigationItemItems" xml:space="preserve">
    <value>Provides access to the child Items node.</value>
  </data>
  <data name="IModelNavigationItemObjectKey" xml:space="preserve">
    <value>Specifies the key property value (Oid by default) of the object that is present in the navigation control.</value>
  </data>
  <data name="IModelNavigationItemQuickAccessItem" xml:space="preserve">
    <value>Specifies if the current navigation item is available via the QuickAccessNavigation Action Container in the ASP.NET application.</value>
  </data>
  <data name="IModelNavigationItemView" xml:space="preserve">
    <value>Specifies the View displayed when choosing the current item in the navigation control. </value>
  </data>
  <data name="IModelNavigationItemVisible" xml:space="preserve">
    <value>Indicates whether the current navigation item is active.</value>
  </data>
  <data name="IModelNodeApplication" xml:space="preserve">
    <value>Provides access to the Application Model's root node.</value>
  </data>
  <data name="IModelNodeIndex" xml:space="preserve">
    <value>Specifies the order index by which nodes are arranged.</value>
  </data>
  <data name="IModelNodeNodeCount" xml:space="preserve">
    <value>Gets the number of child nodes.</value>
  </data>
  <data name="IModelNodeParent" xml:space="preserve">
    <value>Provides access to the parent node.</value>
  </data>
  <data name="IModelNodeRoot" xml:space="preserve">
    <value>For internal use only.</value>
  </data>
  <data name="IModelObjectViewModelClass" xml:space="preserve">
    <value>Specifies the type of object(s) displayed in the current View.</value>
  </data>
  <data name="IModelOptionsDashboardEnableCreation" xml:space="preserve">
    <value>Specifies whether the Create Dashboard Action is available to end-users.</value>
  </data>
  <data name="IModelOptionsDashboardEnableCustomization" xml:space="preserve">
    <value>Specifies whether the Organize Dashboard Action is available to end-users.</value>
  </data>
  <data name="IModelOptionsDashboardsDashboards" xml:space="preserve">
    <value>Provides access to the Dashboards node. </value>
  </data>
  <data name="IModelOptionsDataAccessMode" xml:space="preserve">
    <value>Specifies the default mode used to access the collection of business objects in List Views when the IModelListView.DataAccessMode property is not initialized. </value>
  </data>
  <data name="IModelOptionsLayoutManagerOptions" xml:space="preserve">
    <value>Provides access to the LayoutManagerOptions node.</value>
  </data>
  <data name="IModelOptionsLookupSmallCollectionItemCount" xml:space="preserve">
    <value>Considered for reference properties that are displayed by a Lookup Property Editor in the LookupEditorMode.Auto mode (see IModelCommonMemberViewItem.LookupEditorMode). If the assumed object count in the Lookup Property Editor's data source collection is greater than this property value, none of these objects is retrieved, and the Search feature is available. </value>
  </data>
  <data name="IModelOptionsUseServerMode" xml:space="preserve">
    <value>For internal use. Use the IModelOptions.DataAccessMode property instead.</value>
  </data>
  <data name="IModelReasonCaption" xml:space="preserve">
    <value>Specifies the hint for the Actions disabled by the current reason.</value>
  </data>
  <data name="IModelReasonId" xml:space="preserve">
    <value>Specifies the current reason identifier.</value>
  </data>
  <data name="IModelRegisteredPropertyEditorDefaultDisplayFormat" xml:space="preserve">
    <value>Specifies the default display format of a value in the current Property Editor.</value>
  </data>
  <data name="IModelRegisteredPropertyEditorDefaultEditMask" xml:space="preserve">
    <value>Specifies the default edit mask of a value in the current Property Editor.</value>
  </data>
  <data name="IModelRegisteredPropertyEditorDefaultEditMaskType" xml:space="preserve">
    <value>Specifies the default edit mask type of a value in the current Property Editor.</value>
  </data>
  <data name="IModelRegisteredPropertyEditorEditorType" xml:space="preserve">
    <value>Specifies the Property Editor type that will be used for properties of the data type specified by the IModelRegisteredPropertyEditor.PropertyType property.</value>
  </data>
  <data name="IModelRegisteredPropertyEditorPropertyType" xml:space="preserve">
    <value>Specifies the data type to which a Property Editor type is assigned via the IModelRegisteredPropertyEditor.EditorType property.</value>
  </data>
  <data name="IModelRegisteredPropertyEditorsProtectedContentPropertyEditor" xml:space="preserve">
    <value>Specifies the Property Editor that displays a property prohibited to an end-user by the Security System.</value>
  </data>
  <data name="IModelRegisteredViewItemDefaultItemType" xml:space="preserve">
    <value>Specifies a View Item type that will be used in a UI by default.</value>
  </data>
  <data name="IModelRegisteredViewItemName" xml:space="preserve">
    <value>Specifies the name of a View Item.</value>
  </data>
  <data name="IModelRegisteredViewItemsPropertyEditors" xml:space="preserve">
    <value>Provides access to the PropertyEditors child node.</value>
  </data>
  <data name="IModelRootNavigationItemsDefaultChildItemsDisplayStyle" xml:space="preserve">
    <value>Specifies the default navbar group style when the IModelRootNavigationItems.NavigationStyle property is set to NavigationStyle.NavBar.</value>
  </data>
  <data name="IModelRootNavigationItemsDefaultLeafImageName" xml:space="preserve">
    <value>Specifies the name of the image displayed by default for the navigation items which do not have child navigation items.</value>
  </data>
  <data name="IModelRootNavigationItemsDefaultParentImageName" xml:space="preserve">
    <value>Specifies the name of the image displayed by default for the navigation items which have child navigation items.</value>
  </data>
  <data name="IModelRootNavigationItemsItems" xml:space="preserve">
    <value>Provides access to the child Items node.</value>
  </data>
  <data name="IModelRootNavigationItemsNavigationStyle" xml:space="preserve">
    <value>Specifies the control to be used as the navigation control.</value>
  </data>
  <data name="IModelRootNavigationItemsStartupNavigationItem" xml:space="preserve">
    <value>Specifies a navigation item which is activated when the application is loaded. No View is shown at startup when this property value is not specified.</value>
  </data>
  <data name="IModelSchemaModuleName" xml:space="preserve">
    <value>This property is intended for internal use.&lt;!-- Specifies the name of a module. --&gt;</value>
  </data>
  <data name="IModelSchemaModuleVersion" xml:space="preserve">
    <value>This property is intended for internal use.&lt;!-- Specifies the version of a module. --&gt;</value>
  </data>
  <data name="IModelSortPropertyDirection" xml:space="preserve">
    <value>Specifies the property's sort order.</value>
  </data>
  <data name="IModelSortPropertyPropertyName" xml:space="preserve">
    <value>Specifies the name of the property to sort against. </value>
  </data>
  <data name="IModelSplitLayoutDirection" xml:space="preserve">
    <value>Specifies the Detail View location, in relation to the current List View.</value>
  </data>
  <data name="IModelSplitLayoutSplitterPosition" xml:space="preserve">
    <value>Specifies the distance between a splitter and the current List View left (top) border.</value>
  </data>
  <data name="IModelStaticImageImageName" xml:space="preserve">
    <value>Specifies the name of the image that is displayed as a Static Image.</value>
  </data>
  <data name="IModelStaticImageSizeMode" xml:space="preserve">
    <value>Specifies the mode for display of the current Static Image.</value>
  </data>
  <data name="IModelStaticTextText" xml:space="preserve">
    <value>Specifies the text of the current Static Text View Item.</value>
  </data>
  <data name="IModelTabbedGroupDirection" xml:space="preserve">
    <value>Specifyies the direction of a tabbed group.</value>
  </data>
  <data name="IModelTabbedGroupMultiLine" xml:space="preserve">
    <value>Specifies whether a tabbed group should be displayed as multi-line, when the tab page headers do not fit in the available space.</value>
  </data>
  <data name="IModelTemplateId" xml:space="preserve">
    <value>Specifies the current Template's identifier.</value>
  </data>
  <data name="IModelToolTipOptionsToolTipIconType" xml:space="preserve">
    <value>Specifies the tooltip icon. Has effect in Windows Forms applications only. </value>
  </data>
  <data name="IModelToolTipOptionsToolTipTitle" xml:space="preserve">
    <value>Specifies the title of the tooltip. Has effect in Windows Forms applications only. </value>
  </data>
  <data name="IModelToolTipToolTip" xml:space="preserve">
    <value>Specifies the tooltip text.</value>
  </data>
  <data name="IModelViewAllowDelete" xml:space="preserve">
    <value>Specifies whether objects displayed in the current View can be deleted when the View is Object View.</value>
  </data>
  <data name="IModelViewAllowEdit" xml:space="preserve">
    <value>Specifies whether objects displayed in the current View can be edited when the View is Object View.</value>
  </data>
  <data name="IModelViewAllowNew" xml:space="preserve">
    <value>Specifies whether new objects can be created in the current View when the View is Object View.</value>
  </data>
  <data name="IModelViewCaption" xml:space="preserve">
    <value>Specifies the caption of the current View.</value>
  </data>
  <data name="IModelViewControllerTargetObjectType" xml:space="preserve">
    <value>Indicates the type of objects for which the Controller is activated.</value>
  </data>
  <data name="IModelViewControllerTargetViewId" xml:space="preserve">
    <value>Gets the identifier of the View for which the View Controller is activated, or a semicolon-separated list of identifiers if a View Controller targets multiple Views.</value>
  </data>
  <data name="IModelViewControllerTargetViewNesting" xml:space="preserve">
    <value>Indicates the type of View for which the Controller is activated.</value>
  </data>
  <data name="IModelViewControllerTargetViewType" xml:space="preserve">
    <value>Indicates the type of View for which the Controller is activated.</value>
  </data>
  <data name="IModelViewHiddenActionsHiddenActions" xml:space="preserve">
    <value>Provides access to the HiddenActions node.</value>
  </data>
  <data name="IModelViewId" xml:space="preserve">
    <value>Specifies the current View identifier.</value>
  </data>
  <data name="IModelViewImageName" xml:space="preserve">
    <value>Specifies the name of the image that is displayed for the current View.</value>
  </data>
  <data name="IModelViewItemCaption" xml:space="preserve">
    <value>Specifies the caption of the current View Item.</value>
  </data>
  <data name="IModelViewItemId" xml:space="preserve">
    <value>Specifies the current View Item identifier.</value>
  </data>
  <data name="IModelViewLayoutElementId" xml:space="preserve">
    <value>Specifies the identifier of a layout element.</value>
  </data>
  <data name="IModelViewLayoutElementRelativeSize" xml:space="preserve">
    <value>Specifies the height (width, in the case of a horizontal direction) of the current layout element referenced to the height (width) of its group, in percentage terms.</value>
  </data>
  <data name="IModelViewsDefaultListEditor" xml:space="preserve">
    <value>Specifies the List Editor that is used to display a List View by default.</value>
  </data>
  <data name="IModelWindowControllerTargetWindowType" xml:space="preserve">
    <value>Indicates the type of the Window for which the current Controller is activated.</value>
  </data>
  <data name="ISupportControlAlignmentHorizontalAlign" xml:space="preserve">
    <value>Specifies the horizontal content position within the layout item.</value>
  </data>
  <data name="ISupportControlAlignmentVerticalAlign" xml:space="preserve">
    <value>Specifies the vertical content position within the layout item.</value>
  </data>
  <data name="LinkUnlinkControllerAutoCommit" xml:space="preserve">
    <value>Indicates whether to save changes made to the current List View's collection when the LinkUnlinkController.LinkAction or LinkUnlinkController.UnlinkAction is executed.</value>
  </data>
  <data name="LinkUnlinkControllerExcludeLinkedObjects" xml:space="preserve">
    <value>Specifies whether to exclude the objects that are already linked from the List View invoked by the LinkUnlinkController.LinkAction.</value>
  </data>
  <data name="LinkUnlinkControllerLinkAction" xml:space="preserve">
    <value>Provides access to the LinkUnlinkController's Link Action.</value>
  </data>
  <data name="LinkUnlinkControllerUnlinkAction" xml:space="preserve">
    <value>Provides access to the LinkUnlinkController's Unlink Action.</value>
  </data>
  <data name="ListEditorContextMenuTemplate" xml:space="preserve">
    <value>Provides access to a List Editor's Context Menu Template.</value>
  </data>
  <data name="ListEditorControl" xml:space="preserve">
    <value>Provides access to the control that is used by the current List Editor to represent a List View in a UI.</value>
  </data>
  <data name="ListEditorDataSource" xml:space="preserve">
    <value>Specifies a List Editor's data source.</value>
  </data>
  <data name="ListEditorErrorMessages" xml:space="preserve">
    <value>Provides access to the current ListEditor's error message collection, populated when Validation Rules are broken.</value>
  </data>
  <data name="ListEditorFocusedObject" xml:space="preserve">
    <value>Gets or sets the focused object in a List Editor.</value>
  </data>
  <data name="ListEditorIsDisposed" xml:space="preserve">
    <value>Indicates whether a List Editor has been disposed of.</value>
  </data>
  <data name="ListEditorModel" xml:space="preserve">
    <value>Provides access to the Application Model node that defines the List View represented by the current List Editors. </value>
  </data>
  <data name="ListEditorName" xml:space="preserve">
    <value>Specifies a List Editor's name.</value>
  </data>
  <data name="ListEditorProtectedContentText" xml:space="preserve">
    <value>Specifies the text that is used by a List Editor to display a property which is prohibited for viewing by the current user.</value>
  </data>
  <data name="ListEditorRequiredProperties" xml:space="preserve">
    <value>Returns an array of descriptors for the properties considered bindable by the List Editor's Collection Source.</value>
  </data>
  <data name="ListEditorSelectionType" xml:space="preserve">
    <value>Returns the selection type supported by the current List Editor.</value>
  </data>
  <data name="ListViewCaption" xml:space="preserve">
    <value>Specifies a List View's caption.</value>
  </data>
  <data name="ListViewCollectionSource" xml:space="preserve">
    <value>Provides access to a ListView's Collection Source.</value>
  </data>
  <data name="ListViewCurrentObject" xml:space="preserve">
    <value>Specifies a List View's current object.</value>
  </data>
  <data name="ListViewDetailViewId" xml:space="preserve">
    <value>Specifies the ID of the Detail View which is invoked from the current List View, or displayed together with a ListView.</value>
  </data>
  <data name="ListViewEditor" xml:space="preserve">
    <value>Returns a List View's List Editor.</value>
  </data>
  <data name="ListViewEditView" xml:space="preserve">
    <value>Provides access to the Detail View that is displayed together with a List View.</value>
  </data>
  <data name="ListViewModel" xml:space="preserve">
    <value>Provides access to the Application Model node where a List View's settings are stored. </value>
  </data>
  <data name="ListViewProcessCurrentObjectControllerProcessCurrentObjectAction" xml:space="preserve">
    <value>Provides access to the ListViewShowObject Action.</value>
  </data>
  <data name="ListViewSelectedObjects" xml:space="preserve">
    <value>Provides access to a collection of objects currently selected in a List View's ListView.Editor.</value>
  </data>
  <data name="ListViewSelectionType" xml:space="preserve">
    <value>Returns the selection type supported by the current List View.</value>
  </data>
  <data name="LookupEditorModeAttributeMode" xml:space="preserve">
    <value>Specifies the mode of the target business class property's Lookup Property Editor. </value>
  </data>
  <data name="ModelIModelAction" xml:space="preserve">
    <value>The Action node represents an Action's settings.</value>
  </data>
  <data name="ModelIModelActionContainerViewItem" xml:space="preserve">
    <value>The ActionContainerViewItem node defines a View Item displaying an Action Container.</value>
  </data>
  <data name="ModelIModelActionDesign" xml:space="preserve">
    <value>The ActionDesign node provides access to Actions, Action Containers, Controllers and possible reasons for an Action disability.</value>
  </data>
  <data name="ModelIModelActions" xml:space="preserve">
    <value>The Actions node provides access to all Actions loaded in the Application Model, and allows editing their settings.</value>
  </data>
  <data name="ModelIModelApplication" xml:space="preserve">
    <value>Properties of the Application node provide general information on the current application.</value>
  </data>
  <data name="ModelIModelAssemblyResourceImageSource" xml:space="preserve">
    <value>An AssemblyResourceImageSource node defines the images source when the images are stored in a resource.</value>
  </data>
  <data name="ModelIModelBand" xml:space="preserve">
    <value>The Band node defines a logical group (band) of columns. A band is visually represented by a header displayed above headers of the columns it combines.</value>
  </data>
  <data name="ModelIModelBandsLayout" xml:space="preserve">
    <value>The BandsLayout node provides access to a List View's bands layout. </value>
  </data>
  <data name="ModelIModelBOModel" xml:space="preserve">
    <value>The BOModel node provides access to all the Application Model's persistent classes and their properties.</value>
  </data>
  <data name="ModelIModelBOModelClassMembers" xml:space="preserve">
    <value>The OwnMembers node defines the members declared in a particular business class.</value>
  </data>
  <data name="ModelIModelChoiceActionItem" xml:space="preserve">
    <value>The ChoiceActionItem node represents a Choice Action Item's settings.</value>
  </data>
  <data name="ModelIModelChoiceActionItems" xml:space="preserve">
    <value>The ChoiceActionItems node provides access to all Choice Action Items added to the Action's ChoiceActionBase.Items collection.</value>
  </data>
  <data name="ModelIModelClass" xml:space="preserve">
    <value>The Class node defines a persistent class from the business model, and provides access to its members list.</value>
  </data>
  <data name="ModelIModelColumn" xml:space="preserve">
    <value>The Column node defines a column that displays a particular property.</value>
  </data>
  <data name="ModelIModelColumns" xml:space="preserve">
    <value>The Columns node provides access to a List View's columns.</value>
  </data>
  <data name="ModelIModelColumnSummary" xml:space="preserve">
    <value>The Summary node provides access to a List View column's summaries.</value>
  </data>
  <data name="ModelIModelColumnSummaryItem" xml:space="preserve">
    <value>The SummaryItem node defines a summary item for a List View's column.</value>
  </data>
  <data name="ModelIModelCompositeView" xml:space="preserve">
    <value>Serves as a base interface for the IModelObjectView and IModelDashboardView interfaces.</value>
  </data>
  <data name="ModelIModelControlDetailItem" xml:space="preserve">
    <value>The ControlDetailItem node defines a control View Item of the current Detail View.</value>
  </data>
  <data name="ModelIModelControllerActions" xml:space="preserve">
    <value>The Actions node represents the Actions contained in a Controller.</value>
  </data>
  <data name="ModelIModelControllers" xml:space="preserve">
    <value>The Controllers node provides access to Controllers and their settings. Contains links to nodes that define the Actions contained in Controllers.</value>
  </data>
  <data name="ModelIModelDashboardView" xml:space="preserve">
    <value>The DashboardView node defines a particular Dashboard View.</value>
  </data>
  <data name="ModelIModelDashboardViewItem" xml:space="preserve">
    <value>The DashboardViewItem node defines a View Item displaying a View.</value>
  </data>
  <data name="ModelIModelDetailView" xml:space="preserve">
    <value>The DetailView node defines a Detail View of a particular business class.</value>
  </data>
  <data name="ModelIModelDisableReasons" xml:space="preserve">
    <value>The DisableReasons node lists the disabling reasons for an Action, specifying a definition for each of them.</value>
  </data>
  <data name="ModelIModelFileImageSource" xml:space="preserve">
    <value>A FileImageSource node defines the image source when the images are stored in a separate folder.</value>
  </data>
  <data name="ModelIModelImageSources" xml:space="preserve">
    <value>The ImageSources node is used by the system when it loads images. In this node, you can specify your image sources, and set their loading order.</value>
  </data>
  <data name="ModelIModelLayoutGroup" xml:space="preserve">
    <value>The LayoutGroup node defines the layout of View Items that belong to a particular group.</value>
  </data>
  <data name="ModelIModelLayoutItem" xml:space="preserve">
    <value>The LayoutItem node defines the layout of a particular View Item in a Detail View.</value>
  </data>
  <data name="ModelIModelLayoutManagerOptions" xml:space="preserve">
    <value>The LayoutManagerOptions node specifies options of a Detail View's Layout Manager. These options are applied to all Detail Views created in the application.</value>
  </data>
  <data name="ModelIModelListView" xml:space="preserve">
    <value>The ListView node defines a List View of a particular business class.</value>
  </data>
  <data name="ModelIModelListViewSplitLayout" xml:space="preserve">
    <value>Extends the SplitLayout node with List View specific properties.</value>
  </data>
  <data name="ModelIModelLocalization" xml:space="preserve">
    <value>The Localization node allows localization of UI elements such as messages, exceptions, button captions and so on.</value>
  </data>
  <data name="ModelIModelLocalizationGroup" xml:space="preserve">
    <value>A LocalizationGroup node represents a group of localizable items.</value>
  </data>
  <data name="ModelIModelLocalizationItem" xml:space="preserve">
    <value>A LocalizationItem node represents a localizable item.</value>
  </data>
  <data name="ModelIModelMember" xml:space="preserve">
    <value>The Member node defines a property of the class specified by the parent node.</value>
  </data>
  <data name="ModelIModelOptions" xml:space="preserve">
    <value>The Options node allows editing different UI settings.</value>
  </data>
  <data name="ModelIModelPropertyEditor" xml:space="preserve">
    <value>The PropertyEditor node defines a Property Editor of a particular property.</value>
  </data>
  <data name="ModelIModelReason" xml:space="preserve">
    <value>A Reason node defines a disabling reason.</value>
  </data>
  <data name="ModelIModelSchemaModule" xml:space="preserve">
    <value>The SchemaModule node is intended for internal use.&lt;!--The SchemaModule node specifies a module implementing the IModelDifferenceUpdater interface, referenced by the application.--&gt;</value>
  </data>
  <data name="ModelIModelSchemaModules" xml:space="preserve">
    <value>The SchemaModules node is intended for internal use.&lt;!--The SchemaModules node provides access to the list of modules implementing the IModelDifferenceUpdater interface, referenced by the application.--&gt;</value>
  </data>
  <data name="ModelIModelSorting" xml:space="preserve">
    <value>The Sorting node provides access to the sort settings applied to the collection of the List View's Collection Source.</value>
  </data>
  <data name="ModelIModelSortProperty" xml:space="preserve">
    <value>The SortProperty node specifies the sorting property by which the collection of the List View's Collection Source is sorted.</value>
  </data>
  <data name="ModelIModelSplitLayout" xml:space="preserve">
    <value>The SplitLayout node allows you to set the positional relationship of Views, and the position of a splitter.</value>
  </data>
  <data name="ModelIModelStaticImage" xml:space="preserve">
    <value>The StaticImage node defines a View Item that represents a Static Item. </value>
  </data>
  <data name="ModelIModelStaticText" xml:space="preserve">
    <value>The StaticText node defines a View Item that represents a Static Text.</value>
  </data>
  <data name="ModelIModelTabbedGroup" xml:space="preserve">
    <value>The TabbedGroup node defines the layout of View Items within a tabbed group.</value>
  </data>
  <data name="ModelIModelViewController" xml:space="preserve">
    <value>The ViewController node represents a View Controller's settings and provides access to Actions that belong to this Controller.</value>
  </data>
  <data name="ModelIModelViewItems" xml:space="preserve">
    <value>The Items node provides access to the View Items that are displayed in a Composite View.</value>
  </data>
  <data name="ModelIModelViewLayout" xml:space="preserve">
    <value>The Layout node defines the layout of View Items in a Composite View.</value>
  </data>
  <data name="ModelIModelViews" xml:space="preserve">
    <value>The Views node provides access to the Views of all the business classes added to the Application Model.</value>
  </data>
  <data name="ModelIModelWindowController" xml:space="preserve">
    <value>The WindowController node represents a Window Controller's settings and provides access to Actions that belong to this Controller.</value>
  </data>
  <data name="ModificationsControllerCancelAction" xml:space="preserve">
    <value>Provides access to the ModificationsController's Cancel Action.</value>
  </data>
  <data name="ModificationsControllerDetailView" xml:space="preserve">
    <value>Gets the current Detail View.</value>
  </data>
  <data name="ModificationsControllerListView" xml:space="preserve">
    <value>Gets the current List View.</value>
  </data>
  <data name="ModificationsControllerModificationsCheckingMode" xml:space="preserve">
    <value>Specifies when the modifications made in an editable List View are committed.</value>
  </data>
  <data name="ModificationsControllerModificationsHandlingMode" xml:space="preserve">
    <value>Specifies the application behavior when a user modifies data and then changes the current object or closes the View.</value>
  </data>
  <data name="ModificationsControllerSaveAction" xml:space="preserve">
    <value>Provides access to the ModificationsController's Save Action.</value>
  </data>
  <data name="ModificationsControllerSaveAndCloseAction" xml:space="preserve">
    <value>Provides access to the ModificationsController's SaveAndClose Action.</value>
  </data>
  <data name="ModificationsControllerSaveAndNewAction" xml:space="preserve">
    <value>Provides access to the ModificationsController's SaveAndNew Action.</value>
  </data>
  <data name="ModuleBaseApplication" xml:space="preserve">
    <value>Provides access to an XafApplication object that can be used to manage the current application.</value>
  </data>
  <data name="ModuleBaseDescription" xml:space="preserve">
    <value>Specifies a textual description of a module.</value>
  </data>
  <data name="ModuleBaseModuleManager" xml:space="preserve">
    <value>Provides access to the ApplicationModulesManager object, which contains information on the modules currenly added to the application.</value>
  </data>
  <data name="ModuleBaseName" xml:space="preserve">
    <value>Gets the full name of a module's type.</value>
  </data>
  <data name="ModuleBaseResourcesExportedToModel" xml:space="preserve">
    <value>Provides access to a collection of Resource Localizers used in the current module to extend the Application Model's IModelLocalization node.</value>
  </data>
  <data name="NavigationItemAttributeDefaultGroupName" xml:space="preserve">
    <value>Specifies the name of the default first-level navigation item in the navigation control to which the required item is added.</value>
  </data>
  <data name="NavigationItemAttributeGroupName" xml:space="preserve">
    <value>Specifies the name of the first-level navigation item to which an item corresponding to the required business class is added.</value>
  </data>
  <data name="NavigationItemAttributeIsNavigationItem" xml:space="preserve">
    <value>Specifies whether an item is added to the navigation control on the main window.</value>
  </data>
  <data name="NewObjectViewControllerNewObjectAction" xml:space="preserve">
    <value>Provides access to the NewObjectViewController's New Action.</value>
  </data>
  <data name="ObjectCaptionFormatAttributeFormatString" xml:space="preserve">
    <value>Returns a caption format for the target business class' objects.</value>
  </data>
  <data name="ParametrizedActionExecute" xml:space="preserve">
    <value>Occurs after a Parametrized Action's editor value has been validated.</value>
  </data>
  <data name="ParametrizedActionNullValuePrompt" xml:space="preserve">
    <value>Specifies the default text that is displayed in the Parameterized Action's control.</value>
  </data>
  <data name="ParametrizedActionShortCaption" xml:space="preserve">
    <value>Specifies a caption of the button attached to a Parametrized Action's editor.</value>
  </data>
  <data name="ParametrizedActionValueType" xml:space="preserve">
    <value>Specifies the type of values that must be entered in a Parametrized Action's editor.</value>
  </data>
  <data name="PopupWindowShowActionAcceptButtonCaption" xml:space="preserve">
    <value>Specifies the caption of the accepting button on the Pop-up Window Show Action's pop-up Window.</value>
  </data>
  <data name="PopupWindowShowActionCancel" xml:space="preserve">
    <value>Occurs when an end-user clicks the cancelling button on the Pop-up Window Show Action's pop-up Window.</value>
  </data>
  <data name="PopupWindowShowActionCancelButtonCaption" xml:space="preserve">
    <value>Specifies the caption of the cancelling button on the Pop-up Window Show Action's pop-up Window.</value>
  </data>
  <data name="PopupWindowShowActionCustomizePopupWindowParams" xml:space="preserve">
    <value>Occurs when generating a pop-up Window for a Pop-up Window Show Action.</value>
  </data>
  <data name="PopupWindowShowActionCustomizeTemplate" xml:space="preserve">
    <value>Occurs when setting a Template for a Pop-up Window Show Action's pop-up Window.</value>
  </data>
  <data name="PopupWindowShowActionExecute" xml:space="preserve">
    <value>Occurs when an end-user clicks the accept button on the Pop-up Window Show Action's pop-up Window.</value>
  </data>
  <data name="PopupWindowShowActionIsModal" xml:space="preserve">
    <value>Indicates whether a Pop-up Window Show Action's pop-up Window is modal.</value>
  </data>
  <data name="PopupWindowShowActionIsSizeable" xml:space="preserve">
    <value>Indicates whether a Pop-up Window Show Action's pop-up Window can be resized by an end-user.</value>
  </data>
  <data name="PropertyEditorAttributePropertyType" xml:space="preserve">
    <value>Specifies the type of properties that the target Property Editor can display.</value>
  </data>
  <data name="PropertyEditorCanFormatPropertyValue" xml:space="preserve">
    <value>Gets whether or not the PropertyEditor's value can be formatted.</value>
  </data>
  <data name="PropertyEditorCaption" xml:space="preserve">
    <value>Returns the current Property Editor's caption.</value>
  </data>
  <data name="PropertyEditorControlValue" xml:space="preserve">
    <value>Returns the value that is set to the current Property Editor's control.</value>
  </data>
  <data name="PropertyEditorDisplayFormat" xml:space="preserve">
    <value>Specifies the pattern for formatting values of the current Property Editor.</value>
  </data>
  <data name="PropertyEditorEditMask" xml:space="preserve">
    <value>Specifies a mask expression for the current Property Editor's control.</value>
  </data>
  <data name="PropertyEditorEditMaskType" xml:space="preserve">
    <value>Specifies the PropertyEditor's edit mask type.</value>
  </data>
  <data name="PropertyEditorErrorIcon" xml:space="preserve">
    <value>Specifies the error icon displayed within the PropertyEditor when an error is associated with the editor.</value>
  </data>
  <data name="PropertyEditorErrorMessage" xml:space="preserve">
    <value>Specifies the message about validation rules broken because of the current Property Editor's bound property.</value>
  </data>
  <data name="PropertyEditorImmediatePostData" xml:space="preserve">
    <value>Specifies whether the property value is updated immediately when changes occur in the current Property Editor's bound control.</value>
  </data>
  <data name="PropertyEditorIsCaptionVisible" xml:space="preserve">
    <value>Indicates whether the caption of the current Property Editor should be visible in a UI.</value>
  </data>
  <data name="PropertyEditorIsPassword" xml:space="preserve">
    <value>Specifies whether the current Property Editor represents a password.</value>
  </data>
  <data name="PropertyEditorMaxLength" xml:space="preserve">
    <value>Specifies the maximum length that the current Property Editor's value can have.</value>
  </data>
  <data name="PropertyEditorMemberInfo" xml:space="preserve">
    <value>Provides access to the IMemberInfo object that contains information on the property represented by the current Property Editor.</value>
  </data>
  <data name="PropertyEditorPropertyName" xml:space="preserve">
    <value>Specifies the name of the property that is represented by the current Property Editor.</value>
  </data>
  <data name="PropertyEditorPropertyValue" xml:space="preserve">
    <value>Specifies the value of the property represented by the current Property Editor.</value>
  </data>
  <data name="RecordsNavigationControllerNextObjectAction" xml:space="preserve">
    <value>Provides access to the RecordsNavigationController's NextObject Action.</value>
  </data>
  <data name="RecordsNavigationControllerOrderProviderSource" xml:space="preserve">
    <value>Provides access to the RecordsNavigationController's Order Provider.</value>
  </data>
  <data name="RecordsNavigationControllerPreviousObjectAction" xml:space="preserve">
    <value>Provides access to the RecordsNavigationController's PreviousObject Action.</value>
  </data>
  <data name="ShowNavigationItemControllerShowNavigationItemAction" xml:space="preserve">
    <value>Provides access to the ShowNavigationItemController's ShowNavigationItem Action.</value>
  </data>
  <data name="ShowViewParametersContext" xml:space="preserve">
    <value>Specifies the Template context for the Window that will contain the target View.</value>
  </data>
  <data name="ShowViewParametersControllers" xml:space="preserve">
    <value>Provides access to a collection of Controllers that should only be activated for the target View or its Window. </value>
  </data>
  <data name="ShowViewParametersCreateAllControllers" xml:space="preserve">
    <value>Specifies whether all Controllers that satisfy the target View or its Window must be created.</value>
  </data>
  <data name="ShowViewParametersCreatedView" xml:space="preserve">
    <value>Specifies the View to be displayed.</value>
  </data>
  <data name="ShowViewParametersTargetWindow" xml:space="preserve">
    <value>Specifies the type of the Window that will embed the target View.</value>
  </data>
  <data name="SimpleActionExecute" xml:space="preserve">
    <value>Occurs when an end-user clicks a Simple Action's control.</value>
  </data>
  <data name="SingleChoiceActionExecute" xml:space="preserve">
    <value>Occurs  when an end-user clicks the required item located in the Single Choice Action's item list.</value>
  </data>
  <data name="SingleChoiceActionItemType" xml:space="preserve">
    <value>Specifies the type of a Single Choice Action's items from the ChoiceActionBase.Items collection.</value>
  </data>
  <data name="SystemModuleIModelActionContainer" xml:space="preserve">
    <value>The ActionContainer node provides access to Actions which are mapped to the current Action Container.</value>
  </data>
  <data name="SystemModuleIModelActionLink" xml:space="preserve">
    <value>The ActionLink node specifies an Action mapped to the current Action Container.</value>
  </data>
  <data name="SystemModuleIModelActionToContainerMapping" xml:space="preserve">
    <value>The ActionToContainerMapping node specifies the Action Containers to which the application's Actions are mapped according to their Category property value.</value>
  </data>
  <data name="SystemModuleIModelCreatableItem" xml:space="preserve">
    <value>A CreatableItem node defines an item of the New Action.</value>
  </data>
  <data name="SystemModuleIModelCreatableItems" xml:space="preserve">
    <value>The CreatableItems node provides information to the New Action.</value>
  </data>
  <data name="SystemModuleIModelHiddenActions" xml:space="preserve">
    <value>The HiddenActions node specifies Actions to be hidden when a View is displayed.</value>
  </data>
  <data name="SystemModuleIModelListViewFilterItem" xml:space="preserve">
    <value>A Filter node specifies the criteria applied to the List View when the current filter is applied.</value>
  </data>
  <data name="SystemModuleIModelListViewFilters" xml:space="preserve">
    <value>The Filters node provides access to the filters that can be applied to a List View.</value>
  </data>
  <data name="SystemModuleIModelNavigationItem" xml:space="preserve">
    <value>A NavigationItem node defines a ShowNavigationItem Action item displayed in the main Window's navigation control.</value>
  </data>
  <data name="SystemModuleIModelNavigationItems" xml:space="preserve">
    <value>The Items node defines child navigation items of a particular navigation item.</value>
  </data>
  <data name="SystemModuleIModelOptionsDashboard" xml:space="preserve">
    <value>The Dashboards node specifies options related to the Dashboard Views.</value>
  </data>
  <data name="SystemModuleIModelOptionsDashboards" xml:space="preserve">
    <value>Used to extend the Application Model's Options node.</value>
  </data>
  <data name="SystemModuleIModelRootNavigationItems" xml:space="preserve">
    <value>The NavigationItems node specifies the navigation structure used by the ShowNavigationItem Action.</value>
  </data>
  <data name="ViewCaption" xml:space="preserve">
    <value>Specifies a View's caption.</value>
  </data>
  <data name="ViewControl" xml:space="preserve">
    <value>Returns the current View's control.</value>
  </data>
  <data name="ViewControllerTargetObjectType" xml:space="preserve">
    <value>Specifies the type of objects that must be represented by a View to provide View Controller activation.</value>
  </data>
  <data name="ViewControllerTargetViewId" xml:space="preserve">
    <value>Specifies the identifier of the View for which the View Controller is activated, or a semicolon-separated list of identifiers if a View Controller targets multiple Views.</value>
  </data>
  <data name="ViewControllerTargetViewNesting" xml:space="preserve">
    <value>Specifies whether the View for which a View Controller is intended must be root, nested or any.</value>
  </data>
  <data name="ViewControllerTargetViewType" xml:space="preserve">
    <value>Specifies the type of the View, for which a View Controller is intended.</value>
  </data>
  <data name="ViewControllerViewControlsCreated" xml:space="preserve">
    <value>Occurs after the controls have been created for the current Controller's ViewController.View if the Controller has already been activated.</value>
  </data>
  <data name="ViewCurrentObject" xml:space="preserve">
    <value>Specifies a View's current object.</value>
  </data>
  <data name="ViewErrorMessages" xml:space="preserve">
    <value>Provides access to the current View's error message collection that is populated when Validation Rules get broken.</value>
  </data>
  <data name="ViewId" xml:space="preserve">
    <value>Returns a View's ID.</value>
  </data>
  <data name="ViewIsControlCreated" xml:space="preserve">
    <value>Indicates whether a View's View.Control has been created.</value>
  </data>
  <data name="ViewIsRoot" xml:space="preserve">
    <value>Specifies whether a View is root.</value>
  </data>
  <data name="ViewItemCaption" xml:space="preserve">
    <value>Returns the current View Item's caption.</value>
  </data>
  <data name="ViewItemControl" xml:space="preserve">
    <value>Provides access to the control that represents the current View Item in a UI.</value>
  </data>
  <data name="ViewItemCurrentObject" xml:space="preserve">
    <value>Specifies the object for which the current View Item's View is created.</value>
  </data>
  <data name="ViewItemId" xml:space="preserve">
    <value>Gets the identifier of the current View Item.</value>
  </data>
  <data name="ViewItemIsCaptionVisible" xml:space="preserve">
    <value>Indicates whether the caption of the current View Item should be visible.</value>
  </data>
  <data name="ViewItemObjectType" xml:space="preserve">
    <value>Specifies the type of object for which the current View Item's View is created.</value>
  </data>
  <data name="ViewItemObjectTypeInfo" xml:space="preserve">
    <value>Provides access to the information on the type of the object which is represented by the current View Item's View.</value>
  </data>
  <data name="ViewItemView" xml:space="preserve">
    <value>Specifies the Detail View that contains the current View Item.</value>
  </data>
  <data name="ViewModel" xml:space="preserve">
    <value>Provides access to information on a View, which is stored in the Application Model. </value>
  </data>
  <data name="ViewObjectSpace" xml:space="preserve">
    <value>Provides access to the object space within which a View was created.</value>
  </data>
  <data name="ViewObjectTypeInfo" xml:space="preserve">
    <value>This property is obsolete. Use the ObjectView.ObjectTypeInfo property instead.</value>
  </data>
  <data name="ViewScrollPosition" xml:space="preserve">
    <value>Specifies the scroll point of Windows in ASP.NET Web applications.</value>
  </data>
  <data name="ViewSelectedObjects" xml:space="preserve">
    <value>Specifies a View's selected objects.</value>
  </data>
  <data name="ViewSelectionType" xml:space="preserve">
    <value>Returns the selection type supported by a View.</value>
  </data>
  <data name="VisibleInReportsAttributeIsVisible" xml:space="preserve">
    <value>Specifies whether an item is added to the Data Type drop-down list in the Report Wizard.</value>
  </data>
  <data name="WindowControllerTargetWindowType" xml:space="preserve">
    <value>Specifies the kind of the Window for which a Window Controller is intended.</value>
  </data>
  <data name="WindowControllerViewClosed" xml:space="preserve">
    <value>Occurs after closing the View of the Window Controller's Window.</value>
  </data>
  <data name="WindowControllerViewClosing" xml:space="preserve">
    <value>Occurs before closing the View of the Window Controller's Window.</value>
  </data>
  <data name="WindowControllerViewQueryCanClose" xml:space="preserve">
    <value>Occurs when checking whether the View of the Window Controller's Window is allowed to be closed.</value>
  </data>
  <data name="WindowIsMain" xml:space="preserve">
    <value>Indicates whether a Window is main.</value>
  </data>
  <data name="WindowTemplate" xml:space="preserve">
    <value>Returns a Window's Template. </value>
  </data>
  <data name="XafApplicationApplicationName" xml:space="preserve">
    <value>Specifies the application's name.</value>
  </data>
  <data name="XafApplicationConnectionString" xml:space="preserve">
    <value>Specifies the connection string which is used to connect to the application's database or to the Application Server.</value>
  </data>
  <data name="XafApplicationCreateCustomCollectionSource" xml:space="preserve">
    <value>Occurs when creating a Collection Source for a List View.</value>
  </data>
  <data name="XafApplicationCreateCustomLogonParameterStore" xml:space="preserve">
    <value>Occurs both when reading and writing the last logon parameters, before creating the logon parameters storage.</value>
  </data>
  <data name="XafApplicationCreateCustomLogonWindowControllers" xml:space="preserve">
    <value>Occurs when creating Controllers for a Logon Window.</value>
  </data>
  <data name="XafApplicationCreateCustomLogonWindowObjectSpace" xml:space="preserve">
    <value>Occurs when creating an Object Space for a Logon Window's Detail View.</value>
  </data>
  <data name="XafApplicationCreateCustomModelDifferenceStore" xml:space="preserve">
    <value>Occurs when a storage for model differences is being created.</value>
  </data>
  <data name="XafApplicationCreateCustomObjectSpaceProvider" xml:space="preserve">
    <value>Occurs when setting up the application.</value>
  </data>
  <data name="XafApplicationCreateCustomPropertyCollectionSource" xml:space="preserve">
    <value>Occurs when creating a Collection Source for a nested List View that displays a collection property.</value>
  </data>
  <data name="XafApplicationCreateCustomTemplate" xml:space="preserve">
    <value>Occurs when creating a Template.</value>
  </data>
  <data name="XafApplicationCreateCustomUserModelDifferenceStore" xml:space="preserve">
    <value>Occurs when a storage for end-user model differences is being created.</value>
  </data>
  <data name="XafApplicationCurrentAspectProvider" xml:space="preserve">
    <value>Returns an ICurrentAspectProvider object that supplies culture-specific information.</value>
  </data>
  <data name="XafApplicationCustomCheckCompatibility" xml:space="preserve">
    <value>Occurs when trying to access the application's database (when logging on or creating an Object Space).</value>
  </data>
  <data name="XafApplicationCustomizeFormattingCulture" xml:space="preserve">
    <value>Occurs after a formatting culture has been set internally. </value>
  </data>
  <data name="XafApplicationCustomizeLanguage" xml:space="preserve">
    <value>Occurs after a language has been set for the application internally.</value>
  </data>
  <data name="XafApplicationCustomizeTableName" xml:space="preserve">
    <value>Occurs when persistent classes found in the application's modules are loaded to the Application Model.</value>
  </data>
  <data name="XafApplicationCustomizeTemplate" xml:space="preserve">
    <value>Occurs after a Template has been created.</value>
  </data>
  <data name="XafApplicationCustomProcessShortcut" xml:space="preserve">
    <value>Occurs when a View is created by its shortcut.</value>
  </data>
  <data name="XafApplicationDashboardViewCreated" xml:space="preserve">
    <value>Occurs after a Dashboard View has been created.</value>
  </data>
  <data name="XafApplicationDashboardViewCreating" xml:space="preserve">
    <value>Occurs when creating a Dashboard View.</value>
  </data>
  <data name="XafApplicationDatabaseVersionMismatch" xml:space="preserve">
    <value>Occurs when the application being run calls the database.</value>
  </data>
  <data name="XafApplicationDefaultCollectionSourceMode" xml:space="preserve">
    <value>Specifies the default mode of operation for Collection Sources created by the XafApplication.</value>
  </data>
  <data name="XafApplicationDetailViewCreated" xml:space="preserve">
    <value>Occurs after a Detail View has been created.</value>
  </data>
  <data name="XafApplicationDetailViewCreating" xml:space="preserve">
    <value>Occurs when creating a Detail View.</value>
  </data>
  <data name="XafApplicationEditorFactory" xml:space="preserve">
    <value>Provides access to the application's Editors Factory, which is used to load View Items and List Editors to the Application Model and create them when needed.</value>
  </data>
  <data name="XafApplicationHandleShortcutProcessingException" xml:space="preserve">
    <value>For internal use only.</value>
  </data>
  <data name="XafApplicationLastLogonParametersRead" xml:space="preserve">
    <value>Occurs after loading the last logon parameters from the settings storage to the logon object.</value>
  </data>
  <data name="XafApplicationLastLogonParametersReading" xml:space="preserve">
    <value>Occurs before loading the last logon parameters from the settings storage to the logon object.</value>
  </data>
  <data name="XafApplicationLastLogonParametersWriting" xml:space="preserve">
    <value>Occurs before saving the logon Window's logon parameters to the settings storage.</value>
  </data>
  <data name="XafApplicationListViewCreated" xml:space="preserve">
    <value>Occurs after a List View has been created.</value>
  </data>
  <data name="XafApplicationListViewCreating" xml:space="preserve">
    <value>Occurs when creating a List View.</value>
  </data>
  <data name="XafApplicationLoggedOff" xml:space="preserve">
    <value>Occurs after an end-user has logged off.</value>
  </data>
  <data name="XafApplicationLoggedOn" xml:space="preserve">
    <value>Occurs after an end-user has logged on.</value>
  </data>
  <data name="XafApplicationLoggingOff" xml:space="preserve">
    <value>Occurs when a user clicks the Log Off button or the ASP.NET session ends.</value>
  </data>
  <data name="XafApplicationLoggingOn" xml:space="preserve">
    <value>Occurs when the Logon button on the logon Window is clicked.</value>
  </data>
  <data name="XafApplicationLogonFailed" xml:space="preserve">
    <value>Occurs when the logon fails.</value>
  </data>
  <data name="XafApplicationMaxLogonAttemptCount" xml:space="preserve">
    <value>Specifies the allowed number of failed login attempts before the application closes.</value>
  </data>
  <data name="XafApplicationModel" xml:space="preserve">
    <value>Provides access to the Application Model's root node.</value>
  </data>
  <data name="XafApplicationModelChanged" xml:space="preserve">
    <value>Occurs when the Application Model instance returned by the XafApplication.Model property is changed.</value>
  </data>
  <data name="XafApplicationObjectSpaceCreated" xml:space="preserve">
    <value>Occurs after an Object Space has been created via the CreateObjectSpace method.</value>
  </data>
  <data name="XafApplicationResourcesExportedToModel" xml:space="preserve">
    <value>Provides access to a collection of Resource Localizers used in the current application to extend the Application Model's IModelLocalization node.</value>
  </data>
  <data name="XafApplicationSettingUp" xml:space="preserve">
    <value>Occurs before initializing the XafApplication class instance.</value>
  </data>
  <data name="XafApplicationSetupComplete" xml:space="preserve">
    <value>Occurs after the XafApplication class instace has been initialized.</value>
  </data>
  <data name="XafApplicationShowViewStrategy" xml:space="preserve">
    <value>Specifies the application's Show View Strategy.</value>
  </data>
  <data name="XafApplicationSite" xml:space="preserve">
    <value>For internal use only.</value>
  </data>
  <data name="XafApplicationTablePrefixes" xml:space="preserve">
    <value>Specifies namespace table prefixes used to avoid duplicate table names.</value>
  </data>
  <data name="XafApplicationUserDifferencesLoaded" xml:space="preserve">
    <value>Occurs after the user-defined Application Model differences are loaded.</value>
  </data>
  <data name="XafApplicationViewCreated" xml:space="preserve">
    <value>Occurs after a View has been created.</value>
  </data>
  <data name="XafApplicationViewCreating" xml:space="preserve">
    <value>Occurs when creating a View.</value>
  </data>
  <data name="XafApplicationViewShowing" xml:space="preserve">
    <value>Occurs before showing a View.</value>
  </data>
  <data name="XafApplicationViewShown" xml:space="preserve">
    <value>Occurs after a View is shown.</value>
  </data>
</root>