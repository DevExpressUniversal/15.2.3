<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IModelPrintingSettingsMargins" xml:space="preserve">
    <value>Specifies page margins.</value>
  </data>
  <data name="IModelPrintingSettingsLandscape" xml:space="preserve">
    <value>Specifies whether the page orientation is landscape.</value>
  </data>
  <data name="IModelPrintingSettingsCustomPaperSize" xml:space="preserve">
    <value>Specifies a custom paper size.</value>
  </data>
  <data name="IModelOptionsWinUIType" xml:space="preserve">
    <value>Specifies the Show View Strategy (see ShowViewStrategyBase) used in the Windows Forms application.</value>
  </data>
  <data name="IModelOptionsWinRibbonOptions" xml:space="preserve">
    <value>Provides access to the RibbonOptions child node.</value>
  </data>
  <data name="IModelOptionsWinMessaging" xml:space="preserve">
    <value>Specifies the type of messaging used in Windows Forms application.</value>
  </data>
  <data name="IModelOptionsWinMdiDefaultNewWindowTarget" xml:space="preserve">
    <value>Specifies the kind of a Window in which new Views should be invoked, when a multiple document interface is used.</value>
  </data>
  <data name="IModelOptionsWinFormStyle" xml:space="preserve">
    <value>Specifies whether the Standard UI or Ribbon UI is used in the Windows Forms Application.</value>
  </data>
  <data name="IModelOptionsRibbonRibbonControlStyle" xml:space="preserve">
    <value>Specifies the style of the Ribbon UI when it is enabled via the IModelOptionsWin.FormStyle property.</value>
  </data>
  <data name="IModelOptionsRibbonMinimizeRibbon" xml:space="preserve">
    <value>Indicates whether the Ribbon is minimized.</value>
  </data>
  <data name="IModelOptionsEnableHtmlFormattingEnableHtmlFormatting" xml:space="preserve">
    <value>Specifies whether the HTML formatting of UI text elements is allowed.</value>
  </data>
  <data name="IModelListViewShowFindPanelShowFindPanel" xml:space="preserve">
    <value>Specifies whether the Find Panel is visible in the grid that displays the current List View. </value>
  </data>
  <data name="IModelListViewShortcutsSortShortcut" xml:space="preserve">
    <value>Defines the shortcut which changes the sort mode of the currently selected column.</value>
  </data>
  <data name="IModelListViewShortcutsNavigateForwardShortcut" xml:space="preserve">
    <value>Defines the shortcut which selects the next column.</value>
  </data>
  <data name="IModelListViewShortcutsNavigateBackShortcut" xml:space="preserve">
    <value>Defines the shortcut which selects the previous column.</value>
  </data>
  <data name="IModelListViewShortcutsGroupShortcut" xml:space="preserve">
    <value>Defines the shortcut which groups or ungroups the data in the current List View by the currently selected column.</value>
  </data>
  <data name="IModelListViewShortcutsFilterShortcut" xml:space="preserve">
    <value>Defines the shortcut which displays the filter dropdown for the currently selected column.</value>
  </data>
  <data name="IModelLabelText" xml:space="preserve">
    <value>Specifies the label's text.</value>
  </data>
  <data name="IModelClassShowFindPanelDefaultListViewShowFindPanel" xml:space="preserve">
    <value>Specifies whether to display the Find Panel in the default List View.</value>
  </data>
  <data name="IModelBandWinAutoFillDown" xml:space="preserve">
    <value>Specifies whether or not a Band Header should be automatically stretched to fill the empty space below it.</value>
  </data>
  <data name="IModelBandsLayoutWinShowColumnHeaders" xml:space="preserve">
    <value>Specifies whether or not column headers are visible.</value>
  </data>
  <data name="IModelBandsLayoutWinShowBands" xml:space="preserve">
    <value>Specifies whether or not band headers are visible.</value>
  </data>
  <data name="IModelBandsLayoutWinAllowColumnMoving" xml:space="preserve">
    <value>Specifies if a user can move columns within a band.</value>
  </data>
  <data name="IModelBandsLayoutWinAllowChangeColumnParent" xml:space="preserve">
    <value>Specifies if a user can move columns from one band to another.</value>
  </data>
  <data name="IModelBandsLayoutWinAllowChangeBandParent" xml:space="preserve">
    <value>Specifies if a user can move bands from one parent band to another.</value>
  </data>
  <data name="IModelBandsLayoutWinAllowBandMoving" xml:space="preserve">
    <value>Specifies if a user can reorder bands.</value>
  </data>
  <data name="IModelBandedColumnWinRowIndex" xml:space="preserve">
    <value>Specifies the vertical position of the column header within a band. </value>
  </data>
  <data name="IModelBandedColumnWinBandColumnRowCount" xml:space="preserve">
    <value>Specifies the Band Header height in rows.</value>
  </data>
  <data name="IModelApplicationOptionsSkinSkin" xml:space="preserve">
    <value>Specifies the skin currently used by the Windows Forms application.</value>
  </data>
  <data name="DXPropertyEditorErrorMessage" xml:space="preserve">
    <value>Specifies the message about validation rules broken because of the current Property Editor's bound property.</value>
  </data>
  <data name="DXPropertyEditorErrorIcon" xml:space="preserve">
    <value>Specifies the error icon displayed within the DXPropertyEditor when an error is associated with the editor.</value>
  </data>
  <data name="DXPropertyEditorControl" xml:space="preserve">
    <value>Provides access to the control that represents the current Property Editor in a UI.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsCustomizationEnabled" xml:space="preserve">
    <value>Specifies whether an end-user can customize a View Items layout on a detail form.</value>
  </data>
  <data name="IModelWinLayoutItemTextAlignMode" xml:space="preserve">
    <value>Specifies the alignment settings of the layout item's control.</value>
  </data>
  <data name="IModelWinLayoutGroupTextAlignMode" xml:space="preserve">
    <value>Specifies the alignment settings of the controls displayed in the current group.</value>
  </data>
  <data name="IModelPrintingSettingsPaperName" xml:space="preserve">
    <value>Specifies the name of the custom paper used in the printer that will print the document .</value>
  </data>
  <data name="IModelPrintingSettingsPaperKind" xml:space="preserve">
    <value>Specifies the type of paper for the document</value>
  </data>
  <data name="IModelPrintingSettingsPageHeaderFooter" xml:space="preserve">
    <value>For internal use.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsInvisibleGroupVerticalDistance" xml:space="preserve">
    <value>Specifies the vertical spacing that separates a Layout Group with hidden text from regular Layout Groups.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsItemToBorderHorizontalDistance" xml:space="preserve">
    <value>Specifies the horizontal indents between the following layout elements:1. A Layout Group's vertical borders and the Layout Items contained in the Group. Has no effect on Layout Groups with hidden text.2. A Layout Group's vertical borders and the Detail View's edges.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsItemToBorderVerticalDistance" xml:space="preserve">
    <value>Specifies the vertical indents between the following layout elements:1. A Layout Group's horizontal borders and the Layout Items contained in the Group. Has no effect on Layout Groups with hidden text.2. A Layout Group's horizontal borders and the Detail View's edges.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsItemToItemHorizontalDistance" xml:space="preserve">
    <value>Specifies the horizontal spacing between adjacent Layout Items.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsItemToItemVerticalDistance" xml:space="preserve">
    <value>Specifies the vertical spacing between adjacent Layout Items.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsItemToTabBorderDistance" xml:space="preserve">
    <value>Specifies the indents between a tabbed group's edges and Layout Items contained in the group's tabbed pages.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsTextAlignModeGroup" xml:space="preserve">
    <value>Specifies the default alignment settings of the controls displayed in layout groups.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsTextAlignModeItem" xml:space="preserve">
    <value>Specifies the default alignment settings of layout items' controls.</value>
  </data>
  <data name="IModelWinLayoutManagerOptionsTextToControlDistance" xml:space="preserve">
    <value>Specifies the distance between the text regions of layout items and the corresponding controls.</value>
  </data>
  <data name="SystemModuleIModelLabel" xml:space="preserve">
    <value>The Label node defines a label item which displays a text on the current layout.</value>
  </data>
  <data name="SystemModuleIModelOptionsRibbon" xml:space="preserve">
    <value>The RibbonOptions node allows configuring different RibbonUI settings.</value>
  </data>
  <data name="SystemModuleIModelPrintingSettings" xml:space="preserve">
    <value>The PrintingSettings node specifies page settings used by the Printing System's PrintingController, which exposes the PrintingController.PageSetupAction, PrintingController.PrintAction and PrintingController.PrintPreviewAction Actions.</value>
  </data>
  <data name="SystemModuleIModelSeparator" xml:space="preserve">
    <value>The SeparatorItem node defines a separator item for the current layout. Separator items allow end-users to visually separate View Items at runtime.</value>
  </data>
  <data name="SystemModuleIModelSplitter" xml:space="preserve">
    <value>The Splitter node defines a splitter item for the current layout. Splitter items allow end-users to quickly resize View Items at runtime.</value>
  </data>
  <data name="SystemWindowsFormsModulePrintingSettingsStorage" xml:space="preserve">
    <value>Specifies whether printing settings are saved separately for each View.</value>
  </data>
  <data name="WinApplicationCustomHandleException" xml:space="preserve">
    <value>Occurs before displaying a message box with an exception message.</value>
  </data>
  <data name="WinPropertyEditorControl" xml:space="preserve">
    <value>Provides access to the control that represents the current Property Editor in a UI.</value>
  </data>
  <data name="WinPropertyEditorControlBindingProperty" xml:space="preserve">
    <value>Specifies the property of the current Property Editor's control that is used for data binding.</value>
  </data>
</root>