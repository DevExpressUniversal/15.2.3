#region Copyright (c) 2000-2015 Developer Express Inc.
/*
{*******************************************************************}
{                                                                   }
{       Developer Express .NET Component Library                    }
{       WinForms Controls                                           }
{                                                                   }
{       Copyright (c) 2000-2015 Developer Express Inc.              }
{       ALL RIGHTS RESERVED                                         }
{                                                                   }
{   The entire contents of this file is protected by U.S. and       }
{   International Copyright Laws. Unauthorized reproduction,        }
{   reverse-engineering, and distribution of all or any portion of  }
{   the code contained in this file is strictly prohibited and may  }
{   result in severe civil and criminal penalties and will be       }
{   prosecuted to the maximum extent possible under the law.        }
{                                                                   }
{   RESTRICTIONS                                                    }
{                                                                   }
{   THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES           }
{   ARE CONFIDENTIAL AND PROPRIETARY TRADE                          }
{   SECRETS OF DEVELOPER EXPRESS INC. THE REGISTERED DEVELOPER IS   }
{   LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET    }
{   CONTROLS AS PART OF AN EXECUTABLE PROGRAM ONLY.                 }
{                                                                   }
{   THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED      }
{   FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE        }
{   COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE       }
{   AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT  }
{   AND PERMISSION FROM DEVELOPER EXPRESS INC.                      }
{                                                                   }
{   CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON       }
{   ADDITIONAL RESTRICTIONS.                                        }
{                                                                   }
{*******************************************************************}
*/
#endregion Copyright (c) 2000-2015 Developer Express Inc.

namespace DevExpress.Win.FunctionalTests.UIMaps.UIMapClasses
{
	using System;
	using System.CodeDom.Compiler;
	using System.Collections.Generic;
	using System.Drawing;
	using System.Text.RegularExpressions;
	using System.Windows.Input;
	using DevExpress.CodedUIExtension.DXTestControls.v15_2;
	using Microsoft.VisualStudio.TestTools.UITest.Extension;
	using Microsoft.VisualStudio.TestTools.UITesting;
	using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
	using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
	using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
	using Microsoft.VisualStudio.TestTools.UnitTesting;
	using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
	using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
	using MouseButtons = System.Windows.Forms.MouseButtons;
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public partial class UIMap
	{
		public void CellSelectionViaPageDownButton()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CellSelectionViaPageDownButtonParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaPageDownButtonParams.UIGridControl1TableSendKeys, ModifierKeys.None);
		}
		public void ChangeLookUpEditValueViaTyping()
		{
			#region Variable Declarations
			DXPopupEdit uILookUpEdit1PopupEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleLookUpEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UILookUpEdit1PopupEdit;
			#endregion
			uILookUpEdit1PopupEdit.ValueTypeName = this.ChangeLookUpEditValueViaTypingParams.UILookUpEdit1PopupEditValueTypeName;
			uILookUpEdit1PopupEdit.ValueAsString = this.ChangeLookUpEditValueViaTypingParams.UILookUpEdit1PopupEditValueAsString;
		}
		public void ChangeZoomTrackBarValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXTrackBar uIZoomTrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleZoomTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIZoomTrackBarControl1TrackBar;
			#endregion
			uIZoomTrackBarControl1TrackBar.ValueAsString = this.ChangeZoomTrackBarValueViaMouseWheelScrollParams.UIZoomTrackBarControl1TrackBarValueAsString;
		}
		public void SwitchOffMemoEditAutoHeightOption()
		{
			#region Variable Declarations
			DXCheckBox uICheMemoCheckBox = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIPnlTopClient.UICheMemoCheckBox;
			#endregion
			uICheMemoCheckBox.Checked = this.SwitchOffMemoEditAutoHeightOptionParams.UICheMemoCheckBoxChecked;
		}
		public void SwitchToEditTimeMode()
		{
			#region Variable Declarations
			DXComboBox uIIcbShowVistaClockComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl1Client.UIIcbShowVistaClockComboBox;
			#endregion
			uIIcbShowVistaClockComboBox.ValueTypeName = this.SwitchToEditTimeModeParams.UIIcbShowVistaClockComboBoxValueTypeName;
			uIIcbShowVistaClockComboBox.ValueAsString = this.SwitchToEditTimeModeParams.UIIcbShowVistaClockComboBoxValueAsString;
		}
		public void AddBarToStandaloneBarDockControl()
		{
			#region Variable Declarations
			DXMenu uIFontMenuBar = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIStandaloneBDControlCustom.UIBarDockControlCustom.UIFontMenuBar;
			#endregion
			uIFontMenuBar.DockInfoAsString = this.AddBarToStandaloneBarDockControlParams.UIFontMenuBarDockInfoAsString;
		}
		public void AdditionNewRow()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table;
			DXTextEdit uITextEditEdit1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UITextEditEdit1;
			DXPopupEdit uILookUpEditPopupEdit = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UILookUpEditPopupEdit;
			DXPopupEdit uICalcEditPopupEdit = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UICalcEditPopupEdit;
			DXTextEdit uISpinEditEdit = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UISpinEditEdit;
			DXTextEdit uITextEditEdit11 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UITextEditEdit11;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.AdditionNewRowParams.UIGridControl1TableFocusedCellAsString;
			uITextEditEdit1.ValueAsString = this.AdditionNewRowParams.UITextEditEdit1ValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.AdditionNewRowParams.UIGridControl1TableFocusedCellAsString1;
			uILookUpEditPopupEdit.ValueTypeName = this.AdditionNewRowParams.UILookUpEditPopupEditValueTypeName;
			uILookUpEditPopupEdit.ValueAsString = this.AdditionNewRowParams.UILookUpEditPopupEditValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.AdditionNewRowParams.UIGridControl1TableFocusedCellAsString2;
			uICalcEditPopupEdit.ValueAsString = this.AdditionNewRowParams.UICalcEditPopupEditValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.AdditionNewRowParams.UIGridControl1TableFocusedCellAsString3;
			Mouse.StartDragging(uISpinEditEdit, new Point(92, 7));
			Mouse.StopDragging(uISpinEditEdit, 6, 0);
			uISpinEditEdit.ValueAsString = this.AdditionNewRowParams.UISpinEditEditValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.AdditionNewRowParams.UIGridControl1TableFocusedCellAsString4;
			Keyboard.SendKeys(uITextEditEdit11, this.AdditionNewRowParams.UITextEditEdit11SendKeys, ModifierKeys.None);
		}
		public void AddCalendarButtonViaAddOrRemoveButtonMenuItem()
		{
			#region Variable Declarations
			DXNavBarOverflowPanelButton uIConfigureButtonNavBarOverflowPanelButton = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UIConfigureButtonNavBarOverflowPanelButton;
			DXMenuBaseButtonItem uICalendarMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIAddorRemoveButtonsMenuItem.UICalendarMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIConfigureButtonNavBarOverflowPanelButton, new Point(7, 15));
			Mouse.Click(uICalendarMenuBaseButtonItem, new Point(67, 10));
		}
		public void AddNavBarGroupViaContextMenu()
		{
			#region Variable Declarations
			DXNavBarGroup uIContactsNavBarGroup = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UIContactsNavBarGroup;
			DXMenuBaseButtonItem uIBiAddNewGroupMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBiAddNewGroupMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIContactsNavBarGroup, MouseButtons.Right, ModifierKeys.None, new Point(55, 14));
			Mouse.Click(uIBiAddNewGroupMenuBaseButtonItem, new Point(92, 9));
		}
		public void AddNavBarLinkViaContextMenu()
		{
			#region Variable Declarations
			DXNavBarGroup uIDeletedNavBarGroup = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDeletedNavBarGroup;
			DXMenuBaseButtonItem uIInboxMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIAddNewLinkMenuItem.UIInboxMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIDeletedNavBarGroup, MouseButtons.Right, ModifierKeys.None, new Point(49, 14));
			Mouse.Click(uIInboxMenuBaseButtonItem, new Point(76, 10));
		}
		public void AddNewConditionExpressionViaConditionExpressionEditor()
		{
			#region Variable Declarations
			DXMenuBaseButtonItem uIAddBarBaseButtonItem = this.UIXtraGridFeaturesDemoWindow23.UIPanelControl1Client1.UIGcContainerClient.UIStyleConditionsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIExpressionConditionsCustom.UIBarDockControlCustom.UIMainmenuMenuBar.UIAddBarBaseButtonItem;
			DXTextEdit uIExpressionEditEdit = this.UIConditionexpressioneWindow.UIExpressionEditEdit;
			DXButton uILayoutItemButton10Button = this.UIConditionexpressioneWindow.UILayoutItemButton10Button;
			DXButton uILayoutItemButtonButton4 = this.UIConditionexpressioneWindow.UILayoutItemButtonButton4;
			DXButton uILayoutItemButtonButton11 = this.UIConditionexpressioneWindow.UILayoutItemButtonButton11;
			DXButton uILayoutItemButtonButton21 = this.UIConditionexpressioneWindow.UILayoutItemButtonButton21;
			DXButton uILayoutItemButtonButton31 = this.UIConditionexpressioneWindow.UILayoutItemButtonButton31;
			DXButton uISimpleButtonButton1 = this.UIConditionexpressioneWindow.UISimpleButtonButton1;
			#endregion
			uIAddBarBaseButtonItem.PerformClick = this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIAddBarBaseButtonItemPerformClick;
			uIExpressionEditEdit.ValueAsString = this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIExpressionEditEditValueAsString;
			Mouse.Click(uILayoutItemButton10Button, new Point(1, 1));
			uIExpressionEditEdit.ValueAsString = this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIExpressionEditEditValueAsString1;
			Mouse.Click(uILayoutItemButtonButton4, new Point(1, 1));
			uIExpressionEditEdit.ValueAsString = this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIExpressionEditEditValueAsString2;
			Mouse.Click(uILayoutItemButtonButton11, new Point(1, 1));
			uIExpressionEditEdit.ValueAsString = this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIExpressionEditEditValueAsString3;
			Mouse.Click(uILayoutItemButtonButton21, new Point(1, 1));
			uIExpressionEditEdit.ValueAsString = this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIExpressionEditEditValueAsString4;
			Keyboard.SendKeys(uIExpressionEditEdit, this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIExpressionEditEditSendKeys, ModifierKeys.None);
			Mouse.Click(uILayoutItemButtonButton31, new Point(1, 1));
			uIExpressionEditEdit.ValueAsString = this.AddNewConditionExpressionViaConditionExpressionEditorParams.UIExpressionEditEditValueAsString5;
			Mouse.Click(uISimpleButtonButton1, new Point(1, 1));
		}
		public void AddNewConditionExpressionViaStyleFormatConditionEditor()
		{
			#region Variable Declarations
			DXButton uISimpleButton1Button = this.UIXtraGridFeaturesDemoWindow28.UIPanelControl1Client.UIGcContainerClient.UIStyleConditionsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPanelControl2Client.UISimpleButton1Button;
			DXComboBox uIIcbConditionComboBox = this.UIFormatRulesEditorforWindow.UIPanelControl2Client.UIIcbConditionComboBox;
			DXTextEdit uITextEditEdit = this.UIFormatRulesEditorforWindow.UIPanelControl2Client.UITextEditEdit;
			DXTextEdit uITextEditEdit1 = this.UIFormatRulesEditorforWindow.UIPanelControl2Client.UITextEditEdit1;
			DXCheckBox uICeRowCheckBox = this.UIFormatRulesEditorforWindow.UIPanelControl2Client.UICeRowCheckBox;
			#endregion
			Mouse.Click(uISimpleButton1Button, new Point(1, 1));
			uIIcbConditionComboBox.ValueTypeName = this.AddNewConditionExpressionViaStyleFormatConditionEditorParams.UIIcbConditionComboBoxValueTypeName;
			uIIcbConditionComboBox.ValueAsString = this.AddNewConditionExpressionViaStyleFormatConditionEditorParams.UIIcbConditionComboBoxValueAsString;
			uITextEditEdit.ValueAsString = this.AddNewConditionExpressionViaStyleFormatConditionEditorParams.UITextEditEditValueAsString;
			uITextEditEdit1.ValueAsString = this.AddNewConditionExpressionViaStyleFormatConditionEditorParams.UITextEditEdit1ValueAsString;
			uICeRowCheckBox.Checked = this.AddNewConditionExpressionViaStyleFormatConditionEditorParams.UICeRowCheckBoxChecked;
		}
		public void AddNewFixedColumnToLeftAndScroll()
		{
			#region Variable Declarations
			DXColumnHeader uIColRegionColumnHeader = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIColRegionColumnHeader;
			DXMenuItem uIFixedLeftMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFixedLeftMenuItem;
			DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIHCrkScrollBarScrollBarControl;
			#endregion
			Mouse.Click(uIColRegionColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(44, 11));
			Mouse.Click(uIFixedLeftMenuItem, new Point(64, 11));
			uIHCrkScrollBarScrollBarControl.ValueAsString = this.AddNewFixedColumnToLeftAndScrollParams.UIHCrkScrollBarScrollBarControlValueAsString;
		}
		public void AddNewFixedColumnToRightAndScroll()
		{
			#region Variable Declarations
			DXColumnHeader uIColCountryColumnHeader = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIColCountryColumnHeader;
			DXMenuItem uIFixedRightMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFixedRightMenuItem;
			DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIHCrkScrollBarScrollBarControl;
			#endregion
			Mouse.Click(uIColCountryColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(56, 9));
			Mouse.Click(uIFixedRightMenuItem, new Point(33, 9));
			uIHCrkScrollBarScrollBarControl.ValueAsString = this.AddNewFixedColumnToRightAndScrollParams.UIHCrkScrollBarScrollBarControlValueAsString;
		}
		public void AddNewNavBarGroup()
		{
			#region Variable Declarations
			DXButton uIAddNewGroupButton = this.UITheXtraNavBarSuiteDeWindow1.UIPanelControl1Client.UIGcContainerClient.UIAddGroupsCustom.UIPanelControlClient.UIPanelControl1Client.UIAddNewGroupButton;
			#endregion
			Mouse.Click(uIAddNewGroupButton, new Point(1, 1));
		}
		public void AddNewNavBarItemLink()
		{
			#region Variable Declarations
			DXButton uIAddNewItemLinktotheAButton = this.UITheXtraNavBarSuiteDeWindow2.UIPanelControl1Client.UIGcContainerClient.UIAddItemLinksCustom.UIPanelControlClient.UIPanelControl1Client.UIAddNewItemLinktotheAButton;
			#endregion
			Mouse.Click(uIAddNewItemLinktotheAButton, new Point(1, 1));
		}
		public void AddNewRibbonCategoryViaCustomizationForm()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup2RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uISelectionCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UISelectionCheckBoxTreeItem;
			DXButton uIDropDownButtonArrowBButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UINewOptionsDropDownBuButton.UIDropDownButtonArrowBButton;
			DXMenuBaseButtonItem uINewCategoryMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu11.UINewCategoryMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup2RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(128, 83));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(54, 13));
			Mouse.Click(uISelectionCheckBoxTreeItem, new Point(7, 12));
			Mouse.Click(uIDropDownButtonArrowBButton, new Point(8, 11));
			Mouse.Click(uINewCategoryMenuBaseButtonItem, new Point(75, 5));
		}
		public void AddNewRibbonGroupItemViaCustomizationForm()
		{
			#region Variable Declarations
			WinTreeItem uINewGroupCustomTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIGalleryPageCheckBoxTreeItem.UINewGroupCustomTreeItem;
			DXComboBox uICbeCommandsComboBox = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UILeftHeaderPanelClient.UICbeCommandsComboBox;
			WinTreeItem uICutTreeItem = this.UIRibbonCustomizationWindow.UILeftPanelPane.UILeftTreeViewWindow.UILeftTreeViewTree.UICutTreeItem;
			DXButton uIBtnAddItemButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIMiddlePanelClient.UIBtnAddItemButton;
			#endregion
			Mouse.Click(uINewGroupCustomTreeItem, new Point(59, 9));
			uICbeCommandsComboBox.ValueTypeName = this.AddNewRibbonGroupItemViaCustomizationFormParams.UICbeCommandsComboBoxValueTypeName;
			uICbeCommandsComboBox.ValueAsString = this.AddNewRibbonGroupItemViaCustomizationFormParams.UICbeCommandsComboBoxValueAsString;
			Mouse.Click(uICutTreeItem, new Point(46, 14));
			Mouse.Click(uIBtnAddItemButton, new Point(1, 1));
		}
		public void AddNewRibbonGroupViaCustomizationForm()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup2RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uIGalleryPageCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIGalleryPageCheckBoxTreeItem;
			DXButton uINewOptionsDropDownBuButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UINewOptionsDropDownBuButton;
			DXMenuBaseButtonItem uINewGroupMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu11.UINewGroupMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup2RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(93, 80));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(19, 9));
			Mouse.Click(uIGalleryPageCheckBoxTreeItem, new Point(45, 4));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem, new Point(62, 5));
		}
		public void AddNewRibbonTabViaCustomizationForm()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup2RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uIGalleryPageCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIGalleryPageCheckBoxTreeItem;
			DXButton uIDropDownButtonArrowBButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UINewOptionsDropDownBuButton.UIDropDownButtonArrowBButton;
			DXMenuBaseButtonItem uINewTabMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu11.UINewTabMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup2RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(90, 77));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(51, 12));
			Mouse.Click(uIGalleryPageCheckBoxTreeItem, new Point(28, 8));
			Mouse.Click(uIDropDownButtonArrowBButton, new Point(3, 11));
			Mouse.Click(uINewTabMenuBaseButtonItem, new Point(61, 16));
		}
		public void AddNewSomeRibbonGroupViaCustomizationForm()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup2RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uIHomeCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIHomeCheckBoxTreeItem;
			DXButton uIDropDownButtonArrowBButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UINewOptionsDropDownBuButton.UIDropDownButtonArrowBButton;
			DXMenuBaseButtonItem uINewGroupMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu11.UINewGroupMenuBaseButtonItem;
			DXButton uINewOptionsDropDownBuButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UINewOptionsDropDownBuButton;
			DXMenuBaseButtonItem uINewGroupMenuBaseButtonItem1 = this.UIItemWindow.UIPopupMenuBarControlMenu21.UINewGroupMenuBaseButtonItem;
			DXMenuBaseButtonItem uINewGroupMenuBaseButtonItem2 = this.UIItemWindow.UIPopupMenuBarControlMenu31.UINewGroupMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup2RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(97, 77));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(64, 14));
			uIHomeCheckBoxTreeItem.Checked = this.AddNewSomeRibbonGroupViaCustomizationFormParams.UIHomeCheckBoxTreeItemChecked;
			Mouse.Click(uIDropDownButtonArrowBButton, new Point(2, 8));
			Mouse.Click(uINewGroupMenuBaseButtonItem, new Point(63, 6));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem1, new Point(60, 7));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			Mouse.Click(uINewOptionsDropDownBuButton, new Point(1, 1));
			Mouse.Click(uINewGroupMenuBaseButtonItem2, new Point(68, 12));
			uIHomeCheckBoxTreeItem.Checked = this.AddNewSomeRibbonGroupViaCustomizationFormParams.UIHomeCheckBoxTreeItemChecked1;
		}
		public void AddNewSummaryViaContextMenu()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell1 = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell1;
			DXMenuItem uIMinBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIAddNewSummaryBarItem.UIMinBarItem;
			#endregion
			Mouse.Click(uIGridControlFooterCelGridFooterCell1, MouseButtons.Right, ModifierKeys.None, new Point(60, 7));
			Mouse.Click(uIMinBarItem, new Point(73, 6));
		}
		public void AddRibbonCommandToNewRibbonCategoryInCustomizationForm()
		{
			#region Variable Declarations
			WinTreeItem uINewGroupCustomTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UINewCategoryCustomCheckBoxTreeItem.UINewTabCustomCheckBoxTreeItem.UINewGroupCustomTreeItem;
			DXComboBox uICbeCommandsComboBox = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UILeftHeaderPanelClient.UICbeCommandsComboBox;
			WinTreeItem uICutTreeItem = this.UIRibbonCustomizationWindow.UILeftPanelPane.UILeftTreeViewWindow.UILeftTreeViewTree.UICutTreeItem;
			DXButton uIBtnAddItemButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIMiddlePanelClient.UIBtnAddItemButton;
			#endregion
			Mouse.Click(uINewGroupCustomTreeItem, new Point(69, 12));
			uICbeCommandsComboBox.ValueTypeName = this.AddRibbonCommandToNewRibbonCategoryInCustomizationFormParams.UICbeCommandsComboBoxValueTypeName;
			uICbeCommandsComboBox.ValueAsString = this.AddRibbonCommandToNewRibbonCategoryInCustomizationFormParams.UICbeCommandsComboBoxValueAsString;
			Mouse.Click(uICutTreeItem, new Point(44, 12));
			Mouse.Click(uIBtnAddItemButton, new Point(1, 1));
		}
		public void AddRibbonCommandToNewRibbonTabInCustomizationForm()
		{
			#region Variable Declarations
			WinTreeItem uINewGroupCustomTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UINewTabCustomCheckBoxTreeItem.UINewGroupCustomTreeItem;
			DXComboBox uICbeCommandsComboBox = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UILeftHeaderPanelClient.UICbeCommandsComboBox;
			WinTreeItem uICutTreeItem = this.UIRibbonCustomizationWindow.UILeftPanelPane.UILeftTreeViewWindow.UILeftTreeViewTree.UICutTreeItem;
			DXButton uIBtnAddItemButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIMiddlePanelClient.UIBtnAddItemButton;
			#endregion
			Mouse.Click(uINewGroupCustomTreeItem, new Point(33, 10));
			uICbeCommandsComboBox.ValueTypeName = this.AddRibbonCommandToNewRibbonTabInCustomizationFormParams.UICbeCommandsComboBoxValueTypeName;
			uICbeCommandsComboBox.ValueAsString = this.AddRibbonCommandToNewRibbonTabInCustomizationFormParams.UICbeCommandsComboBoxValueAsString;
			Mouse.Click(uICutTreeItem, new Point(69, 11));
			Mouse.Click(uIBtnAddItemButton, new Point(1, 1));
		}
		public void AddRibbonGroupToQuickAccessToolbar()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup2RibbonPageGroup = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup;
			DXMenuBaseButtonItem uIAddtoQuickAccessToolMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIAddtoQuickAccessToolMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup2RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(122, 81));
			uIAddtoQuickAccessToolMenuBaseButtonItem.PerformClick = this.AddRibbonGroupToQuickAccessToolbarParams.UIAddtoQuickAccessToolMenuBaseButtonItemPerformClick;
		}
		public void AddRibbonItemToQuickAccessToolbar()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIExitRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup9RibbonPageGroup.UIExitRibbonBaseButtonItem;
			DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarButtonItemLink0MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIExitRibbonBaseButtonItem, MouseButtons.Right, ModifierKeys.None, new Point(21, 23));
			Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(33, 15));
		}
		public void AddRibbonItemToQuickAccessToolbarForAssertionQuickAccessToolbarRightPointingDoubleArrowButton()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage2RibbonPage = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonPage2RibbonPage;
			DXRibbonButtonItem uIPasteRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonPage2RibbonPage.UIRibbonPageGroup5RibbonPageGroup.UIPasteRibbonBaseButtonItem;
			DXMenuBaseButtonItem uIAddtoQuickAccessToolMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIAddtoQuickAccessToolMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage2RibbonPage, new Point(65, 8));
			Mouse.Click(uIPasteRibbonBaseButtonItem, MouseButtons.Right, ModifierKeys.None, new Point(26, 12));
			Mouse.Click(uIAddtoQuickAccessToolMenuBaseButtonItem, new Point(35, 12));
		}
		public void AscendingSortBySummary()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn1ColumnHeader = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridColumn1ColumnHeader;
			DXMenuItem uICountbyProductNameSoBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UISortbySummaryBarItem.UICountbyProductNameSoBarItem;
			#endregion
			Mouse.Click(uIGridColumn1ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(185, 2));
			Mouse.Click(uICountbyProductNameSoBarItem, new Point(87, 12));
		}
		public void AssignFindPanelFilterColumn()
		{
			#region Variable Declarations
			DXComboBox uICbFindFilterColumnsComboBox = this.UIXtraGridFeaturesDemoWindow26.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIPanelControl1Client.UIUcFindOptions1Custom.UILayoutControl1Custom.UICbFindFilterColumnsComboBox;
			#endregion
			uICbFindFilterColumnsComboBox.ValueAsString = this.AssignFindPanelFilterColumnParams.UICbFindFilterColumnsComboBoxValueAsString;
		}
		public void CellSelectionViaKeyboard()
		{
			#region Variable Declarations
			DXCell uICentrocomercialMocteCell = this.UIXtraGridFeaturesDemoWindow32.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UICentrocomercialMocteCell;
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow32.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			Mouse.Click(uICentrocomercialMocteCell, new Point(96, 9));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys1, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys2, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys3, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys4, ModifierKeys.Control);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys5, ModifierKeys.Control);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys6, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys7, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardParams.UIGridControl1TableSendKeys8, ModifierKeys.Shift);
		}
		public void CellSelectionViaKeyboardAndHoldingDownCTRL()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys1, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys2, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys3, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys4, ModifierKeys.Control);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys5, ModifierKeys.Control);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys6, ModifierKeys.Control);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys7, ModifierKeys.Control);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys8, ModifierKeys.Control);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys9, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys10, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys11, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys12, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys13, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys14, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys15, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys16, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys17, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys18, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys19, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys20, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys21, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys22, (ModifierKeys.Control | ModifierKeys.Shift));
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaKeyboardAndHoldingDownCTRLParams.UIGridControl1TableSendKeys23, (ModifierKeys.Control | ModifierKeys.Shift));
		}
		public void CellSelectionViaMouse()
		{
			#region Variable Declarations
			DXCell uIAnaTrujilloEmparedadCell = this.UIXtraGridFeaturesDemoWindow32.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIAnaTrujilloEmparedadCell;
			DXCell uIItem24placeKléberCell = this.UIXtraGridFeaturesDemoWindow32.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIItem24placeKléberCell;
			#endregion
			uIItem24placeKléberCell.EnsureClickable(new Point(32, 9));
			Mouse.StartDragging(uIAnaTrujilloEmparedadCell, new Point(70, 9));
			Mouse.StopDragging(uIItem24placeKléberCell, new Point(32, 9));
		}
		public void CellSelectionViaMouseAndHoldingDownCTRL()
		{
			#region Variable Declarations
			DXTestControl uIGridControlRowIndicaRowHeader2 = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIGridControlRowIndicaRowHeader2;
			DXCell uIItem05023Cell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIItem05023Cell;
			DXCell uIFranceCell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIFranceCell;
			DXCell uIBonappCell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIBonappCell;
			DXCell uIArgentinaCell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIArgentinaCell;
			#endregion
			Mouse.Click(uIGridControlRowIndicaRowHeader2, new Point(8, 9));
			uIFranceCell.EnsureClickable(new Point(81, 3));
			Mouse.StartDragging(uIItem05023Cell, new Point(25, 9));
			Mouse.StopDragging(uIFranceCell, new Point(81, 3));
			uIArgentinaCell.EnsureClickable(new Point(73, 1));
			Mouse.StartDragging(uIBonappCell, new Point(127, 9), MouseButtons.Left, ModifierKeys.Control);
			Mouse.StopDragging(uIArgentinaCell, new Point(73, 1));
		}
		public void CellSelectionViaPageUpButton()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CellSelectionViaPageUpButtonParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaPageUpButtonParams.UIGridControl1TableSendKeys, ModifierKeys.None);
		}
		public void CellSelectionViaShiftPageDownShortcut()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow24.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CellSelectionViaShiftPageDownShortcutParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaShiftPageDownShortcutParams.UIGridControl1TableSendKeys, ModifierKeys.Shift);
		}
		public void CellSelectionViaShiftPageUpShortcut()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow24.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CellSelectionViaShiftPageUpShortcutParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaShiftPageUpShortcutParams.UIGridControl1TableSendKeys, ModifierKeys.Shift);
		}
		public void CellSelectionViaShiftTabShortcut()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CellSelectionViaShiftTabShortcutParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaShiftTabShortcutParams.UIGridControl1TableSendKeys, ModifierKeys.Shift);
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaShiftTabShortcutParams.UIGridControl1TableSendKeys1, ModifierKeys.Shift);
		}
		public void CellSelectionViaTabButton()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CellSelectionViaTabButtonParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.CellSelectionViaTabButtonParams.UIGridControl1TableSendKeys, ModifierKeys.None);
		}
		public void ChangeAlertControlProperties()
		{
			#region Variable Declarations
			DXComboBox uIIcbFormLocationComboBox = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl1Client.UIAlertControlPropertiCustom.UIIcbFormLocationComboBox;
			DXCheckedComboBox uICcbeButtonsCheckedComboBox = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl1Client.UIAlertControlPropertiCustom.UICcbeButtonsCheckedComboBox;
			DXComboBox uIIcbImageComboBox = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl2Client.UIAlertInfoProperties1Custom.UIIcbImageComboBox;
			DXTextEdit uITxtCaptionEdit = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl2Client.UIAlertInfoProperties1Custom.UITxtCaptionEdit;
			DXTextEdit uITxtTextEdit = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl2Client.UIAlertInfoProperties1Custom.UITxtTextEdit;
			#endregion
			uIIcbFormLocationComboBox.ValueTypeName = this.ChangeAlertControlPropertiesParams.UIIcbFormLocationComboBoxValueTypeName;
			uIIcbFormLocationComboBox.ValueAsString = this.ChangeAlertControlPropertiesParams.UIIcbFormLocationComboBoxValueAsString;
			uICcbeButtonsCheckedComboBox.CheckedIndicesAsString = this.ChangeAlertControlPropertiesParams.UICcbeButtonsCheckedComboBoxCheckedIndicesAsString;
			uIIcbImageComboBox.ValueTypeName = this.ChangeAlertControlPropertiesParams.UIIcbImageComboBoxValueTypeName;
			uIIcbImageComboBox.ValueAsString = this.ChangeAlertControlPropertiesParams.UIIcbImageComboBoxValueAsString;
			uITxtCaptionEdit.ValueAsString = this.ChangeAlertControlPropertiesParams.UITxtCaptionEditValueAsString;
			uITxtTextEdit.ValueAsString = this.ChangeAlertControlPropertiesParams.UITxtTextEditValueAsString;
		}
		public void ChangeAlertFormLocation()
		{
			#region Variable Declarations
			DXComboBox uIIcbFormLocationComboBox = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIAlertControlTutorialCustom.UIGroupControl1Client.UIAlertControlPropertiCustom.UIIcbFormLocationComboBox;
			#endregion
			uIIcbFormLocationComboBox.ValueTypeName = this.ChangeAlertFormLocationParams.UIIcbFormLocationComboBoxValueTypeName;
			uIIcbFormLocationComboBox.ValueAsString = this.ChangeAlertFormLocationParams.UIIcbFormLocationComboBoxValueAsString;
		}
		public void ChangeAlertFormSize()
		{
			#region Variable Declarations
			DXTextEdit uICeWidthEdit = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UICeWidthEdit;
			DXTextEdit uICeHeightEdit = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UICeHeightEdit;
			#endregion
			uICeWidthEdit.ValueAsString = this.ChangeAlertFormSizeParams.UICeWidthEditValueAsString;
			uICeHeightEdit.ValueAsString = this.ChangeAlertFormSizeParams.UICeHeightEditValueAsString;
		}
		public void ChangeBarCalcEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uICalcEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditBarEditItem;
			DXPopupEdit uICalcEditPopupEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditPopupEdit;
			DXMenuItem uIBarCustomizationItemBarItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UIBarCustomizationItemBarItem;
			#endregion
			Mouse.Click(uICalcEditBarEditItem, new Point(115, 6));
			uICalcEditPopupEdit.ValueAsString = this.ChangeBarCalcEditValueViaF4KeyAndKeyboardParams.UICalcEditPopupEditValueAsString;
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(6, 7));
		}
		public void ChangeBarCalcEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uICalcEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditBarEditItem;
			DXPopupEdit uICalcEditPopupEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditPopupEdit;
			DXMenuItem uIBarCustomizationItemBarItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UIBarCustomizationItemBarItem;
			#endregion
			Mouse.Click(uICalcEditBarEditItem, new Point(123, 10));
			uICalcEditPopupEdit.ValueAsString = this.ChangeBarCalcEditValueViaKeyboardParams.UICalcEditPopupEditValueAsString;
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(6, 14));
		}
		public void ChangeBarCalcEditValueViaMouse()
		{
			#region Variable Declarations
			DXMenuEditItem uICalcEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditBarEditItem;
			DXPopupEdit uICalcEditPopupEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditPopupEdit;
			DXMenuItem uIBarCustomizationItemBarItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UIBarCustomizationItemBarItem;
			#endregion
			Mouse.Click(uICalcEditBarEditItem, new Point(150, 6));
			uICalcEditPopupEdit.ValueAsString = this.ChangeBarCalcEditValueViaMouseParams.UICalcEditPopupEditValueAsString;
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(12, 6));
		}
		public void ChangeBarCalcEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXMenuEditItem uICalcEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditBarEditItem;
			DXPopupEdit uICalcEditPopupEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditPopupEdit;
			#endregion
			Mouse.Click(uICalcEditBarEditItem, new Point(111, 6));
			uICalcEditPopupEdit.ValueAsString = this.ChangeBarCalcEditValueViaMouseWheelScrollParams.UICalcEditPopupEditValueAsString;
		}
		public void ChangeBarColorEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uIColorEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIColorEditBarEditItem;
			DXColorEdit uIColorEditColorEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIColorEditColorEdit;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIColorEditBarEditItem, new Point(132, 8));
			uIColorEditColorEdit.ValueAsString = this.ChangeBarColorEditValueViaKeyboardParams.UIColorEditColorEditValueAsString;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeBarColorEditValueViaKeyboardParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeBarColorEditValueViaMouse()
		{
			#region Variable Declarations
			DXMenuEditItem uIColorEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIColorEditBarEditItem;
			DXColorEdit uIColorEditColorEdit1 = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIColorEditColorEdit1;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIColorEditBarEditItem, new Point(150, 9));
			uIColorEditColorEdit1.ValueAsString = this.ChangeBarColorEditValueViaMouseParams.UIColorEditColorEdit1ValueAsString;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeBarColorEditValueViaMouseParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeBarComboBoxEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIComboBoxBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxBarEditItem;
			DXComboBox uIComboBoxComboBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxComboBox;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIComboBoxBarEditItem, new Point(181, 8));
			uIComboBoxComboBox.ValueAsString = this.ChangeBarComboBoxEditValueParams.UIComboBoxComboBoxValueAsString;
			uIComboBoxComboBox.ValueAsString = this.ChangeBarComboBoxEditValueParams.UIComboBoxComboBoxValueAsString1;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeBarComboBoxEditValueParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeBarComboBoxValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uIComboBoxBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxBarEditItem;
			DXComboBox uIComboBoxComboBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxComboBox;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIComboBoxBarEditItem, new Point(127, 8));
			uIComboBoxComboBox.ValueAsString = this.ChangeBarComboBoxValueViaF4KeyAndKeyboardParams.UIComboBoxComboBoxValueAsString;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeBarComboBoxValueViaF4KeyAndKeyboardParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeBarComboBoxValueViaKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uIComboBoxBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxBarEditItem;
			DXComboBox uIComboBoxComboBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxComboBox;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIComboBoxBarEditItem, new Point(180, 11));
			uIComboBoxComboBox.ValueAsString = this.ChangeBarComboBoxValueViaKeyboardParams.UIComboBoxComboBoxValueAsString;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeBarComboBoxValueViaKeyboardParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeBarComboBoxValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXMenuEditItem uIComboBoxBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxBarEditItem;
			DXComboBox uIComboBoxComboBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxComboBox;
			#endregion
			Mouse.Click(uIComboBoxBarEditItem, new Point(136, 8));
			uIComboBoxComboBox.ValueAsString = this.ChangeBarComboBoxValueViaMouseWheelScrollParams.UIComboBoxComboBoxValueAsString;
		}
		public void ChangeBarDateEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uIDateEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditBarEditItem;
			DXDateTimePicker uIDateEditDateTimePicker = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditDateTimePicker;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIDateEditBarEditItem, new Point(106, 10));
			uIDateEditDateTimePicker.ValueAsString = this.ChangeBarDateEditValueViaF4KeyAndKeyboardParams.UIDateEditDateTimePickerValueAsString;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeBarDateEditValueViaF4KeyAndKeyboardParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeBarDateEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uIDateEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditBarEditItem;
			DXDateTimePicker uIDateEditDateTimePicker = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditDateTimePicker;
			#endregion
			Mouse.Click(uIDateEditBarEditItem, new Point(63, 8));
			uIDateEditDateTimePicker.ValueAsString = this.ChangeBarDateEditValueViaKeyboardParams.UIDateEditDateTimePickerValueAsString;
		}
		public void ChangeBarDateEditValueViaMouse()
		{
			#region Variable Declarations
			DXMenuEditItem uIDateEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditBarEditItem;
			DXDateTimePicker uIDateEditDateTimePicker = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditDateTimePicker;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIDateEditBarEditItem, new Point(131, 8));
			uIDateEditDateTimePicker.ValueAsString = this.ChangeBarDateEditValueViaMouseParams.UIDateEditDateTimePickerValueAsString;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeBarDateEditValueViaMouseParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeBarDateEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXMenuEditItem uIDateEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditBarEditItem;
			DXDateTimePicker uIDateEditDateTimePicker = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditDateTimePicker;
			#endregion
			Mouse.Click(uIDateEditBarEditItem, new Point(67, 9));
			uIDateEditDateTimePicker.ValueAsString = this.ChangeBarDateEditValueViaMouseWheelScrollParams.UIDateEditDateTimePickerValueAsString;
		}
		public void ChangeBarMemoExEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIMemoExEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIMemoExEditBarEditItem;
			DXTextEdit uIMemoEditEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIMemoExEditPopupEdit.UIMemoExPopupFormWindow.UIMemoEditEdit;
			DXButton uISimpleButtonButton = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIMemoExEditPopupEdit.UIMemoExPopupFormWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIMemoExEditBarEditItem, new Point(154, 9));
			uIMemoEditEdit.ValueAsString = this.ChangeBarMemoExEditValueParams.UIMemoEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(25, 3));
		}
		public void ChangeBarSpinEditValueViaArrowButtons()
		{
			#region Variable Declarations
			DXMenuEditItem uISpinEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditBarEditItem;
			DXTextEdit uISpinEditEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditEdit;
			#endregion
			Mouse.Click(uISpinEditBarEditItem, new Point(128, 7));
			uISpinEditEdit.ValueAsString = this.ChangeBarSpinEditValueViaArrowButtonsParams.UISpinEditEditValueAsString;
		}
		public void ChangeBarSpinEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXMenuEditItem uISpinEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditBarEditItem;
			DXTextEdit uISpinEditEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditEdit;
			#endregion
			Mouse.Click(uISpinEditBarEditItem, new Point(112, 6));
			uISpinEditEdit.ValueAsString = this.ChangeBarSpinEditValueViaMouseWheelScrollParams.UISpinEditEditValueAsString;
		}
		public void ChangeBarSpinEditValueViaUpDownKeys()
		{
			#region Variable Declarations
			DXMenuEditItem uISpinEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditBarEditItem;
			DXTextEdit uISpinEditEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom2.UICustom4MenuBar.UISpinEditEdit;
			#endregion
			Mouse.Click(uISpinEditBarEditItem, new Point(92, 13));
			uISpinEditEdit.ValueAsString = this.ChangeBarSpinEditValueViaUpDownKeysParams.UISpinEditEditValueAsString;
		}
		public void ChangeBarTextEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uITextEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UITextEditBarEditItem;
			DXTextEdit uITextEditEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UITextEditEdit;
			#endregion
			Mouse.Click(uITextEditBarEditItem, new Point(129, 9));
			uITextEditEdit.ValueAsString = this.ChangeBarTextEditValueParams.UITextEditEditValueAsString;
		}
		public void ChangeBottomMarginForRecalculatedSummaries()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow8.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIDocumentViewerPrintViewControl.BottomMargin = this.ChangeBottomMarginForRecalculatedSummariesParams.UIDocumentViewerPrintViewControlBottomMargin;
		}
		public void ChangeBottomMarginValue()
		{
			#region Variable Declarations
			DXScrollBar uIVScrollBarScrollBarControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIVScrollBarScrollBarControl;
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIVScrollBarScrollBarControl.ValueAsString = this.ChangeBottomMarginValueParams.UIVScrollBarScrollBarControlValueAsString;
			uIDocumentViewerPrintViewControl.BottomMargin = this.ChangeBottomMarginValueParams.UIDocumentViewerPrintViewControlBottomMargin;
		}
		public void ChangeButtonEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uIButtonEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UIButtonEditBarEditItem;
			DXTextEdit uIButtonEditEdit = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UIButtonEditEdit;
			WinText uIPickImageEditValueChText = this.UIApplicationUIWindow.UIEditorItemsWindow.UIPanel1Window.UIPickImageEditValueChWindow.UIPickImageEditValueChText;
			#endregion
			Mouse.Click(uIButtonEditBarEditItem, new Point(100, 6));
			uIButtonEditBarEditItem.EnsureClickable(new Point(67, 9));
			Mouse.StartDragging(uIButtonEditEdit, new Point(69, 5));
			Mouse.StopDragging(uIButtonEditBarEditItem, new Point(67, 9));
			uIButtonEditEdit.ValueAsString = this.ChangeButtonEditValueViaKeyboardParams.UIButtonEditEditValueAsString;
			Mouse.Click(uIPickImageEditValueChText, new Point(170, 73));
		}
		public void ChangeCalcEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uICalcEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditBarEditItem;
			DXPopupEdit uICalcEditPopupEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditPopupEdit;
			#endregion
			Mouse.Click(uICalcEditBarEditItem, new Point(146, 8));
			uICalcEditPopupEdit.ValueAsString = this.ChangeCalcEditValueParams.UICalcEditPopupEditValueAsString;
		}
		public void ChangeCalcEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXTextEdit uICalcEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCalcEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICalcEditSampleEdit;
			#endregion
			uICalcEditSampleEdit.ValueAsString = this.ChangeCalcEditValueViaKeyboardParams.UICalcEditSampleEditValueAsString;
		}
		public void ChangeCalcEditValueViaKeyboardInOpenedDropDownList()
		{
			#region Variable Declarations
			DXPopupEdit uICalcEditSamplePopupEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleCalcEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICalcEditSamplePopupEdit;
			#endregion
			uICalcEditSamplePopupEdit.ValueAsString = this.ChangeCalcEditValueViaKeyboardInOpenedDropDownListParams.UICalcEditSamplePopupEditValueAsString;
		}
		public void ChangeCalcEditValueViaMouse()
		{
			#region Variable Declarations
			DXTextEdit uICalcEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCalcEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICalcEditSampleEdit;
			#endregion
			uICalcEditSampleEdit.ValueAsString = this.ChangeCalcEditValueViaMouseParams.UICalcEditSampleEditValueAsString;
		}
		public void ChangeCalcEditValueViaViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXPopupEdit uICalcEditSamplePopupEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleCalcEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICalcEditSamplePopupEdit;
			#endregion
			uICalcEditSamplePopupEdit.ValueAsString = this.ChangeCalcEditValueViaViaMouseWheelScrollParams.UICalcEditSamplePopupEditValueAsString;
		}
		public void ChangeCellsValueOnSpreadSheet()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table;
			DXTextEdit uISpinEditEdit = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UISpinEditEdit;
			DXTextEdit uISpinEditEdit2 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UISpinEditEdit2;
			DXTextEdit uISpinEditEdit1 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UISpinEditEdit1;
			DXTextEdit uISpinEditEdit3 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UISpinEditEdit3;
			DXCell uIItemCell1 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIItemCell1;
			DXCell uIItemCell2 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIItemCell2;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellsValueOnSpreadSheetParams.UIGridControl1TableFocusedCellAsString;
			uISpinEditEdit.ValueAsString = this.ChangeCellsValueOnSpreadSheetParams.UISpinEditEditValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellsValueOnSpreadSheetParams.UIGridControl1TableFocusedCellAsString1;
			uISpinEditEdit2.ValueAsString = this.ChangeCellsValueOnSpreadSheetParams.UISpinEditEdit2ValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellsValueOnSpreadSheetParams.UIGridControl1TableFocusedCellAsString2;
			uISpinEditEdit1.ValueAsString = this.ChangeCellsValueOnSpreadSheetParams.UISpinEditEdit1ValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellsValueOnSpreadSheetParams.UIGridControl1TableFocusedCellAsString3;
			uISpinEditEdit3.ValueAsString = this.ChangeCellsValueOnSpreadSheetParams.UISpinEditEdit3ValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellsValueOnSpreadSheetParams.UIGridControl1TableFocusedCellAsString4;
			uIItemCell1.ValueTypeName = this.ChangeCellsValueOnSpreadSheetParams.UIItemCell1ValueTypeName;
			uIItemCell2.ActiveEditorValue = this.ChangeCellsValueOnSpreadSheetParams.UIItemCell2ActiveEditorValue;
		}
		public void ChangeCellValuesInFixedBandsAndGroupingTab()
		{
			#region Variable Declarations
			DXGrid uIGridControl2Table = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table;
			DXTextEdit uISpinEditEdit11 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit11;
			DXTextEdit uISpinEditEdit12 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit12;
			DXGroupRow uIGridControlGroupRowGroupRow = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIGridControlGroupRowGroupRow;
			#endregion
			uIGridControl2Table.FocusedCellAsString = this.ChangeCellValuesInFixedBandsAndGroupingTabParams.UIGridControl2TableFocusedCellAsString;
			Mouse.StartDragging(uISpinEditEdit11, new Point(59, 6));
			Mouse.StopDragging(uISpinEditEdit11, 6, -1);
			uISpinEditEdit12.ValueAsString = this.ChangeCellValuesInFixedBandsAndGroupingTabParams.UISpinEditEdit12ValueAsString;
			Mouse.Click(uIGridControlGroupRowGroupRow, new Point(311, 6));
		}
		public void ChangeCellValuesInSimpleFixedBandsTab()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table;
			DXTextEdit uISpinEditEdit9 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit9;
			DXCell uIItem615182Cell = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UIItem615182Cell;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellValuesInSimpleFixedBandsTabParams.UIGridControl1TableFocusedCellAsString;
			Mouse.StartDragging(uISpinEditEdit9, new Point(58, 5));
			Mouse.StopDragging(uISpinEditEdit9, 46, 0);
			uISpinEditEdit9.ValueAsString = this.ChangeCellValuesInSimpleFixedBandsTabParams.UISpinEditEdit9ValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellValuesInSimpleFixedBandsTabParams.UIGridControl1TableFocusedCellAsString1;
			uIItem615182Cell.ValueTypeName = this.ChangeCellValuesInSimpleFixedBandsTabParams.UIItem615182CellValueTypeName;
			uIItem615182Cell.ActiveEditorValue = this.ChangeCellValuesInSimpleFixedBandsTabParams.UIItem615182CellActiveEditorValue;
		}
		public void ChangeCellValueToRecalculateSummaries()
		{
			#region Variable Declarations
			DXButton uIGridControlRowGroupBButton = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlRowGroupBButton;
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table;
			DXTextEdit uISpinEditEdit = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UISpinEditEdit;
			DXCell uIItem000Cell = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIItem000Cell;
			#endregion
			Mouse.Click(uIGridControlRowGroupBButton, new Point(8, 8));
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellValueToRecalculateSummariesParams.UIGridControl1TableFocusedCellAsString;
			uISpinEditEdit.ValueAsString = this.ChangeCellValueToRecalculateSummariesParams.UISpinEditEditValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeCellValueToRecalculateSummariesParams.UIGridControl1TableFocusedCellAsString1;
			uIItem000Cell.ValueTypeName = this.ChangeCellValueToRecalculateSummariesParams.UIItem000CellValueTypeName;
			uIItem000Cell.ActiveEditorValue = this.ChangeCellValueToRecalculateSummariesParams.UIItem000CellActiveEditorValue;
		}
		public void ChangeCellValueViaButtonClear()
		{
			#region Variable Declarations
			DXPopupEdit uISearchLookUpEditPopupEdit5 = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UISearchLookUpEditPopupEdit5;
			#endregion
			uISearchLookUpEditPopupEdit5.ValueAsString = this.ChangeCellValueViaButtonClearParams.UISearchLookUpEditPopupEdit5ValueAsString;
		}
		public void ChangeCheckedComboBoxEditValueViaButtonSelectAll()
		{
			#region Variable Declarations
			DXCheckedComboBox uICheckedComboBoxEditSCheckedComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCheckedComboBoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICheckedComboBoxEditSCheckedComboBox;
			#endregion
			uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString = this.ChangeCheckedComboBoxEditValueViaButtonSelectAllParams.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString;
		}
		public void ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXCheckedComboBox uICheckedComboBoxEditSCheckedComboBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleCheckedComboBoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICheckedComboBoxEditSCheckedComboBox;
			#endregion
			Keyboard.SendKeys(uICheckedComboBoxEditSCheckedComboBox, this.ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams.UICheckedComboBoxEditSCheckedComboBoxSendKeys, ModifierKeys.None);
			uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString = this.ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString;
		}
		public void ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButton()
		{
			#region Variable Declarations
			DXCheckedComboBox uICheckedComboBoxEditSCheckedComboBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleCheckedComboBoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICheckedComboBoxEditSCheckedComboBox;
			#endregion
			uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString = this.ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString;
			Keyboard.SendKeys(uICheckedComboBoxEditSCheckedComboBox, this.ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams.UICheckedComboBoxEditSCheckedComboBoxSendKeys, ModifierKeys.None);
			uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString = this.ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString1;
		}
		public void ChangeCheckedComboBoxEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXCheckedComboBox uICheckedComboBoxEditSCheckedComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCheckedComboBoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICheckedComboBoxEditSCheckedComboBox;
			#endregion
			uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString = this.ChangeCheckedComboBoxEditValueViaKeyboardParams.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString;
		}
		public void ChangeCheckedComboBoxEditValueViaMouse()
		{
			#region Variable Declarations
			DXCheckedComboBox uICheckedComboBoxEditSCheckedComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCheckedComboBoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICheckedComboBoxEditSCheckedComboBox;
			#endregion
			uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString = this.ChangeCheckedComboBoxEditValueViaMouseParams.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString;
		}
		public void ChangeCheckEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uICheckEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICheckEditBarEditItem;
			DXCheckBox uICheckEditCheckBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICheckEditCheckBox;
			#endregion
			Mouse.Click(uICheckEditBarEditItem, new Point(117, 8));
			uICheckEditCheckBox.Checked = this.ChangeCheckEditValueViaKeyboardParams.UICheckEditCheckBoxChecked;
		}
		public void ChangeCheckEditValueViaMouse()
		{
			#region Variable Declarations
			DXMenuEditItem uICheckEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient2.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICheckEditBarEditItem;
			#endregion
			Mouse.Click(uICheckEditBarEditItem, new Point(94, 5));
		}
		public void ChangeColorEditValueInCustomTabViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			uIColorEditSampleColorEdit.ValueAsString = this.ChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams.UIColorEditSampleColorEditValueAsString;
		}
		public void ChangeColorEditValueInTabCustomViaKeyboard()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			uIColorEditSampleColorEdit.ValueAsString = this.ChangeColorEditValueInTabCustomViaKeyboardParams.UIColorEditSampleColorEditValueAsString;
		}
		public void ChangeColorEditValueInTabCustomViaMouse()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			uIColorEditSampleColorEdit.ValueAsString = this.ChangeColorEditValueInTabCustomViaMouseParams.UIColorEditSampleColorEditValueAsString;
		}
		public void ChangeColorEditValueInTabSystemViaKeyboard()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			uIColorEditSampleColorEdit.ValueAsString = this.ChangeColorEditValueInTabSystemViaKeyboardParams.UIColorEditSampleColorEditValueAsString;
		}
		public void ChangeColorEditValueInTabSystemViaMouse()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			uIColorEditSampleColorEdit.ValueAsString = this.ChangeColorEditValueInTabSystemViaMouseParams.UIColorEditSampleColorEditValueAsString;
		}
		public void ChangeColorEditValueInTabWebViaKeyboard()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			uIColorEditSampleColorEdit.ValueAsString = this.ChangeColorEditValueInTabWebViaKeyboardParams.UIColorEditSampleColorEditValueAsString;
		}
		public void ChangeColorEditValueInTabWebViaMouse()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			uIColorEditSampleColorEdit.ValueAsString = this.ChangeColorEditValueInTabWebViaMouseParams.UIColorEditSampleColorEditValueAsString;
		}
		public void ChangeColumnAndCreateExpressionsViaShowExpressionsButton()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEdit1ComboBox = this.UIXtraGridFeaturesDemoWindow29.UIPanelControl1Client.UIGcContainerClient.UIUnboundExpressionCustom.UIPanelControl1Client.UIImageComboBoxEdit1ComboBox;
			DXButton uISimpleButton1Button = this.UIXtraGridFeaturesDemoWindow29.UIPanelControl1Client.UIGcContainerClient.UIUnboundExpressionCustom.UIPanelControl1Client.UISimpleButton1Button;
			DXTextEdit uIMemoEditEdit = this.UIItemWindow7.UIMemoEditEdit;
			DXButton uISimpleButtonButton = this.UIItemWindow7.UISimpleButtonButton;
			#endregion
			uIImageComboBoxEdit1ComboBox.SelectedIndex = this.ChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams.UIImageComboBoxEdit1ComboBoxSelectedIndex;
			Mouse.Click(uISimpleButton1Button, new Point(1, 1));
			uIMemoEditEdit.ValueAsString = this.ChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams.UIMemoEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ChangeComboBoxEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIComboBoxBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxBarEditItem;
			DXComboBox uIComboBoxComboBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxComboBox;
			DXMenu uICustom2MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar;
			#endregion
			Mouse.Click(uIComboBoxBarEditItem, new Point(184, 5));
			uIComboBoxComboBox.ValueAsString = this.ChangeComboBoxEditValueParams.UIComboBoxComboBoxValueAsString;
			uICustom2MenuBar.CloseActiveEditor = this.ChangeComboBoxEditValueParams.UICustom2MenuBarCloseActiveEditor;
		}
		public void ChangeComboBoxEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditSampleComboBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleComboBoxEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIComboBoxEditSampleComboBox;
			#endregion
			uIComboBoxEditSampleComboBox.ValueAsString = this.ChangeComboBoxEditValueViaF4KeyAndKeyboardParams.UIComboBoxEditSampleComboBoxValueAsString;
		}
		public void ChangeComboBoxEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditSampleComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleComboBoxEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIComboBoxEditSampleComboBox;
			#endregion
			uIComboBoxEditSampleComboBox.ValueAsString = this.ChangeComboBoxEditValueViaKeyboardParams.UIComboBoxEditSampleComboBoxValueAsString;
		}
		public void ChangeComboBoxEditValueViaKeyboardInOpenedDropDownList()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditSampleComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleComboBoxEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIComboBoxEditSampleComboBox;
			#endregion
			uIComboBoxEditSampleComboBox.ValueAsString = this.ChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams.UIComboBoxEditSampleComboBoxValueAsString;
		}
		public void ChangeComboBoxEditValueViaMouse()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditSampleComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleComboBoxEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIComboBoxEditSampleComboBox;
			#endregion
			uIComboBoxEditSampleComboBox.ValueAsString = this.ChangeComboBoxEditValueViaMouseParams.UIComboBoxEditSampleComboBoxValueAsString;
		}
		public void ChangeComboBoxEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditSampleComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleComboBoxEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIComboBoxEditSampleComboBox;
			#endregion
			uIComboBoxEditSampleComboBox.ValueAsString = this.ChangeComboBoxEditValueViaMouseWheelScrollParams.UIComboBoxEditSampleComboBoxValueAsString;
		}
		public void ChangeCursorPositionInRibbonRichTextBoxForAssertChangingStatusBarInfo()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.Click(uIRichTextBox1Edit, new Point(42, 20));
		}
		public void ChangeCustomFreight()
		{
			#region Variable Declarations
			DXTextEdit uINumCustomEdit = this.UIXtraGridFeaturesDemoWindow20.UIPanelControl1Client.UIGcContainerClient.UICustomDataSummariesCustom.UIPnlLeftClient.UINumCustomEdit;
			DXGrid uIGridControl2Table = this.UIXtraGridFeaturesDemoWindow20.UIPanelControl1Client.UIGcContainerClient.UICustomDataSummariesCustom.UIGridControl2Table;
			#endregion
			Mouse.StartDragging(uINumCustomEdit, new Point(61, 7));
			Mouse.StopDragging(uINumCustomEdit, 18, 0);
			uINumCustomEdit.ValueAsString = this.ChangeCustomFreightParams.UINumCustomEditValueAsString;
			Mouse.Click(uIGridControl2Table, new Point(513, 351));
		}
		public void ChangeDataGridColumnsWidth()
		{
			#region Variable Declarations
			WinTable uIDataGridTable = this.UIXtraPrintingFeaturesWindow1.UIItemWindow.UIDataGridClient.UIItemWindow.UIDataGridTable;
			#endregion
			Mouse.StartDragging(uIDataGridTable, new Point(108, 33));
			Mouse.StopDragging(uIDataGridTable, -50, 4);
			Mouse.StartDragging(uIDataGridTable, new Point(202, 27));
			Mouse.StopDragging(uIDataGridTable, 258, 6);
		}
		public void ChangeDateEditValueInVistaTimeMode()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimeEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimeEdit;
			#endregion
			uIDateEditSampleDateTimeEdit.ValueAsString = this.ChangeDateEditValueInVistaTimeModeParams.UIDateEditSampleDateTimeEditValueAsString;
		}
		public void ChangeDateEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimeEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimeEdit;
			#endregion
			uIDateEditSampleDateTimeEdit.ValueAsString = this.ChangeDateEditValueViaF4KeyAndKeyboardParams.UIDateEditSampleDateTimeEditValueAsString;
		}
		public void ChangeDateEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimeEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimeEdit;
			#endregion
			uIDateEditSampleDateTimeEdit.ValueAsString = this.ChangeDateEditValueViaKeyboardParams.UIDateEditSampleDateTimeEditValueAsString;
		}
		public void ChangeDateEditValueViaKeyboardInOpenedDropDownList()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimePicker;
			#endregion
			uIDateEditSampleDateTimePicker.ValueAsString = this.ChangeDateEditValueViaKeyboardInOpenedDropDownListParams.UIDateEditSampleDateTimePickerValueAsString;
		}
		public void ChangeDateEditValueViaMouse()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimePicker;
			#endregion
			uIDateEditSampleDateTimePicker.ValueAsString = this.ChangeDateEditValueViaMouseParams.UIDateEditSampleDateTimePickerValueAsString;
		}
		public void ChangeDayTimeDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime8Edit;
			#endregion
			uITeDateTime8Edit.ValueTypeName = this.ChangeDayTimeDateTimeEditValueParams.UITeDateTime8EditValueTypeName;
			uITeDateTime8Edit.ValueAsString = this.ChangeDayTimeDateTimeEditValueParams.UITeDateTime8EditValueAsString;
		}
		public void ChangeDockedBarControlLocation()
		{
			#region Variable Declarations
			DXTestControl uIFormatDragBorder = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIStandaloneBDControlCustom.UIPanel1Client.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIStandaloneBarDockConCustom.UIFormatMenuBar.UIFormatDragBorder;
			DXTestControl uIXtraTabControl1TabList = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIStandaloneBDControlCustom.UIPanel1Client.UIXtraTabControl1TabList;
			#endregion
			uIXtraTabControl1TabList.EnsureClickable(new Point(393, 18));
			Mouse.StartDragging(uIFormatDragBorder, new Point(43, -8));
			Mouse.StopDragging(uIXtraTabControl1TabList, new Point(393, 18));
		}
		public void ChangeFormMaxCount()
		{
			#region Variable Declarations
			DXTextEdit uISeFormMaxCountEdit = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl1Client.UIAlertControlPropertiCustom.UISeFormMaxCountEdit;
			#endregion
			uISeFormMaxCountEdit.ValueAsString = this.ChangeFormMaxCountParams.UISeFormMaxCountEditValueAsString;
		}
		public void ChangeFullDateAndTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime2Edit;
			#endregion
			uITeDateTime2Edit.ValueTypeName = this.ChangeFullDateAndTimeEditValueParams.UITeDateTime2EditValueTypeName;
			uITeDateTime2Edit.ValueAsString = this.ChangeFullDateAndTimeEditValueParams.UITeDateTime2EditValueAsString;
		}
		public void ChangeFullDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime1Edit;
			#endregion
			uITeDateTime1Edit.ValueTypeName = this.ChangeFullDateTimeEditValueParams.UITeDateTime1EditValueTypeName;
			uITeDateTime1Edit.ValueAsString = this.ChangeFullDateTimeEditValueParams.UITeDateTime1EditValueAsString;
		}
		public void ChangeGridLookUpEditorValueViaButtonFirst()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton2 = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIDataNavigator1Client.UINavigatorButtonButton2;
			#endregion
			Mouse.Click(uINavigatorButtonButton2, new Point(20, 8));
		}
		public void ChangeGridLookUpEditorValueViaButtonLast()
		{
			#region Variable Declarations
			DXPopupEdit uIGridLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIGridLookUpEdit1PopupEdit;
			DXButton uINavigatorButtonButton1 = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIDataNavigator1Client.UINavigatorButtonButton1;
			#endregion
			uIGridLookUpEdit1PopupEdit.ValueTypeName = this.ChangeGridLookUpEditorValueViaButtonLastParams.UIGridLookUpEdit1PopupEditValueTypeName;
			uIGridLookUpEdit1PopupEdit.ValueAsString = this.ChangeGridLookUpEditorValueViaButtonLastParams.UIGridLookUpEdit1PopupEditValueAsString;
			Mouse.Click(uINavigatorButtonButton1, new Point(23, 11));
		}
		public void ChangeGridLookUpEditorValueViaButtonNext()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIDataNavigator1Client.UINavigatorButtonButton;
			#endregion
			Mouse.Click(uINavigatorButtonButton, new Point(15, 16));
			Mouse.Click(uINavigatorButtonButton, new Point(15, 13));
			Mouse.Click(uINavigatorButtonButton, new Point(15, 13));
		}
		public void ChangeGridLookUpEditorValueViaButtonPrevious()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton3 = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIDataNavigator1Client.UINavigatorButtonButton3;
			DXButton uINavigatorButtonButton4 = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIDataNavigator1Client.UINavigatorButtonButton4;
			#endregion
			Mouse.Click(uINavigatorButtonButton3, new Point(15, 9));
			Mouse.Click(uINavigatorButtonButton4, new Point(15, 9));
		}
		public void ChangeGridLookUpEditorValueViaKeyboard()
		{
			#region Variable Declarations
			DXPopupEdit uIGridLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIGridLookUpEdit1PopupEdit;
			#endregion
			uIGridLookUpEdit1PopupEdit.ValueTypeName = this.ChangeGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEdit1PopupEditValueTypeName;
			uIGridLookUpEdit1PopupEdit.ValueAsString = this.ChangeGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEdit1PopupEditValueAsString;
		}
		public void ChangeGridLookUpEditorValueViaMouse()
		{
			#region Variable Declarations
			DXPopupEdit uIGridLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIGridLookUpEdit1PopupEdit;
			#endregion
			uIGridLookUpEdit1PopupEdit.ValueTypeName = this.ChangeGridLookUpEditorValueViaMouseParams.UIGridLookUpEdit1PopupEditValueTypeName;
			uIGridLookUpEdit1PopupEdit.ValueAsString = this.ChangeGridLookUpEditorValueViaMouseParams.UIGridLookUpEdit1PopupEditValueAsString;
		}
		public void ChangeImageComboBoxEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEditSamComboBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleImageComboBoxECustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIImageComboBoxEditSamComboBox;
			#endregion
			uIImageComboBoxEditSamComboBox.ValueAsString = this.ChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams.UIImageComboBoxEditSamComboBoxValueAsString;
		}
		public void ChangeImageComboBoxEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEditSamComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleImageComboBoxECustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIImageComboBoxEditSamComboBox;
			#endregion
			uIImageComboBoxEditSamComboBox.ValueAsString = this.ChangeImageComboBoxEditValueViaKeyboardParams.UIImageComboBoxEditSamComboBoxValueAsString;
		}
		public void ChangeImageComboBoxEditValueViaMouse()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEditSamComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleImageComboBoxECustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIImageComboBoxEditSamComboBox;
			#endregion
			uIImageComboBoxEditSamComboBox.ValueTypeName = this.ChangeImageComboBoxEditValueViaMouseParams.UIImageComboBoxEditSamComboBoxValueTypeName;
			uIImageComboBoxEditSamComboBox.ValueAsString = this.ChangeImageComboBoxEditValueViaMouseParams.UIImageComboBoxEditSamComboBoxValueAsString;
		}
		public void ChangeImageComboBoxEditValueViaMouseInOpenedDropDownList()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEditSamComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleImageComboBoxECustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIImageComboBoxEditSamComboBox;
			#endregion
			uIImageComboBoxEditSamComboBox.ValueAsString = this.ChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams.UIImageComboBoxEditSamComboBoxValueAsString;
		}
		public void ChangeImageComboBoxEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEditSamComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleImageComboBoxECustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIImageComboBoxEditSamComboBox;
			#endregion
			uIImageComboBoxEditSamComboBox.ValueAsString = this.ChangeImageComboBoxEditValueViaMouseWheelScrollParams.UIImageComboBoxEditSamComboBoxValueAsString;
		}
		public void ChangeInPlaceGridLookUpEditorValueViaKeyboard()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table;
			DXPopupEdit uIGridLookUpEditPopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIGridLookUpEditPopupEdit;
			DXPopupEdit uIGridLookUpEditPopupEdit1 = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIGridLookUpEditPopupEdit1;
			DXDateTimePicker uIDateEditDateTimePicker = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIDateEditDateTimePicker;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIGridControl1TableFocusedCellAsString;
			uIGridLookUpEditPopupEdit.ValueTypeName = this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEditPopupEditValueTypeName;
			uIGridLookUpEditPopupEdit.ValueAsString = this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEditPopupEditValueAsString;
			Keyboard.SendKeys(uIGridLookUpEditPopupEdit, this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEditPopupEditSendKeys, ModifierKeys.None);
			uIGridLookUpEditPopupEdit1.ValueTypeName = this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEditPopupEdit1ValueTypeName;
			uIGridLookUpEditPopupEdit1.ValueAsString = this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEditPopupEdit1ValueAsString;
			Keyboard.SendKeys(uIGridLookUpEditPopupEdit1, this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIGridLookUpEditPopupEdit1SendKeys, ModifierKeys.None);
			uIDateEditDateTimePicker.ValueAsString = this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIDateEditDateTimePickerValueAsString;
			Keyboard.SendKeys(uIDateEditDateTimePicker, this.ChangeInPlaceGridLookUpEditorValueViaKeyboardParams.UIDateEditDateTimePickerSendKeys, ModifierKeys.None);
		}
		public void ChangeInPlaceGridLookUpEditorValueViaMouse()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table;
			DXPopupEdit uIGridLookUpEditPopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIGridLookUpEditPopupEdit;
			DXPopupEdit uIGridLookUpEditPopupEdit1 = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIGridLookUpEditPopupEdit1;
			DXDateTimePicker uIDateEditDateTimePicker = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIDateEditDateTimePicker;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIGridControl1TableFocusedCellAsString;
			uIGridLookUpEditPopupEdit.ValueTypeName = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIGridLookUpEditPopupEditValueTypeName;
			uIGridLookUpEditPopupEdit.ValueAsString = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIGridLookUpEditPopupEditValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIGridControl1TableFocusedCellAsString1;
			uIGridLookUpEditPopupEdit1.ValueTypeName = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIGridLookUpEditPopupEdit1ValueTypeName;
			uIGridLookUpEditPopupEdit1.ValueAsString = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIGridLookUpEditPopupEdit1ValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIGridControl1TableFocusedCellAsString2;
			uIDateEditDateTimePicker.ValueAsString = this.ChangeInPlaceGridLookUpEditorValueViaMouseParams.UIDateEditDateTimePickerValueAsString;
		}
		public void ChangeLeftMarginValue()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIDocumentViewerPrintViewControl.LeftMargin = this.ChangeLeftMarginValueParams.UIDocumentViewerPrintViewControlLeftMargin;
		}
		public void ChangeLoanAmountValueAndClickButtonCalculate()
		{
			#region Variable Declarations
			DXTextEdit uIEditLoanAmountEdit = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIEditLoanAmountEdit;
			DXButton uISbCalcButton = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UISbCalcButton;
			#endregion
			uIEditLoanAmountEdit.ValueAsString = this.ChangeLoanAmountValueAndClickButtonCalculateParams.UIEditLoanAmountEditValueAsString;
			Mouse.Click(uISbCalcButton, new Point(1, 1));
		}
		public void ChangeLookUpEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXTestControl uIPanelControl1Client = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleLookUpEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client;
			DXPopupEdit uILookUpEdit1PopupEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleLookUpEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UILookUpEdit1PopupEdit;
			#endregion
			Mouse.Click(uIPanelControl1Client, new Point(109, 59));
			uILookUpEdit1PopupEdit.ValueTypeName = this.ChangeLookUpEditValueViaF4KeyAndKeyboardParams.UILookUpEdit1PopupEditValueTypeName;
			uILookUpEdit1PopupEdit.ValueAsString = this.ChangeLookUpEditValueViaF4KeyAndKeyboardParams.UILookUpEdit1PopupEditValueAsString;
		}
		public void ChangeLookUpEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXPopupEdit uILookUpEdit1PopupEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleLookUpEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UILookUpEdit1PopupEdit;
			#endregion
			uILookUpEdit1PopupEdit.ValueTypeName = this.ChangeLookUpEditValueViaKeyboardParams.UILookUpEdit1PopupEditValueTypeName;
			uILookUpEdit1PopupEdit.ValueAsString = this.ChangeLookUpEditValueViaKeyboardParams.UILookUpEdit1PopupEditValueAsString;
		}
		public void ChangeLookUpEditValueViaMouse()
		{
			#region Variable Declarations
			DXPopupEdit uILookUpEdit1PopupEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleLookUpEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UILookUpEdit1PopupEdit;
			#endregion
			uILookUpEdit1PopupEdit.ValueTypeName = this.ChangeLookUpEditValueViaMouseParams.UILookUpEdit1PopupEditValueTypeName;
			uILookUpEdit1PopupEdit.ValueAsString = this.ChangeLookUpEditValueViaMouseParams.UILookUpEdit1PopupEditValueAsString;
		}
		public void ChangeLookUpEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXPopupEdit uILookUpEdit1PopupEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleLookUpEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UILookUpEdit1PopupEdit;
			#endregion
			uILookUpEdit1PopupEdit.ValueTypeName = this.ChangeLookUpEditValueViaMouseWheelScrollParams.UILookUpEdit1PopupEditValueTypeName;
			uILookUpEdit1PopupEdit.ValueAsString = this.ChangeLookUpEditValueViaMouseWheelScrollParams.UILookUpEdit1PopupEditValueAsString;
		}
		public void ChangeMemoExEditSize()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIEditorButton0Button;
			DXPopupEdit uIMemoExEditSamplePopupEdit = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(11, 12));
			uIMemoExEditSamplePopupEdit.PopupSizeAsString = this.ChangeMemoExEditSizeParams.UIMemoExEditSamplePopupEditPopupSizeAsString;
		}
		public void ChangeMemoExEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIMemoExEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIMemoExEditBarEditItem;
			DXTextEdit uIMemoEditEdit = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIMemoExEditPopupEdit.UIMemoExPopupFormWindow.UIMemoEditEdit;
			DXButton uISimpleButtonButton = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIMemoExEditPopupEdit.UIMemoExPopupFormWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIMemoExEditBarEditItem, new Point(131, 8));
			uIMemoEditEdit.ValueAsString = this.ChangeMemoExEditValueParams.UIMemoEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(19, 16));
		}
		public void ChangeMemoExEditValueViaCancelButton()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIEditorButton0Button;
			DXTextEdit uIMemoEditEdit = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIMemoExPopupFormWindow.UIMemoEditEdit;
			DXButton uICancelButton = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIMemoExPopupFormWindow.UICancelButton;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(8, 11));
			uIMemoEditEdit.ValueAsString = this.ChangeMemoExEditValueViaCancelButtonParams.UIMemoEditEditValueAsString;
			Mouse.Click(uICancelButton, new Point(40, 9));
		}
		public void ChangeMemoExEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXPopupEdit uIMemoExEditSamplePopupEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit;
			DXTextEdit uIMemoEditEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIMemoExPopupFormWindow.UIMemoEditEdit;
			DXButton uIOKButton = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIMemoExPopupFormWindow.UIOKButton;
			#endregion
			Mouse.Click(uIMemoExEditSamplePopupEdit, new Point(157, 3));
			Mouse.Click(uIMemoExEditSamplePopupEdit, new Point(157, 3));
			uIMemoExEditSamplePopupEdit.ValueAsString = this.ChangeMemoExEditValueViaF4KeyAndKeyboardParams.UIMemoExEditSamplePopupEditValueAsString;
			uIMemoEditEdit.ValueAsString = this.ChangeMemoExEditValueViaF4KeyAndKeyboardParams.UIMemoEditEditValueAsString;
			Mouse.Click(uIOKButton, new Point(34, 16));
		}
		public void ChangeMemoExEditValueViaOkButton()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIEditorButton0Button;
			DXTextEdit uIMemoEditEdit = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIMemoExPopupFormWindow.UIMemoEditEdit;
			DXButton uIOKButton = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIMemoExPopupFormWindow.UIOKButton;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(8, 10));
			uIMemoEditEdit.ValueAsString = this.ChangeMemoExEditValueViaOkButtonParams.UIMemoEditEditValueAsString;
			Mouse.Click(uIOKButton, new Point(32, 10));
		}
		public void ChangeMonthAndDayDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime5Edit;
			#endregion
			uITeDateTime5Edit.ValueTypeName = this.ChangeMonthAndDayDateTimeEditValueParams.UITeDateTime5EditValueTypeName;
			uITeDateTime5Edit.ValueAsString = this.ChangeMonthAndDayDateTimeEditValueParams.UITeDateTime5EditValueAsString;
		}
		public void ChangeMRUEditValueViaAddingToDropDownList()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			uIMruEditSampleMRUEdit.ValueAsString = this.ChangeMRUEditValueViaAddingToDropDownListParams.UIMruEditSampleMRUEditValueAsString;
			Keyboard.SendKeys(uIMruEditSampleMRUEdit, this.ChangeMRUEditValueViaAddingToDropDownListParams.UIMruEditSampleMRUEditSendKeys, ModifierKeys.None);
			uIMruEditSampleMRUEdit.MRUItemsAsString = this.ChangeMRUEditValueViaAddingToDropDownListParams.UIMruEditSampleMRUEditMRUItemsAsString;
		}
		public void ChangeMRUEditValueViaDeletingFromDropDownList()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			uIMruEditSampleMRUEdit.MRUItemsAsString = this.ChangeMRUEditValueViaDeletingFromDropDownListParams.UIMruEditSampleMRUEditMRUItemsAsString;
			uIMruEditSampleMRUEdit.ValueAsString = this.ChangeMRUEditValueViaDeletingFromDropDownListParams.UIMruEditSampleMRUEditValueAsString;
		}
		public void ChangeNavBarItemCaption()
		{
			#region Variable Declarations
			DXNavBarLink uIOutboxNavBarLink = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UILocalNavBarGroup.UIOutboxNavBarLink;
			DXMenuBaseButtonItem uIBiLinkPropertiesMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBiLinkPropertiesMenuBaseButtonItem;
			DXTextEdit uITxtCaptionEdit = this.UILinkPropertiesWindow1.UITxtCaptionEdit;
			DXButton uISimpleButtonButton = this.UILinkPropertiesWindow1.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIOutboxNavBarLink, MouseButtons.Right, ModifierKeys.None, new Point(44, 11));
			Mouse.Click(uIBiLinkPropertiesMenuBaseButtonItem, new Point(34, 9));
			uITxtCaptionEdit.ValueAsString = this.ChangeNavBarItemCaptionParams.UITxtCaptionEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ChangeNavBarLinkItemAndItemCaption()
		{
			#region Variable Declarations
			DXNavBarLink uIOutboxNavBarLink = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UILocalNavBarGroup.UIOutboxNavBarLink;
			DXMenuBaseButtonItem uIBiLinkPropertiesMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBiLinkPropertiesMenuBaseButtonItem;
			DXComboBox uIComboBoxEditComboBox = this.UILinkPropertiesWindow1.UIComboBoxEditComboBox;
			DXTextEdit uITxtCaptionEdit = this.UILinkPropertiesWindow1.UITxtCaptionEdit;
			DXButton uISimpleButtonButton = this.UILinkPropertiesWindow1.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIOutboxNavBarLink, MouseButtons.Right, ModifierKeys.None, new Point(48, 12));
			Mouse.Click(uIBiLinkPropertiesMenuBaseButtonItem, new Point(27, 8));
			uIComboBoxEditComboBox.ValueAsString = this.ChangeNavBarLinkItemAndItemCaptionParams.UIComboBoxEditComboBoxValueAsString;
			uITxtCaptionEdit.ValueAsString = this.ChangeNavBarLinkItemAndItemCaptionParams.UITxtCaptionEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ChangeNumberOfRecentDocumentsViaBackstageViewControl()
		{
			#region Variable Declarations
			DXButton uIRibbonApplicationButButton = this.UIDocument1rtfRibbonSiWindow1.UIRibbonControl1Ribbon.UIRibbonApplicationButButton;
			DXCheckBox uICheckEdit1CheckBox = this.UIDocument1rtfRibbonSiWindow1.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIBackstageViewClientCCustom.UICheckEdit1CheckBox;
			DXTextEdit uISpinEdit1Edit = this.UIDocument1rtfRibbonSiWindow1.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIBackstageViewClientCCustom.UISpinEdit1Edit;
			#endregion
			Mouse.Click(uIRibbonApplicationButButton, new Point(49, 8));
			uICheckEdit1CheckBox.Checked = this.ChangeNumberOfRecentDocumentsViaBackstageViewControlParams.UICheckEdit1CheckBoxChecked;
			uISpinEdit1Edit.ValueAsString = this.ChangeNumberOfRecentDocumentsViaBackstageViewControlParams.UISpinEdit1EditValueAsString;
		}
		public void ChangeNumericMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITeNumeric1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric1Edit;
			DXTextEdit uITeNumeric2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric2Edit;
			DXTextEdit uITeNumeric3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric3Edit;
			DXTextEdit uITeNumeric4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric4Edit;
			DXTextEdit uITeNumeric5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric5Edit;
			DXTextEdit uITeNumeric6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric6Edit;
			DXTextEdit uITeNumeric7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric7Edit;
			DXTextEdit uITextEdit10Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITextEdit10Edit;
			#endregion
			uITeNumeric1Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric1EditValueTypeName;
			uITeNumeric1Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric1EditValueAsString;
			uITeNumeric2Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric2EditValueTypeName;
			uITeNumeric2Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric2EditValueAsString;
			uITeNumeric3Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric3EditValueTypeName;
			uITeNumeric3Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric3EditValueAsString;
			uITeNumeric4Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric4EditValueTypeName;
			uITeNumeric4Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric4EditValueAsString;
			uITeNumeric5Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric5EditValueTypeName;
			uITeNumeric5Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric5EditValueAsString;
			uITeNumeric6Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric6EditValueTypeName;
			uITeNumeric6Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric6EditValueAsString;
			uITeNumeric7Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric7EditValueTypeName;
			uITeNumeric7Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITeNumeric7EditValueAsString;
			uITextEdit10Edit.ValueTypeName = this.ChangeNumericMaskBoxEditValuesParams.UITextEdit10EditValueTypeName;
			uITextEdit10Edit.ValueAsString = this.ChangeNumericMaskBoxEditValuesParams.UITextEdit10EditValueAsString;
		}
		public void ChangePickImageEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXMenuEditItem uIPickImageBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIPickImageBarEditItem;
			DXComboBox uIPickImageComboBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIPickImageComboBox;
			DXMenu uICustom3MenuBar = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar;
			#endregion
			Mouse.Click(uIPickImageBarEditItem, new Point(138, 13));
			uIPickImageComboBox.ValueTypeName = this.ChangePickImageEditValueViaKeyboardParams.UIPickImageComboBoxValueTypeName;
			uIPickImageComboBox.ValueAsString = this.ChangePickImageEditValueViaKeyboardParams.UIPickImageComboBoxValueAsString;
			uICustom3MenuBar.CloseActiveEditor = this.ChangePickImageEditValueViaKeyboardParams.UICustom3MenuBarCloseActiveEditor;
		}
		public void ChangePickImageEditValueViaMouse()
		{
			#region Variable Declarations
			DXMenuEditItem uIPickImageBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIPickImageBarEditItem;
			DXComboBox uIPickImageComboBox = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIPickImageComboBox;
			DXMenu uICustom3MenuBar = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar;
			#endregion
			Mouse.Click(uIPickImageBarEditItem, new Point(143, 5));
			uIPickImageComboBox.ValueTypeName = this.ChangePickImageEditValueViaMouseParams.UIPickImageComboBoxValueTypeName;
			uIPickImageComboBox.ValueAsString = this.ChangePickImageEditValueViaMouseParams.UIPickImageComboBoxValueAsString;
			uICustom3MenuBar.CloseActiveEditor = this.ChangePickImageEditValueViaMouseParams.UICustom3MenuBarCloseActiveEditor;
		}
		public void ChangePopupContainerEditSize()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaEdit.UIEditorButton0Button;
			DXTextEdit uIPopupContainerEditSaEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaEdit;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(3, 10));
			uIPopupContainerEditSaEdit.SetProperty("PopupSizeAsString", this.ChangePopupContainerEditSizeParams.UIPopupContainerEditSaEditPopupSizeAsString);
		}
		public void ChangePopupContainerEditValueAndClickCloseButton()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIEditorButton0Button;
			DXCheckedListBox uIClbStyleCheckedListBox = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIClbStyleCheckedListBox;
			DXTextEdit uISeSizeEdit = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UISeSizeEdit;
			DXButton uICancelButton = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UICancelButton;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(7, 11));
			uIClbStyleCheckedListBox.CheckedIndicesAsString = this.ChangePopupContainerEditValueAndClickCloseButtonParams.UIClbStyleCheckedListBoxCheckedIndicesAsString;
			uISeSizeEdit.ValueAsString = this.ChangePopupContainerEditValueAndClickCloseButtonParams.UISeSizeEditValueAsString;
			Mouse.Click(uICancelButton, new Point(7, 8));
		}
		public void ChangePopupContainerEditValueViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXPopupEdit uIPopupContainerEditSaPopupEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit;
			DXListBox uIIlbFontList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIIlbFontList;
			DXCheckedListBox uIClbStyleCheckedListBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIClbStyleCheckedListBox;
			DXTextEdit uISeSizeEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UISeSizeEdit;
			DXTestControl uIXtraTabPage1Client = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client;
			#endregion
			uIPopupContainerEditSaPopupEdit.ValueAsString = this.ChangePopupContainerEditValueViaF4KeyAndKeyboardParams.UIPopupContainerEditSaPopupEditValueAsString;
			Keyboard.SendKeys(uIPopupContainerEditSaPopupEdit, this.ChangePopupContainerEditValueViaF4KeyAndKeyboardParams.UIPopupContainerEditSaPopupEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIIlbFontList, this.ChangePopupContainerEditValueViaF4KeyAndKeyboardParams.UIIlbFontListSendKeys, ModifierKeys.None);
			uIClbStyleCheckedListBox.CheckedIndicesAsString = this.ChangePopupContainerEditValueViaF4KeyAndKeyboardParams.UIClbStyleCheckedListBoxCheckedIndicesAsString;
			uISeSizeEdit.ValueAsString = this.ChangePopupContainerEditValueViaF4KeyAndKeyboardParams.UISeSizeEditValueAsString;
			Keyboard.SendKeys(uIIlbFontList, this.ChangePopupContainerEditValueViaF4KeyAndKeyboardParams.UIIlbFontListSendKeys1, ModifierKeys.None);
			uIClbStyleCheckedListBox.CheckedIndicesAsString = this.ChangePopupContainerEditValueViaF4KeyAndKeyboardParams.UIClbStyleCheckedListBoxCheckedIndicesAsString1;
			Mouse.Click(uIXtraTabPage1Client, new Point(471, 316));
		}
		public void ChangePopupContainerEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaEdit.UIEditorButton0Button;
			DXListBox uIIlbFontList = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIIlbFontList;
			DXCheckedListBox uIClbStyleCheckedListBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIClbStyleCheckedListBox;
			DXTextEdit uISeSizeEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UISeSizeEdit;
			DXTestControl uIXtraTabPage1Client = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(6, 2));
			Keyboard.SendKeys(uIIlbFontList, this.ChangePopupContainerEditValueViaKeyboardParams.UIIlbFontListSendKeys, ModifierKeys.None);
			uIClbStyleCheckedListBox.CheckedIndicesAsString = this.ChangePopupContainerEditValueViaKeyboardParams.UIClbStyleCheckedListBoxCheckedIndicesAsString;
			uISeSizeEdit.ValueAsString = this.ChangePopupContainerEditValueViaKeyboardParams.UISeSizeEditValueAsString;
			Keyboard.SendKeys(uIIlbFontList, this.ChangePopupContainerEditValueViaKeyboardParams.UIIlbFontListSendKeys1, ModifierKeys.None);
			uIClbStyleCheckedListBox.CheckedIndicesAsString = this.ChangePopupContainerEditValueViaKeyboardParams.UIClbStyleCheckedListBoxCheckedIndicesAsString1;
			Mouse.Click(uIXtraTabPage1Client, new Point(462, 348));
		}
		public void ChangePopupContainerEditValueViaMouse()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIEditorButton0Button;
			DXCheckedListBox uIClbStyleCheckedListBox = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIClbStyleCheckedListBox;
			DXTextEdit uISeSizeEdit = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit.UIPopupContainerFormWindow.UIPopupContainerControClient.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UISeSizeEdit;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(8, 10));
			uIClbStyleCheckedListBox.CheckedIndicesAsString = this.ChangePopupContainerEditValueViaMouseParams.UIClbStyleCheckedListBoxCheckedIndicesAsString;
			uISeSizeEdit.ValueAsString = this.ChangePopupContainerEditValueViaMouseParams.UISeSizeEditValueAsString;
			Mouse.Click(uIEditorButton0Button, new Point(6, 8));
		}
		public void ChangePrintingSettingsViaPageSetupDialog()
		{
			#region Variable Declarations
			DXMenuBaseButtonItem uIPageSetupBarBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UIToolbarMenuBar.UIPageSetupBarBaseButtonItem;
			DXComboBox uICbPaperSizeComboBox = this.UIPageSetupWindow1.UIPageSetupUserControlCustom.UIGpbPaperClient.UICbPaperSizeComboBox;
			DXCheckBox uIRbOrientationLandscaCheckBox = this.UIPageSetupWindow1.UIPageSetupUserControlCustom.UIGpbPaperClient.UIRbOrientationLandscaCheckBox;
			DXTextEdit uITxtMarginsLeftEdit = this.UIPageSetupWindow1.UIPageSetupUserControlCustom.UIGpbMarginsClient.UITxtMarginsLeftEdit;
			DXButton uIOKButton = this.UIPageSetupWindow1.UIPageSetupUserControlCustom.UIOKButton;
			#endregion
			Mouse.Click(uIPageSetupBarBaseButtonItem, new Point(10, 10));
			uICbPaperSizeComboBox.ValueAsString = this.ChangePrintingSettingsViaPageSetupDialogParams.UICbPaperSizeComboBoxValueAsString;
			uIRbOrientationLandscaCheckBox.Checked = this.ChangePrintingSettingsViaPageSetupDialogParams.UIRbOrientationLandscaCheckBoxChecked;
			uITxtMarginsLeftEdit.ValueAsString = this.ChangePrintingSettingsViaPageSetupDialogParams.UITxtMarginsLeftEditValueAsString;
			Mouse.Click(uIOKButton, new Point(1, 1));
		}
		public void ChangeProgressBarValueViaButtonMinus()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow30.UIPanelControl1Client.UIGcContainerClient.UIMultiEditorsCustom.UIGridControl1Table;
			DXTestControl uIRow9ColumngridColumnProgressBar = this.UIXtraGridFeaturesDemoWindow30.UIPanelControl1Client.UIGcContainerClient.UIMultiEditorsCustom.UIGridControl1Table.UIRow9ColumngridColumnProgressBar;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.ChangeProgressBarValueViaButtonMinusParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIRow9ColumngridColumnProgressBar, this.ChangeProgressBarValueViaButtonMinusParams.UIRow9ColumngridColumnProgressBarSendKeys, ModifierKeys.None);
			Mouse.Click(uIGridControl1Table, new Point(445, 403));
		}
		public void ChangeProgressBarValueViaButtonPlus()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow10.UIPanelControl1Client.UIGcContainerClient.UIMultiEditorsCustom.UIGridControl1Table;
			DXTestControl uIProgressBarControlProgressBar = this.UIXtraGridFeaturesDemoWindow10.UIPanelControl1Client.UIGcContainerClient.UIMultiEditorsCustom.UIGridControl1Table.UIProgressBarControlProgressBar;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.ChangeProgressBarValueViaButtonPlusParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIProgressBarControlProgressBar, this.ChangeProgressBarValueViaButtonPlusParams.UIProgressBarControlProgressBarSendKeys, ModifierKeys.None);
		}
		public void ChangeRangeTrackBarValueViaMouse()
		{
			#region Variable Declarations
			DXRangeTrackBar uIRangeTrackBarControlRangeTrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleRangeTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIRangeTrackBarControlRangeTrackBar;
			#endregion
			uIRangeTrackBarControlRangeTrackBar.ValueAsString = this.ChangeRangeTrackBarValueViaMouseParams.UIRangeTrackBarControlRangeTrackBarValueAsString;
		}
		public void ChangeRegExMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITextEdit1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit1Edit;
			DXTextEdit uITextEdit2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit2Edit;
			DXTextEdit uITextEdit3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit3Edit;
			DXTextEdit uITextEdit6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit6Edit;
			DXTextEdit uITextEdit5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit5Edit;
			DXTextEdit uITextEdit4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit4Edit;
			DXTextEdit uITextEdit9Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit9Edit;
			DXTextEdit uITextEdit8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit8Edit;
			DXTextEdit uITextEdit7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit7Edit;
			#endregion
			uITextEdit1Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit1EditValueAsString;
			uITextEdit2Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit2EditValueAsString;
			uITextEdit3Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit3EditValueAsString;
			uITextEdit6Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit6EditValueAsString;
			uITextEdit5Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit5EditValueAsString;
			uITextEdit4Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit4EditValueAsString;
			uITextEdit9Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit9EditValueAsString;
			uITextEdit8Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit8EditValueAsString;
			uITextEdit7Edit.ValueAsString = this.ChangeRegExMaskBoxEditValuesParams.UITextEdit7EditValueAsString;
		}
		public void ChangeRegularMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITeRegular1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular1Edit;
			DXTextEdit uITeRegular1_1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular1_1Edit;
			DXTextEdit uITeRegular2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular2Edit;
			DXTextEdit uITeRegular3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular3Edit;
			DXTextEdit uITeRegular4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular4Edit;
			DXTextEdit uITeRegular5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular5Edit;
			DXTextEdit uITeRegular6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular6Edit;
			DXTextEdit uITeRegular7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular7Edit;
			DXTextEdit uITeRegular8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular8Edit;
			#endregion
			uITeRegular1Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular1EditValueAsString;
			uITeRegular1_1Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular1_1EditValueAsString;
			uITeRegular2Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular2EditValueAsString;
			uITeRegular3Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular3EditValueAsString;
			uITeRegular4Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular4EditValueAsString;
			uITeRegular5Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular5EditValueAsString;
			uITeRegular6Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular6EditValueAsString;
			uITeRegular7Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular7EditValueAsString;
			uITeRegular8Edit.ValueAsString = this.ChangeRegularMaskBoxEditValuesParams.UITeRegular8EditValueAsString;
		}
		public void ChangeRFCDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime3Edit;
			#endregion
			uITeDateTime3Edit.ValueTypeName = this.ChangeRFCDateTimeEditValueParams.UITeDateTime3EditValueTypeName;
			uITeDateTime3Edit.ValueAsString = this.ChangeRFCDateTimeEditValueParams.UITeDateTime3EditValueAsString;
		}
		public void ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButton()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon;
			DXTestControl uIPeachPuffGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu.UIWebColorsGalleryItemGroup.UIPeachPuffGalleryItem;
			#endregion
			Keyboard.SendKeys(uIRichTextBox1Edit, this.ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon, this.ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams.UIRibbonControl1RibbonSendKeys, ModifierKeys.None);
			Mouse.Click(uIPeachPuffGalleryItem, new Point(66, 21));
		}
		public void ChangeRibbonGallerySelectedItemViaClickDownButton()
		{
			#region Variable Declarations
			DXButton uIRibbonGalleryDownButButton = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIRibbonGalleryDownButButton;
			DXButton uIRibbonGalleryDownButButton1 = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIRibbonGalleryDownButButton1;
			DXTestControl uIDarkOrangeGalleryItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIMainGalleryItemGroup.UIDarkOrangeGalleryItem;
			#endregion
			Mouse.Click(uIRibbonGalleryDownButButton, new Point(8, 11));
			Mouse.Click(uIRibbonGalleryDownButButton1, new Point(2, 11));
			Mouse.Click(uIDarkOrangeGalleryItem, new Point(11, 11));
		}
		public void ChangeRibbonGallerySelectedItemViaClickDropDownButton()
		{
			#region Variable Declarations
			DXButton uIRibbonGalleryDropDowButton = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIRibbonGalleryDropDowButton;
			DXTestControl uIDarkOrangeGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIWebColorsGalleryItemGroup.UIDarkOrangeGalleryItem;
			#endregion
			Mouse.Click(uIRibbonGalleryDropDowButton, new Point(2, 10));
			Mouse.Click(uIDarkOrangeGalleryItem, new Point(66, 27));
		}
		public void ChangeRibbonGallerySelectedItemViaClickRibbonGalleryItem()
		{
			#region Variable Declarations
			DXTestControl uIVS2010GalleryItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRibbonPageGroup11RibbonPageGroup.UISkinsRibbonGallery.UIStandardSkinsGalleryItemGroup.UIVS2010GalleryItem;
			#endregion
			Mouse.Click(uIVS2010GalleryItem, new Point(17, 13));
		}
		public void ChangeRibbonGallerySelectedItemViaClickUpButton()
		{
			#region Variable Declarations
			DXButton uIRibbonGalleryDownButButton = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIRibbonGalleryDownButButton;
			DXButton uIRibbonGalleryUpButtoButton = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIRibbonGalleryUpButtoButton;
			DXButton uIRibbonGalleryUpButtoButton1 = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIRibbonGalleryUpButtoButton1;
			DXTestControl uIDarkOrangeGalleryItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIMainGalleryItemGroup.UIDarkOrangeGalleryItem;
			#endregion
			Mouse.Click(uIRibbonGalleryDownButButton, new Point(3, 10));
			Mouse.Click(uIRibbonGalleryDownButButton, new Point(3, 10));
			Mouse.Click(uIRibbonGalleryDownButButton, new Point(3, 10));
			Mouse.Click(uIRibbonGalleryDownButButton, new Point(3, 10));
			Mouse.Click(uIRibbonGalleryDownButButton, new Point(3, 10));
			Mouse.Click(uIRibbonGalleryUpButtoButton, new Point(6, 11));
			Mouse.Click(uIRibbonGalleryUpButtoButton1, new Point(6, 11));
			Mouse.Click(uIDarkOrangeGalleryItem, new Point(14, 8));
		}
		public void ChangeRightMarginValue()
		{
			#region Variable Declarations
			DXScrollBar uIHScrollBarScrollBarControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIHScrollBarScrollBarControl;
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIHScrollBarScrollBarControl.ValueAsString = this.ChangeRightMarginValueParams.UIHScrollBarScrollBarControlValueAsString;
			uIDocumentViewerPrintViewControl.RightMargin = this.ChangeRightMarginValueParams.UIDocumentViewerPrintViewControlRightMargin;
		}
		public void ChangeShortTimeDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime7Edit;
			#endregion
			uITeDateTime7Edit.ValueTypeName = this.ChangeShortTimeDateTimeEditValueParams.UITeDateTime7EditValueTypeName;
			uITeDateTime7Edit.ValueAsString = this.ChangeShortTimeDateTimeEditValueParams.UITeDateTime7EditValueAsString;
		}
		public void ChangeSimpleMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITeSimple1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple1Edit;
			DXTextEdit uITeSimple2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple2Edit;
			DXTextEdit uITeSimple3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple3Edit;
			DXTextEdit uITeSimple4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple4Edit;
			DXTextEdit uITeSimple5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple5Edit;
			DXTextEdit uITeSimple6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple6Edit;
			DXTextEdit uITeSimple7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple7Edit;
			DXTextEdit uITeSimple8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple8Edit;
			#endregion
			uITeSimple1Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple1EditValueAsString;
			uITeSimple2Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple2EditValueAsString;
			uITeSimple3Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple3EditValueAsString;
			uITeSimple4Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple4EditValueAsString;
			uITeSimple5Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple5EditValueAsString;
			uITeSimple6Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple6EditValueAsString;
			uITeSimple7Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple7EditValueAsString;
			uITeSimple8Edit.ValueAsString = this.ChangeSimpleMaskBoxEditValuesParams.UITeSimple8EditValueAsString;
		}
		public void ChangeSpinBoxEditValueViaTyping()
		{
			#region Variable Declarations
			DXMenuEditItem uISpinEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditBarEditItem;
			DXTextEdit uISpinEditEdit = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditEdit;
			WinText uIPickImageEditValueChText = this.UIApplicationUIWindow.UIEditorItemsWindow.UIPanel1Window.UIPickImageEditValueChWindow.UIPickImageEditValueChText;
			#endregion
			Mouse.Click(uISpinEditBarEditItem, new Point(80, 8));
			uISpinEditEdit.ValueAsString = this.ChangeSpinBoxEditValueViaTypingParams.UISpinEditEditValueAsString;
			Mouse.Click(uIPickImageEditValueChText, new Point(466, 276));
		}
		public void ChangeSpinEditValueViaArrowButtons()
		{
			#region Variable Declarations
			DXTextEdit uISpinEditSample1Edit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleSpinEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleClient.UISpinEditSample1Edit;
			#endregion
			uISpinEditSample1Edit.ValueAsString = this.ChangeSpinEditValueViaArrowButtonsParams.UISpinEditSample1EditValueAsString;
		}
		public void ChangeSpinEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXTextEdit uISpinEditSample1Edit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleSpinEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleClient.UISpinEditSample1Edit;
			#endregion
			uISpinEditSample1Edit.ValueAsString = this.ChangeSpinEditValueViaKeyboardParams.UISpinEditSample1EditValueAsString;
		}
		public void ChangeSpinEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXTextEdit uISpinEditSample1Edit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleSpinEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleClient.UISpinEditSample1Edit;
			#endregion
			uISpinEditSample1Edit.ValueAsString = this.ChangeSpinEditValueViaMouseWheelScrollParams.UISpinEditSample1EditValueAsString;
		}
		public void ChangeSplitterPositionOnHorizontalSplitPresentationTab()
		{
			#region Variable Declarations
			DXSplitContainerControl uIGridSplitContainer2SplitContainerControl = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer2SplitContainerControl;
			#endregion
			uIGridSplitContainer2SplitContainerControl.SplitterPosition = this.ChangeSplitterPositionOnHorizontalSplitPresentationTabParams.UIGridSplitContainer2SplitContainerControlSplitterPosition;
		}
		public void ChangeSplitterPositionOnVerticalSplitPresentationTab()
		{
			#region Variable Declarations
			DXSplitContainerControl uIGridSplitContainer1SplitContainerControl = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer1SplitContainerControl;
			#endregion
			uIGridSplitContainer1SplitContainerControl.SplitterPosition = this.ChangeSplitterPositionOnVerticalSplitPresentationTabParams.UIGridSplitContainer1SplitContainerControlSplitterPosition;
		}
		public void ChangeStatusBarInfoViaChangingLeftMarginValue()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIDocumentViewerPrintViewControl.LeftMargin = this.ChangeStatusBarInfoViaChangingLeftMarginValueParams.UIDocumentViewerPrintViewControlLeftMargin;
			uIDocumentViewerPrintViewControl.LeftMargin = this.ChangeStatusBarInfoViaChangingLeftMarginValueParams.UIDocumentViewerPrintViewControlLeftMargin1;
		}
		public void ChangeSummaryViaContextMenu()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			DXMenuItem uIMinBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIMinBarItem;
			#endregion
			Mouse.Click(uIGridControlFooterCelGridFooterCell, MouseButtons.Right, ModifierKeys.None, new Point(44, 11));
			Mouse.Click(uIMinBarItem, new Point(50, 10));
		}
		public void ChangeTimeEditValueViaArrowButtons()
		{
			#region Variable Declarations
			DXDateTimePicker uITimeEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTimeEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UITimeEditSampleDateTimePicker;
			#endregion
			uITimeEditSampleDateTimePicker.ValueAsString = this.ChangeTimeEditValueViaArrowButtonsParams.UITimeEditSampleDateTimePickerValueAsString;
		}
		public void ChangeTimeEditValueViaKeyboard()
		{
			#region Variable Declarations
			DXDateTimePicker uITimeEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTimeEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UITimeEditSampleDateTimePicker;
			#endregion
			uITimeEditSampleDateTimePicker.ValueAsString = this.ChangeTimeEditValueViaKeyboardParams.UITimeEditSampleDateTimePickerValueAsString;
		}
		public void ChangeTimeEditValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXDateTimePicker uITimeEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTimeEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UITimeEditSampleDateTimePicker;
			#endregion
			uITimeEditSampleDateTimePicker.ValueAsString = this.ChangeTimeEditValueViaMouseWheelScrollParams.UITimeEditSampleDateTimePickerValueAsString;
		}
		public void ChangeTopMarginForRecalculatedSummaries()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow8.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIDocumentViewerPrintViewControl.TopMargin = this.ChangeTopMarginForRecalculatedSummariesParams.UIDocumentViewerPrintViewControlTopMargin;
		}
		public void ChangeTopMarginValue()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIDocumentViewerPrintViewControl.TopMargin = this.ChangeTopMarginValueParams.UIDocumentViewerPrintViewControlTopMargin;
		}
		public void ChangeTrackBarValueViaKeyboard()
		{
			#region Variable Declarations
			DXTrackBar uITrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UITrackBarControl1TrackBar;
			#endregion
			uITrackBarControl1TrackBar.ValueAsString = this.ChangeTrackBarValueViaKeyboardParams.UITrackBarControl1TrackBarValueAsString;
			Keyboard.SendKeys(uITrackBarControl1TrackBar, this.ChangeTrackBarValueViaKeyboardParams.UITrackBarControl1TrackBarSendKeys, ModifierKeys.None);
		}
		public void ChangeTrackBarValueViaMouse()
		{
			#region Variable Declarations
			DXTrackBar uITrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UITrackBarControl1TrackBar;
			#endregion
			uITrackBarControl1TrackBar.ValueAsString = this.ChangeTrackBarValueViaMouseParams.UITrackBarControl1TrackBarValueAsString;
		}
		public void ChangeTrackBarValueViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXTrackBar uITrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UITrackBarControl1TrackBar;
			#endregion
			uITrackBarControl1TrackBar.ValueAsString = this.ChangeTrackBarValueViaMouseWheelScrollParams.UITrackBarControl1TrackBarValueAsString;
		}
		public void ChangeUniversalSortableDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime4Edit;
			#endregion
			uITeDateTime4Edit.ValueTypeName = this.ChangeUniversalSortableDateTimeEditValueParams.UITeDateTime4EditValueTypeName;
			uITeDateTime4Edit.ValueAsString = this.ChangeUniversalSortableDateTimeEditValueParams.UITeDateTime4EditValueAsString;
		}
		public void ChangeVScrollbarValue()
		{
			#region Variable Declarations
			DXScrollBar uIVScrollBarScrollBarControl = this.UIPreviewWindow.UIVScrollBarScrollBarControl;
			#endregion
			uIVScrollBarScrollBarControl.ValueAsString = this.ChangeVScrollbarValueParams.UIVScrollBarScrollBarControlValueAsString;
		}
		public void ChangeZoomTrackBarValueViaArrowButtons()
		{
			#region Variable Declarations
			DXButton uIEditorButtonButton1 = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleZoomTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIZoomTrackBarControl1TrackBar.UIEditorButtonButton1;
			DXButton uIEditorButtonButton = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleZoomTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIZoomTrackBarControl1TrackBar.UIEditorButtonButton;
			#endregion
			Mouse.DoubleClick(uIEditorButtonButton1, new Point(9, 8));
			Mouse.DoubleClick(uIEditorButtonButton, new Point(10, 4));
			Mouse.DoubleClick(uIEditorButtonButton, new Point(10, 4));
			Mouse.Click(uIEditorButtonButton, new Point(10, 4));
		}
		public void ChangeZoomTrackBarValueViaLeftRightButtons()
		{
			#region Variable Declarations
			DXTrackBar uIZoomTrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleZoomTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIZoomTrackBarControl1TrackBar;
			#endregion
			uIZoomTrackBarControl1TrackBar.ValueAsString = this.ChangeZoomTrackBarValueViaLeftRightButtonsParams.UIZoomTrackBarControl1TrackBarValueAsString;
			Keyboard.SendKeys(uIZoomTrackBarControl1TrackBar, this.ChangeZoomTrackBarValueViaLeftRightButtonsParams.UIZoomTrackBarControl1TrackBarSendKeys, ModifierKeys.None);
		}
		public void ChangeZoomTrackBarValueViaMouse()
		{
			#region Variable Declarations
			DXTrackBar uIZoomTrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleZoomTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIZoomTrackBarControl1TrackBar;
			#endregion
			uIZoomTrackBarControl1TrackBar.ValueAsString = this.ChangeZoomTrackBarValueViaMouseParams.UIZoomTrackBarControl1TrackBarValueAsString;
		}
		public void ChangeZoomTrackBarValueViaUpDownKeys()
		{
			#region Variable Declarations
			DXTrackBar uIZoomTrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleZoomTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIZoomTrackBarControl1TrackBar;
			#endregion
			uIZoomTrackBarControl1TrackBar.ValueAsString = this.ChangeZoomTrackBarValueViaUpDownKeysParams.UIZoomTrackBarControl1TrackBarValueAsString;
			Keyboard.SendKeys(uIZoomTrackBarControl1TrackBar, this.ChangeZoomTrackBarValueViaUpDownKeysParams.UIZoomTrackBarControl1TrackBarSendKeys, ModifierKeys.None);
		}
		public void CheckActionsMemoAfterClickImageHeaderButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeActionsEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIDockPanel2_ContainerCustom.UILayoutControl1Custom.UIMeActionsEdit;
			#endregion
			Assert.AreEqual(this.CheckActionsMemoAfterClickImageHeaderButtonExpectedValues.UIMeActionsEditValueAsString, uIMeActionsEdit.ValueAsString);
		}
		public void CheckActionsMemoAfterClickSimpleHeaderButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeActionsEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIDockPanel2_ContainerCustom.UILayoutControl1Custom.UIMeActionsEdit;
			#endregion
			Assert.AreEqual(this.CheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues.UIMeActionsEditValueAsString, uIMeActionsEdit.ValueAsString);
		}
		public void CheckActionsMemoForCheckGlyphsHeaderButtonCheckedState()
		{
			#region Variable Declarations
			DXTextEdit uIMeActionsEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIDockPanel2_ContainerCustom.UILayoutControl1Custom.UIMeActionsEdit;
			#endregion
			Assert.AreEqual(this.CheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues.UIMeActionsEditValueAsString, uIMeActionsEdit.ValueAsString);
		}
		public void CheckActionsMemoForCheckGlyphsHeaderButtonUncheckedState()
		{
			#region Variable Declarations
			DXTextEdit uIMeActionsEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIDockPanel2_ContainerCustom.UILayoutControl1Custom.UIMeActionsEdit;
			#endregion
			Assert.AreEqual(this.CheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues.UIMeActionsEditValueAsString, uIMeActionsEdit.ValueAsString);
		}
		public void CheckActionsMemoForCheckHeaderButtonCheckedState()
		{
			#region Variable Declarations
			DXTextEdit uIMeActionsEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIDockPanel2_ContainerCustom.UILayoutControl1Custom.UIMeActionsEdit;
			#endregion
			Assert.AreEqual(this.CheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues.UIMeActionsEditValueAsString, uIMeActionsEdit.ValueAsString);
		}
		public void CheckActionsMemoForCheckHeaderButtonUncheckedState()
		{
			#region Variable Declarations
			DXTextEdit uIMeActionsEdit = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIDockPanel2_ContainerCustom.UILayoutControl1Custom.UIMeActionsEdit;
			#endregion
			Assert.AreEqual(this.CheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues.UIMeActionsEditValueAsString, uIMeActionsEdit.ValueAsString);
		}
		public void CheckAddedConditionExpression()
		{
			#region Variable Declarations
			DXListBoxItem uIQuantity10AndQuantitListItem = this.UIXtraGridFeaturesDemoWindow23.UIPanelControl1Client.UIGcContainerClient.UIStyleConditionsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIExpressionConditionsCustom.UIFormatItemListList.UIQuantity10AndQuantitListItem;
			#endregion
			Assert.AreEqual(this.CheckAddedConditionExpressionExpectedValues.UIQuantity10AndQuantitListItemText, uIQuantity10AndQuantitListItem.Text);
		}
		public void CheckAddedFooterBricksText()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices100PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices100PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices110PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices110PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices120PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices120PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices121PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices121PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckAddedFooterBricksTextExpectedValues.UIPage0BrickIndices100PrintControlBrickText, uIPage0BrickIndices100PrintControlBrick.Text);
			Assert.AreEqual(this.CheckAddedFooterBricksTextExpectedValues.UIPage0BrickIndices110PrintControlBrickText, uIPage0BrickIndices110PrintControlBrick.Text);
			Assert.AreEqual(this.CheckAddedFooterBricksTextExpectedValues.UIPage0BrickIndices120PrintControlBrickText, uIPage0BrickIndices120PrintControlBrick.Text);
			Assert.AreEqual(this.CheckAddedFooterBricksTextExpectedValues.UIPage0BrickIndices121PrintControlBrickText, uIPage0BrickIndices121PrintControlBrick.Text);
		}
		public void CheckAddedHeaderBricksText()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices100PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices100PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices110PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices110PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckAddedHeaderBricksTextExpectedValues.UIPage0BrickIndices100PrintControlBrickText, uIPage0BrickIndices100PrintControlBrick.Text);
			Assert.AreEqual(this.CheckAddedHeaderBricksTextExpectedValues.UIPage0BrickIndices110PrintControlBrickText, uIPage0BrickIndices110PrintControlBrick.Text);
		}
		public void CheckAddedRow()
		{
			#region Variable Declarations
			DXCell uIItem1Cell = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIItem1Cell;
			DXCell uIFiloMixCell = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIFiloMixCell;
			DXCell uIItem76500Cell = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIItem76500Cell;
			DXCell uIItem100Cell = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIItem100Cell;
			DXCell uIItem000Cell = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIItem000Cell;
			#endregion
			Assert.AreEqual(this.CheckAddedRowExpectedValues.UIItem1CellValueAsString, uIItem1Cell.ValueAsString);
			Assert.AreEqual(this.CheckAddedRowExpectedValues.UIFiloMixCellValueAsString, uIFiloMixCell.ValueAsString);
			Assert.AreEqual(this.CheckAddedRowExpectedValues.UIItem76500CellValueAsString, uIItem76500Cell.ValueAsString);
			Assert.AreEqual(this.CheckAddedRowExpectedValues.UIItem100CellValueAsString, uIItem100Cell.ValueAsString);
			Assert.AreEqual(this.CheckAddedRowExpectedValues.UIItem000CellValueAsString, uIItem000Cell.ValueAsString);
		}
		public void CheckAddedSummary()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell2 = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell2;
			#endregion
			Assert.AreEqual(this.CheckAddedSummaryExpectedValues.UIGridControlFooterCelGridFooterCell2ValueAsString, uIGridControlFooterCelGridFooterCell2.ValueAsString);
		}
		public void CheckAscendingSortBySummary()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow1 = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow1;
			#endregion
			Assert.AreEqual(this.CheckAscendingSortBySummaryExpectedValues.UIGridControlGroupRowGroupRow1RowHandle, uIGridControlGroupRowGroupRow1.RowHandle);
		}
		public void CheckBarCalcEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uICalcEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckBarCalcEditValueExpectedValues.UICalcEditBarEditItemValueAsString, uICalcEditBarEditItem.ValueAsString);
		}
		public void CheckBarCalcEditValueChangedViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXMenuEditItem uICalcEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICalcEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues.UICalcEditBarEditItemValueAsString, uICalcEditBarEditItem.ValueAsString);
		}
		public void CheckBarComboBoxEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIComboBoxBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIComboBoxBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckBarComboBoxEditValueExpectedValues.UIComboBoxBarEditItemValueAsString, uIComboBoxBarEditItem.ValueAsString);
		}
		public void CheckBarDateEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIDateEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIDateEditBarEditItem;
			#endregion
			StringAssert.Contains(uIDateEditBarEditItem.ValueAsString, this.CheckBarDateEditValueExpectedValues.UIDateEditBarEditItemValueAsString);
		}
		public void CheckBarMemoExEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIMemoExEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIMemoExEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckBarMemoExEditValueExpectedValues.UIMemoExEditBarEditItemValueAsString, uIMemoExEditBarEditItem.ValueAsString);
		}
		public void CheckBarTextEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uITextEditBarEditItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UITextEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckBarTextEditValueExpectedValues.UITextEditBarEditItemValueAsString, uITextEditBarEditItem.ValueAsString);
		}
		public void CheckButtonEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIButtonEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UIButtonEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckButtonEditValueExpectedValues.UIButtonEditBarEditItemValueAsString, uIButtonEditBarEditItem.ValueAsString);
		}
		public void CheckCalcEditValue()
		{
			#region Variable Declarations
			DXTextEdit uICalcEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCalcEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICalcEditSampleEdit;
			#endregion
			Assert.AreEqual(this.CheckCalcEditValueExpectedValues.UICalcEditSampleEditValueAsString, uICalcEditSampleEdit.ValueAsString);
		}
		public void CheckCalcEditValueChangedViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXPopupEdit uICalcEditSamplePopupEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleCalcEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICalcEditSamplePopupEdit;
			#endregion
			Assert.AreEqual(this.CheckCalcEditValueChangedViaMouseWheelScrollExpectedValues.UICalcEditSamplePopupEditValueAsString, uICalcEditSamplePopupEdit.ValueAsString);
		}
		public void CheckChangedBottomMarginValue()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			Assert.AreEqual(this.CheckChangedBottomMarginValueExpectedValues.UIDocumentViewerPrintViewControlBottomMargin, uIDocumentViewerPrintViewControl.BottomMargin);
		}
		public void CheckChangedGridLookUpEditorValue()
		{
			#region Variable Declarations
			DXPopupEdit uIGridLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIGridLookUpEdit1PopupEdit;
			#endregion
			Assert.AreEqual(this.CheckChangedGridLookUpEditorValueExpectedValues.UIGridLookUpEdit1PopupEditValueAsString, uIGridLookUpEdit1PopupEdit.ValueAsString);
		}
		public void CheckChangedGridLookUpEditorValueViaButtonLast()
		{
			#region Variable Declarations
			DXPopupEdit uIGridLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIGridLookUpEdit1PopupEdit;
			#endregion
			Assert.AreEqual(this.CheckChangedGridLookUpEditorValueViaButtonLastExpectedValues.UIGridLookUpEdit1PopupEditValueAsString, uIGridLookUpEdit1PopupEdit.ValueAsString);
		}
		public void CheckChangedGridLookUpEditorValueViaButtonNext()
		{
			#region Variable Declarations
			DXPopupEdit uIGridLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIGridLookUpEdit1PopupEdit;
			#endregion
			Assert.AreEqual(this.CheckChangedGridLookUpEditorValueViaButtonNextExpectedValues.UIGridLookUpEdit1PopupEditValueAsString, uIGridLookUpEdit1PopupEdit.ValueAsString);
		}
		public void CheckChangedGridLookUpEditorValueViaButtonPrevious()
		{
			#region Variable Declarations
			DXPopupEdit uIGridLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UIGridLookUpEdit1PopupEdit;
			#endregion
			Assert.AreEqual(this.CheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues.UIGridLookUpEdit1PopupEditValueAsString, uIGridLookUpEdit1PopupEdit.ValueAsString);
		}
		public void CheckChangedInPlaceGridLookUpEditorValue()
		{
			#region Variable Declarations
			DXCell uITheBigCheeseCell = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UITheBigCheeseCell;
			DXCell uIAnneDodsworthCell = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIAnneDodsworthCell;
			DXDateTimePicker uIDateEditDateTimePicker = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIDateEditDateTimePicker;
			#endregion
			Assert.AreEqual(this.CheckChangedInPlaceGridLookUpEditorValueExpectedValues.UITheBigCheeseCellValueAsString, uITheBigCheeseCell.ValueAsString);
			Assert.AreEqual(this.CheckChangedInPlaceGridLookUpEditorValueExpectedValues.UIAnneDodsworthCellValueAsString, uIAnneDodsworthCell.ValueAsString);
			Assert.AreEqual(this.CheckChangedInPlaceGridLookUpEditorValueExpectedValues.UIDateEditDateTimePickerValueAsString, uIDateEditDateTimePicker.ValueAsString);
		}
		public void CheckChangedInPlaceSearchLookUpEditorValue()
		{
			#region Variable Declarations
			DXCell uIAntonioMorenoTaqueríCell = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIAntonioMorenoTaqueríCell;
			#endregion
			Assert.AreEqual(this.CheckChangedInPlaceSearchLookUpEditorValueExpectedValues.UIAntonioMorenoTaqueríCellValueAsString, uIAntonioMorenoTaqueríCell.ValueAsString);
		}
		public void CheckChangedLeftMarginValue()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			Assert.AreEqual(this.CheckChangedLeftMarginValueExpectedValues.UIDocumentViewerPrintViewControlLeftMargin, uIDocumentViewerPrintViewControl.LeftMargin);
		}
		public void CheckChangedListViewTypeViaCheckingBrickText()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices09PrintControlBrick = this.UIXtraPrintingFeaturesWindow3.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices09PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckChangedListViewTypeViaCheckingBrickTextExpectedValues.UIPage0BrickIndices09PrintControlBrickText, uIPage0BrickIndices09PrintControlBrick.Text);
		}
		public void CheckChangedNumericMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITeNumeric1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric1Edit;
			DXTextEdit uITeNumeric2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric2Edit;
			DXTextEdit uITeNumeric3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric3Edit;
			DXTextEdit uITeNumeric4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric4Edit;
			DXTextEdit uITeNumeric5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric5Edit;
			DXTextEdit uITeNumeric6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric6Edit;
			DXTextEdit uITeNumeric7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITeNumeric7Edit;
			DXTextEdit uITextEdit10Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpNumericClient.UITextEdit10Edit;
			#endregion
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITeNumeric1EditValueAsString, uITeNumeric1Edit.ValueAsString);
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITeNumeric2EditValueAsString, uITeNumeric2Edit.ValueAsString);
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITeNumeric3EditValueAsString, uITeNumeric3Edit.ValueAsString);
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITeNumeric4EditValueAsString, uITeNumeric4Edit.ValueAsString);
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITeNumeric5EditValueAsString, uITeNumeric5Edit.ValueAsString);
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITeNumeric6EditValueAsString, uITeNumeric6Edit.ValueAsString);
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITeNumeric7EditValueAsString, uITeNumeric7Edit.ValueAsString);
			Assert.AreEqual(this.CheckChangedNumericMaskBoxEditValuesExpectedValues.UITextEdit10EditValueAsString, uITextEdit10Edit.ValueAsString);
		}
		public void CheckChangedProgressBarValueViaButtonMinus()
		{
			#region Variable Declarations
			DXCell uIItem85Cell = this.UIXtraGridFeaturesDemoWindow10.UIPanelControl1Client.UIGcContainerClient.UIMultiEditorsCustom.UIGridControl1Table.UIItem85Cell;
			#endregion
			Assert.AreEqual(this.CheckChangedProgressBarValueViaButtonMinusExpectedValues.UIItem85CellValueAsString, uIItem85Cell.ValueAsString);
		}
		public void CheckChangedProgressBarValueViaButtonPlus()
		{
			#region Variable Declarations
			DXTestControl uIProgressBarControlProgressBar = this.UIXtraGridFeaturesDemoWindow10.UIPanelControl1Client.UIGcContainerClient.UIMultiEditorsCustom.UIGridControl1Table.UIProgressBarControlProgressBar;
			#endregion
			Assert.AreEqual(this.CheckChangedProgressBarValueViaButtonPlusExpectedValues.UIProgressBarControlProgressBarText, uIProgressBarControlProgressBar.Text);
		}
		public void CheckChangedRibbonGallerySelectedItem()
		{
			#region Variable Declarations
			DXTestControl uIMainGalleryItemGroup = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIMainGalleryItemGroup;
			#endregion
			Assert.AreEqual(this.CheckChangedRibbonGallerySelectedItemExpectedValues.UIMainGalleryItemGroupSelectedItemsAsString, uIMainGalleryItemGroup.GetProperty(DXTestControl.PropertyNames.SelectedItemsAsString).ToString());
		}
		public void CheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItem()
		{
			#region Variable Declarations
			DXTestControl uISkinsRibbonGallery = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRibbonPageGroup11RibbonPageGroup.UISkinsRibbonGallery;
			#endregion
			Assert.AreEqual(this.CheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues.UISkinsRibbonGallerySelectedItemsAsString, uISkinsRibbonGallery.GetProperty(DXTestControl.PropertyNames.SelectedItemsAsString).ToString());
		}
		public void CheckChangedRightMarginValue()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			Assert.AreEqual(this.CheckChangedRightMarginValueExpectedValues.UIDocumentViewerPrintViewControlRightMargin, uIDocumentViewerPrintViewControl.RightMargin);
		}
		public void CheckChangedSearchLookUpEditorValue()
		{
			#region Variable Declarations
			DXPopupEdit uISearchLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UISearchLookUpEdit1PopupEdit;
			#endregion
			Assert.AreEqual(this.CheckChangedSearchLookUpEditorValueExpectedValues.UISearchLookUpEdit1PopupEditValueAsString, uISearchLookUpEdit1PopupEdit.ValueAsString);
		}
		public void CheckChangedSummary()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckChangedSummaryExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckChangedTopMarginValue()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			Assert.AreEqual(this.CheckChangedTopMarginValueExpectedValues.UIDocumentViewerPrintViewControlTopMargin, uIDocumentViewerPrintViewControl.TopMargin);
		}
		public void CheckChangedViaF4KeyAndKeyboardMemoExEditValue()
		{
			#region Variable Declarations
			DXPopupEdit uIMemoExEditSamplePopupEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit;
			#endregion
			Assert.AreEqual(this.CheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues.UIMemoExEditSamplePopupEditValueAsString, uIMemoExEditSamplePopupEdit.ValueAsString);
		}
		public void CheckChangedViaKeyboardCheckEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uICheckEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICheckEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckChangedViaKeyboardCheckEditValueExpectedValues.UICheckEditBarEditItemValueAsString, uICheckEditBarEditItem.ValueAsString);
		}
		public void CheckChangedViaMouseCheckEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uICheckEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UICheckEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckChangedViaMouseCheckEditValueExpectedValues.UICheckEditBarEditItemValueAsString, uICheckEditBarEditItem.ValueAsString);
		}
		public void CheckCheckedComboBoxEditValue()
		{
			#region Variable Declarations
			DXCheckedComboBox uICheckedComboBoxEditSCheckedComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCheckedComboBoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICheckedComboBoxEditSCheckedComboBox;
			#endregion
			Assert.AreEqual(this.CheckCheckedComboBoxEditValueExpectedValues.UICheckedComboBoxEditSCheckedComboBoxValueAsString, uICheckedComboBoxEditSCheckedComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCheckedComboBoxEditValueExpectedValues.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString, uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString);
		}
		public void CheckCheckedStateTrue()
		{
			#region Variable Declarations
			DXCheckBox uICheckEditSampleCheckBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCheckEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleCheckBoxClient.UICheckEditSampleCheckBox;
			#endregion
			Assert.AreEqual(this.CheckCheckedStateTrueExpectedValues.UICheckEditSampleCheckBoxCheckStateAsString, uICheckEditSampleCheckBox.CheckStateAsString);
			Assert.AreEqual(this.CheckCheckedStateTrueExpectedValues.UICheckEditSampleCheckBoxChecked, uICheckEditSampleCheckBox.Checked);
		}
		public void CheckClearedCellValue()
		{
			#region Variable Declarations
			DXCell uIEditValueisnullCell = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UIEditValueisnullCell;
			#endregion
			Assert.AreEqual(this.CheckClearedCellValueExpectedValues.UIEditValueisnullCellValueAsString, uIEditValueisnullCell.ValueAsString);
		}
		public void CheckClearedDateEditValue()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimeEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimeEdit;
			#endregion
			Assert.AreEqual(this.CheckClearedDateEditValueExpectedValues.UIDateEditSampleDateTimeEditValueAsString, uIDateEditSampleDateTimeEdit.ValueAsString);
		}
		public void CheckClearedFilter()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckClearedFilterExpectedValues.UIGridColumn5ColumnHeaderFilterString, uIGridColumn5ColumnHeader.FilterString);
		}
		public void CheckClearedSummaryItem()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell1 = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell1;
			#endregion
			Assert.AreEqual(this.CheckClearedSummaryItemExpectedValues.UIGridControlFooterCelGridFooterCell1ValueAsString, uIGridControlFooterCelGridFooterCell1.ValueAsString);
			Assert.AreEqual(this.CheckClearedSummaryItemExpectedValues.UIGridControlFooterCelGridFooterCell1RowIndex, uIGridControlFooterCelGridFooterCell1.GetProperty(DXTestControl.PropertyNames.RowIndex).ToString());
		}
		public void CheckColorEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIColorEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom2MenuBar.UIColorEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckColorEditValueExpectedValues.UIColorEditBarEditItemValueAsString, uIColorEditBarEditItem.ValueAsString);
		}
		public void CheckColorEditValueInTabCustom()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			Assert.AreEqual(this.CheckColorEditValueInTabCustomExpectedValues.UIColorEditSampleColorEditValueAsString, uIColorEditSampleColorEdit.ValueAsString);
		}
		public void CheckColorEditValueInTabSystem()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			Assert.AreEqual(this.CheckColorEditValueInTabSystemExpectedValues.UIColorEditSampleColorEditValueAsString, uIColorEditSampleColorEdit.ValueAsString);
		}
		public void CheckColorEditValueInTabWeb()
		{
			#region Variable Declarations
			DXColorEdit uIColorEditSampleColorEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleColorEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIColorEditSampleColorEdit;
			#endregion
			Assert.AreEqual(this.CheckColorEditValueInTabWebExpectedValues.UIColorEditSampleColorEditValueAsString, uIColorEditSampleColorEdit.ValueAsString);
		}
		public void CheckComboBoxEditSelectedIndex()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditSampleComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleComboBoxEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIComboBoxEditSampleComboBox;
			#endregion
			Assert.AreEqual(this.CheckComboBoxEditSelectedIndexExpectedValues.UIComboBoxEditSampleComboBoxSelectedIndex, uIComboBoxEditSampleComboBox.SelectedIndex);
		}
		public void CheckComboBoxEditValue()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditSampleComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleComboBoxEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIComboBoxEditSampleComboBox;
			#endregion
			Assert.AreEqual(this.CheckComboBoxEditValueExpectedValues.UIComboBoxEditSampleComboBoxValueAsString, uIComboBoxEditSampleComboBox.ValueAsString);
		}
		public void CheckConservationOfQuantityPages()
		{
			#region Variable Declarations
			DXMenuItem uIPage1of1BarItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom1.UIStatusBarMenuBar.UIPage1of1BarItem;
			#endregion
			Assert.AreEqual(this.CheckConservationOfQuantityPagesExpectedValues.UIPage1of1BarItemText, uIPage1of1BarItem.Text);
		}
		public void CheckCreatedYearCalendar()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices00PrintControlBrick = this.UIXtraPrintingFeaturesWindow13.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices00PrintControlBrick;
			DXMenuEditItem uIMonthYearBarEditItem = this.UIXtraPrintingFeaturesWindow13.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UICustom1MenuBar.UIMonthYearBarEditItem;
			DXMenuEditItem uIPreviewModeBarEditItem = this.UIXtraPrintingFeaturesWindow13.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UICustom1MenuBar.UIPreviewModeBarEditItem;
			DXMenuEditItem uIOrientationBarEditItem = this.UIXtraPrintingFeaturesWindow13.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UICustom1MenuBar.UIOrientationBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckCreatedYearCalendarExpectedValues.UIPage0BrickIndices00PrintControlBrickText, uIPage0BrickIndices00PrintControlBrick.Text);
			Assert.AreEqual(this.CheckCreatedYearCalendarExpectedValues.UIMonthYearBarEditItemValueAsString, uIMonthYearBarEditItem.ValueAsString);
			Assert.AreEqual(this.CheckCreatedYearCalendarExpectedValues.UIPreviewModeBarEditItemValueAsString, uIPreviewModeBarEditItem.ValueAsString);
			Assert.AreEqual(this.CheckCreatedYearCalendarExpectedValues.UIOrientationBarEditItemValueAsString, uIOrientationBarEditItem.ValueAsString);
		}
		public void CheckCustomizedAlertFormCaption()
		{
			#region Variable Declarations
			DXTestControl uIAlertCaptionText = this.UIItemWindow.UIAlertFormWindow.UIAlertCaptionText;
			DXTestControl uIAlertTextText = this.UIItemWindow.UIAlertFormWindow.UIAlertTextText;
			DXButton uIOpenButton = this.UIItemWindow.UIAlertFormWindow.UIOpenButton;
			#endregion
			Assert.AreEqual(this.CheckCustomizedAlertFormCaptionExpectedValues.UIAlertCaptionTextText, uIAlertCaptionText.Text);
			Assert.AreEqual(this.CheckCustomizedAlertFormCaptionExpectedValues.UIAlertTextTextText, uIAlertTextText.Text);
			Assert.AreEqual(this.CheckCustomizedAlertFormCaptionExpectedValues.UIOpenButtonText, uIOpenButton.Text);
		}
		public void CheckCustomizedCSVSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UICSVExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UICSVExportOptionsWindow.UIComboBoxEditComboBox1;
			DXComboBox uIComboBoxEditComboBox2 = this.UICSVExportOptionsWindow.UIComboBoxEditComboBox2;
			DXCheckBox uIQuotestringswithsepaCheckBox = this.UICSVExportOptionsWindow.UIQuotestringswithsepaCheckBox;
			#endregion
			Assert.AreEqual(this.CheckCustomizedCSVSpecificExportOptionsExpectedValues.UIComboBoxEditComboBoxValueAsString, uIComboBoxEditComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedCSVSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox1ValueAsString, uIComboBoxEditComboBox1.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedCSVSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox2ValueAsString, uIComboBoxEditComboBox2.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedCSVSpecificExportOptionsExpectedValues.UIQuotestringswithsepaCheckBoxChecked, uIQuotestringswithsepaCheckBox.Checked);
		}
		public void CheckCustomizedHTMLSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox1;
			DXColorEdit uIColorEditColorEdit = this.UIHTMLExportOptionsWindow.UIColorEditColorEdit;
			DXTextEdit uISpinEditEdit = this.UIHTMLExportOptionsWindow.UISpinEditEdit;
			DXComboBox uIComboBoxEditComboBox2 = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox2;
			DXComboBox uIComboBoxEditComboBox3 = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox3;
			DXCheckBox uIRemovecarriagereturnCheckBox = this.UIHTMLExportOptionsWindow.UIRemovecarriagereturnCheckBox;
			DXCheckBox uIEmbedimagesinHTMLCheckBox = this.UIHTMLExportOptionsWindow.UIEmbedimagesinHTMLCheckBox;
			#endregion
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UIComboBoxEditComboBoxValueAsString, uIComboBoxEditComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox1ValueAsString, uIComboBoxEditComboBox1.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UIColorEditColorEditValueAsString, uIColorEditColorEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UISpinEditEditValueAsString, uISpinEditEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox2ValueAsString, uIComboBoxEditComboBox2.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox3ValueAsString, uIComboBoxEditComboBox3.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UIRemovecarriagereturnCheckBoxChecked, uIRemovecarriagereturnCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedHTMLSpecificExportOptionsExpectedValues.UIEmbedimagesinHTMLCheckBoxChecked, uIEmbedimagesinHTMLCheckBox.Checked);
		}
		public void CheckCustomizedImageSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIImageExportOptionsWindow.UIComboBoxEditComboBox;
			DXTextEdit uISpinEditEdit = this.UIImageExportOptionsWindow.UISpinEditEdit;
			DXComboBox uIComboBoxEditComboBox1 = this.UIImageExportOptionsWindow.UIComboBoxEditComboBox1;
			DXComboBox uIComboBoxEditComboBox2 = this.UIImageExportOptionsWindow.UIComboBoxEditComboBox2;
			DXColorEdit uIColorEditColorEdit = this.UIImageExportOptionsWindow.UIColorEditColorEdit;
			DXTextEdit uISpinEditEdit1 = this.UIImageExportOptionsWindow.UISpinEditEdit1;
			#endregion
			Assert.AreEqual(this.CheckCustomizedImageSpecificExportOptionsExpectedValues.UIComboBoxEditComboBoxValueAsString, uIComboBoxEditComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedImageSpecificExportOptionsExpectedValues.UISpinEditEditValueAsString, uISpinEditEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedImageSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox1ValueAsString, uIComboBoxEditComboBox1.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedImageSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox2ValueAsString, uIComboBoxEditComboBox2.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedImageSpecificExportOptionsExpectedValues.UIColorEditColorEditValueAsString, uIColorEditColorEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedImageSpecificExportOptionsExpectedValues.UISpinEditEdit1ValueAsString, uISpinEditEdit1.ValueAsString);
		}
		public void CheckCustomizedPasswordSecurityOptions()
		{
			#region Variable Declarations
			DXCheckBox uIChbOpenPasswordCheckBox = this.UIPasswordSecurityWindow.UIChbOpenPasswordCheckBox;
			DXTextEdit uITeOpenPasswordEdit = this.UIPasswordSecurityWindow.UITeOpenPasswordEdit;
			DXCheckBox uIChbRestrictCheckBox = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UIChbRestrictCheckBox;
			DXTextEdit uITePermissionsPassworEdit = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UITePermissionsPassworEdit;
			DXPopupEdit uILkpPrintingAllowedPopupEdit = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UILkpPrintingAllowedPopupEdit;
			DXPopupEdit uILkpChangesAllowedPopupEdit = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UILkpChangesAllowedPopupEdit;
			DXCheckBox uIChbEnableCopingCheckBox = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UIChbEnableCopingCheckBox;
			DXCheckBox uIChbEnableScreenReadeCheckBox = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UIChbEnableScreenReadeCheckBox;
			#endregion
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UIChbOpenPasswordCheckBoxChecked, uIChbOpenPasswordCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UITeOpenPasswordEditValueAsString, uITeOpenPasswordEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UIChbRestrictCheckBoxChecked, uIChbRestrictCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UITePermissionsPassworEditValueAsString, uITePermissionsPassworEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UILkpPrintingAllowedPopupEditValueAsString, uILkpPrintingAllowedPopupEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UILkpChangesAllowedPopupEditValueAsString, uILkpChangesAllowedPopupEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UIChbEnableCopingCheckBoxChecked, uIChbEnableCopingCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedPasswordSecurityOptionsExpectedValues.UIChbEnableScreenReadeCheckBoxChecked, uIChbEnableScreenReadeCheckBox.Checked);
		}
		public void CheckCustomizedPDFSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox1;
			DXCheckBox uIConvertImagestoJpegCheckBox = this.UIPDFExportOptionsWindow.UIConvertImagestoJpegCheckBox;
			DXComboBox uIComboBoxEditComboBox2 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox2;
			DXCheckBox uICompressedCheckBox = this.UIPDFExportOptionsWindow.UICompressedCheckBox;
			DXCheckBox uIShowprintdialogonopeCheckBox = this.UIPDFExportOptionsWindow.UIShowprintdialogonopeCheckBox;
			DXPopupEdit uIDropDownEditPopupEdit = this.UIPDFExportOptionsWindow.UIDropDownEditPopupEdit;
			DXComboBox uIComboBoxEditComboBox3 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox3;
			DXComboBox uIComboBoxEditComboBox4 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox4;
			DXComboBox uIComboBoxEditComboBox5 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox5;
			DXComboBox uIComboBoxEditComboBox6 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox6;
			DXComboBox uIComboBoxEditComboBox7 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox7;
			#endregion
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBoxValueAsString, uIComboBoxEditComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox1ValueAsString, uIComboBoxEditComboBox1.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIConvertImagestoJpegCheckBoxChecked, uIConvertImagestoJpegCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox2ValueAsString, uIComboBoxEditComboBox2.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UICompressedCheckBoxChecked, uICompressedCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIShowprintdialogonopeCheckBoxChecked, uIShowprintdialogonopeCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIDropDownEditPopupEditValueAsString, uIDropDownEditPopupEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox3ValueAsString, uIComboBoxEditComboBox3.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox4ValueAsString, uIComboBoxEditComboBox4.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox5ValueAsString, uIComboBoxEditComboBox5.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox6ValueAsString, uIComboBoxEditComboBox6.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedPDFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox7ValueAsString, uIComboBoxEditComboBox7.ValueAsString);
		}
		public void CheckCustomizedRibbonPrintSettings()
		{
			#region Variable Declarations
			DXTextEdit uICopySpinEditEdit = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UICopySpinEditEdit;
			DXButton uIDdbPrinterButton = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbPrinterButton;
			DXButton uIDdbDuplexButton = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbDuplexButton;
			DXButton uIDdbCollateButton = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbCollateButton;
			DXButton uIDdbOrientationButton = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbOrientationButton;
			DXButton uIDdbMarginsButton = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbMarginsButton;
			DXButton uIDdbPaperSizeButton = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbPaperSizeButton;
			#endregion
			Assert.AreEqual(this.CheckCustomizedRibbonPrintSettingsExpectedValues.UICopySpinEditEditValueAsString, uICopySpinEditEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedRibbonPrintSettingsExpectedValues.UIDdbPrinterButtonText, uIDdbPrinterButton.Text);
			Assert.AreEqual(this.CheckCustomizedRibbonPrintSettingsExpectedValues.UIDdbDuplexButtonText, uIDdbDuplexButton.Text);
			Assert.AreEqual(this.CheckCustomizedRibbonPrintSettingsExpectedValues.UIDdbCollateButtonText, uIDdbCollateButton.Text);
			Assert.AreEqual(this.CheckCustomizedRibbonPrintSettingsExpectedValues.UIDdbOrientationButtonText, uIDdbOrientationButton.Text);
			Assert.AreEqual(this.CheckCustomizedRibbonPrintSettingsExpectedValues.UIDdbMarginsButtonText, uIDdbMarginsButton.Text);
			Assert.AreEqual(this.CheckCustomizedRibbonPrintSettingsExpectedValues.UIDdbPaperSizeButtonText, uIDdbPaperSizeButton.Text);
		}
		public void CheckCustomizedRTFSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIRTFExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIRTFExportOptionsWindow.UIComboBoxEditComboBox1;
			DXCheckBox uIExportwatermarksCheckBox = this.UIRTFExportOptionsWindow.UIExportwatermarksCheckBox;
			#endregion
			Assert.AreEqual(this.CheckCustomizedRTFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBoxValueAsString, uIComboBoxEditComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedRTFSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox1ValueAsString, uIComboBoxEditComboBox1.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedRTFSpecificExportOptionsExpectedValues.UIExportwatermarksCheckBoxChecked, uIExportwatermarksCheckBox.Checked);
		}
		public void CheckCustomizedXLSSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox1;
			DXComboBox uIComboBoxEditComboBox2 = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox2;
			DXComboBox uIComboBoxEditComboBox3 = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox3;
			DXCheckBox uIShowgridlinesCheckBox = this.UIXLSExportOptionsWindow.UIShowgridlinesCheckBox;
			DXCheckBox uIExporthyperlinksCheckBox = this.UIXLSExportOptionsWindow.UIExporthyperlinksCheckBox;
			#endregion
			Assert.AreEqual(this.CheckCustomizedXLSSpecificExportOptionsExpectedValues.UIComboBoxEditComboBoxValueAsString, uIComboBoxEditComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedXLSSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox1ValueAsString, uIComboBoxEditComboBox1.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedXLSSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox2ValueAsString, uIComboBoxEditComboBox2.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedXLSSpecificExportOptionsExpectedValues.UIComboBoxEditComboBox3ValueAsString, uIComboBoxEditComboBox3.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedXLSSpecificExportOptionsExpectedValues.UIShowgridlinesCheckBoxChecked, uIShowgridlinesCheckBox.Checked);
			Assert.AreEqual(this.CheckCustomizedXLSSpecificExportOptionsExpectedValues.UIExporthyperlinksCheckBoxChecked, uIExporthyperlinksCheckBox.Checked);
		}
		public void CheckCustomSumAfterChangingCustomFreight()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow20.UIPanelControl1Client.UIGcContainerClient.UICustomDataSummariesCustom.UIGridControl2Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckCustomSumAfterChangingCustomFreightExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckDateEditValueChangedViaKeyboard()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimePicker;
			#endregion
			Assert.AreEqual(this.CheckDateEditValueChangedViaKeyboardExpectedValues.UIDateEditSampleDateTimePickerValueAsString, uIDateEditSampleDateTimePicker.ValueAsString);
		}
		public void CheckDateEditValueChangedViaMouse()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimePicker;
			#endregion
			Assert.AreEqual(this.CheckDateEditValueChangedViaMouseExpectedValues.UIDateEditSampleDateTimePickerValueAsString, uIDateEditSampleDateTimePicker.ValueAsString);
		}
		public void CheckDateEditValueInVistaTimeMode()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimeEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimeEdit;
			#endregion
			StringAssert.Contains(uIDateEditSampleDateTimeEdit.ValueAsString, this.CheckDateEditValueInVistaTimeModeExpectedValues.UIDateEditSampleDateTimeEditValueAsString);
		}
		public void CheckDayTimeDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime8Edit;
			#endregion
			StringAssert.Contains(uITeDateTime8Edit.ValueAsString, this.CheckDayTimeDateTimeEditValueExpectedValues.UITeDateTime8EditValueAsString);
		}
		public void CheckDeletedBarLinkContainerPasteLink()
		{
			#region Variable Declarations
			DXCheckBox uIPasteCheckBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIBarLinkContainerItemCustom.UICheckedListBox1CheckedListBox.UIPasteCheckBox;
			#endregion
			Assert.AreEqual(this.CheckDeletedBarLinkContainerPasteLinkExpectedValues.UIPasteCheckBoxChecked, uIPasteCheckBox.Checked);
		}
		public void CheckDeletedConditionExpression()
		{
			#region Variable Declarations
			DXListBoxItem uITotal50AndDiscount0ListItem = this.UIXtraGridFeaturesDemoWindow23.UIPanelControl1Client.UIGcContainerClient.UIStyleConditionsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIExpressionConditionsCustom.UIFormatItemListList.UITotal50AndDiscount0ListItem;
			#endregion
			Assert.AreEqual(this.CheckDeletedConditionExpressionExpectedValues.UITotal50AndDiscount0ListItemIndex, uITotal50AndDiscount0ListItem.Index);
			Assert.AreEqual(this.CheckDeletedConditionExpressionExpectedValues.UITotal50AndDiscount0ListItemText, uITotal50AndDiscount0ListItem.Text);
		}
		public void CheckDescendingSortBySummary()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow;
			#endregion
			Assert.AreEqual(this.CheckDescendingSortBySummaryExpectedValues.UIGridControlGroupRowGroupRowRowHandle, uIGridControlGroupRowGroupRow.RowHandle);
		}
		public void CheckExpandedGroupRow()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow8 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow8;
			DXGroupRow uIGridControlGroupRowGroupRow9 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow9;
			DXCell uIFoliesgourmandesCell = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIFoliesgourmandesCell;
			DXCell uIRicardoAdocicadosCell = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIRicardoAdocicadosCell;
			#endregion
			Assert.AreEqual(this.CheckExpandedGroupRowExpectedValues.UIGridControlGroupRowGroupRow8RowHandle, uIGridControlGroupRowGroupRow8.RowHandle);
			Assert.AreEqual(this.CheckExpandedGroupRowExpectedValues.UIGridControlGroupRowGroupRow9RowHandle, uIGridControlGroupRowGroupRow9.RowHandle);
			Assert.AreEqual(this.CheckExpandedGroupRowExpectedValues.UIFoliesgourmandesCellRowHandle, uIFoliesgourmandesCell.RowHandle);
			Assert.AreEqual(this.CheckExpandedGroupRowExpectedValues.UIFoliesgourmandesCellValueAsString, uIFoliesgourmandesCell.ValueAsString);
			Assert.AreEqual(this.CheckExpandedGroupRowExpectedValues.UIRicardoAdocicadosCellRowHandle, uIRicardoAdocicadosCell.RowHandle);
			Assert.AreEqual(this.CheckExpandedGroupRowExpectedValues.UIRicardoAdocicadosCellValueAsString, uIRicardoAdocicadosCell.ValueAsString);
		}
		public void CheckExpandedMasterRow()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow14 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow14;
			#endregion
			Assert.AreEqual(this.CheckExpandedMasterRowExpectedValues.UIGridControlGroupRowGroupRow14ValueAsString, uIGridControlGroupRowGroupRow14.ValueAsString);
			Assert.AreEqual(this.CheckExpandedMasterRowExpectedValues.UIGridControlGroupRowGroupRow14RowHandle, uIGridControlGroupRowGroupRow14.RowHandle);
		}
		public void CheckFilterCondition()
		{
			#region Variable Declarations
			DXColumnHeader uIColPriorityColumnHeader = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIColPriorityColumnHeader;
			DXColumnHeader uIColTypeColumnHeader = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIColTypeColumnHeader;
			DXTestControl uIGridControlFilterPanText = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIGridControlFilterPanText;
			#endregion
			Assert.AreEqual(this.CheckFilterConditionExpectedValues.UIColPriorityColumnHeaderFilterString, uIColPriorityColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterConditionExpectedValues.UIColTypeColumnHeaderFilterString, uIColTypeColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterConditionExpectedValues.UIGridControlFilterPanTextFilterString, uIGridControlFilterPanText.FilterString);
		}
		public void CheckFilterDisplayBugs()
		{
			#region Variable Declarations
			DXColumnHeader uIColTypeColumnHeader = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIColTypeColumnHeader;
			DXColumnHeader uIColPriorityColumnHeader = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIColPriorityColumnHeader;
			DXTestControl uIGridControlFilterPanText = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIGridControlFilterPanText;
			#endregion
			Assert.AreEqual(this.CheckFilterDisplayBugsExpectedValues.UIColTypeColumnHeaderFilterString, uIColTypeColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterDisplayBugsExpectedValues.UIColPriorityColumnHeaderFilterString, uIColPriorityColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterDisplayBugsExpectedValues.UIGridControlFilterPanTextFilterString, uIGridControlFilterPanText.FilterString);
		}
		public void CheckFilterDisplayNonBugs()
		{
			#region Variable Declarations
			DXColumnHeader uIColTypeColumnHeader = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIColTypeColumnHeader;
			DXColumnHeader uIColPriorityColumnHeader = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIColPriorityColumnHeader;
			DXTestControl uIGridControlFilterPanText = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIGridControlFilterPanText;
			#endregion
			Assert.AreEqual(this.CheckFilterDisplayNonBugsExpectedValues.UIColTypeColumnHeaderFilterString, uIColTypeColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterDisplayNonBugsExpectedValues.UIColPriorityColumnHeaderFilterString, uIColPriorityColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterDisplayNonBugsExpectedValues.UIGridControlFilterPanTextFilterString, uIGridControlFilterPanText.FilterString);
		}
		public void CheckFilteredData()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn2ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader;
			DXColumnHeader uIGridColumn4ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn4ColumnHeader;
			DXTestControl uIGridControlFilterPanText = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlFilterPanText;
			#endregion
			Assert.AreEqual(this.CheckFilteredDataExpectedValues.UIGridColumn2ColumnHeaderFilterString, uIGridColumn2ColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilteredDataExpectedValues.UIGridColumn4ColumnHeaderFilterString, uIGridColumn4ColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilteredDataExpectedValues.UIGridControlFilterPanTextFilterString, uIGridControlFilterPanText.FilterString);
		}
		public void CheckFilteringResultAfterApplyingFilter()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckFilteringResultAfterApplyingFilterExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckFilteringResultAfterApplyingFilterViaAssigningFilterColumn()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckFilteringResultAfterCleaningFilter()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckFilteringResultAfterCleaningFilterExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckFilterMadeViaFilterControlInCustomFilterControlBindingTab()
		{
			#region Variable Declarations
			DXTestControl uIGridControlFilterPanText = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIGridControl2Table.UIGridControlFilterPanText;
			DXColumnHeader uIGridColumnSuspendedColumnHeader = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIGridControl2Table.UIGridColumnSuspendedColumnHeader;
			DXColumnHeader uIGridColumnImplementeColumnHeader = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIGridControl2Table.UIGridColumnImplementeColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues.UIGridControlFilterPanTextFilterString, uIGridControlFilterPanText.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues.UIGridColumnSuspendedColumnHeaderFilterString, uIGridColumnSuspendedColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues.UIGridColumnImplementeColumnHeaderFilterString, uIGridColumnImplementeColumnHeader.FilterString);
		}
		public void CheckFilterMadeViaFilterControlInPropertiesTab()
		{
			#region Variable Declarations
			DXTestControl uIGridControlFilterPanText = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIGridControl1Table.UIGridControlFilterPanText;
			DXColumnHeader uIGridColumnProductColumnHeader = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIGridControl1Table.UIGridColumnProductColumnHeader;
			DXColumnHeader uIGridColumnQuantityColumnHeader = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIGridControl1Table.UIGridColumnQuantityColumnHeader;
			DXColumnHeader uIGridColumnDiscountColumnHeader = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient1.UIGridControl1Table.UIGridColumnDiscountColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues.UIGridControlFilterPanTextFilterString, uIGridControlFilterPanText.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues.UIGridColumnProductColumnHeaderFilterString, uIGridColumnProductColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues.UIGridColumnQuantityColumnHeaderFilterString, uIGridColumnQuantityColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues.UIGridColumnDiscountColumnHeaderFilterString, uIGridColumnDiscountColumnHeader.FilterString);
		}
		public void CheckFilterMadeViaFilterDropdownList()
		{
			#region Variable Declarations
			DXColumnHeader uIColPriorityColumnHeader = this.UIXtraGridFeaturesDemoWindow13.UIPanelControl1Client1.UIGcContainerClient.UIFilteringCustom.UIGridControl1Table.UIColPriorityColumnHeader;
			DXColumnHeader uIColStatusColumnHeader = this.UIXtraGridFeaturesDemoWindow13.UIPanelControl1Client1.UIGcContainerClient.UIFilteringCustom.UIGridControl1Table.UIColStatusColumnHeader;
			DXTestControl uIGridControlFilterPanText = this.UIXtraGridFeaturesDemoWindow13.UIPanelControl1Client1.UIGcContainerClient.UIFilteringCustom.UIGridControl1Table.UIGridControlFilterPanText;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow13.UIPanelControl1Client1.UIGcContainerClient.UIFilteringCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell1 = this.UIXtraGridFeaturesDemoWindow13.UIPanelControl1Client1.UIGcContainerClient.UIFilteringCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell1;
			#endregion
			Assert.AreEqual(this.CheckFilterMadeViaFilterDropdownListExpectedValues.UIColPriorityColumnHeaderFilterString, uIColPriorityColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterDropdownListExpectedValues.UIColStatusColumnHeaderFilterString, uIColStatusColumnHeader.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterDropdownListExpectedValues.UIGridControlFilterPanTextFilterString, uIGridControlFilterPanText.FilterString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterDropdownListExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
			Assert.AreEqual(this.CheckFilterMadeViaFilterDropdownListExpectedValues.UIGridControlFooterCelGridFooterCell1ValueAsString, uIGridControlFooterCelGridFooterCell1.ValueAsString);
		}
		public void CheckFooterBrickSettings()
		{
			#region Variable Declarations
			DXTextEdit uITbFoot1Edit = this.UIHeaderandFooterWindow.UITbFoot1Edit;
			DXTextEdit uITbFoot2Edit = this.UIHeaderandFooterWindow.UITbFoot2Edit;
			DXTextEdit uITbFoot3Edit = this.UIHeaderandFooterWindow.UITbFoot3Edit;
			#endregion
			Assert.AreEqual(this.CheckFooterBrickSettingsExpectedValues.UITbFoot1EditValueAsString, uITbFoot1Edit.ValueAsString);
			Assert.AreEqual(this.CheckFooterBrickSettingsExpectedValues.UITbFoot2EditValueAsString, uITbFoot2Edit.ValueAsString);
			Assert.AreEqual(this.CheckFooterBrickSettingsExpectedValues.UITbFoot3EditValueAsString, uITbFoot3Edit.ValueAsString);
		}
		public void CheckFullCollapsedGroupRow()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow10 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow10;
			#endregion
			Assert.AreEqual(this.CheckFullCollapsedGroupRowExpectedValues.UIGridControlGroupRowGroupRow10ValueAsString, uIGridControlGroupRowGroupRow10.ValueAsString);
			Assert.AreEqual(this.CheckFullCollapsedGroupRowExpectedValues.UIGridControlGroupRowGroupRow10RowHandle, uIGridControlGroupRowGroupRow10.RowHandle);
		}
		public void CheckFullDateAndTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime2Edit;
			#endregion
			Assert.AreEqual(this.CheckFullDateAndTimeEditValueExpectedValues.UITeDateTime2EditValueAsString, uITeDateTime2Edit.ValueAsString);
		}
		public void CheckFullDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime1Edit;
			#endregion
			Assert.AreEqual(this.CheckFullDateTimeEditValueExpectedValues.UITeDateTime1EditValueAsString, uITeDateTime1Edit.ValueAsString);
		}
		public void CheckFullExpandedGroupRow()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow2 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow2;
			DXCell uIFISSAFabricaInterSalCell = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIFISSAFabricaInterSalCell;
			DXCell uIQUICKStopCell = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIQUICKStopCell;
			DXCell uIRomeroytomilloCell = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIRomeroytomilloCell;
			DXGroupRow uIGridControlGroupRowGroupRow12 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow12;
			DXGroupRow uIGridControlGroupRowGroupRow13 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow13;
			#endregion
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIGridControlGroupRowGroupRow2RowHandle, uIGridControlGroupRowGroupRow2.RowHandle);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIFISSAFabricaInterSalCellRowHandle, uIFISSAFabricaInterSalCell.RowHandle);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIFISSAFabricaInterSalCellValueAsString, uIFISSAFabricaInterSalCell.ValueAsString);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIQUICKStopCellRowHandle, uIQUICKStopCell.RowHandle);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIQUICKStopCellValueAsString, uIQUICKStopCell.ValueAsString);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIRomeroytomilloCellRowHandle, uIRomeroytomilloCell.RowHandle);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIRomeroytomilloCellValueAsString, uIRomeroytomilloCell.ValueAsString);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIGridControlGroupRowGroupRow12RowHandle, uIGridControlGroupRowGroupRow12.RowHandle);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIGridControlGroupRowGroupRow12ValueAsString, uIGridControlGroupRowGroupRow12.ValueAsString);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIGridControlGroupRowGroupRow13RowHandle, uIGridControlGroupRowGroupRow13.RowHandle);
			Assert.AreEqual(this.CheckFullExpandedGroupRowExpectedValues.UIGridControlGroupRowGroupRow13ValueAsString, uIGridControlGroupRowGroupRow13.ValueAsString);
		}
		public void CheckGroupedData()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow;
			DXGroupRow uIGridControlGroupRowGroupRow1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow1;
			DXGroupRow uIGridControlGroupRowGroupRow2 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow2;
			DXGroupRow uIGridControlGroupRowGroupRow3 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow3;
			DXGroupRow uIGridControlGroupRowGroupRow4 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow4;
			DXGroupRow uIGridControlGroupRowGroupRow5 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow5;
			#endregion
			Assert.AreEqual(this.CheckGroupedDataExpectedValues.UIGridControlGroupRowGroupRowValueAsString, uIGridControlGroupRowGroupRow.ValueAsString);
			Assert.AreEqual(this.CheckGroupedDataExpectedValues.UIGridControlGroupRowGroupRow1ValueAsString, uIGridControlGroupRowGroupRow1.ValueAsString);
			Assert.AreEqual(this.CheckGroupedDataExpectedValues.UIGridControlGroupRowGroupRow2ValueAsString, uIGridControlGroupRowGroupRow2.ValueAsString);
			Assert.AreEqual(this.CheckGroupedDataExpectedValues.UIGridControlGroupRowGroupRow3ValueAsString, uIGridControlGroupRowGroupRow3.ValueAsString);
			Assert.AreEqual(this.CheckGroupedDataExpectedValues.UIGridControlGroupRowGroupRow4ValueAsString, uIGridControlGroupRowGroupRow4.ValueAsString);
			Assert.AreEqual(this.CheckGroupedDataExpectedValues.UIGridControlGroupRowGroupRow5ValueAsString, uIGridControlGroupRowGroupRow5.ValueAsString);
		}
		public void CheckGroupedDataByCategory()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow6 = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow6;
			#endregion
			Assert.AreEqual(this.CheckGroupedDataByCategoryExpectedValues.UIGridControlGroupRowGroupRow6ValueAsString, uIGridControlGroupRowGroupRow6.ValueAsString);
			Assert.AreEqual(this.CheckGroupedDataByCategoryExpectedValues.UIGridControlGroupRowGroupRow6RowHandle, uIGridControlGroupRowGroupRow6.RowHandle);
		}
		public void CheckGroupedDataByCustomInterval()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow5 = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow5;
			#endregion
			Assert.AreEqual(this.CheckGroupedDataByCustomIntervalExpectedValues.UIGridControlGroupRowGroupRow5RowHandle, uIGridControlGroupRowGroupRow5.RowHandle);
		}
		public void CheckGroupedDataByDateRangeData()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow3 = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow3;
			#endregion
			Assert.AreEqual(this.CheckGroupedDataByDateRangeDataExpectedValues.UIGridControlGroupRowGroupRow3RowHandle, uIGridControlGroupRowGroupRow3.RowHandle);
		}
		public void CheckGroupedDataByMonthData()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow2 = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow2;
			#endregion
			Assert.AreEqual(this.CheckGroupedDataByMonthDataExpectedValues.UIGridControlGroupRowGroupRow2RowHandle, uIGridControlGroupRowGroupRow2.RowHandle);
		}
		public void CheckGroupedDataByYearData()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow4 = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow4;
			#endregion
			Assert.AreEqual(this.CheckGroupedDataByYearDataExpectedValues.UIGridControlGroupRowGroupRow4RowHandle, uIGridControlGroupRowGroupRow4.RowHandle);
		}
		public void CheckGroupedDataWithMultipleValuesGrouping()
		{
			#region Variable Declarations
			DXColumnHeader uIColCategoryColumnHeader = this.UIXtraGridFeaturesDemoWindow17.UIPanelControl1Client1.UIGcContainerClient.UIMultipleGroupingCustom.UIGridControl1Table.UIColCategoryColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckGroupedDataWithMultipleValuesGroupingExpectedValues.UIColCategoryColumnHeaderGroupIndex, uIColCategoryColumnHeader.GroupIndex);
		}
		public void CheckGroupedMasterDetailData()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow1 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow1;
			DXGroupRow uIGridControlGroupRowGroupRow2 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow2;
			DXGroupRow uIGridControlGroupRowGroupRow3 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow3;
			DXGroupRow uIGridControlGroupRowGroupRow4 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow4;
			DXGroupRow uIGridControlGroupRowGroupRow5 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow5;
			DXGroupRow uIGridControlGroupRowGroupRow6 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow6;
			DXGroupRow uIGridControlGroupRowGroupRow7 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow7;
			#endregion
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow1ValueAsString, uIGridControlGroupRowGroupRow1.ValueAsString);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow1RowHandle, uIGridControlGroupRowGroupRow1.RowHandle);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow2RowHandle, uIGridControlGroupRowGroupRow2.RowHandle);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow3RowHandle, uIGridControlGroupRowGroupRow3.RowHandle);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow3ValueAsString, uIGridControlGroupRowGroupRow3.ValueAsString);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow4RowHandle, uIGridControlGroupRowGroupRow4.RowHandle);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow4ValueAsString, uIGridControlGroupRowGroupRow4.ValueAsString);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow5RowHandle, uIGridControlGroupRowGroupRow5.RowHandle);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow5ValueAsString, uIGridControlGroupRowGroupRow5.ValueAsString);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow6RowHandle, uIGridControlGroupRowGroupRow6.RowHandle);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow6ValueAsString, uIGridControlGroupRowGroupRow6.ValueAsString);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow7RowHandle, uIGridControlGroupRowGroupRow7.RowHandle);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRow7ValueAsString, uIGridControlGroupRowGroupRow7.ValueAsString);
		}
		public void CheckGroupedMasterDetailDataOnJoinedGroupPanel()
		{
			#region Variable Declarations
			DXColumnHeader uIColCompanyNameColumnHeader1 = this.UIXtraGridFeaturesDemoWindow33.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColCompanyNameColumnHeader1;
			DXColumnHeader uIColContactTitleColumnHeader = this.UIXtraGridFeaturesDemoWindow33.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColContactTitleColumnHeader;
			DXColumnHeader uIColRegionColumnHeader1 = this.UIXtraGridFeaturesDemoWindow33.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColRegionColumnHeader1;
			#endregion
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColCompanyNameColumnHeader1VisibleIndex, uIColCompanyNameColumnHeader1.VisibleIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColCompanyNameColumnHeader1SortIndex, uIColCompanyNameColumnHeader1.SortIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColCompanyNameColumnHeader1GroupIndex, uIColCompanyNameColumnHeader1.GroupIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColContactTitleColumnHeaderVisibleIndex, uIColContactTitleColumnHeader.VisibleIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColContactTitleColumnHeaderSortIndex, uIColContactTitleColumnHeader.SortIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColContactTitleColumnHeaderGroupIndex, uIColContactTitleColumnHeader.GroupIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColRegionColumnHeader1VisibleIndex, uIColRegionColumnHeader1.VisibleIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColRegionColumnHeader1GroupIndex, uIColRegionColumnHeader1.GroupIndex);
			Assert.AreEqual(this.CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues.UIColRegionColumnHeader1SortIndex, uIColRegionColumnHeader1.SortIndex);
		}
		public void CheckGroupIndexAfterGroupedData()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn2ColumnHeader1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader1;
			DXColumnHeader uIGridColumn5ColumnHeader1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader1;
			#endregion
			Assert.AreEqual(this.CheckGroupIndexAfterGroupedDataExpectedValues.UIGridColumn2ColumnHeader1GroupIndex, uIGridColumn2ColumnHeader1.GroupIndex);
			Assert.AreEqual(this.CheckGroupIndexAfterGroupedDataExpectedValues.UIGridColumn5ColumnHeader1GroupIndex, uIGridColumn5ColumnHeader1.GroupIndex);
		}
		public void CheckGroupIndexAfterUngroupedData()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn2ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader;
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckGroupIndexAfterUngroupedDataExpectedValues.UIGridColumn2ColumnHeaderGroupIndex, uIGridColumn2ColumnHeader.GroupIndex);
			Assert.AreEqual(this.CheckGroupIndexAfterUngroupedDataExpectedValues.UIGridColumn5ColumnHeaderGroupIndex, uIGridColumn5ColumnHeader.GroupIndex);
		}
		public void CheckHeaderBrickSettings()
		{
			#region Variable Declarations
			DXTextEdit uITbHead1Edit = this.UIHeaderandFooterWindow2.UITbHead1Edit;
			DXTextEdit uITbHead2Edit = this.UIHeaderandFooterWindow2.UITbHead2Edit;
			DXTextEdit uITbHead3Edit = this.UIHeaderandFooterWindow2.UITbHead3Edit;
			DXMenuBaseButtonItem uIBarCheckItemLink1BarBaseButtonItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UIBarCheckItemLink1BarBaseButtonItem;
			#endregion
			Assert.AreEqual(this.CheckHeaderBrickSettingsExpectedValues.UITbHead1EditValueAsString, uITbHead1Edit.ValueAsString);
			Assert.AreEqual(this.CheckHeaderBrickSettingsExpectedValues.UITbHead2EditValueAsString, uITbHead2Edit.ValueAsString);
			Assert.AreEqual(this.CheckHeaderBrickSettingsExpectedValues.UITbHead3EditValueAsString, uITbHead3Edit.ValueAsString);
			Assert.AreEqual(this.CheckHeaderBrickSettingsExpectedValues.UIBarCheckItemLink1BarBaseButtonItemChecked, uIBarCheckItemLink1BarBaseButtonItem.Checked);
		}
		public void CheckHiddenToolbar()
		{
			#region Variable Declarations
			DXCheckBox uIFormatCheckBox = this.UICustomizationWindow.UITabControlTabList.UITpToolbarsClient.UIToolBarsListCheckedListBox.UIFormatCheckBox;
			#endregion
			Assert.AreEqual(this.CheckHiddenToolbarExpectedValues.UIFormatCheckBoxChecked, uIFormatCheckBox.Checked);
		}
		public void CheckHorizontalScrollingViaBrickClick()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices08PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices08PrintControlBrick;
			#endregion
			Mouse.Click(uIPage0BrickIndices08PrintControlBrick, new Point(66, 6));
		}
		public void CheckImageComboBoxEditSelectedIndex()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEditSamComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleImageComboBoxECustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIImageComboBoxEditSamComboBox;
			#endregion
			Assert.AreEqual(this.CheckImageComboBoxEditSelectedIndexExpectedValues.UIImageComboBoxEditSamComboBoxSelectedIndex, uIImageComboBoxEditSamComboBox.SelectedIndex);
		}
		public void CheckImageComboBoxEditValue()
		{
			#region Variable Declarations
			DXComboBox uIImageComboBoxEditSamComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleImageComboBoxECustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIImageComboBoxEditSamComboBox;
			#endregion
			Assert.AreEqual(this.CheckImageComboBoxEditValueExpectedValues.UIImageComboBoxEditSamComboBoxValueAsString, uIImageComboBoxEditSamComboBox.ValueAsString);
		}
		public void CheckInvertedSelectedCheckedListBoxValues()
		{
			#region Variable Declarations
			DXCheckedListBox uICheckedListBoxControCheckedListBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UICheckedListBoxControCheckedListBox;
			#endregion
			Assert.AreEqual(this.CheckInvertedSelectedCheckedListBoxValuesExpectedValues.UICheckedListBoxControCheckedListBoxCheckedIndicesAsString, uICheckedListBoxControCheckedListBox.CheckedIndicesAsString);
		}
		public void CheckInvokedCustomizationForm()
		{
			#region Variable Declarations
			DXButton uIBtCloseButton = this.UICustomizationWindow.UIBtCloseButton;
			#endregion
			Assert.AreEqual(this.CheckInvokedCustomizationFormExpectedValues.UIBtCloseButtonText, uIBtCloseButton.Text);
		}
		public void CheckLogAfterClickDataNavigatorAppendButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorAppendButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorCancelEditButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorEndEditButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorEndEditButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorFirstButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorFirstButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorLastButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorLastButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorLockButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorLockButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorNextButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorNextButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorNextPageButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorNextPageButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorPreviousButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorPreviousButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorPreviousPageButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorRemoveButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorRemoveButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDataNavigatorSearchButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDataNavigatorSearchButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterClickDropDownButton()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDropDownButtonCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterClickDropDownButtonExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterOpeningDropDownButtonPopupControlContainer()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDropDownButtonCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLogAfterOpeningDropDownButtonPopupMenu()
		{
			#region Variable Declarations
			DXTextEdit uIMeFiringEventsEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDropDownButtonCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl5Client.UIMeFiringEventsEdit;
			#endregion
			Assert.AreEqual(this.CheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues.UIMeFiringEventsEditValueAsString, uIMeFiringEventsEdit.ValueAsString);
		}
		public void CheckLookUpEditValue()
		{
			#region Variable Declarations
			DXPopupEdit uILookUpEdit1PopupEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleLookUpEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UILookUpEdit1PopupEdit;
			#endregion
			Assert.AreEqual(this.CheckLookUpEditValueExpectedValues.UILookUpEdit1PopupEditValueAsString, uILookUpEdit1PopupEdit.ValueAsString);
		}
		public void CheckMemoEditValue()
		{
			#region Variable Declarations
			DXTextEdit uIMemoEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMemoEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoEditSampleEdit;
			#endregion
			Assert.AreEqual(this.CheckMemoEditValueExpectedValues.UIMemoEditSampleEditValueAsString, uIMemoEditSampleEdit.ValueAsString);
		}
		public void CheckMonthAndDayDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime5Edit;
			#endregion
			Assert.AreEqual(this.CheckMonthAndDayDateTimeEditValueExpectedValues.UITeDateTime5EditValueAsString, uITeDateTime5Edit.ValueAsString);
		}
		public void CheckMovedFocusToNextCommandViaClickCancelButton()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton = this.UISimplePadQuestionWindow.UIXtraMessageBoxFormWindow2.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void CheckMovedFocusViaClickSubmenuItem()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UISimplePadCDemoWindow.UIBarDockControlCustom2.UIMainMenuMenuBar.UIFormatBarItem.UIFontColorMenuItem.UIPopupContainerBarConMenu.UIPopupControlContaineClient.UIXtraTabControlTabList.UIXtraTabControlHeaderTabPage;
			DXTestControl uIColorCellsControlClient = this.UISimplePadCDemoWindow.UIBarDockControlCustom3.UIMainMenuMenuBar.UIFormatBarItem.UIFontColorMenuItem.UIPopupContainerBarConMenu.UIPopupControlContaineClient.UIXtraTabControlTabList.UIXtraTabPageClient.UIColorCellsControlClient;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(26, 8));
			Mouse.Click(uIColorCellsControlClient, new Point(32, 36));
		}
		public void CheckMRUEditValueAfterAdding()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			Assert.AreEqual(this.CheckMRUEditValueAfterAddingExpectedValues.UIMruEditSampleMRUEditValueAsString, uIMruEditSampleMRUEdit.ValueAsString);
			Assert.AreEqual(this.CheckMRUEditValueAfterAddingExpectedValues.UIMruEditSampleMRUEditSelectedIndex, uIMruEditSampleMRUEdit.SelectedIndex);
		}
		public void CheckMRUEditValueAfterDeleting()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			Assert.AreEqual(this.CheckMRUEditValueAfterDeletingExpectedValues.UIMruEditSampleMRUEditValueAsString, uIMruEditSampleMRUEdit.ValueAsString);
			Assert.AreEqual(this.CheckMRUEditValueAfterDeletingExpectedValues.UIMruEditSampleMRUEditSelectedIndex, uIMruEditSampleMRUEdit.SelectedIndex);
		}
		public void CheckMRUEditValueAfterSelection()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			Assert.AreEqual(this.CheckMRUEditValueAfterSelectionExpectedValues.UIMruEditSampleMRUEditValueAsString, uIMruEditSampleMRUEdit.ValueAsString);
			Assert.AreEqual(this.CheckMRUEditValueAfterSelectionExpectedValues.UIMruEditSampleMRUEditSelectedIndex, uIMruEditSampleMRUEdit.SelectedIndex);
		}
		public void CheckMRUEditValueAfterTyping()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			Assert.AreEqual(this.CheckMRUEditValueAfterTypingExpectedValues.UIMruEditSampleMRUEditValueAsString, uIMruEditSampleMRUEdit.ValueAsString);
			Assert.AreEqual(this.CheckMRUEditValueAfterTypingExpectedValues.UIMruEditSampleMRUEditSelectedIndex, uIMruEditSampleMRUEdit.SelectedIndex);
		}
		public void CheckMultiExtendedSelectionInListBox()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			Assert.AreEqual(this.CheckMultiExtendedSelectionInListBoxExpectedValues.UIListBoxControlSampleListSelectedIndicesAsString, uIListBoxControlSampleList.SelectedIndicesAsString);
		}
		public void CheckMultiExtendedSelectionInListBoxAfterUndoSelection()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			Assert.AreEqual(this.CheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues.UIListBoxControlSampleListSelectedIndicesAsString, uIListBoxControlSampleList.SelectedIndicesAsString);
		}
		public void CheckMultiSimpleSelectionInListBox()
		{
			#region Variable Declarations
			DXListBoxItem uIUnitedStatesimageusListItem = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList.UIUnitedStatesimageusListItem;
			DXListBoxItem uIAngolaListItem = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList.UIAngolaListItem;
			DXListBoxItem uIAustraliaListItem = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList.UIAustraliaListItem;
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxExpectedValues.UIUnitedStatesimageusListItemSelected, uIUnitedStatesimageusListItem.Selected);
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxExpectedValues.UIUnitedStatesimageusListItemIndex, uIUnitedStatesimageusListItem.Index);
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxExpectedValues.UIAngolaListItemSelected, uIAngolaListItem.Selected);
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxExpectedValues.UIAngolaListItemIndex, uIAngolaListItem.Index);
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxExpectedValues.UIAustraliaListItemSelected, uIAustraliaListItem.Selected);
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxExpectedValues.UIAustraliaListItemIndex, uIAustraliaListItem.Index);
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxExpectedValues.UIListBoxControlSampleListSelectedIndicesAsString, uIListBoxControlSampleList.SelectedIndicesAsString);
		}
		public void CheckMultiSimpleSelectionInListBoxAfterUndoSelection()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			Assert.AreEqual(this.CheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues.UIListBoxControlSampleListSelectedIndicesAsString, uIListBoxControlSampleList.SelectedIndicesAsString);
		}
		public void CheckPickImageEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uIPickImageBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom3MenuBar.UIPickImageBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckPickImageEditValueExpectedValues.UIPickImageBarEditItemValueAsString, uIPickImageBarEditItem.ValueAsString);
		}
		public void CheckPopupContainerEditSize()
		{
			#region Variable Declarations
			DXWindow uIPopupContainerFormWindow = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaEdit.UIPopupContainerFormWindow;
			#endregion
			Assert.AreEqual(this.CheckPopupContainerEditSizeExpectedValues.UIPopupContainerFormWindowSize, uIPopupContainerFormWindow.Size.ToString());
		}
		public void CheckQuicklyAccessToRecentDocuments()
		{
			#region Variable Declarations
			DXButton uIRibbonApplicationButButton = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonApplicationButButton;
			DXCheckBox uICheckEdit1CheckBox = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIBackstageViewClientCCustom.UICheckEdit1CheckBox;
			DXTestControl uIBackstageViewControlCustom = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIBackstageViewControlCustom;
			#endregion
			Mouse.Click(uIRibbonApplicationButButton, new Point(37, 11));
			uICheckEdit1CheckBox.Checked = this.CheckQuicklyAccessToRecentDocumentsParams.UICheckEdit1CheckBoxChecked;
			Mouse.Click(uIBackstageViewControlCustom, new Point(32, 28));
		}
		public void CheckRangeTrackBarValue()
		{
			#region Variable Declarations
			DXRangeTrackBar uIRangeTrackBarControlRangeTrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleRangeTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIRangeTrackBarControlRangeTrackBar;
			#endregion
			Assert.AreEqual(this.CheckRangeTrackBarValueExpectedValues.UIRangeTrackBarControlRangeTrackBarValueMaximum, uIRangeTrackBarControlRangeTrackBar.ValueMaximum);
			Assert.AreEqual(this.CheckRangeTrackBarValueExpectedValues.UIRangeTrackBarControlRangeTrackBarValueMinimum, uIRangeTrackBarControlRangeTrackBar.ValueMinimum);
		}
		public void CheckRecalculatedSummariesValue()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell1 = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell1;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell4 = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell4;
			#endregion
			Assert.AreEqual(this.CheckRecalculatedSummariesValueExpectedValues.UIGridControlFooterCelGridFooterCell1ValueAsString, uIGridControlFooterCelGridFooterCell1.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedSummariesValueExpectedValues.UIGridControlFooterCelGridFooterCell4ValueAsString, uIGridControlFooterCelGridFooterCell4.ValueAsString);
		}
		public void CheckRecalculatedTotalRowAndColumnCells()
		{
			#region Variable Declarations
			DXCell uIItem10Cell = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIItem10Cell;
			DXCell uIItem5Cell = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIItem5Cell;
			DXCell uIItem5Cell1 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIItem5Cell1;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell3 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell3;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell2 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell2;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell1 = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell1;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow22.UIPanelControl1Client.UIGcContainerClient.UIGridSheetCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckRecalculatedTotalRowAndColumnCellsExpectedValues.UIItem10CellValueAsString, uIItem10Cell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedTotalRowAndColumnCellsExpectedValues.UIItem5CellValueAsString, uIItem5Cell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedTotalRowAndColumnCellsExpectedValues.UIItem5Cell1ValueAsString, uIItem5Cell1.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedTotalRowAndColumnCellsExpectedValues.UIGridControlFooterCelGridFooterCell3ValueAsString, uIGridControlFooterCelGridFooterCell3.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedTotalRowAndColumnCellsExpectedValues.UIGridControlFooterCelGridFooterCell2ValueAsString, uIGridControlFooterCelGridFooterCell2.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedTotalRowAndColumnCellsExpectedValues.UIGridControlFooterCelGridFooterCell1ValueAsString, uIGridControlFooterCelGridFooterCell1.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedTotalRowAndColumnCellsExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckRecalculatedValuesInFixedBandsAndGroupingTab()
		{
			#region Variable Declarations
			DXRowFooterCell uIGridControlRowFooterRowFooterCell = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIGridControlRowFooterRowFooterCell;
			DXCell uIItem10029800Cell = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIItem10029800Cell;
			DXCell uIItem835817Cell = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIItem835817Cell;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIGridControlFooterCelGridFooterCell;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell1 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIGridControlFooterCelGridFooterCell1;
			DXGridFooterCell uIGridControlFooterCelGridFooterCell2 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIGridControlFooterCelGridFooterCell2;
			#endregion
			Assert.AreEqual(this.CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues.UIGridControlRowFooterRowFooterCellValueAsString, uIGridControlRowFooterRowFooterCell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues.UIItem10029800CellValueAsString, uIItem10029800Cell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues.UIItem835817CellValueAsString, uIItem835817Cell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues.UIGridControlFooterCelGridFooterCell1ValueAsString, uIGridControlFooterCelGridFooterCell1.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues.UIGridControlFooterCelGridFooterCell2ValueAsString, uIGridControlFooterCelGridFooterCell2.ValueAsString);
		}
		public void CheckRecalculatedValuesInSimpleFixedBandsTab()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			DXCell uIItem2792353Cell = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UIItem2792353Cell;
			#endregion
			Assert.AreEqual(this.CheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues.UIItem2792353CellValueAsString, uIItem2792353Cell.ValueAsString);
		}
		public void CheckRecalculatedValuesOnVerticalSplitPresentationTab()
		{
			#region Variable Declarations
			DXCell uIItem499465Cell = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer1SplitContainerControl.UISplitGroupPanelClient.UIGridControl1Table.UIItem499465Cell;
			DXCell uIItem0Cell = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer1SplitContainerControl.UISplitGroupPanelClient1.UIGridControlTable.UIItem0Cell;
			DXCell uIItem287828Cell = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer1SplitContainerControl.UISplitGroupPanelClient.UIGridControl1Table.UIItem287828Cell;
			#endregion
			Assert.AreEqual(this.CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues.UIItem499465CellValueAsString, uIItem499465Cell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues.UIItem0CellValueAsString, uIItem0Cell.ValueAsString);
			Assert.AreEqual(this.CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues.UIItem287828CellValueAsString, uIItem287828Cell.ValueAsString);
		}
		public void CheckRegExMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITextEdit1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit1Edit;
			DXTextEdit uITextEdit2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit2Edit;
			DXTextEdit uITextEdit3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit3Edit;
			DXTextEdit uITextEdit6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit6Edit;
			DXTextEdit uITextEdit5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit5Edit;
			DXTextEdit uITextEdit4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit4Edit;
			DXTextEdit uITextEdit9Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit9Edit;
			DXTextEdit uITextEdit8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit8Edit;
			DXTextEdit uITextEdit7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegExClient.UITextEdit7Edit;
			#endregion
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit1EditValueAsString, uITextEdit1Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit2EditValueAsString, uITextEdit2Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit3EditValueAsString, uITextEdit3Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit6EditValueAsString, uITextEdit6Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit5EditValueAsString, uITextEdit5Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit4EditValueAsString, uITextEdit4Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit9EditValueAsString, uITextEdit9Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit8EditValueAsString, uITextEdit8Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegExMaskBoxEditValuesExpectedValues.UITextEdit7EditValueAsString, uITextEdit7Edit.ValueAsString);
		}
		public void CheckRegularMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITeRegular1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular1Edit;
			DXTextEdit uITeRegular1_1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular1_1Edit;
			DXTextEdit uITeRegular2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular2Edit;
			DXTextEdit uITeRegular3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular3Edit;
			DXTextEdit uITeRegular4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular4Edit;
			DXTextEdit uITeRegular5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular5Edit;
			DXTextEdit uITeRegular6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular6Edit;
			DXTextEdit uITeRegular7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular7Edit;
			DXTextEdit uITeRegular8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpRegularClient.UITeRegular8Edit;
			#endregion
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular1EditValueAsString, uITeRegular1Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular1_1EditValueAsString, uITeRegular1_1Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular2EditValueAsString, uITeRegular2Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular3EditValueAsString, uITeRegular3Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular4EditValueAsString, uITeRegular4Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular5EditValueAsString, uITeRegular5Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular6EditValueAsString, uITeRegular6Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular7EditValueAsString, uITeRegular7Edit.ValueAsString);
			Assert.AreEqual(this.CheckRegularMaskBoxEditValuesExpectedValues.UITeRegular8EditValueAsString, uITeRegular8Edit.ValueAsString);
		}
		public void CheckRemovedSorting()
		{
			#region Variable Declarations
			DXScrollBar uIVCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client1.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIVCrkScrollBarScrollBarControl;
			#endregion
			Assert.AreEqual(this.CheckRemovedSortingExpectedValues.UIVCrkScrollBarScrollBarControlValueAsString, uIVCrkScrollBarScrollBarControl.ValueAsString);
		}
		public void CheckReorderedColumns()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckReorderedColumnsExpectedValues.UIGridColumn3ColumnHeaderVisibleIndex, uIGridColumn3ColumnHeader.VisibleIndex);
			Assert.AreEqual(this.CheckReorderedColumnsExpectedValues.UIGridColumn3ColumnHeaderColumnName, uIGridColumn3ColumnHeader.ColumnName);
		}
		public void CheckRFCDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime3Edit;
			#endregion
			Assert.AreEqual(this.CheckRFCDateTimeEditValueExpectedValues.UITeDateTime3EditValueAsString, uITeDateTime3Edit.ValueAsString);
		}
		public void CheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTips()
		{
			#region Variable Declarations
			DXTestControl uIMainGalleryItemGroup = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIMainGalleryItemGroup;
			#endregion
			Assert.AreEqual(this.CheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues.UIMainGalleryItemGroupSelectedItemsAsString, uIMainGalleryItemGroup.GetProperty(DXTestControl.PropertyNames.SelectedItemsAsString).ToString());
		}
		public void CheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTips()
		{
			#region Variable Declarations
			DXTestControl uIMainGalleryItemGroup = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRpgFontColorRibbonPageGroup.UIColorRibbonGallery.UIMainGalleryItemGroup;
			#endregion
			Assert.AreEqual(this.CheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues.UIMainGalleryItemGroupSelectedItemsAsString, uIMainGalleryItemGroup.GetProperty(DXTestControl.PropertyNames.SelectedItemsAsString).ToString());
		}
		public void CheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbar()
		{
			#region Variable Declarations
			DXRibbonItem uIRibbonToolbarPopupItRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UIRibbonToolbarPopupItRibbonItem;
			#endregion
			Assert.AreEqual(this.CheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues.UIRibbonToolbarPopupItRibbonItemLocation, uIRibbonToolbarPopupItRibbonItem.GetProperty("Location").ToString());
		}
		public void CheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbar()
		{
			#region Variable Declarations
			DXRibbonItem uIReplaceRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UIReplaceRibbonItem;
			#endregion
			Assert.AreEqual(this.CheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues.UIReplaceRibbonItemLocation, uIReplaceRibbonItem.GetProperty("Location").ToString());
		}
		public void CheckRibbonRichEditTextForAssertionApplicationCloseCommands()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UIRibbonSimplePadWindow.UINewDocument2Window.UINewDocument2Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Assert.AreEqual(this.CheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues.UIRichTextBox1EditText, uIRichTextBox1Edit.Text);
		}
		public void CheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommands()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UIDocument1rtfRibbonSiWindow.UIDocument1rtfWindow.UIDocument1rtfClient.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Assert.AreEqual(this.CheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues.UIRichTextBox1EditText, uIRichTextBox1Edit.Text);
		}
		public void CheckRibbonRichEditTextForAssertionInvokingRibbonCommands()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Assert.AreEqual(this.CheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues.UIRichTextBox1EditText, uIRichTextBox1Edit.Text);
		}
		public void CheckRibbonRichEditTextForAssertionMiniToolbarCutItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Assert.AreEqual(this.CheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues.UIRichTextBox1EditText, uIRichTextBox1Edit.Text);
		}
		public void CheckRibbonRichEditTextForAssertionReplacing()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Assert.AreEqual(this.CheckRibbonRichEditTextForAssertionReplacingExpectedValues.UIRichTextBox1EditText, uIRichTextBox1Edit.Text);
		}
		public void CheckSelectedCellsViaCtrlAShortcut()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UIRow0AlfredsFutterkisWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaCtrlAShortcutExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaKeyboardAndHoldingDownCTRL()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UIRow1MexicoMéxicoDF05Window.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaMouseAndHoldingDownCTRL()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UIRow2MexicoMéxicoDF05Window.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaPageDownButton()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UIRow16AachenWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaPageDownButtonExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaPageUpButton()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UIRow0BerlinWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaPageUpButtonExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaShiftPageDownShortcut()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UISelectedCellsClient.UIRow0GermanyRow1MexicWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaShiftPageDownShortcutExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaShiftPageUpShortcut()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UISelectedCellsClient.UIRow0GermanyRow1MexicWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaShiftPageUpShortcutExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaShiftTabShortcut()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UIRow2MexicoWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaShiftTabShortcutExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCellsViaTabButton()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UIRow205023Window.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaTabButtonExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedCheckedComboBoxEditValues()
		{
			#region Variable Declarations
			DXCheckedComboBox uICheckedComboBoxEditSCheckedComboBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCheckedComboBoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UICheckedComboBoxEditSCheckedComboBox;
			#endregion
			Assert.AreEqual(this.CheckSelectedCheckedComboBoxEditValuesExpectedValues.UICheckedComboBoxEditSCheckedComboBoxValueAsString, uICheckedComboBoxEditSCheckedComboBox.ValueAsString);
			Assert.AreEqual(this.CheckSelectedCheckedComboBoxEditValuesExpectedValues.UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString, uICheckedComboBoxEditSCheckedComboBox.CheckedIndicesAsString);
		}
		public void CheckSelectedCheckedListBoxValue()
		{
			#region Variable Declarations
			DXCheckedListBox uICheckedListBoxControCheckedListBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UICheckedListBoxControCheckedListBox;
			#endregion
			Assert.AreEqual(this.CheckSelectedCheckedListBoxValueExpectedValues.UICheckedListBoxControCheckedListBoxCheckedIndicesAsString, uICheckedListBoxControCheckedListBox.CheckedIndicesAsString);
		}
		public void CheckSelectedListBoxValue()
		{
			#region Variable Declarations
			DXListBoxItem uIAngolaListItem = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList.UIAngolaListItem;
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			Assert.AreEqual(this.CheckSelectedListBoxValueExpectedValues.UIAngolaListItemSelected, uIAngolaListItem.Selected);
			Assert.AreEqual(this.CheckSelectedListBoxValueExpectedValues.UIAngolaListItemIndex, uIAngolaListItem.Index);
			Assert.AreEqual(this.CheckSelectedListBoxValueExpectedValues.UIListBoxControlSampleListSelectedIndicesAsString, uIListBoxControlSampleList.SelectedIndicesAsString);
		}
		public void CheckSelectedMemoEditText()
		{
			#region Variable Declarations
			DXTextEdit uIMemoEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMemoEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoEditSampleEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedMemoEditTextExpectedValues.UIMemoEditSampleEditSelectionStart, uIMemoEditSampleEdit.SelectionStart);
			Assert.AreEqual(this.CheckSelectedMemoEditTextExpectedValues.UIMemoEditSampleEditSelectionLength, uIMemoEditSampleEdit.SelectionLength);
		}
		public void CheckSelectedRowsViaMouse()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedRowsWindow.UICompanyNameAntonioMoWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedRowsViaMouseExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedRowsViaMouseAndHoldingDownCTRL()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedRowsWindow.UICompanyNameAnaTrujilWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues.UIItemEditSelectionText, uIItemEdit.SelectionText);
		}
		public void CheckSelectedStateTrue()
		{
			#region Variable Declarations
			DXRadioGroup uIRadioGroupSampleRadioGroup = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleRadioGroupCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIRadioGroupSampleRadioGroup;
			DXRadioButton uIRadioGroupItemRadioButton = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleRadioGroupCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIRadioGroupSampleRadioGroup.UIRadioGroupItemRadioButton;
			#endregion
			uIRadioGroupSampleRadioGroup.SelectedIndex = this.CheckSelectedStateTrueExpectedValues.UIRadioGroupSampleRadioGroupSelectedIndex;
			Assert.AreEqual(this.CheckSelectedStateTrueExpectedValues.UIRadioGroupItemRadioButtonSelected, uIRadioGroupItemRadioButton.Selected);
		}
		public void CheckSelectedTextEditText()
		{
			#region Variable Declarations
			DXTextEdit uITextEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTextEditCustom.UITabctrlTextEditTabList.UITabpgGeneralClient.UIPanelControl1Client.UITextEditSampleEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedTextEditTextExpectedValues.UITextEditSampleEditSelectionStart, uITextEditSampleEdit.SelectionStart);
			Assert.AreEqual(this.CheckSelectedTextEditTextExpectedValues.UITextEditSampleEditSelectionLength, uITextEditSampleEdit.SelectionLength);
		}
		public void CheckShortTimeDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime7Edit;
			#endregion
			StringAssert.Contains(uITeDateTime7Edit.ValueAsString, this.CheckShortTimeDateTimeEditValueExpectedValues.UITeDateTime7EditValueAsString);
		}
		public void CheckShowedAlertFormCaption()
		{
			#region Variable Declarations
			DXTestControl uIAlertCaptionText = this.UIItemWindow.UIAlertFormWindow.UIAlertCaptionText;
			#endregion
			Assert.AreEqual(this.CheckShowedAlertFormCaptionExpectedValues.UIAlertCaptionTextText, uIAlertCaptionText.Text);
		}
		public void CheckSimpleFilteredData()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			DXTestControl uIGridControlFilterPanCustom = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlFilterPanCustom;
			#endregion
			Assert.AreEqual(this.CheckSimpleFilteredDataExpectedValues.UIGridColumn5ColumnHeaderFilterString, uIGridColumn5ColumnHeader.FilterString);
			Assert.AreEqual(this.CheckSimpleFilteredDataExpectedValues.UIGridControlFilterPanCustomFilterString, uIGridControlFilterPanCustom.FilterString);
		}
		public void CheckSimpleMaskBoxEditValues()
		{
			#region Variable Declarations
			DXTextEdit uITeSimple1Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple1Edit;
			DXTextEdit uITeSimple2Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple2Edit;
			DXTextEdit uITeSimple3Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple3Edit;
			DXTextEdit uITeSimple4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple4Edit;
			DXTextEdit uITeSimple5Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple5Edit;
			DXTextEdit uITeSimple6Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple6Edit;
			DXTextEdit uITeSimple7Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple7Edit;
			DXTextEdit uITeSimple8Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpSimpleClient.UITeSimple8Edit;
			#endregion
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple1EditValueAsString, uITeSimple1Edit.ValueAsString);
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple2EditValueAsString, uITeSimple2Edit.ValueAsString);
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple3EditValueAsString, uITeSimple3Edit.ValueAsString);
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple4EditValueAsString, uITeSimple4Edit.ValueAsString);
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple5EditValueAsString, uITeSimple5Edit.ValueAsString);
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple6EditValueAsString, uITeSimple6Edit.ValueAsString);
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple7EditValueAsString, uITeSimple7Edit.ValueAsString);
			Assert.AreEqual(this.CheckSimpleMaskBoxEditValuesExpectedValues.UITeSimple8EditValueAsString, uITeSimple8Edit.ValueAsString);
		}
		public void CheckSimplePadMenuShortcutViaClickCancelButton()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton2 = this.UIItemWindow11.UISimpleButtonButton2;
			#endregion
			Mouse.Click(uISimpleButtonButton2, new Point(1, 1));
		}
		public void CheckSimplePadText()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UISimplePadCDemoClient.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Assert.AreEqual(this.CheckSimplePadTextExpectedValues.UIRtPadEditText, uIRtPadEdit.Text);
		}
		public void CheckSizeCellAfterSwitchOnPictureEditAutoHeightOption()
		{
			#region Variable Declarations
			DXCell uIEducationincludesaBACell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIGridControl1Table.UIEducationincludesaBACell;
			#endregion
			Assert.AreEqual(this.CheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues.UIEducationincludesaBACellSize, uIEducationincludesaBACell.GetProperty(DXTestControl.PropertyNames.Size).ToString());
		}
		public void CheckSortedDataByPriceAverageAscending()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow = this.UIXtraGridFeaturesDemoWindow18.UIPanelControl1Client.UIGcContainerClient.UISortingBySummaryCustom.UIGridControl1Table.UIGridControlGroupRowGroupRow;
			#endregion
			Assert.AreEqual(this.CheckSortedDataByPriceAverageAscendingExpectedValues.UIGridControlGroupRowGroupRowRowHandle, uIGridControlGroupRowGroupRow.RowHandle);
		}
		public void CheckSpinBoxEditValue()
		{
			#region Variable Declarations
			DXMenuEditItem uISpinEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom1.UICustom4MenuBar.UISpinEditBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckSpinBoxEditValueExpectedValues.UISpinEditBarEditItemValueAsString, uISpinEditBarEditItem.ValueAsString);
		}
		public void CheckSpinEditValue()
		{
			#region Variable Declarations
			DXTextEdit uISpinEditSample1Edit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleSpinEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleClient.UISpinEditSample1Edit;
			#endregion
			Assert.AreEqual(this.CheckSpinEditValueExpectedValues.UISpinEditSample1EditValueAsString, uISpinEditSample1Edit.ValueAsString);
		}
		public void CheckSplitterPositionAfterClickingOnButtonRemoveSplit()
		{
			#region Variable Declarations
			DXSplitContainerControl uIGridSplitContainer2SplitContainerControl = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer2SplitContainerControl;
			#endregion
			Assert.AreEqual(this.CheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues.UIGridSplitContainer2SplitContainerControlSplitterPosition, uIGridSplitContainer2SplitContainerControl.SplitterPosition);
		}
		public void CheckSplitterPositionOnHorizontalSplitPresentationTab()
		{
			#region Variable Declarations
			DXSplitContainerControl uIGridSplitContainer2SplitContainerControl = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer2SplitContainerControl;
			#endregion
			Assert.AreEqual(this.CheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues.UIGridSplitContainer2SplitContainerControlSplitterPosition, uIGridSplitContainer2SplitContainerControl.SplitterPosition);
		}
		public void CheckSplitterPositionOnVerticalSplitPresentationTab()
		{
			#region Variable Declarations
			DXSplitContainerControl uIGridSplitContainer1SplitContainerControl = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIGridSplitContainer1SplitContainerControl;
			#endregion
			Assert.AreEqual(this.CheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues.UIGridSplitContainer1SplitContainerControlSplitterPosition, uIGridSplitContainer1SplitContainerControl.SplitterPosition);
		}
		public void CheckStatusBarInfoAfterChangingMargin()
		{
			#region Variable Declarations
			DXMenuItem uIPage1of6BarItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom1.UIStatusBarMenuBar.UIPage1of6BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoAfterChangingMarginExpectedValues.UIPage1of6BarItemText, uIPage1of6BarItem.Text);
		}
		public void CheckStatusBarInfoAfterClickApplicationCloseItem()
		{
			#region Variable Declarations
			DXMenuItem uILine0Position0BarItem = this.UIRibbonSimplePadWindow.UIRibbonStatusBar1MenuBar.UILine0Position0BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues.UILine0Position0BarItemText, uILine0Position0BarItem.Text);
		}
		public void CheckStatusBarInfoAfterClickRibbonCommandNewDocument()
		{
			#region Variable Declarations
			DXMenuItem uILine1Position1BarItem = this.UIRibbonSimplePadWindow.UIRibbonStatusBar1MenuBar.UILine1Position1BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues.UILine1Position1BarItemText, uILine1Position1BarItem.Text);
		}
		public void CheckStatusBarInfoAfterTypingInRibbonRichTextBox()
		{
			#region Variable Declarations
			DXMenuItem uILine3Position23BarItem = this.UINewDocument1RibbonSiWindow1.UIRibbonStatusBar1MenuBar.UILine3Position23BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues.UILine3Position23BarItemText, uILine3Position23BarItem.Text);
		}
		public void CheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPosition()
		{
			#region Variable Declarations
			DXMenuItem uILine2Position16BarItem = this.UINewDocument1RibbonSiWindow1.UIRibbonStatusBar1MenuBar.UILine2Position16BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues.UILine2Position16BarItemText, uILine2Position16BarItem.Text);
		}
		public void CheckStatusBarInfoBeforeChangingMargin()
		{
			#region Variable Declarations
			DXMenuItem uIPage1of4BarItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom1.UIStatusBarMenuBar.UIPage1of4BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoBeforeChangingMarginExpectedValues.UIPage1of4BarItemText, uIPage1of4BarItem.Text);
		}
		public void CheckStatusBarInfoBeforeTypingInRibbonRichTextBox()
		{
			#region Variable Declarations
			DXMenuItem uILine1Position1BarItem = this.UINewDocument1RibbonSiWindow.UIRibbonStatusBar1MenuBar.UILine1Position1BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues.UILine1Position1BarItemText, uILine1Position1BarItem.Text);
		}
		public void CheckSumDiscountAmount()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow21.UIPanelControl1Client1.UIGcContainerClient.UIUnboundExpressionCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckSumDiscountAmountExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckSummaryAfterSwitchingOnDisplaySummaryOption()
		{
			#region Variable Declarations
			DXRowFooterCell uIGridControlRowFooterRowFooterCell = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlRowFooterRowFooterCell;
			DXRowFooterCell uIGridControlRowFooterRowFooterCell2 = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlRowFooterRowFooterCell2;
			#endregion
			Assert.AreEqual(this.CheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues.UIGridControlRowFooterRowFooterCellValueAsString, uIGridControlRowFooterRowFooterCell.ValueAsString);
			Assert.AreEqual(this.CheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues.UIGridControlRowFooterRowFooterCell2ValueAsString, uIGridControlRowFooterRowFooterCell2.ValueAsString);
		}
		public void CheckSumTotal()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UIXtraGridFeaturesDemoWindow29.UIPanelControl1Client.UIGcContainerClient.UIUnboundExpressionCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckSumTotalExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
		}
		public void CheckSwitchFocusToMainMenuViaClickToolbarItem()
		{
			#region Variable Declarations
			DXMenuItem uINewMenuItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIMainMenuMenuBar.UIFileBarItem.UINewMenuItem;
			#endregion
			Mouse.Click(uINewMenuItem, new Point(10, 14));
		}
		public void CheckSwitchFocusToNextMainMenuItemViaTabKeyViaClickToolbarItem()
		{
			#region Variable Declarations
			DXMenuItem uICutMenuItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIMainMenuMenuBar.UIEditBarItem.UICutMenuItem;
			#endregion
			Mouse.Click(uICutMenuItem, new Point(32, 9));
		}
		public void CheckSwitchToContinuousDisplayModeViaStatusBarInfo()
		{
			#region Variable Declarations
			DXMenuItem uIPage7of46BarItem = this.UIPreviewWindow1.UIBarDockControlCustom1.UIStatusBarMenuBar.UIPage7of46BarItem;
			#endregion
			Assert.AreEqual(this.CheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues.UIPage7of46BarItemText, uIPage7of46BarItem.Text);
		}
		public void CheckSwitchToFacingDisplayModeViaStatusBarInfo()
		{
			#region Variable Declarations
			DXMenuItem uIPage4of46BarItem = this.UIPreviewWindow.UIBarDockControlCustom1.UIStatusBarMenuBar.UIPage4of46BarItem;
			#endregion
			Assert.AreEqual(this.CheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues.UIPage4of46BarItemText, uIPage4of46BarItem.Text);
		}
		public void CheckSwitchToFirstPageViaBrickClick()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices06PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices06PrintControlBrick;
			#endregion
			Mouse.Click(uIPage0BrickIndices06PrintControlBrick, new Point(49, 9));
		}
		public void CheckSwitchToLastPageViaBrickClick()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage45BrickIndices05PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage45BrickIndices05PrintControlBrick;
			#endregion
			Mouse.Click(uIPage45BrickIndices05PrintControlBrick, new Point(49, 8));
		}
		public void CheckSwitchToNextPageViaBrickClick()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage2BrickIndices05PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage2BrickIndices05PrintControlBrick;
			#endregion
			Mouse.Click(uIPage2BrickIndices05PrintControlBrick, new Point(45, 9));
		}
		public void CheckTextEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITextEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTextEditCustom.UITabctrlTextEditTabList.UITabpgGeneralClient.UIPanelControl1Client.UITextEditSampleEdit;
			#endregion
			Assert.AreEqual(this.CheckTextEditValueExpectedValues.UITextEditSampleEditValueAsString, uITextEditSampleEdit.ValueAsString);
		}
		public void CheckTimeEditValue()
		{
			#region Variable Declarations
			DXDateTimePicker uITimeEditSampleDateTimePicker = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTimeEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UITimeEditSampleDateTimePicker;
			#endregion
			Assert.AreEqual(this.CheckTimeEditValueExpectedValues.UITimeEditSampleDateTimePickerValueAsString, uITimeEditSampleDateTimePicker.ValueAsString);
		}
		public void CheckTrackBarValue()
		{
			#region Variable Declarations
			DXTrackBar uITrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UITrackBarControl1TrackBar;
			#endregion
			Assert.AreEqual(this.CheckTrackBarValueExpectedValues.UITrackBarControl1TrackBarValueAsString, uITrackBarControl1TrackBar.ValueAsString);
		}
		public void CheckUngroupedData()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn2ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader;
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckUngroupedDataExpectedValues.UIGridColumn2ColumnHeaderGroupIndex, uIGridColumn2ColumnHeader.GroupIndex);
			Assert.AreEqual(this.CheckUngroupedDataExpectedValues.UIGridColumn5ColumnHeaderGroupIndex, uIGridColumn5ColumnHeader.GroupIndex);
		}
		public void CheckUngroupedMasterDetailData()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow;
			#endregion
			Assert.AreEqual(this.CheckUngroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRowValueAsString, uIGridControlGroupRowGroupRow.ValueAsString);
			Assert.AreEqual(this.CheckUngroupedMasterDetailDataExpectedValues.UIGridControlGroupRowGroupRowRowHandle, uIGridControlGroupRowGroupRow.RowHandle);
		}
		public void CheckUniversalSortableDateTimeEditValue()
		{
			#region Variable Declarations
			DXTextEdit uITeDateTime4Edit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtpDateTimeClient.UITeDateTime4Edit;
			#endregion
			Assert.AreEqual(this.CheckUniversalSortableDateTimeEditValueExpectedValues.UITeDateTime4EditValueAsString, uITeDateTime4Edit.ValueAsString);
		}
		public void CheckVerticalScrollingViaBrickClick()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices033PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices033PrintControlBrick;
			#endregion
			Mouse.Click(uIPage0BrickIndices033PrintControlBrick, new Point(39, 24));
		}
		public void CheckViaKeyboard()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UITheXtraEditorsSuiteDWindow.UIPanelControl1Client.UIGcContainerClient.UIModuleCheckEditCustom.UIXtraTabControl1TabList.UIXtraTabControlHeaderTabPage;
			DXTestControl uIXtraTabControl1TabList = this.UITheXtraEditorsSuiteDWindow.UIPanelControl1Client.UIGcContainerClient.UIModuleCheckEditCustom.UIXtraTabControl1TabList;
			DXCheckBox uICheckEditSampleCheckBox = this.UITheXtraEditorsSuiteDWindow.UIPanelControl1Client.UIGcContainerClient.UIModuleCheckEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleCheckBoxClient.UICheckEditSampleCheckBox;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(46, 11));
			Keyboard.SendKeys(uIXtraTabControl1TabList, this.CheckViaKeyboardParams.UIXtraTabControl1TabListSendKeys, ModifierKeys.None);
			uICheckEditSampleCheckBox.Checked = this.CheckViaKeyboardParams.UICheckEditSampleCheckBoxChecked;
		}
		public void CheckViaMouse()
		{
			#region Variable Declarations
			DXCheckBox uICheckEditSampleCheckBox = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleCheckEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleCheckBoxClient.UICheckEditSampleCheckBox;
			#endregion
			uICheckEditSampleCheckBox.Checked = this.CheckViaMouseParams.UICheckEditSampleCheckBoxChecked;
		}
		public void CheckVisibleIndexOfBandAfterDisplayHiddenBand()
		{
			#region Variable Declarations
			DXGridBand uIGridBand6GridBand = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UIGridBand6GridBand;
			#endregion
			Assert.AreEqual(this.CheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues.UIGridBand6GridBandVisibleIndex, uIGridBand6GridBand.VisibleIndex);
		}
		public void CheckVisibleIndexOfHiddenBand()
		{
			#region Variable Declarations
			DXGridBand uIGridBand2GridBand = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UIGridBand2GridBand;
			#endregion
			Assert.AreEqual(this.CheckVisibleIndexOfHiddenBandExpectedValues.UIGridBand2GridBandVisibleIndex, uIGridBand2GridBand.VisibleIndex);
		}
		public void CheckWatermarkOptions()
		{
			#region Variable Declarations
			DXComboBox uICmbWatermarkTextComboBox = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UICmbWatermarkTextComboBox;
			DXPopupEdit uILkpTextDirectionPopupEdit = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UILkpTextDirectionPopupEdit;
			DXColorEdit uICeWatermarkColorColorEdit = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UICeWatermarkColorColorEdit;
			DXComboBox uICmbWatermarkFontSizeComboBox = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UICmbWatermarkFontSizeComboBox;
			DXTextEdit uITeTransparentValueEdit = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UITeTransparentValueEdit;
			DXRadioButton uIRadioGroupItemRadioButton = this.UIWatermarkWindow.UIGrpBoxZOrderClient.UIRgrpZOrderRadioGroup.UIRadioGroupItemRadioButton;
			DXCheckBox uIRbAllCheckBox = this.UIWatermarkWindow.UIGrpBoxPageRangeClient.UIRbAllCheckBox;
			DXCheckBox uIChbBoldCheckBox = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UIChbBoldCheckBox;
			DXCheckBox uIChbItalicCheckBox = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UIChbItalicCheckBox;
			#endregion
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UICmbWatermarkTextComboBoxValueAsString, uICmbWatermarkTextComboBox.ValueAsString);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UILkpTextDirectionPopupEditValueAsString, uILkpTextDirectionPopupEdit.ValueAsString);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UICeWatermarkColorColorEditValueAsString, uICeWatermarkColorColorEdit.ValueAsString);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UICmbWatermarkFontSizeComboBoxValueAsString, uICmbWatermarkFontSizeComboBox.ValueAsString);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UITeTransparentValueEditValueAsString, uITeTransparentValueEdit.ValueAsString);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UIRadioGroupItemRadioButtonSelected, uIRadioGroupItemRadioButton.Selected);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UIRbAllCheckBoxChecked, uIRbAllCheckBox.Checked);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UIChbBoldCheckBoxChecked, uIChbBoldCheckBox.Checked);
			Assert.AreEqual(this.CheckWatermarkOptionsExpectedValues.UIChbItalicCheckBoxChecked, uIChbItalicCheckBox.Checked);
		}
		public void CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButton()
		{
			#region Variable Declarations
			DXMenuEditItem uIZoomBarEditItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UIToolbarMenuBar.UIZoomBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues.UIZoomBarEditItemValueAsString, uIZoomBarEditItem.ValueAsString);
		}
		public void CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouse()
		{
			#region Variable Declarations
			DXMenuEditItem uIZoomBarEditItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UIToolbarMenuBar.UIZoomBarEditItem;
			#endregion
			Assert.AreEqual(this.CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues.UIZoomBarEditItemValueAsString, uIZoomBarEditItem.ValueAsString);
		}
		public void CheckZoomTrackBarValue()
		{
			#region Variable Declarations
			DXTrackBar uIZoomTrackBarControl1TrackBar = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleZoomTrackBarCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl3Client.UIZoomTrackBarControl1TrackBar;
			#endregion
			Assert.AreEqual(this.CheckZoomTrackBarValueExpectedValues.UIZoomTrackBarControl1TrackBarValueAsString, uIZoomTrackBarControl1TrackBar.ValueAsString);
		}
		public void ChoiceMenuItemWithSubmenu()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.ChoiceMenuItemWithSubmenuParams.UIRtPadEditSendKeys, ModifierKeys.None);
		}
		public void ClearDateEditValueViaButtonClear()
		{
			#region Variable Declarations
			DXDateTimePicker uIDateEditSampleDateTimeEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDateEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDateEditSampleDateTimeEdit;
			#endregion
			uIDateEditSampleDateTimeEdit.ValueAsString = this.ClearDateEditValueViaButtonClearParams.UIDateEditSampleDateTimeEditValueAsString;
		}
		public void ClearFilterViaButtonClear()
		{
			#region Variable Declarations
			DXButton uIBtClearButton = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIGridControl1Table.UIFindControlCustom.UILayoutControl1Custom.UIBtClearButton;
			#endregion
			Mouse.Click(uIBtClearButton, new Point(1, 1));
		}
		public void ClearFilterViaButtonEsc()
		{
			#region Variable Declarations
			DXMRUEdit uITeFindMRUEdit = this.UIXtraGridFeaturesDemoWindow26.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UIPanelControl1Client.UIGridControl1Table.UIFindControlCustom.UILayoutControl1Custom.UILcGroupMainLayoutGroup.UILciFindLayoutControlItem.UITeFindMRUEdit;
			#endregion
			Keyboard.SendKeys(uITeFindMRUEdit, this.ClearFilterViaButtonEscParams.UITeFindMRUEditSendKeys, ModifierKeys.None);
		}
		public void ClearFilterViaClearFilterOption()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			DXMenuItem uIClearFilterMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIClearFilterMenuItem;
			#endregion
			Mouse.Click(uIGridColumn5ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(90, 13));
			Mouse.Click(uIClearFilterMenuItem, new Point(66, 9));
		}
		public void ClearFilterViaClickColumnHeader()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FilterString = this.ClearFilterViaClickColumnHeaderParams.UIGridControl1TableFilterString;
		}
		public void ClearFilterViaCloseFilterButton()
		{
			#region Variable Declarations
			DXButton uIGridControlFilterPanButton = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlFilterPanButton;
			#endregion
			Mouse.Click(uIGridControlFilterPanButton, new Point(5, 8));
		}
		public void ClearSummaryItemViaContextMenu()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell1 = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell1;
			DXMenuItem uIClearSummaryItemsBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIClearSummaryItemsBarItem;
			#endregion
			Mouse.Click(uIGridControlFooterCelGridFooterCell1, MouseButtons.Right, ModifierKeys.None, new Point(87, 12));
			Mouse.Click(uIClearSummaryItemsBarItem, new Point(77, 6));
		}
		public void ClickAddedHeaderBricks()
		{
			#region Variable Declarations
			DXScrollBar uIHScrollBarScrollBarControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIHScrollBarScrollBarControl;
			DXPrintingBrick uIPage0BrickIndices120PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices120PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices121PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices121PrintControlBrick;
			#endregion
			uIHScrollBarScrollBarControl.ValueAsString = this.ClickAddedHeaderBricksParams.UIHScrollBarScrollBarControlValueAsString;
			Mouse.Click(uIPage0BrickIndices120PrintControlBrick, new Point(29, 5));
			Mouse.Click(uIPage0BrickIndices121PrintControlBrick, new Point(15, 7));
		}
		public void ClickAddedRibbonCategoryGroup()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage0RibbonPage = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPageCategory1RibbonPageCategory.UIRibbonPage0RibbonPage;
			DXRibbonPageGroup uIRibbonPageGroup0RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPageCategory1RibbonPageCategory.UIRibbonPage0RibbonPage.UIRibbonPageGroup0RibbonPageGroup;
			#endregion
			Mouse.Click(uIRibbonPage0RibbonPage, new Point(38, 13));
			Mouse.Click(uIRibbonPageGroup0RibbonPageGroup, new Point(45, 78));
		}
		public void ClickAddedRibbonPageGroup()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage3RibbonPage = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage3RibbonPage;
			DXRibbonPageGroup uIRibbonPageGroup3RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage3RibbonPage.UIRibbonPageGroup3RibbonPageGroup;
			#endregion
			Mouse.Click(uIRibbonPage3RibbonPage, new Point(46, 10));
			Mouse.Click(uIRibbonPageGroup3RibbonPageGroup, new Point(33, 78));
		}
		public void ClickAddedRibbonTab()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage2RibbonPage = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage2RibbonPage;
			DXRibbonPageGroup uIRibbonPageGroup0RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage2RibbonPage.UIRibbonPageGroup0RibbonPageGroup;
			#endregion
			Mouse.Click(uIRibbonPage2RibbonPage, new Point(33, 7));
			Mouse.Click(uIRibbonPageGroup0RibbonPageGroup, new Point(24, 76));
		}
		public void ClickAddedToQuickAccessToolbarRibbonGroup()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIRibbonToolbarPopupItRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonQuickAccessTooRibbonBar.UIRibbonToolbarPopupItRibbonBaseButtonItem;
			DXRibbonItem uIPasteRibbonItem = this.UIItemWindow.UIRibbonMinimizedGroupCustom.UIRibbonOneGroupControRibbon.UIRibbonPage0RibbonPage.UIRibbonPageGroup2RibbonPageGroup.UIPasteRibbonItem;
			DXMenuBaseButtonItem uIPasteMenuBaseButtonItem = this.UIItemWindow.UISubMenuBarControlMenu.UIPasteMenuBaseButtonItem;
			#endregion
			uIRibbonToolbarPopupItRibbonBaseButtonItem.PerformClick = this.ClickAddedToQuickAccessToolbarRibbonGroupParams.UIRibbonToolbarPopupItRibbonBaseButtonItemPerformClick;
			Mouse.Click(uIPasteRibbonItem, new Point(17, 53));
			Mouse.Click(uIPasteMenuBaseButtonItem, new Point(26, 7));
		}
		public void ClickAddedToQuickAccessToolbarRibbonItem()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIIExitRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UIIExitRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIIExitRibbonBaseButtonItem, new Point(15, 10));
		}
		public void ClickAlertControlCloseButton()
		{
			#region Variable Declarations
			DXButton uIAlertCloseButtonButton = this.UIItemWindow.UIAlertFormWindow.UIAlertCloseButtonButton;
			#endregion
			Mouse.Click(uIAlertCloseButtonButton, new Point(10, 9));
		}
		public void ClickAlertControlPinButton()
		{
			#region Variable Declarations
			DXButton uIAlertPinButtonButton = this.UIItemWindow.UIAlertFormWindow.UIAlertPinButtonButton;
			#endregion
			Mouse.Click(uIAlertPinButtonButton, new Point(12, 10));
		}
		public void ClickAlertControlPopupMenuButton()
		{
			#region Variable Declarations
			DXButton uIAlertPopupMenuButtonButton = this.UIItemWindow.UIAlertFormWindow.UIAlertPopupMenuButtonButton;
			#endregion
			Mouse.Click(uIAlertPopupMenuButtonButton, new Point(8, 8));
		}
		public void ClickAlertControlPopupMenuItemForAssertion()
		{
			#region Variable Declarations
			DXMenuItem uIContactMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIContactMenuItem;
			DXMenuBaseButtonItem uICustomerMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIContactMenuItem.UICustomerMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIContactMenuItem, new Point(65, 11));
			Mouse.Click(uICustomerMenuBaseButtonItem, new Point(67, 10));
		}
		public void ClickApplicationButtonAndSwitchToRecentDocumentViaQuicklyAccess()
		{
			#region Variable Declarations
			DXButton uIRibbonApplicationButButton = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonApplicationButButton;
			DXTestControl uIDocument1rtfTabPage = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIDocument1rtfTabPage;
			#endregion
			Mouse.Click(uIRibbonApplicationButButton, new Point(33, 9));
			Mouse.Click(uIDocument1rtfTabPage, new Point(63, 21));
		}
		public void ClickApplyFilterInFilterControlDemoModule()
		{
			#region Variable Declarations
			DXButton uISbApplyButton = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIPanelControl1Client.UISbApplyButton;
			#endregion
			Mouse.Click(uISbApplyButton, new Point(1, 1));
		}
		public void ClickBarLinkContainerNewLink()
		{
			#region Variable Declarations
			DXMenuItem uIBarLinkContainerItemBarItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIBarLinkContainerItemCustom.UIBarDockControlCustom.UICustom1MenuBar.UIBarLinkContainerItemBarItem;
			DXMenuBaseButtonItem uIClearMenuBaseButtonItem = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIBarLinkContainerItemCustom.UIBarDockControlCustom.UICustom1MenuBar.UIBarLinkContainerItemBarItem.UIClearMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIBarLinkContainerItemBarItem, new Point(120, 11));
			Mouse.Click(uIClearMenuBaseButtonItem, new Point(49, 13));
		}
		public void ClickBookIconToShowDetailReportInMasterDetailDemoModule()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices06PrintControlBrick = this.UIXtraPrintingFeaturesWindow14.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIMasterDetailControlCustom.UIPSTabTabList.UITabPage1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices06PrintControlBrick;
			#endregion
			Mouse.Click(uIPage0BrickIndices06PrintControlBrick, new Point(8, 15));
		}
		public void ClickButtonFind()
		{
			#region Variable Declarations
			DXButton uIBtFindButton = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIGridControl1Table.UIFindControlCustom.UILayoutControl1Custom.UIBtFindButton;
			#endregion
			Mouse.Click(uIBtFindButton, new Point(1, 1));
		}
		public void ClickButtonNoForAssertionApplicationCloseCommand()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton = this.UISimplePadQuestionWindow.UIXtraMessageBoxFormWindow1.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButtonButton, new Point(10, 10));
		}
		public void ClickButtonOfButtonEdit()
		{
			#region Variable Declarations
			DXMenuEditItem uIButtonEditBarEditItem = this.UIApplicationUIWindow.UIPcMainClient.UIGcContainerClient.UIEditorItemsCustom.UIBarDockControlCustom.UICustom1MenuBar.UIButtonEditBarEditItem;
			#endregion
			Mouse.Click(uIButtonEditBarEditItem, new Point(154, 11));
		}
		public void ClickButtonRemoveSplit()
		{
			#region Variable Declarations
			DXButton uISbRemoveSplitButton = this.UIXtraGridFeaturesDemoWindow7.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UISbRemoveSplitButton;
			#endregion
			Mouse.Click(uISbRemoveSplitButton, new Point(1, 1));
		}
		public void ClickCancelButtonInPasswordSecurityForm()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton = this.UIPasswordSecurityWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ClickCheckHeaderButton()
		{
			#region Variable Declarations
			DXButton uICheckButtonButton = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UICheckButtonButton;
			#endregion
			Mouse.Click(uICheckButtonButton, new Point(48, 10));
		}
		public void ClickCloseButtonInButtonEditForm()
		{
			#region Variable Declarations
			DXButton uICloseButton = this.UIItemWindow.UIButtonClickWindow.UICloseButton;
			#endregion
			Mouse.Click(uICloseButton, new Point(126, 17));
		}
		public void ClickCopyRibbonItemViaMouse()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uICopyRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup.UICopyRibbonBaseButtonItem;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(38, 5));
			uICopyRibbonBaseButtonItem.PerformClick = this.ClickCopyRibbonItemViaMouseParams.UICopyRibbonBaseButtonItemPerformClick;
			Mouse.Click(uIRichTextBox1Edit, new Point(249, 58));
		}
		public void ClickCustomizationFormOkButton()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton = this.UIRibbonCustomizationWindow1.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ClickDataNavigatorAppendButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton2 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton2;
			#endregion
			Mouse.Click(uINavigatorButtonButton2, new Point(7, 8));
		}
		public void ClickDataNavigatorCancelEditButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton6 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton6;
			#endregion
			Mouse.Click(uINavigatorButtonButton6, new Point(9, 11));
		}
		public void ClickDataNavigatorEndEditButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton5 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton5;
			#endregion
			Mouse.Click(uINavigatorButtonButton5, new Point(6, 9));
		}
		public void ClickDataNavigatorFirstButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton11 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton11;
			#endregion
			Mouse.Click(uINavigatorButtonButton11, new Point(7, 8));
		}
		public void ClickDataNavigatorLastButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton3 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton3;
			#endregion
			Mouse.Click(uINavigatorButtonButton3, new Point(8, 11));
		}
		public void ClickDataNavigatorLockButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton8 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton8;
			#endregion
			Mouse.Click(uINavigatorButtonButton8, new Point(9, 12));
		}
		public void ClickDataNavigatorNextButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton;
			#endregion
			Mouse.Click(uINavigatorButtonButton, new Point(8, 8));
		}
		public void ClickDataNavigatorNextPageButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton1 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton1;
			#endregion
			Mouse.Click(uINavigatorButtonButton1, new Point(4, 9));
		}
		public void ClickDataNavigatorPreviousButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton9 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton9;
			#endregion
			Mouse.Click(uINavigatorButtonButton9, new Point(6, 8));
		}
		public void ClickDataNavigatorPreviousPageButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton10 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton10;
			#endregion
			Mouse.Click(uINavigatorButtonButton10, new Point(9, 10));
		}
		public void ClickDataNavigatorRemoveButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton4 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton4;
			#endregion
			Mouse.Click(uINavigatorButtonButton4, new Point(6, 10));
		}
		public void ClickDataNavigatorSearchButton()
		{
			#region Variable Declarations
			DXButton uINavigatorButtonButton7 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleNavigatorCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIDataNavigatorSampleClient.UINavigatorButtonButton7;
			#endregion
			Mouse.Click(uINavigatorButtonButton7, new Point(12, 9));
		}
		public void ClickDisplayedBar()
		{
			#region Variable Declarations
			DXMenuItem uIItalicBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIItalicBarItem;
			#endregion
			Mouse.Click(uIItalicBarItem, new Point(8, 8));
		}
		public void ClickDisplayedRibbonTab()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage4RibbonPage = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPageCategory1RibbonPageCategory.UIRibbonPage4RibbonPage;
			DXRibbonButtonItem uIBoldRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPageCategory1RibbonPageCategory1.UIRibbonPage4RibbonPage.UIRibbonPageGroup13RibbonPageGroup.UIBoldRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage4RibbonPage, new Point(22, 8));
			uIBoldRibbonBaseButtonItem.PerformClick = this.ClickDisplayedRibbonTabParams.UIBoldRibbonBaseButtonItemPerformClick;
		}
		public void ClickDownArrowKeyForExpandMainMenuDropdownList()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.ClickDownArrowKeyForExpandMainMenuDropdownListParams.UIRtPadEditSendKeys, ModifierKeys.None);
		}
		public void ClickDropDownButton()
		{
			#region Variable Declarations
			DXButton uIDropDownButtonButton = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDropDownButtonCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleClient.UIDropDownButtonButton;
			#endregion
			Mouse.Click(uIDropDownButtonButton, new Point(1, 1));
		}
		public void ClickEditMenuCopyItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIMdiClientTabList.UINewDocument1Window.UIRichTextBox1Custom.UIRichTextBox1Edit;
			DXMenuBaseButtonItem uIICopyMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIICopyMenuBaseButtonItem;
			#endregion
			Keyboard.SendKeys(uIRichTextBox1Edit, this.ClickEditMenuCopyItemParams.UIRichTextBox1EditSendKeys, ModifierKeys.Control);
			Mouse.Click(uIRichTextBox1Edit, MouseButtons.Right, ModifierKeys.None, new Point(11, 8));
			Mouse.Click(uIICopyMenuBaseButtonItem, new Point(62, 13));
		}
		public void ClickEditMenuPasteItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXMenuBaseButtonItem uIPasteMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIPasteMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRichTextBox1Edit, new Point(150, 58));
			Mouse.Click(uIRichTextBox1Edit, MouseButtons.Right, ModifierKeys.None, new Point(150, 58));
			uIPasteMenuBaseButtonItem.PerformClick = this.ClickEditMenuPasteItemParams.UIPasteMenuBaseButtonItemPerformClick;
		}
		public void ClickEditMenuUndoItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXMenuBaseButtonItem uIUndoMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIUndoMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRichTextBox1Edit, MouseButtons.Right, ModifierKeys.None, new Point(99, 14));
			uIUndoMenuBaseButtonItem.PerformClick = this.ClickEditMenuUndoItemParams.UIUndoMenuBaseButtonItemPerformClick;
		}
		public void ClickEnterKeyForExpandMainMenuDropdownList()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.ClickEnterKeyForExpandMainMenuDropdownListParams.UIRtPadEditSendKeys, ModifierKeys.None);
		}
		public void ClickEnterOnRibbonRichEdit()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			uIRichTextBox1Edit.Text = this.ClickEnterOnRibbonRichEditParams.UIRichTextBox1EditText;
		}
		public void ClickEscKeyForCollapseMainMenuDropdownList()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.ClickEscKeyForCollapseMainMenuDropdownListParams.UIRtPadEditSendKeys, ModifierKeys.None);
		}
		public void ClickFilterEditorApplyButton()
		{
			#region Variable Declarations
			DXButton uISbApplyButton = this.UIFilterEditorWindow.UIPanelControlClient.UISbApplyButton;
			#endregion
			Mouse.Click(uISbApplyButton, new Point(1, 1));
		}
		public void ClickFilterEditorOkButton()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton = this.UIFilterEditorWindow.UIPanelControlClient.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ClickFoundBrick()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices034PrintControlBrick = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices034PrintControlBrick;
			#endregion
			Mouse.Click(uIPage0BrickIndices034PrintControlBrick, new Point(23, 9));
		}
		public void ClickGlyphsHeaderButton()
		{
			#region Variable Declarations
			DXButton uIGlyphsButton = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIGlyphsButton;
			#endregion
			Mouse.Click(uIGlyphsButton, new Point(15, 12));
		}
		public void ClickHeaderAndFooterFormOkButton()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton = this.UIHeaderandFooterWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ClickImageHeaderButton()
		{
			#region Variable Declarations
			DXButton uIImageButton = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIImageButton;
			#endregion
			Mouse.Click(uIImageButton, new Point(30, 10));
		}
		public void ClickInvertCheckedItemsButton()
		{
			#region Variable Declarations
			DXButton uIInvertCheckedItemsButton = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIPanelControl3Client.UIInvertCheckedItemsButton;
			#endregion
			Mouse.Click(uIInvertCheckedItemsButton, new Point(1, 1));
		}
		public void ClickMainMenuDropdownListExpandButton()
		{
			#region Variable Declarations
			DXMenuItem uIBarRecentExpanderIteMenuItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIMainMenuMenuBar.UIFormatBarItem.UIBarRecentExpanderIteMenuItem;
			#endregion
			Mouse.Click(uIBarRecentExpanderIteMenuItem, new Point(38, 5));
		}
		public void ClickMainMenuItem()
		{
			#region Variable Declarations
			DXMenuItem uIFormatBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIMainMenuMenuBar.UIFormatBarItem;
			#endregion
			Mouse.Click(uIFormatBarItem, new Point(31, 11));
		}
		public void ClickMiniToolbarCopyItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			WinClient uIDesktopClient = this.UIItemWindow.UIItemWindow1.UIDesktopClient;
			#endregion
			Mouse.DoubleClick(uIRichTextBox1Edit, new Point(90, 17));
			Mouse.Click(uIDesktopClient, new Point(114, 35));
			Mouse.Click(uIRichTextBox1Edit, new Point(128, 44));
		}
		public void ClickMiniToolbarCutItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			WinClient uIDesktopClient = this.UIItemWindow.UIItemWindow1.UIDesktopClient;
			#endregion
			Mouse.DoubleClick(uIRichTextBox1Edit, new Point(131, 31));
			Mouse.Click(uIDesktopClient, new Point(93, 34));
		}
		public void ClickMiniToolbarPasteItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			WinClient uIDesktopClient = this.UIItemWindow.UIItemWindow1.UIDesktopClient;
			#endregion
			Mouse.DoubleClick(uIRichTextBox1Edit, new Point(34, 6));
			Mouse.Click(uIDesktopClient, new Point(148, 34));
		}
		public void ClickNavBarCollapseButton()
		{
			#region Variable Declarations
			DXTestControl uINavBarExpandButtonNavBarExpandButton = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UINavBarExpandButtonNavBarExpandButton;
			#endregion
			Mouse.Click(uINavBarExpandButtonNavBarExpandButton, new Point(8, 6));
		}
		public void ClickOkButtonOnButtonEditForm()
		{
			#region Variable Declarations
			DXButton uISimpleButtonButton = this.UIButtonClickWindow.UIXtraMessageBoxFormWindow1.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ClickPasteRibbonItems()
		{
			#region Variable Declarations
			DXRibbonItem uIPasteRibbonItem = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup.UIPasteRibbonItem;
			DXMenuBaseButtonItem uIPasteMenuBaseButtonItem = this.UIItemWindow.UISubMenuBarControlMenu.UIPasteMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIPasteRibbonItem, new Point(20, 18));
			Mouse.Click(uIPasteMenuBaseButtonItem, new Point(30, 9));
		}
		public void ClickPreviewFormBar()
		{
			#region Variable Declarations
			DXMenuItem uIBarCustomizationItemBarItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UIToolbarMenuBar.UIBarCustomizationItemBarItem;
			DXMenuItem uIPreviewFormMenuItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UIToolbarMenuBar.UIBarCustomizationItemBarItem1.UIPreviewFormMenuItem;
			#endregion
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(10, 14));
			Mouse.Click(uIPreviewFormMenuItem, new Point(50, 8));
		}
		public void ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButton()
		{
			#region Variable Declarations
			DXRibbonButtonItem uICustomizeToolbarRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonQuickAccessTooRibbonBar.UICustomizeToolbarRibbonBaseButtonItem;
			DXRibbonButtonItem uIPasteRibbonBaseButtonItem = this.UIItemWindow.UIRibbonQuickToolbarPoCustom.UIRibbonPopupToolbarCoRibbon.UIRibbonQuickAccessTooRibbonBar.UIPasteRibbonBaseButtonItem;
			#endregion
			uICustomizeToolbarRibbonBaseButtonItem.PerformClick = this.ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams.UICustomizeToolbarRibbonBaseButtonItemPerformClick;
			uIPasteRibbonBaseButtonItem.PerformClick = this.ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams.UIPasteRibbonBaseButtonItemPerformClick;
		}
		public void ClickRefreshPreviewButton()
		{
			#region Variable Declarations
			DXMenuItem uIRefreshPreviewBarItem = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom2.UICustom1MenuBar.UIRefreshPreviewBarItem;
			#endregion
			Mouse.Click(uIRefreshPreviewBarItem, new Point(34, 11));
		}
		public void ClickRibbonCustomizationFormDownButton()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup3RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup3RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uIAlternativePageCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIAlternativePageCheckBoxTreeItem;
			DXButton uIBtnDownButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIMiddlePanelClient.UIBtnDownButton;
			#endregion
			Mouse.Click(uIRibbonPageGroup3RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(49, 80));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(77, 15));
			Mouse.Click(uIAlternativePageCheckBoxTreeItem, new Point(46, 7));
			Mouse.Click(uIBtnDownButton, new Point(1, 1));
		}
		public void ClickRibbonCustomizationFormUpButton()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup3RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup3RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uIGalleryPageCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIGalleryPageCheckBoxTreeItem;
			DXButton uIBtnUpButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIMiddlePanelClient.UIBtnUpButton;
			#endregion
			Mouse.Click(uIRibbonPageGroup3RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(26, 83));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(63, 9));
			Mouse.Click(uIGalleryPageCheckBoxTreeItem, new Point(38, 5));
			Mouse.Click(uIBtnUpButton, new Point(1, 1));
			Mouse.Click(uIBtnUpButton, new Point(1, 1));
		}
		public void ClickRibbonItemForAssertionSwitchingBetweenTabs()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIPasteRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonPage2RibbonPage.UIRibbonPageGroup5RibbonPageGroup.UIPasteRibbonBaseButtonItem;
			#endregion
			uIPasteRibbonBaseButtonItem.PerformClick = this.ClickRibbonItemForAssertionSwitchingBetweenTabsParams.UIPasteRibbonBaseButtonItemPerformClick;
		}
		public void ClickRibbonItemOfContextualTab()
		{
			#region Variable Declarations
			DXRibbonButtonItem uICutRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonPageCategory1RibbonPageCategory.UIRibbonPage4RibbonPage.UIRibbonPageGroup12RibbonPageGroup.UICutRibbonBaseButtonItem;
			#endregion
			uICutRibbonBaseButtonItem.PerformClick = this.ClickRibbonItemOfContextualTabParams.UICutRibbonBaseButtonItemPerformClick;
		}
		public void ClickRibbonPageGroupForAssertScrolling()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup12RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup12RibbonPageGroup;
			#endregion
			Mouse.Click(uIRibbonPageGroup12RibbonPageGroup, new Point(46, 40));
		}
		public void ClickShowAlertFormButton()
		{
			#region Variable Declarations
			DXButton uIShowAlertFormButton = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIShowAlertFormButton;
			#endregion
			Mouse.Click(uIShowAlertFormButton, new Point(1, 1));
		}
		public void ClickShowFewerButtons()
		{
			#region Variable Declarations
			DXNavBarOverflowPanelButton uIConfigureButtonNavBarOverflowPanelButton = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UIConfigureButtonNavBarOverflowPanelButton;
			DXMenuBaseButtonItem uIBarButtonItemLink1MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarButtonItemLink1MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIConfigureButtonNavBarOverflowPanelButton, new Point(15, 12));
			Mouse.Click(uIBarButtonItemLink1MenuBaseButtonItem, new Point(72, 11));
		}
		public void ClickShowMoreButtons()
		{
			#region Variable Declarations
			DXNavBarOverflowPanelButton uIConfigureButtonNavBarOverflowPanelButton = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UIConfigureButtonNavBarOverflowPanelButton;
			DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarButtonItemLink0MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIConfigureButtonNavBarOverflowPanelButton, new Point(12, 10));
			Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(50, 8));
		}
		public void ClickShowSelectedValuesButton()
		{
			#region Variable Declarations
			DXButton uIShowSelectedValuesButton = this.UIXtraGridFeaturesDemoWindow32.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIShowSelectedValuesButton;
			#endregion
			Mouse.Click(uIShowSelectedValuesButton, new Point(1, 1));
		}
		public void ClickSimpleHeaderButton()
		{
			#region Variable Declarations
			DXButton uIPushbuttonButton = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIActionDockPanelCustom.UIDockPanel1Client.UIPushbuttonButton;
			#endregion
			Mouse.Click(uIPushbuttonButton, new Point(42, 6));
		}
		public void CloseAlertFormViaCloseButton()
		{
			#region Variable Declarations
			DXButton uIAlertCloseButtonButton = this.UIItemWindow.UIAlertFormWindow.UIAlertCloseButtonButton;
			#endregion
			Mouse.Click(uIAlertCloseButtonButton, new Point(7, 11));
		}
		public void CloseExportFormForAssertionRibbonExportCommand()
		{
			#region Variable Declarations
			WinButton uICloseButton = this.UIExportWindow.UIExportTitleBar.UICloseButton;
			#endregion
			Mouse.Click(uICloseButton, new Point(22, 15));
		}
		public void CollapseGroupRowViaFullCollapseOption()
		{
			#region Variable Declarations
			DXTestControl uIGridControlGroupPaneCustom = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupPaneCustom;
			DXMenuItem uIFullCollapseBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFullCollapseBarItem;
			#endregion
			Mouse.Click(uIGridControlGroupPaneCustom, MouseButtons.Right, ModifierKeys.None, new Point(233, 17));
			Mouse.Click(uIFullCollapseBarItem, new Point(64, 11));
		}
		public void CollapseNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroupButton uIDisksNavBarGroupButton = this.UITheXtraNavBarSuiteDeWindow7.UIPanelControl1Client.UIGcContainerClient.UICustomizableDistanceCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDisksNavBarGroup.UIDisksNavBarGroupButton;
			#endregion
			Mouse.Click(uIDisksNavBarGroupButton, new Point(8, 9));
		}
		public void CollapseSomeGroupRowAndFullExpand()
		{
			#region Variable Declarations
			DXButton uIGridControlRowGroupBButton = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowGroupBButton;
			DXButton uIGridControlRowGroupBButton1 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowGroupBButton1;
			DXButton uIGridControlRowGroupBButton3 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowGroupBButton3;
			DXTestControl uIGridControlGroupPaneCustom = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupPaneCustom;
			DXMenuItem uIFullExpandBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFullExpandBarItem;
			#endregion
			Mouse.Click(uIGridControlRowGroupBButton, new Point(6, 7));
			Mouse.Click(uIGridControlRowGroupBButton1, new Point(8, 8));
			Mouse.Click(uIGridControlRowGroupBButton3, new Point(7, 8));
			Mouse.Click(uIGridControlGroupPaneCustom, MouseButtons.Right, ModifierKeys.None, new Point(270, 26));
			Mouse.Click(uIFullExpandBarItem, new Point(63, 14));
		}
		public void CreateComplexFilterViaCustomAutoFilter()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UITheXtraGridSuitebyDeWindow2.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			DXComboBox uIComboBoxEditComboBox = this.UIItemWindow9.UILayoutControlCustom.UIRootLayoutGroup.UIRoot1LayoutGroup.UILayoutControlItem9LayoutControlItem.UIComboBoxEditComboBox;
			DXPopupEdit uIValueEditor1PopupEdit = this.UIItemWindow9.UILayoutControlCustom.UIRootLayoutGroup.UIRoot1LayoutGroup.UILayoutControlItem6LayoutControlItem.UIValueEditor1PopupEdit;
			DXComboBox uIComboBoxEditComboBox1 = this.UIItemWindow9.UILayoutControlCustom.UIRootLayoutGroup.UIRoot1LayoutGroup.UILayoutControlItem8LayoutControlItem.UIComboBoxEditComboBox;
			DXPopupEdit uIValueEditor2PopupEdit = this.UIItemWindow9.UILayoutControlCustom.UIRootLayoutGroup.UIRoot1LayoutGroup.UILayoutControlItem7LayoutControlItem.UIValueEditor2PopupEdit;
			DXButton uIOKButton = this.UIItemWindow9.UILayoutControlCustom.UIRootLayoutGroup.UILiOkLayoutControlItem.UIOKButton;
			#endregion
			uIGridColumn3ColumnHeader.OpenCustomFilterWindow = this.CreateComplexFilterViaCustomAutoFilterParams.UIGridColumn3ColumnHeaderOpenCustomFilterWindow;
			uIComboBoxEditComboBox.ValueAsString = this.CreateComplexFilterViaCustomAutoFilterParams.UIComboBoxEditComboBoxValueAsString;
			uIValueEditor1PopupEdit.ValueAsString = this.CreateComplexFilterViaCustomAutoFilterParams.UIValueEditor1PopupEditValueAsString;
			uIComboBoxEditComboBox1.ValueAsString = this.CreateComplexFilterViaCustomAutoFilterParams.UIComboBoxEditComboBoxValueAsString1;
			uIValueEditor2PopupEdit.ValueAsString = this.CreateComplexFilterViaCustomAutoFilterParams.UIValueEditor2PopupEditValueAsString;
			Mouse.Click(uIOKButton, new Point(1, 1));
		}
		public void CreateExpressionsViaContextMenu()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn7ColumnHeader = this.UIXtraGridFeaturesDemoWindow21.UIPanelControl1Client.UIGcContainerClient.UIUnboundExpressionCustom.UIGridControl1Table.UIGridColumn7ColumnHeader;
			DXMenuItem uIExpressionEditorBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIExpressionEditorBarItem;
			DXTextEdit uIMemoEditEdit = this.UIExpressioneditorWindow.UIMemoEditEdit;
			DXButton uISimpleButtonButton = this.UIExpressioneditorWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIGridColumn7ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(104, 10));
			Mouse.Click(uIExpressionEditorBarItem, new Point(59, 11));
			uIMemoEditEdit.ValueAsString = this.CreateExpressionsViaContextMenuParams.UIMemoEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void CreateExpressionsViaShowExpressionsButton()
		{
			#region Variable Declarations
			DXButton uISimpleButton1Button = this.UIXtraGridFeaturesDemoWindow29.UIPanelControl1Client.UIGcContainerClient.UIUnboundExpressionCustom.UIPanelControl1Client.UISimpleButton1Button;
			DXTextEdit uIMemoEditEdit = this.UIItemWindow7.UIMemoEditEdit;
			DXButton uISimpleButtonButton = this.UIItemWindow7.UISimpleButtonButton;
			#endregion
			Mouse.Click(uISimpleButton1Button, new Point(1, 1));
			uIMemoEditEdit.ValueAsString = this.CreateExpressionsViaShowExpressionsButtonParams.UIMemoEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void CreateFilterConditionViaAutoFilterRow()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table;
			DXComboBox uIImageComboBoxEditComboBox = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UIImageComboBoxEditComboBox;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CreateFilterConditionViaAutoFilterRowParams.UIGridControl1TableFocusedCellAsString;
			uIImageComboBoxEditComboBox.ValueTypeName = this.CreateFilterConditionViaAutoFilterRowParams.UIImageComboBoxEditComboBoxValueTypeName;
			uIImageComboBoxEditComboBox.ValueAsString = this.CreateFilterConditionViaAutoFilterRowParams.UIImageComboBoxEditComboBoxValueAsString;
		}
		public void CreateFilterDisplayBugs()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table;
			DXCell uICheckedCell = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UICheckedCell;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CreateFilterDisplayBugsParams.UIGridControl1TableFocusedCellAsString;
			uICheckedCell.ValueTypeName = this.CreateFilterDisplayBugsParams.UICheckedCellValueTypeName;
			uICheckedCell.ActiveEditorValue = this.CreateFilterDisplayBugsParams.UICheckedCellActiveEditorValue;
		}
		public void CreateFilterDisplayNonBugs()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table;
			DXCell uICheckedCell = this.UIXtraGridFeaturesDemoWindow11.UIPanelControl1Client.UIGcContainerClient.UIAutoFilterRowCustom.UIGridControl1Table.UICheckedCell;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.CreateFilterDisplayNonBugsParams.UIGridControl1TableFocusedCellAsString;
			uICheckedCell.ValueTypeName = this.CreateFilterDisplayNonBugsParams.UICheckedCellValueTypeName;
			uICheckedCell.ActiveEditorValue = this.CreateFilterDisplayNonBugsParams.UICheckedCellActiveEditorValue;
		}
		public void CreateFilterViaFilterControlInCustomFilterControlBindingTab()
		{
			#region Variable Declarations
			DXFilterControl uIFilterControl2FilterControl = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIFilterControl2FilterControl;
			DXTrackBar uITrackBarControlTrackBar = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIFilterControl2FilterControl.UITrackBarControlTrackBar;
			DXComboBox uIImageComboBoxEditComboBox = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIFilterControl2FilterControl.UIImageComboBoxEditComboBox;
			DXButton uISbApplyFilter2Button = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIPanelControl3Client.UISbApplyFilter2Button;
			#endregion
			uIFilterControl2FilterControl.FilterString = this.CreateFilterViaFilterControlInCustomFilterControlBindingTabParams.UIFilterControl2FilterControlFilterString;
			uITrackBarControlTrackBar.ValueAsString = this.CreateFilterViaFilterControlInCustomFilterControlBindingTabParams.UITrackBarControlTrackBarValueAsString;
			uIFilterControl2FilterControl.FilterString = this.CreateFilterViaFilterControlInCustomFilterControlBindingTabParams.UIFilterControl2FilterControlFilterString1;
			uIImageComboBoxEditComboBox.ValueTypeName = this.CreateFilterViaFilterControlInCustomFilterControlBindingTabParams.UIImageComboBoxEditComboBoxValueTypeName;
			uIImageComboBoxEditComboBox.ValueAsString = this.CreateFilterViaFilterControlInCustomFilterControlBindingTabParams.UIImageComboBoxEditComboBoxValueAsString;
			Mouse.Click(uISbApplyFilter2Button, new Point(1, 1));
		}
		public void CreateFilterViaFilterControlInPropertiesTab()
		{
			#region Variable Declarations
			DXFilterControl uIFilterControl1FilterControl = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIFilterControl1FilterControl;
			DXTextEdit uISpinEditEdit = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIFilterControl1FilterControl.UISpinEditEdit;
			DXTextEdit uISpinEditEdit1 = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIFilterControl1FilterControl.UISpinEditEdit1;
			DXTextEdit uISpinEditEdit2 = this.UIXtraGridFeaturesDemoWindow27.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIFilterControl1FilterControl.UISpinEditEdit2;
			#endregion
			uIFilterControl1FilterControl.FilterString = this.CreateFilterViaFilterControlInPropertiesTabParams.UIFilterControl1FilterControlFilterString;
			uIFilterControl1FilterControl.FilterString = this.CreateFilterViaFilterControlInPropertiesTabParams.UIFilterControl1FilterControlFilterString1;
			uIFilterControl1FilterControl.FilterString = this.CreateFilterViaFilterControlInPropertiesTabParams.UIFilterControl1FilterControlFilterString2;
			uISpinEditEdit.ValueAsString = this.CreateFilterViaFilterControlInPropertiesTabParams.UISpinEditEditValueAsString;
			uIFilterControl1FilterControl.FilterString = this.CreateFilterViaFilterControlInPropertiesTabParams.UIFilterControl1FilterControlFilterString3;
			uISpinEditEdit1.ValueAsString = this.CreateFilterViaFilterControlInPropertiesTabParams.UISpinEditEdit1ValueAsString;
			uIFilterControl1FilterControl.FilterString = this.CreateFilterViaFilterControlInPropertiesTabParams.UIFilterControl1FilterControlFilterString4;
			uISpinEditEdit2.ValueAsString = this.CreateFilterViaFilterControlInPropertiesTabParams.UISpinEditEdit2ValueAsString;
			uIFilterControl1FilterControl.FilterString = this.CreateFilterViaFilterControlInPropertiesTabParams.UIFilterControl1FilterControlFilterString5;
		}
		public void CreateFilterViaFilterDropdownList()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow31.UIPanelControl1Client.UIGcContainerClient.UIFilteringCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FilterString = this.CreateFilterViaFilterDropdownListParams.UIGridControl1TableFilterString;
			uIGridControl1Table.FilterString = this.CreateFilterViaFilterDropdownListParams.UIGridControl1TableFilterString1;
			uIGridControl1Table.FilterString = this.CreateFilterViaFilterDropdownListParams.UIGridControl1TableFilterString2;
			uIGridControl1Table.FilterString = this.CreateFilterViaFilterDropdownListParams.UIGridControl1TableFilterString3;
			uIGridControl1Table.FilterString = this.CreateFilterViaFilterDropdownListParams.UIGridControl1TableFilterString4;
		}
		public void CreateFilterViaFilterEditor()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			DXMenuItem uIFilterEditorMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFilterEditorMenuItem;
			DXFilterControl uIGridFilterControlFilterControl = this.UIFilterEditorWindow.UIGridFilterControlFilterControl;
			DXTextEdit uISpinEditEdit = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UISpinEditEdit;
			DXPopupEdit uICalcEditPopupEdit = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UICalcEditPopupEdit;
			DXPopupEdit uICalcEditPopupEdit1 = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UICalcEditPopupEdit1;
			DXTextEdit uITextEditEdit = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UITextEditEdit;
			DXPopupEdit uICalcEditPopupEdit2 = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UICalcEditPopupEdit2;
			DXPopupEdit uICalcEditPopupEdit3 = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UICalcEditPopupEdit3;
			DXTextEdit uITextEditEdit1 = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UITextEditEdit1;
			DXPopupEdit uILookUpEditPopupEdit = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UILookUpEditPopupEdit;
			DXPopupEdit uILookUpEditPopupEdit1 = this.UIFilterEditorWindow.UIGridFilterControlFilterControl.UILookUpEditPopupEdit1;
			#endregion
			Mouse.Click(uIGridColumn3ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(70, 4));
			Mouse.Click(uIFilterEditorMenuItem, new Point(43, 2));
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString1;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString2;
			uISpinEditEdit.ValueAsString = this.CreateFilterViaFilterEditorParams.UISpinEditEditValueAsString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString3;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString4;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString5;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString6;
			uICalcEditPopupEdit.ValueAsString = this.CreateFilterViaFilterEditorParams.UICalcEditPopupEditValueAsString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString7;
			uICalcEditPopupEdit1.ValueAsString = this.CreateFilterViaFilterEditorParams.UICalcEditPopupEdit1ValueAsString;
			Keyboard.SendKeys(uICalcEditPopupEdit1, this.CreateFilterViaFilterEditorParams.UICalcEditPopupEdit1SendKeys, ModifierKeys.None);
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString8;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString9;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString10;
			uITextEditEdit.ValueTypeName = this.CreateFilterViaFilterEditorParams.UITextEditEditValueTypeName;
			uITextEditEdit.ValueAsString = this.CreateFilterViaFilterEditorParams.UITextEditEditValueAsString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString11;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString12;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString13;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString14;
			uICalcEditPopupEdit2.ValueAsString = this.CreateFilterViaFilterEditorParams.UICalcEditPopupEdit2ValueAsString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString15;
			uICalcEditPopupEdit3.ValueAsString = this.CreateFilterViaFilterEditorParams.UICalcEditPopupEdit3ValueAsString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString16;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString17;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString18;
			uITextEditEdit1.ValueTypeName = this.CreateFilterViaFilterEditorParams.UITextEditEdit1ValueTypeName;
			uITextEditEdit1.ValueAsString = this.CreateFilterViaFilterEditorParams.UITextEditEdit1ValueAsString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString19;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString20;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString21;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString22;
			uILookUpEditPopupEdit.ValueTypeName = this.CreateFilterViaFilterEditorParams.UILookUpEditPopupEditValueTypeName;
			uILookUpEditPopupEdit.ValueAsString = this.CreateFilterViaFilterEditorParams.UILookUpEditPopupEditValueAsString;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString23;
			uIGridFilterControlFilterControl.FilterString = this.CreateFilterViaFilterEditorParams.UIGridFilterControlFilterControlFilterString24;
			uILookUpEditPopupEdit1.ValueTypeName = this.CreateFilterViaFilterEditorParams.UILookUpEditPopupEdit1ValueTypeName;
			uILookUpEditPopupEdit1.ValueAsString = this.CreateFilterViaFilterEditorParams.UILookUpEditPopupEdit1ValueAsString;
		}
		public void CreateFilterViaFindPanel()
		{
			#region Variable Declarations
			DXMRUEdit uITeFindMRUEdit = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIGridControl1Table.UIFindControlCustom.UILayoutControl1Custom.UITeFindMRUEdit;
			#endregion
			uITeFindMRUEdit.ValueAsString = this.CreateFilterViaFindPanelParams.UITeFindMRUEditValueAsString;
		}
		public void CreateNewDocumentViaClickRibbonItemNew()
		{
			#region Variable Declarations
			DXRibbonButtonItem uINewRibbonBaseButtonItem = this.UIRibbonSimplePadWindow.UIRibbonControl1Ribbon1.UIRibbonPage1RibbonPage.UIRibbonPageGroup1RibbonPageGroup.UINewRibbonBaseButtonItem;
			#endregion
			uINewRibbonBaseButtonItem.PerformClick = this.CreateNewDocumentViaClickRibbonItemNewParams.UINewRibbonBaseButtonItemPerformClick;
		}
		public void CreatePrintPreviewYearCalendar()
		{
			#region Variable Declarations
			DXMenuEditItem uIMonthYearBarEditItem = this.UIXtraPrintingFeaturesWindow9.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UICustom1MenuBar.UIMonthYearBarEditItem;
			DXDateTimePicker uIMonthYearDateTimePicker = this.UIXtraPrintingFeaturesWindow9.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UICustom1MenuBar.UIMonthYearDateTimePicker;
			DXMenu uICustom1MenuBar = this.UIXtraPrintingFeaturesWindow9.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIBarDockControlCustom.UICustom1MenuBar;
			#endregion
			Mouse.Click(uIMonthYearBarEditItem, new Point(144, 14));
			uIMonthYearDateTimePicker.ValueAsString = this.CreatePrintPreviewYearCalendarParams.UIMonthYearDateTimePickerValueAsString;
			uIMonthYearDateTimePicker.ValueAsString = this.CreatePrintPreviewYearCalendarParams.UIMonthYearDateTimePickerValueAsString1;
			uICustom1MenuBar.CloseActiveEditor = this.CreatePrintPreviewYearCalendarParams.UICustom1MenuBarCloseActiveEditor;
		}
		public void CreateSimpleFilterViaClickColumnHeader()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FilterString = this.CreateSimpleFilterViaClickColumnHeaderParams.UIGridControl1TableFilterString;
		}
		public void CreateWaterMarkAndCustomizeOptions()
		{
			#region Variable Declarations
			DXComboBox uICmbWatermarkTextComboBox = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup10LayoutGroup.UILayoutControlItem25LayoutControlItem.UICmbWatermarkTextComboBox;
			DXLookUpEdit uILkpTextDirectionLookUpEdit = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup10LayoutGroup.UILayoutControlItem26LayoutControlItem.UILkpTextDirectionLookUpEdit;
			DXComboBox uICmbWatermarkFontSizeComboBox = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup10LayoutGroup.UILayoutControlItem27LayoutControlItem.UICmbWatermarkFontSizeComboBox;
			DXTrackBar uITrBarTextTransparencTrackBar = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup9LayoutGroup.UILayoutControlItem14LayoutControlItem.UITrBarTextTransparencTrackBar;
			#endregion
			uICmbWatermarkTextComboBox.ValueAsString = this.CreateWaterMarkAndCustomizeOptionsParams.UICmbWatermarkTextComboBoxValueAsString;
			uILkpTextDirectionLookUpEdit.ValueTypeName = this.CreateWaterMarkAndCustomizeOptionsParams.UILkpTextDirectionLookUpEditValueTypeName;
			uILkpTextDirectionLookUpEdit.ValueAsString = this.CreateWaterMarkAndCustomizeOptionsParams.UILkpTextDirectionLookUpEditValueAsString;
			uICmbWatermarkFontSizeComboBox.ValueAsString = this.CreateWaterMarkAndCustomizeOptionsParams.UICmbWatermarkFontSizeComboBoxValueAsString;
			uITrBarTextTransparencTrackBar.ValueAsString = this.CreateWaterMarkAndCustomizeOptionsParams.UITrBarTextTransparencTrackBarValueAsString;
		}
		public void CreateWaterMarkViaChoosingValueInDropDownList()
		{
			#region Variable Declarations
			DXComboBox uICmbWatermarkTextComboBox = this.UIWatermarkWindow.UIXtraTabControlTabList.UITpTextWaterMarkClient.UICmbWatermarkTextComboBox;
			#endregion
			uICmbWatermarkTextComboBox.ValueAsString = this.CreateWaterMarkViaChoosingValueInDropDownListParams.UICmbWatermarkTextComboBoxValueAsString;
		}
		public void CustomizeCSVSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UICSVExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UICSVExportOptionsWindow.UIComboBoxEditComboBox1;
			DXComboBox uIComboBoxEditComboBox2 = this.UICSVExportOptionsWindow.UIComboBoxEditComboBox2;
			DXCheckBox uIQuotestringswithsepaCheckBox = this.UICSVExportOptionsWindow.UIQuotestringswithsepaCheckBox;
			#endregion
			uIComboBoxEditComboBox.ValueAsString = this.CustomizeCSVSpecificExportOptionsParams.UIComboBoxEditComboBoxValueAsString;
			uIComboBoxEditComboBox1.ValueAsString = this.CustomizeCSVSpecificExportOptionsParams.UIComboBoxEditComboBox1ValueAsString;
			uIComboBoxEditComboBox2.ValueAsString = this.CustomizeCSVSpecificExportOptionsParams.UIComboBoxEditComboBox2ValueAsString;
			uIQuotestringswithsepaCheckBox.Checked = this.CustomizeCSVSpecificExportOptionsParams.UIQuotestringswithsepaCheckBoxChecked;
		}
		public void CustomizeHTMLSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox1;
			DXColorEdit uIColorEditColorEdit = this.UIHTMLExportOptionsWindow.UIColorEditColorEdit;
			DXTextEdit uISpinEditEdit = this.UIHTMLExportOptionsWindow.UISpinEditEdit;
			DXComboBox uIComboBoxEditComboBox2 = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox2;
			DXComboBox uIComboBoxEditComboBox3 = this.UIHTMLExportOptionsWindow.UIComboBoxEditComboBox3;
			DXCheckBox uIRemovecarriagereturnCheckBox = this.UIHTMLExportOptionsWindow.UIRemovecarriagereturnCheckBox;
			DXCheckBox uIEmbedimagesinHTMLCheckBox = this.UIHTMLExportOptionsWindow.UIEmbedimagesinHTMLCheckBox;
			#endregion
			uIComboBoxEditComboBox.ValueAsString = this.CustomizeHTMLSpecificExportOptionsParams.UIComboBoxEditComboBoxValueAsString;
			uIComboBoxEditComboBox1.ValueAsString = this.CustomizeHTMLSpecificExportOptionsParams.UIComboBoxEditComboBox1ValueAsString;
			uIColorEditColorEdit.ValueAsString = this.CustomizeHTMLSpecificExportOptionsParams.UIColorEditColorEditValueAsString;
			uISpinEditEdit.ValueAsString = this.CustomizeHTMLSpecificExportOptionsParams.UISpinEditEditValueAsString;
			uIComboBoxEditComboBox2.ValueAsString = this.CustomizeHTMLSpecificExportOptionsParams.UIComboBoxEditComboBox2ValueAsString;
			uIComboBoxEditComboBox3.ValueAsString = this.CustomizeHTMLSpecificExportOptionsParams.UIComboBoxEditComboBox3ValueAsString;
			uIRemovecarriagereturnCheckBox.Checked = this.CustomizeHTMLSpecificExportOptionsParams.UIRemovecarriagereturnCheckBoxChecked;
			uIEmbedimagesinHTMLCheckBox.Checked = this.CustomizeHTMLSpecificExportOptionsParams.UIEmbedimagesinHTMLCheckBoxChecked;
		}
		public void CustomizeImageSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIImageExportOptionsWindow.UIComboBoxEditComboBox;
			DXTextEdit uISpinEditEdit = this.UIImageExportOptionsWindow.UISpinEditEdit;
			DXComboBox uIComboBoxEditComboBox1 = this.UIImageExportOptionsWindow.UIComboBoxEditComboBox1;
			DXComboBox uIComboBoxEditComboBox2 = this.UIImageExportOptionsWindow.UIComboBoxEditComboBox2;
			DXColorEdit uIColorEditColorEdit = this.UIImageExportOptionsWindow.UIColorEditColorEdit;
			DXTextEdit uISpinEditEdit1 = this.UIImageExportOptionsWindow.UISpinEditEdit1;
			#endregion
			uIComboBoxEditComboBox.ValueAsString = this.CustomizeImageSpecificExportOptionsParams.UIComboBoxEditComboBoxValueAsString;
			uISpinEditEdit.ValueAsString = this.CustomizeImageSpecificExportOptionsParams.UISpinEditEditValueAsString;
			uIComboBoxEditComboBox1.ValueAsString = this.CustomizeImageSpecificExportOptionsParams.UIComboBoxEditComboBox1ValueAsString;
			uIComboBoxEditComboBox2.ValueAsString = this.CustomizeImageSpecificExportOptionsParams.UIComboBoxEditComboBox2ValueAsString;
			uIColorEditColorEdit.ValueAsString = this.CustomizeImageSpecificExportOptionsParams.UIColorEditColorEditValueAsString;
			uISpinEditEdit1.ValueAsString = this.CustomizeImageSpecificExportOptionsParams.UISpinEditEdit1ValueAsString;
		}
		public void CustomizeLinksInBarLinkContainer()
		{
			#region Variable Declarations
			DXCheckedListBox uICheckedListBox1CheckedListBox = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UIBarLinkContainerItemCustom.UICheckedListBox1CheckedListBox;
			#endregion
			uICheckedListBox1CheckedListBox.CheckedIndicesAsString = this.CustomizeLinksInBarLinkContainerParams.UICheckedListBox1CheckedListBoxCheckedIndicesAsString;
		}
		public void CustomizePDFPasswordSecurityOptions()
		{
			#region Variable Declarations
			DXButton uIEditorButton0Button = this.UIPDFExportOptionsWindow.UIDropDownEditPopupEdit.UIEditorButton0Button;
			DXCheckBox uIChbOpenPasswordCheckBox = this.UIPasswordSecurityWindow.UIChbOpenPasswordCheckBox;
			DXTextEdit uITeOpenPasswordEdit = this.UIPasswordSecurityWindow.UITeOpenPasswordEdit;
			DXCheckBox uIChbRestrictCheckBox = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UIChbRestrictCheckBox;
			DXTextEdit uITePermissionsPassworEdit = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UITePermissionsPassworEdit;
			DXPopupEdit uILkpPrintingAllowedPopupEdit = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UILkpPrintingAllowedPopupEdit;
			DXPopupEdit uILkpChangesAllowedPopupEdit = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UILkpChangesAllowedPopupEdit;
			DXCheckBox uIChbEnableCopingCheckBox = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UIChbEnableCopingCheckBox;
			DXCheckBox uIChbEnableScreenReadeCheckBox = this.UIPasswordSecurityWindow.UIGrpBoxPermissionsClient.UIChbEnableScreenReadeCheckBox;
			#endregion
			Mouse.Click(uIEditorButton0Button, new Point(10, 12));
			uIChbOpenPasswordCheckBox.Checked = this.CustomizePDFPasswordSecurityOptionsParams.UIChbOpenPasswordCheckBoxChecked;
			uITeOpenPasswordEdit.ValueAsString = this.CustomizePDFPasswordSecurityOptionsParams.UITeOpenPasswordEditValueAsString;
			uIChbRestrictCheckBox.Checked = this.CustomizePDFPasswordSecurityOptionsParams.UIChbRestrictCheckBoxChecked;
			uITePermissionsPassworEdit.ValueAsString = this.CustomizePDFPasswordSecurityOptionsParams.UITePermissionsPassworEditValueAsString;
			uILkpPrintingAllowedPopupEdit.ValueTypeName = this.CustomizePDFPasswordSecurityOptionsParams.UILkpPrintingAllowedPopupEditValueTypeName;
			uILkpPrintingAllowedPopupEdit.ValueAsString = this.CustomizePDFPasswordSecurityOptionsParams.UILkpPrintingAllowedPopupEditValueAsString;
			uILkpChangesAllowedPopupEdit.ValueTypeName = this.CustomizePDFPasswordSecurityOptionsParams.UILkpChangesAllowedPopupEditValueTypeName;
			uILkpChangesAllowedPopupEdit.ValueAsString = this.CustomizePDFPasswordSecurityOptionsParams.UILkpChangesAllowedPopupEditValueAsString;
			uIChbEnableCopingCheckBox.Checked = this.CustomizePDFPasswordSecurityOptionsParams.UIChbEnableCopingCheckBoxChecked;
			uIChbEnableScreenReadeCheckBox.Checked = this.CustomizePDFPasswordSecurityOptionsParams.UIChbEnableScreenReadeCheckBoxChecked;
		}
		public void CustomizePDFSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox1;
			DXCheckBox uIConvertImagestoJpegCheckBox = this.UIPDFExportOptionsWindow.UIConvertImagestoJpegCheckBox;
			DXComboBox uIComboBoxEditComboBox2 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox2;
			DXCheckBox uICompressedCheckBox = this.UIPDFExportOptionsWindow.UICompressedCheckBox;
			DXCheckBox uIShowprintdialogonopeCheckBox = this.UIPDFExportOptionsWindow.UIShowprintdialogonopeCheckBox;
			DXComboBox uIComboBoxEditComboBox3 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox3;
			DXComboBox uIComboBoxEditComboBox4 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox4;
			DXComboBox uIComboBoxEditComboBox5 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox5;
			DXComboBox uIComboBoxEditComboBox6 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox6;
			DXComboBox uIComboBoxEditComboBox7 = this.UIPDFExportOptionsWindow.UIComboBoxEditComboBox7;
			#endregion
			uIComboBoxEditComboBox.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBoxValueAsString;
			uIComboBoxEditComboBox1.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBox1ValueAsString;
			uIConvertImagestoJpegCheckBox.Checked = this.CustomizePDFSpecificExportOptionsParams.UIConvertImagestoJpegCheckBoxChecked;
			uIComboBoxEditComboBox2.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBox2ValueAsString;
			uICompressedCheckBox.Checked = this.CustomizePDFSpecificExportOptionsParams.UICompressedCheckBoxChecked;
			uIShowprintdialogonopeCheckBox.Checked = this.CustomizePDFSpecificExportOptionsParams.UIShowprintdialogonopeCheckBoxChecked;
			uIComboBoxEditComboBox3.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBox3ValueAsString;
			uIComboBoxEditComboBox4.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBox4ValueAsString;
			uIComboBoxEditComboBox5.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBox5ValueAsString;
			uIComboBoxEditComboBox6.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBox6ValueAsString;
			uIComboBoxEditComboBox7.ValueAsString = this.CustomizePDFSpecificExportOptionsParams.UIComboBoxEditComboBox7ValueAsString;
		}
		public void CustomizePrintSettingsViaRibbonApplicationPrintItem()
		{
			#region Variable Declarations
			DXTextEdit uICopySpinEditEdit = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UICopySpinEditEdit;
			DXButton uIDropDownButtonArrowBButton = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbPrinterButton.UIDropDownButtonArrowBButton;
			DXTestControl uIFaxGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu.UIItemGalleryItemGroup.UIFaxGalleryItem;
			DXButton uIDropDownButtonArrowBButton1 = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbDuplexButton.UIDropDownButtonArrowBButton;
			DXTestControl uIManuallyPrintonBothSGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu1.UIItemGalleryItemGroup.UIManuallyPrintonBothSGalleryItem;
			DXButton uIDropDownButtonArrowBButton2 = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbCollateButton.UIDropDownButtonArrowBButton;
			DXTestControl uIUncollatedGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu2.UIItemGalleryItemGroup.UIUncollatedGalleryItem;
			DXButton uIDropDownButtonArrowBButton3 = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbOrientationButton.UIDropDownButtonArrowBButton;
			DXTestControl uILandscapeOrientationGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu3.UIItemGalleryItemGroup.UILandscapeOrientationGalleryItem;
			DXButton uIDropDownButtonArrowBButton4 = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbMarginsButton.UIDropDownButtonArrowBButton;
			DXTestControl uIWideGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu4.UIItemGalleryItemGroup.UIWideGalleryItem;
			DXButton uIDropDownButtonArrowBButton5 = this.UINewDocument1RibbonSiWindow.UIBackstageViewControlCustom.UIBackstageViewClientCScrollableControl1.UILayoutControl1Custom.UIDdbPaperSizeButton.UIDropDownButtonArrowBButton;
			DXTestControl uIA3GalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu5.UIItemGalleryItemGroup.UIA3GalleryItem;
			#endregion
			uICopySpinEditEdit.ValueAsString = this.CustomizePrintSettingsViaRibbonApplicationPrintItemParams.UICopySpinEditEditValueAsString;
			Mouse.Click(uIDropDownButtonArrowBButton, new Point(6, 25));
			Mouse.Click(uIFaxGalleryItem, new Point(70, 32));
			Mouse.Click(uIDropDownButtonArrowBButton1, new Point(7, 32));
			Mouse.Click(uIManuallyPrintonBothSGalleryItem, new Point(165, 24));
			Mouse.Click(uIDropDownButtonArrowBButton2, new Point(9, 29));
			Mouse.Click(uIUncollatedGalleryItem, new Point(154, 16));
			Mouse.Click(uIDropDownButtonArrowBButton3, new Point(7, 19));
			Mouse.Click(uILandscapeOrientationGalleryItem, new Point(148, 22));
			Mouse.Click(uIDropDownButtonArrowBButton4, new Point(6, 19));
			Mouse.Click(uIWideGalleryItem, new Point(104, 17));
			Mouse.Click(uIDropDownButtonArrowBButton5, new Point(11, 26));
			Mouse.Click(uIA3GalleryItem, new Point(78, 21));
		}
		public void CustomizeRTFSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIRTFExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIRTFExportOptionsWindow.UIComboBoxEditComboBox1;
			DXCheckBox uIExportwatermarksCheckBox = this.UIRTFExportOptionsWindow.UIExportwatermarksCheckBox;
			#endregion
			uIComboBoxEditComboBox.ValueAsString = this.CustomizeRTFSpecificExportOptionsParams.UIComboBoxEditComboBoxValueAsString;
			uIComboBoxEditComboBox1.ValueAsString = this.CustomizeRTFSpecificExportOptionsParams.UIComboBoxEditComboBox1ValueAsString;
			uIExportwatermarksCheckBox.Checked = this.CustomizeRTFSpecificExportOptionsParams.UIExportwatermarksCheckBoxChecked;
		}
		public void CustomizeXLSSpecificExportOptions()
		{
			#region Variable Declarations
			DXComboBox uIComboBoxEditComboBox = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox;
			DXComboBox uIComboBoxEditComboBox1 = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox1;
			DXComboBox uIComboBoxEditComboBox2 = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox2;
			DXComboBox uIComboBoxEditComboBox3 = this.UIXLSExportOptionsWindow.UIComboBoxEditComboBox3;
			DXCheckBox uIShowgridlinesCheckBox = this.UIXLSExportOptionsWindow.UIShowgridlinesCheckBox;
			DXCheckBox uIExporthyperlinksCheckBox = this.UIXLSExportOptionsWindow.UIExporthyperlinksCheckBox;
			#endregion
			uIComboBoxEditComboBox.ValueAsString = this.CustomizeXLSSpecificExportOptionsParams.UIComboBoxEditComboBoxValueAsString;
			uIComboBoxEditComboBox1.ValueAsString = this.CustomizeXLSSpecificExportOptionsParams.UIComboBoxEditComboBox1ValueAsString;
			uIComboBoxEditComboBox2.ValueAsString = this.CustomizeXLSSpecificExportOptionsParams.UIComboBoxEditComboBox2ValueAsString;
			uIComboBoxEditComboBox3.ValueAsString = this.CustomizeXLSSpecificExportOptionsParams.UIComboBoxEditComboBox3ValueAsString;
			uIShowgridlinesCheckBox.Checked = this.CustomizeXLSSpecificExportOptionsParams.UIShowgridlinesCheckBoxChecked;
			uIExporthyperlinksCheckBox.Checked = this.CustomizeXLSSpecificExportOptionsParams.UIExporthyperlinksCheckBoxChecked;
		}
		public void DeleteConditionExpression()
		{
			#region Variable Declarations
			DXListBox uIFormatItemListList = this.UIXtraGridFeaturesDemoWindow23.UIPanelControl1Client1.UIGcContainerClient.UIStyleConditionsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIExpressionConditionsCustom.UIFormatItemListList;
			DXMenuBaseButtonItem uIRemoveBarBaseButtonItem = this.UIXtraGridFeaturesDemoWindow23.UIPanelControl1Client1.UIGcContainerClient.UIStyleConditionsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIExpressionConditionsCustom.UIBarDockControlCustom.UIMainmenuMenuBar.UIRemoveBarBaseButtonItem;
			#endregion
			uIFormatItemListList.SelectedIndicesAsString = this.DeleteConditionExpressionParams.UIFormatItemListListSelectedIndicesAsString;
			uIRemoveBarBaseButtonItem.PerformClick = this.DeleteConditionExpressionParams.UIRemoveBarBaseButtonItemPerformClick;
		}
		public void DeleteNavBarGroup()
		{
			#region Variable Declarations
			DXButton uIDeleteLastGroupButton = this.UITheXtraNavBarSuiteDeWindow1.UIPanelControl1Client.UIGcContainerClient.UIAddGroupsCustom.UIPanelControlClient.UIPanelControl1Client.UIDeleteLastGroupButton;
			#endregion
			Mouse.Click(uIDeleteLastGroupButton, new Point(1, 1));
		}
		public void DeleteNavBarItemLink()
		{
			#region Variable Declarations
			DXButton uIDeleteItemfortheSeleButton = this.UITheXtraNavBarSuiteDeWindow2.UIPanelControl1Client.UIGcContainerClient.UIAddItemLinksCustom.UIPanelControlClient.UIPanelControl1Client.UIDeleteItemfortheSeleButton;
			#endregion
			Mouse.Click(uIDeleteItemfortheSeleButton, new Point(1, 1));
		}
		public void DeleteNavBarLinkViaContextMenu()
		{
			#region Variable Declarations
			DXNavBarLink uIInboxNavBarLink = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UILocalNavBarGroup.UIInboxNavBarLink;
			DXMenuBaseButtonItem uIBiDeleteLinkMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBiDeleteLinkMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIInboxNavBarLink, MouseButtons.Right, ModifierKeys.None, new Point(51, 9));
			Mouse.Click(uIBiDeleteLinkMenuBaseButtonItem, new Point(31, 8));
		}
		public void DeleteSummaryViaContextMenu()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UITheXtraGridSuitebyDeWindow1.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			DXMenuBaseButtonItem uIBarButtonItemLink5MenuBaseButtonItem1 = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarButtonItemLink5MenuBaseButtonItem1;
			#endregion
			Mouse.Click(uIGridControlFooterCelGridFooterCell, MouseButtons.Right, ModifierKeys.None, new Point(253, 22));
			Mouse.Click(uIBarButtonItemLink5MenuBaseButtonItem1, new Point(52, 12));
		}
		public void DescendingSortBySummary()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn1ColumnHeader = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridColumn1ColumnHeader;
			DXMenuItem uICountbyProductNameSoBarItem1 = this.UIItemWindow.UIPopupMenuBarControlMenu.UISortbySummaryBarItem.UICountbyProductNameSoBarItem1;
			DXButton uIGridControlRowGroupBButton = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIGridControl1Table.UIGridControlRowGroupBButton;
			#endregion
			Mouse.Click(uIGridColumn1ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(194, 9));
			Mouse.Click(uICountbyProductNameSoBarItem1, new Point(120, 12));
			Mouse.Click(uIGridControlRowGroupBButton, new Point(4, 9));
		}
		public void DisableFilterViaEnableFilterButton()
		{
			#region Variable Declarations
			DXCheckBox uIGridControlFilterPanCheckBox = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlFilterPanCheckBox;
			#endregion
			Mouse.Click(uIGridControlFilterPanCheckBox, new Point(11, 8));
		}
		public void DisplayBarCommandViaClickDropdownButton()
		{
			#region Variable Declarations
			DXTestControl uIBarDockControlCustom = this.UISimplePadCDemoWindow.UIBarDockControlCustom;
			DXMenuItem uIBarCustomizationItemBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem;
			DXMenuItem uIItalicMenuItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem.UIAddorRemoveButtonsMenuItem.UIFormatMenuItem.UIItalicMenuItem;
			#endregion
			Mouse.Click(uIBarDockControlCustom, new Point(412, 63));
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(8, 18));
			Mouse.Click(uIItalicMenuItem, new Point(17, 14));
		}
		public void DisplayBarCommandViaCustomizationForm()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UICustomizationWindow.UITabControlTabList.UIXtraTabControlHeaderTabPage;
			DXListBox uIListBoxControlList = this.UICustomizationWindow.UITabControlTabList.UIXtraTabPageClient.UIListBoxControlList;
			DXListBoxItem uIItemsListBoxItem4ListItem = this.UICustomizationWindow.UITabControlTabList.UIXtraTabPageClient1.UIItemsListBoxList.UIItemsListBoxItem4ListItem;
			DXMenuItem uIItalicBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIItalicBarItem;
			DXButton uISimpleButtonButton = this.UIWindowsForms10WindowWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(47, 9));
			uIListBoxControlList.SelectedIndicesAsString = this.DisplayBarCommandViaCustomizationFormParams.UIListBoxControlListSelectedIndicesAsString;
			uIItalicBarItem.EnsureClickable(new Point(12, 12));
			Mouse.StartDragging(uIItemsListBoxItem4ListItem, new Point(11, 8));
			Mouse.StopDragging(uIItalicBarItem, new Point(12, 12));
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void DisplayHiddenBandViaDoubleClickBandHeaderInCustomizationForm()
		{
			#region Variable Declarations
			DXWindow uICustomizationFormWindow = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UICustomizationFormWindow;
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UICustomizationFormWindow.UIXtraTabControlTabList.UIXtraTabControlHeaderTabPage;
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table;
			#endregion
			Mouse.Click(uICustomizationFormWindow, new Point(137, 11));
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(36, 11));
			uIGridControl1Table.BandPositionAsString = this.DisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams.UIGridControl1TableBandPositionAsString;
		}
		public void DisplayHiddenBandViaDraggingBandHeaderFromCustomizationForm()
		{
			#region Variable Declarations
			DXWindow uICustomizationFormWindow = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UICustomizationFormWindow;
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UICustomizationFormWindow.UIXtraTabControlTabList.UIXtraTabControlHeaderTabPage;
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table;
			#endregion
			Mouse.Click(uICustomizationFormWindow, new Point(147, 11));
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(22, 9));
			uIGridControl1Table.BandPositionAsString = this.DisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams.UIGridControl1TableBandPositionAsString;
		}
		public void DisplayHiddenColumnViaCustomizationFormContextMenu()
		{
			#region Variable Declarations
			DXListBoxItem uIIDListItem = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UICustomizationFormWindow.UIColumnCustomizationLList.UIIDListItem;
			DXMenuBaseButtonItem uIBarButtonItemLink5MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarButtonItemLink5MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIIDListItem, MouseButtons.Right, ModifierKeys.None, new Point(42, 11));
			Mouse.Click(uIBarButtonItemLink5MenuBaseButtonItem, new Point(80, 12));
		}
		public void DisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationForm()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.ColumnPositionAsString = this.DisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams.UIGridControl1TableColumnPositionAsString;
		}
		public void DisplayHiddenFindPanelViaCtrlFShortcut()
		{
			#region Variable Declarations
			DXBaseLayoutItem uIEmptySpaceItem1LayoutControlItem = this.UIXtraGridFeaturesDemoWindow26.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UILayoutControlGroup1LayoutGroup.UIEmptySpaceItem1LayoutControlItem;
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow26.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UILayoutControlGroup1LayoutGroup.UILayoutControlItem1LayoutControlItem.UIGridControl1Table;
			#endregion
			Mouse.Click(uIEmptySpaceItem1LayoutControlItem, new Point(151, 3));
			Keyboard.SendKeys(uIGridControl1Table, this.DisplayHiddenFindPanelViaCtrlFShortcutParams.UIGridControl1TableSendKeys, ModifierKeys.Control);
		}
		public void DisplayRibbonTabViaCustomizationFormItem()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup3RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup3RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uISelectionCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UISelectionCheckBoxTreeItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup3RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(19, 77));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(102, 7));
			uISelectionCheckBoxTreeItem.Checked = this.DisplayRibbonTabViaCustomizationFormItemParams.UISelectionCheckBoxTreeItemChecked;
		}
		public void DisplayToolbarViaCustomizationForm()
		{
			#region Variable Declarations
			DXCheckedListBox uIToolBarsListCheckedListBox = this.UICustomizationWindow.UITabControlTabList.UITpToolbarsClient.UIToolBarsListCheckedListBox;
			DXButton uISimpleButtonButton1 = this.UIItemWindow11.UISimpleButtonButton1;
			#endregion
			uIToolBarsListCheckedListBox.CheckedIndicesAsString = this.DisplayToolbarViaCustomizationFormParams.UIToolBarsListCheckedListBoxCheckedIndicesAsString;
			Mouse.Click(uISimpleButtonButton1, new Point(1, 1));
		}
		public void DisplayToolbarViaRightClickBar()
		{
			#region Variable Declarations
			DXMenuItem uIBarCustomizationItemBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIStandardMenuBar.UIBarCustomizationItemBarItem;
			DXMenuItem uIFormatMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFormatMenuItem;
			#endregion
			Mouse.Click(uIBarCustomizationItemBarItem, MouseButtons.Right, ModifierKeys.None, new Point(10, 16));
			Mouse.Click(uIFormatMenuItem, new Point(14, 11));
		}
		public void DisplayToolbarViaRightClickEmptySpace()
		{
			#region Variable Declarations
			DXTestControl uIBarDockControlCustom = this.UISimplePadCDemoWindow.UIBarDockControlCustom;
			DXMenuItem uIFormatMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFormatMenuItem;
			#endregion
			Mouse.Click(uIBarDockControlCustom, MouseButtons.Right, ModifierKeys.None, new Point(425, 27));
			Mouse.Click(uIFormatMenuItem, new Point(14, 4));
		}
		public void DragAndDropAlertForm()
		{
			#region Variable Declarations
			DXWindow uIAlertFormWindow = this.UIItemWindow2.UIAlertFormWindow;
			#endregion
			Mouse.StartDragging(uIAlertFormWindow, new Point(119, 3));
			Mouse.StopDragging(uIAlertFormWindow, -175, -401);
		}
		public void DragItemToNavBar()
		{
			#region Variable Declarations
			WinListItem uITreeListListItem = this.UITheXtraNavBarSuiteDeWindow5.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UIGroupControl1Client.UIListView1Custom.UIListView1Window.UIListView1List.UITreeListListItem;
			DXNavBarGroup uIWindowsFormsNavBarGroup = this.UITheXtraNavBarSuiteDeWindow5.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UINavBarControl1NavBar.UIWindowsFormsNavBarGroup;
			DXNavBarLink uILabelNavBarLink = this.UITheXtraNavBarSuiteDeWindow5.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UINavBarControl1NavBar.UIWindowsFormsNavBarGroup.UILabelNavBarLink;
			#endregion
			uIWindowsFormsNavBarGroup.EnsureClickable(new Point(65, 17));
			Mouse.StartDragging(uITreeListListItem, new Point(7, 12));
			Mouse.StopDragging(uIWindowsFormsNavBarGroup, new Point(65, 17));
			uILabelNavBarLink.EnsureClickable(new Point(40, 10));
			Mouse.StartDragging(uITreeListListItem, new Point(13, 9));
			Mouse.StopDragging(uILabelNavBarLink, new Point(40, 10));
		}
		public void DragNavBarLinkToItemList()
		{
			#region Variable Declarations
			DXNavBarLink uILabelNavBarLink = this.UITheXtraNavBarSuiteDeWindow6.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UINavBarControl1NavBar.UIWindowsFormsNavBarGroup.UILabelNavBarLink;
			WinList uIListView1List = this.UITheXtraNavBarSuiteDeWindow6.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UIGroupControl1Client.UIListView1Custom.UIListView1List;
			#endregion
			uIListView1List.EnsureClickable(new Point(39, 68));
			Mouse.StartDragging(uILabelNavBarLink, new Point(43, 10));
			Mouse.StopDragging(uIListView1List, new Point(39, 68));
		}
		public void DragNavBarLinkToRecycleBin()
		{
			#region Variable Declarations
			DXNavBarLink uILabelNavBarLink = this.UITheXtraNavBarSuiteDeWindow6.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UINavBarControl1NavBar.UIWindowsFormsNavBarGroup.UILabelNavBarLink;
			DXTestControl uILbRecycleLabel = this.UITheXtraNavBarSuiteDeWindow6.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UIGroupControl2Client.UILbRecycleLabel;
			#endregion
			uILbRecycleLabel.EnsureClickable(new Point(26, 19));
			Mouse.StartDragging(uILabelNavBarLink, new Point(39, 13));
			Mouse.StopDragging(uILbRecycleLabel, new Point(26, 19));
		}
		public void ExpandAndCollapseGroupRowViaClickExpandButton()
		{
			#region Variable Declarations
			DXButton uIGridControlRowGroupBButton = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowGroupBButton;
			DXButton uIGridControlRowGroupBButton1 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowGroupBButton1;
			DXButton uIGridControlRowGroupBButton2 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowGroupBButton2;
			DXButton uIGridControlRowGroupBButton3 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowGroupBButton3;
			#endregion
			Mouse.Click(uIGridControlRowGroupBButton, new Point(5, 7));
			Mouse.Click(uIGridControlRowGroupBButton1, new Point(4, 8));
			Mouse.Click(uIGridControlRowGroupBButton2, new Point(5, 9));
			Mouse.Click(uIGridControlRowGroupBButton3, new Point(3, 11));
			Mouse.Click(uIGridControlRowGroupBButton1, new Point(7, 6));
		}
		public void ExpandAndCollapseGroupRowViaDoubleClickGroupRow()
		{
			#region Variable Declarations
			DXGroupRow uIGridControlGroupRowGroupRow = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow;
			DXGroupRow uIGridControlGroupRowGroupRow6 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow6;
			DXGroupRow uIGridControlGroupRowGroupRow21 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow21;
			DXGroupRow uIGridControlGroupRowGroupRow31 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow31;
			DXGroupRow uIGridControlGroupRowGroupRow41 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow41;
			DXGroupRow uIGridControlGroupRowGroupRow51 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow51;
			DXGroupRow uIGridControlGroupRowGroupRow22 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlGroupRowGroupRow22;
			#endregion
			Mouse.DoubleClick(uIGridControlGroupRowGroupRow, new Point(60, 8));
			Mouse.DoubleClick(uIGridControlGroupRowGroupRow6, new Point(65, 6));
			Mouse.DoubleClick(uIGridControlGroupRowGroupRow21, new Point(78, 12));
			Mouse.DoubleClick(uIGridControlGroupRowGroupRow31, new Point(81, 14));
			Mouse.DoubleClick(uIGridControlGroupRowGroupRow41, new Point(85, 9));
			Mouse.DoubleClick(uIGridControlGroupRowGroupRow51, new Point(81, 16));
			Mouse.DoubleClick(uIGridControlGroupRowGroupRow22, new Point(80, 11));
		}
		public void ExpandAndCollapseGroupRowViaDoubleClickIndicatorCell()
		{
			#region Variable Declarations
			DXTestControl uIGridControlRowIndicaRowHeader = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader;
			DXTestControl uIGridControlRowIndicaRowHeader1 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader1;
			DXTestControl uIGridControlRowIndicaRowHeader2 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader2;
			DXTestControl uIGridControlRowIndicaRowHeader3 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader3;
			DXTestControl uIGridControlRowIndicaRowHeader4 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader4;
			DXTestControl uIGridControlRowIndicaRowHeader5 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader5;
			DXTestControl uIGridControlRowIndicaRowHeader6 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader6;
			#endregion
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader, new Point(5, 7));
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader1, new Point(8, 12));
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader2, new Point(10, 11));
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader3, new Point(5, 8));
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader4, new Point(8, 11));
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader5, new Point(10, 5));
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader6, new Point(8, 13));
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader1, new Point(10, 8));
		}
		public void ExpandMasterRowViaClickExpandButton()
		{
			#region Variable Declarations
			DXButton uIQUICKStopButton = this.UIXtraGridFeaturesDemoWindow33.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIQUICKStopButton;
			#endregion
			Mouse.Click(uIQUICKStopButton, new Point(2, 4));
		}
		public void ExpandMasterRowViaCtrlPlusShortcut()
		{
			#region Variable Declarations
			DXGrid uIGridControl2Table = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table;
			DXTestControl uIGridControlRowIndicaRowHeader7 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader7;
			#endregion
			uIGridControl2Table.FocusedCellAsString = this.ExpandMasterRowViaCtrlPlusShortcutParams.UIGridControl2TableFocusedCellAsString;
			Mouse.Click(uIGridControlRowIndicaRowHeader7, new Point(8, 10));
			Keyboard.SendKeys(uIGridControl2Table, this.ExpandMasterRowViaCtrlPlusShortcutParams.UIGridControl2TableSendKeys, ModifierKeys.Control);
		}
		public void ExpandMasterRowViaDoubleClickIndicatorMasterRow()
		{
			#region Variable Declarations
			DXTestControl uIGridControlRowIndicaRowHeader7 = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIGridControlRowIndicaRowHeader7;
			#endregion
			Mouse.DoubleClick(uIGridControlRowIndicaRowHeader7, new Point(6, 9));
		}
		public void ExpandNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroupButton uIDisksNavBarGroupButton = this.UITheXtraNavBarSuiteDeWindow7.UIPanelControl1Client.UIGcContainerClient.UICustomizableDistanceCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDisksNavBarGroup.UIDisksNavBarGroupButton;
			#endregion
			Mouse.Click(uIDisksNavBarGroupButton, new Point(7, 10));
		}
		public void ExpandRibbonViaCtrlF1Shortcut()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.Click(uIRibbonControl1Ribbon, new Point(661, 25));
			Keyboard.SendKeys(uIRichTextBox1Edit, this.ExpandRibbonViaCtrlF1ShortcutParams.UIRichTextBox1EditSendKeys, ModifierKeys.Control);
		}
		public void ExpandRibbonViaDoubleClickTabPageHeader()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			#endregion
			Mouse.DoubleClick(uIRibbonPage1RibbonPage, new Point(30, 12));
		}
		public void ExpandRibbonViaExpandCollapseButton()
		{
			#region Variable Declarations
			DXRibbonItem uIRibbonExpandCollapseRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIPageHeaderToolbarRibbonBar.UIRibbonExpandCollapseRibbonItem;
			#endregion
			Mouse.Click(uIRibbonExpandCollapseRibbonItem, new Point(12, 6));
		}
		public void ExpandRibbonViaUncheckMinimizeTheRibbonOption()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage2RibbonPage = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonPage2RibbonPage;
			DXMenuBaseButtonItem uIMinimizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIMinimizetheRibbonMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage2RibbonPage, MouseButtons.Right, ModifierKeys.None, new Point(86, 11));
			Mouse.Click(uIMinimizetheRibbonMenuBaseButtonItem, new Point(17, 10));
		}
		public void FindAndSelectionResultViaKeyboard()
		{
			#region Variable Declarations
			DXPopupEdit uISearchLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UISearchLookUpEdit1PopupEdit;
			#endregion
			uISearchLookUpEdit1PopupEdit.ValueTypeName = this.FindAndSelectionResultViaKeyboardParams.UISearchLookUpEdit1PopupEditValueTypeName;
			uISearchLookUpEdit1PopupEdit.ValueAsString = this.FindAndSelectionResultViaKeyboardParams.UISearchLookUpEdit1PopupEditValueAsString;
		}
		public void FindAndSelectionResultViaKeyboardOnInPlaceTab()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table;
			DXPopupEdit uISearchLookUpEditPopupEdit2 = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UISearchLookUpEditPopupEdit2;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.FindAndSelectionResultViaKeyboardOnInPlaceTabParams.UIGridControl1TableFocusedCellAsString;
			uISearchLookUpEditPopupEdit2.ValueTypeName = this.FindAndSelectionResultViaKeyboardOnInPlaceTabParams.UISearchLookUpEditPopupEdit2ValueTypeName;
			uISearchLookUpEditPopupEdit2.ValueAsString = this.FindAndSelectionResultViaKeyboardOnInPlaceTabParams.UISearchLookUpEditPopupEdit2ValueAsString;
		}
		public void FindAndSelectionResultViaMouse()
		{
			#region Variable Declarations
			DXPopupEdit uISearchLookUpEdit1PopupEdit = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIXtraScrollableControScrollableControl.UIPanelControl1Client.UISearchLookUpEdit1PopupEdit;
			#endregion
			uISearchLookUpEdit1PopupEdit.ValueTypeName = this.FindAndSelectionResultViaMouseParams.UISearchLookUpEdit1PopupEditValueTypeName;
			uISearchLookUpEdit1PopupEdit.ValueAsString = this.FindAndSelectionResultViaMouseParams.UISearchLookUpEdit1PopupEditValueAsString;
		}
		public void FindAndSelectionResultViaMouseOnInPlaceTab()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table;
			DXPopupEdit uISearchLookUpEditPopupEdit2 = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UISearchLookUpEditPopupEdit2;
			DXPopupEdit uISearchLookUpEditPopupEdit3 = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl1Table.UISearchLookUpEditPopupEdit3;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.FindAndSelectionResultViaMouseOnInPlaceTabParams.UIGridControl1TableFocusedCellAsString;
			uISearchLookUpEditPopupEdit2.ValueTypeName = this.FindAndSelectionResultViaMouseOnInPlaceTabParams.UISearchLookUpEditPopupEdit2ValueTypeName;
			uISearchLookUpEditPopupEdit3.ValueAsString = this.FindAndSelectionResultViaMouseOnInPlaceTabParams.UISearchLookUpEditPopupEdit3ValueAsString;
		}
		public void GroupDataAndChangeGroupOrder()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			DXColumnHeader uIGridColumn2ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader;
			DXColumnHeader uIGridColumn2ColumnHeader1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader1;
			DXButton uIGridControlRowGroupBButton = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlRowGroupBButton;
			#endregion
			uIGridColumn5ColumnHeader.ColumnPositionAsString = this.GroupDataAndChangeGroupOrderParams.UIGridColumn5ColumnHeaderColumnPositionAsString;
			uIGridColumn2ColumnHeader.ColumnPositionAsString = this.GroupDataAndChangeGroupOrderParams.UIGridColumn2ColumnHeaderColumnPositionAsString;
			uIGridColumn2ColumnHeader1.ColumnPositionAsString = this.GroupDataAndChangeGroupOrderParams.UIGridColumn2ColumnHeader1ColumnPositionAsString;
			Mouse.Click(uIGridControlRowGroupBButton, new Point(4, 6));
		}
		public void GroupDataViaDraggingColumnHeader()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn2ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader;
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			DXButton uIGridControlRowGroupBButton = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlRowGroupBButton;
			#endregion
			uIGridColumn2ColumnHeader.ColumnPositionAsString = this.GroupDataViaDraggingColumnHeaderParams.UIGridColumn2ColumnHeaderColumnPositionAsString;
			uIGridColumn5ColumnHeader.ColumnPositionAsString = this.GroupDataViaDraggingColumnHeaderParams.UIGridColumn5ColumnHeaderColumnPositionAsString;
			Mouse.Click(uIGridControlRowGroupBButton, new Point(3, 3));
		}
		public void GroupDataViaGroupByThisColumnOption()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn2ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader;
			DXMenuItem uIGroupByThisColumnMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIGroupByThisColumnMenuItem;
			DXColumnHeader uIGridColumn5ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader;
			DXMenuItem uIGroupByThisColumnMenuItem1 = this.UIItemWindow.UIPopupMenuBarControlMenu1.UIGroupByThisColumnMenuItem;
			DXButton uIGridControlRowGroupBButton = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlRowGroupBButton;
			#endregion
			Mouse.Click(uIGridColumn2ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(63, 6));
			Mouse.Click(uIGroupByThisColumnMenuItem, new Point(61, 5));
			Mouse.Click(uIGridColumn5ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(57, 6));
			Mouse.Click(uIGroupByThisColumnMenuItem1, new Point(68, 14));
			Mouse.Click(uIGridControlRowGroupBButton, new Point(4, 4));
		}
		public void GroupDataWithMultipleValuesGrouping()
		{
			#region Variable Declarations
			DXButton uISbGroupButton = this.UIXtraGridFeaturesDemoWindow17.UIPanelControl1Client.UIGcContainerClient.UIMultipleGroupingCustom.UIPanelControl1Client.UISbGroupButton;
			#endregion
			Mouse.Click(uISbGroupButton, new Point(1, 1));
		}
		public void GroupMasterDetailData()
		{
			#region Variable Declarations
			DXColumnHeader uIColCountryColumnHeader = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColCountryColumnHeader;
			DXColumnHeader uIColRegionColumnHeader = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColRegionColumnHeader;
			DXColumnHeader uIColCompanyNameColumnHeader = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColCompanyNameColumnHeader;
			DXMenuItem uIGroupByThisColumnBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIGroupByThisColumnBarItem;
			#endregion
			uIColCountryColumnHeader.ColumnPositionAsString = this.GroupMasterDetailDataParams.UIColCountryColumnHeaderColumnPositionAsString;
			uIColRegionColumnHeader.ColumnPositionAsString = this.GroupMasterDetailDataParams.UIColRegionColumnHeaderColumnPositionAsString;
			Mouse.Click(uIColCompanyNameColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(132, 4));
			Mouse.Click(uIGroupByThisColumnBarItem, new Point(106, 12));
		}
		public void GroupMasterDetailDataOnJoinedGroupPanel()
		{
			#region Variable Declarations
			DXColumnHeader uIColCompanyNameColumnHeader = this.UIXtraGridFeaturesDemoWindow33.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColCompanyNameColumnHeader;
			DXColumnHeader uIColRegionColumnHeader = this.UIXtraGridFeaturesDemoWindow33.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColRegionColumnHeader;
			#endregion
			uIColCompanyNameColumnHeader.ColumnPositionAsString = this.GroupMasterDetailDataOnJoinedGroupPanelParams.UIColCompanyNameColumnHeaderColumnPositionAsString;
			uIColRegionColumnHeader.ColumnPositionAsString = this.GroupMasterDetailDataOnJoinedGroupPanelParams.UIColRegionColumnHeaderColumnPositionAsString;
		}
		public void HideBandViaDraggingBandHeader()
		{
			#region Variable Declarations
			DXGridBand uIGridBand2GridBand = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UIGridBand2GridBand;
			#endregion
			uIGridBand2GridBand.BandPositionAsString = this.HideBandViaDraggingBandHeaderParams.UIGridBand2GridBandBandPositionAsString;
		}
		public void HideBandViaDraggingBandHeaderToCustomizationForm()
		{
			#region Variable Declarations
			DXGridBand uIGridBand2GridBand = this.UIXtraGridFeaturesDemoWindow5.UIPanelControl1Client.UIGcContainerClient.UIColumnCustomizationCustom.UIGridControl1Table.UIGridBand2GridBand;
			#endregion
			uIGridBand2GridBand.BandPositionAsString = this.HideBandViaDraggingBandHeaderToCustomizationFormParams.UIGridBand2GridBandBandPositionAsString;
		}
		public void HideBarCommandsViaHoldDownALT()
		{
			#region Variable Declarations
			DXMenuBaseButtonItem uIItalicBarBaseButtonItem = this.UISimplePadCDemoWindow1.UIBarDockControlCustom.UIFormatMenuBar.UIItalicBarBaseButtonItem;
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UISimplePadCDemoClient.UIRtPadWindow.UIRtPadEdit;
			DXMenuBaseButtonItem uIUnderlineBarBaseButtonItem = this.UISimplePadCDemoWindow1.UIBarDockControlCustom.UIFormatMenuBar.UIUnderlineBarBaseButtonItem;
			#endregion
			uIRtPadEdit.EnsureClickable(new Point(64, 28));
			Mouse.StartDragging(uIItalicBarBaseButtonItem, new Point(17, 22), MouseButtons.Left, ModifierKeys.Alt);
			Mouse.StopDragging(uIRtPadEdit, new Point(64, 28));
			uIRtPadEdit.EnsureClickable(new Point(75, 29));
			Mouse.StartDragging(uIUnderlineBarBaseButtonItem, new Point(10, 8), MouseButtons.Left, ModifierKeys.Alt);
			Mouse.StopDragging(uIRtPadEdit, new Point(75, 29));
		}
		public void HideBarCommandViaClickDropdownButton()
		{
			#region Variable Declarations
			DXMenuItem uIBarCustomizationItemBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem;
			DXMenuItem uIItalicMenuItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem.UIAddorRemoveButtonsMenuItem.UIFormatMenuItem.UIItalicMenuItem;
			#endregion
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(5, 18));
			Mouse.Click(uIItalicMenuItem, new Point(54, 8));
		}
		public void HideBarCommandViaCustomizationForm()
		{
			#region Variable Declarations
			DXMenuItem uIItalicBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIItalicBarItem;
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Mouse.Click(uIItalicBarItem, new Point(11, 10));
			uIRtPadEdit.EnsureClickable(new Point(50, 11));
			Mouse.StartDragging(uIItalicBarItem, new Point(11, 9));
			Mouse.StopDragging(uIRtPadEdit, new Point(50, 11));
		}
		public void HideColumnViaColumnHeaderContextMenu()
		{
			#region Variable Declarations
			DXColumnHeader uIGcModificationColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGcModificationColumnHeader;
			DXMenuBaseButtonItem uIBarButtonItemLink5MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarButtonItemLink5MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIGcModificationColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(53, 8));
			Mouse.Click(uIBarButtonItemLink5MenuBaseButtonItem, new Point(110, 16));
		}
		public void HideColumnViaDraggingColumnHeader()
		{
			#region Variable Declarations
			DXColumnHeader uIGcModificationColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGcModificationColumnHeader;
			#endregion
			uIGcModificationColumnHeader.ColumnPositionAsString = this.HideColumnViaDraggingColumnHeaderParams.UIGcModificationColumnHeaderColumnPositionAsString;
		}
		public void HideColumnViaDraggingColumnHeaderOnCustomizationForm()
		{
			#region Variable Declarations
			DXColumnHeader uIGcModificationColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGcModificationColumnHeader;
			#endregion
			uIGcModificationColumnHeader.ColumnPositionAsString = this.HideColumnViaDraggingColumnHeaderOnCustomizationFormParams.UIGcModificationColumnHeaderColumnPositionAsString;
		}
		public void HideFilterPanelViaCloseButton()
		{
			#region Variable Declarations
			DXButton uICloseButtonButton = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIGridControl1Table.UIFindControlCustom.UILayoutControl1Custom.UICloseButtonButton;
			#endregion
			Mouse.Click(uICloseButtonButton, new Point(1, 1));
		}
		public void HideRibbonTabViaCustomizationForm()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup2RibbonPageGroup = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			WinCheckBoxTreeItem uIHomeCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIHomeCheckBoxTreeItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup2RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(106, 77));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(81, 10));
			uIHomeCheckBoxTreeItem.Checked = this.HideRibbonTabViaCustomizationFormParams.UIHomeCheckBoxTreeItemChecked;
		}
		public void HideToolbarViaCustomizationForm()
		{
			#region Variable Declarations
			DXCheckedListBox uIToolBarsListCheckedListBox = this.UICustomizationWindow.UITabControlTabList.UITpToolbarsClient.UIToolBarsListCheckedListBox;
			#endregion
			uIToolBarsListCheckedListBox.CheckedIndicesAsString = this.HideToolbarViaCustomizationFormParams.UIToolBarsListCheckedListBoxCheckedIndicesAsString;
		}
		public void HideToolbarViaRightClickBar()
		{
			#region Variable Declarations
			DXMenuItem uICenterBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UICenterBarItem;
			DXMenuItem uIFormatMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFormatMenuItem;
			#endregion
			Mouse.Click(uICenterBarItem, MouseButtons.Right, ModifierKeys.None, new Point(15, 13));
			Mouse.Click(uIFormatMenuItem, new Point(28, 8));
		}
		public void HideToolbarViaRightClickEmptySpace()
		{
			#region Variable Declarations
			DXTestControl uIBarDockControlCustom = this.UISimplePadCDemoWindow.UIBarDockControlCustom;
			DXMenuItem uIFormatMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIFormatMenuItem;
			#endregion
			Mouse.Click(uIBarDockControlCustom, MouseButtons.Right, ModifierKeys.None, new Point(376, 65));
			Mouse.Click(uIFormatMenuItem, new Point(36, 14));
		}
		public void InvokeCloseCommandViaBackstageViewControl()
		{
			#region Variable Declarations
			DXButton uIRibbonApplicationButButton = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonApplicationButButton;
			DXTestControl uICloseTabPage = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UICloseTabPage;
			#endregion
			Mouse.Click(uIRibbonApplicationButButton, new Point(45, 11));
			Mouse.Click(uICloseTabPage, new Point(67, 14));
		}
		public void InvokeCollapsedRibbonCommandAfterResizingRibbon()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonPageGroup uIRibbonPageGroup2RibbonPageGroup = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup;
			DXRibbonItem uIPasteRibbonItem = this.UIItemWindow.UIRibbonMinimizedGroupCustom.UIRibbonOneGroupControRibbon.UIRibbonPage0RibbonPage.UIRibbonPageGroup2RibbonPageGroup.UIPasteRibbonItem;
			DXMenuBaseButtonItem uIPasteMenuBaseButtonItem = this.UIItemWindow.UISubMenuBarControlMenu.UIPasteMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(37, 9));
			Mouse.Click(uIRibbonPageGroup2RibbonPageGroup, new Point(30, 58));
			Mouse.Click(uIPasteRibbonItem, new Point(24, 48));
			Mouse.Click(uIPasteMenuBaseButtonItem, new Point(29, 6));
		}
		public void InvokeCollapsedRibbonCommandViaMouse()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage2RibbonPage = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonPage2RibbonPage;
			DXRibbonButtonItem uIPasteRibbonBaseButtonItem = this.UIItemWindow.UIMinimizedRibbonPopupCustom.UIRibbonMinimizedContrRibbon.UIRibbonPage0RibbonPage.UIRibbonPageGroup5RibbonPageGroup.UIPasteRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage2RibbonPage, new Point(44, 10));
			uIPasteRibbonBaseButtonItem.PerformClick = this.InvokeCollapsedRibbonCommandViaMouseParams.UIPasteRibbonBaseButtonItemPerformClick;
		}
		public void InvokeCustomizationFormViaClickBar()
		{
			#region Variable Declarations
			DXMenuItem uIPasteBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIStandardMenuBar.UIPasteBarItem;
			DXMenuItem uICustomizeMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UICustomizeMenuItem;
			#endregion
			Mouse.Click(uIPasteBarItem, MouseButtons.Right, ModifierKeys.None, new Point(15, 8));
			Mouse.Click(uICustomizeMenuItem, new Point(49, 19));
		}
		public void InvokeCustomizationFormViaClickDropdownButton()
		{
			#region Variable Declarations
			DXMenuItem uIBarCustomizationItemBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem;
			DXMenuItem uICustomizeMenuItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem.UIAddorRemoveButtonsMenuItem.UICustomizeMenuItem;
			#endregion
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(4, 16));
			Mouse.Click(uICustomizeMenuItem, new Point(38, 9));
		}
		public void InvokeCustomizationFormViaClickEmptySpace()
		{
			#region Variable Declarations
			DXTestControl uIBarDockControlCustom = this.UISimplePadCDemoWindow.UIBarDockControlCustom;
			DXMenuItem uICustomizeMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UICustomizeMenuItem;
			#endregion
			Mouse.Click(uIBarDockControlCustom, MouseButtons.Right, ModifierKeys.None, new Point(412, 58));
			Mouse.Click(uICustomizeMenuItem, new Point(63, 13));
		}
		public void InvokeCustomizationFormViaDoubleClickEmptySpace()
		{
			#region Variable Declarations
			DXTestControl uIBarDockControlCustom = this.UISimplePadCDemoWindow.UIBarDockControlCustom;
			#endregion
			Mouse.DoubleClick(uIBarDockControlCustom, new Point(356, 65));
		}
		public void InvokeExportCommandViaBackstageViewControl()
		{
			#region Variable Declarations
			DXButton uIRibbonApplicationButButton = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonApplicationButButton;
			DXTestControl uIExportTabPage = this.UINewDocument1RibbonSiWindow2.UIBackstageViewControlCustom.UIExportTabPage;
			DXTestControl uIRTFFileGalleryItem = this.UINewDocument1RibbonSiWindow2.UIBackstageViewControlCustom.UIBackstageViewClientCCustom.UIExportGalleryCustom.UIExportGalleryGallery.UIGroup1GalleryItemGroup.UIRTFFileGalleryItem;
			#endregion
			Mouse.Click(uIRibbonApplicationButButton, new Point(46, 12));
			Mouse.Click(uIExportTabPage, new Point(63, 22));
			Mouse.Click(uIRTFFileGalleryItem, new Point(73, 11));
		}
		public void InvokePrintSettingsDialogViaBackstageViewControl()
		{
			#region Variable Declarations
			DXButton uIRibbonApplicationButButton = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonApplicationButButton;
			DXTestControl uIPrintTabPage = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIPrintTabPage;
			#endregion
			Mouse.Click(uIRibbonApplicationButButton, new Point(36, 10));
			Mouse.Click(uIPrintTabPage, new Point(49, 25));
		}
		public void InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTips()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.Click(uIRibbonControl1Ribbon, new Point(326, 20));
			Keyboard.SendKeys(uIRichTextBox1Edit, this.InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon, this.InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams.UIRibbonControl1RibbonSendKeys, ModifierKeys.None);
			Mouse.Click(uIRichTextBox1Edit, new Point(224, 88));
		}
		public void InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTips()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon1 = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.Click(uIRibbonControl1Ribbon1, new Point(424, 25));
			Keyboard.SendKeys(uIRichTextBox1Edit, this.InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon1, this.InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams.UIRibbonControl1Ribbon1SendKeys, ModifierKeys.None);
			Mouse.Click(uIRichTextBox1Edit, new Point(410, 205));
		}
		public void InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTips()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbon uIRibbonControl1Ribbon1 = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1;
			#endregion
			Keyboard.SendKeys(uIRichTextBox1Edit, this.InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon1, this.InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams.UIRibbonControl1Ribbon1SendKeys, ModifierKeys.None);
			Mouse.Click(uIRichTextBox1Edit, new Point(428, 140));
		}
		public void InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButton()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbon uIRibbonControl1Ribbon1 = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1;
			DXTestControl uIColorCellsControlClient = this.UIItemWindow.UIPopupContainerFormCustom1.UIPopupContainerBarConMenu.UIPopupControlContaineClient.UIXtraTabControlTabList.UIXtraTabPageClient.UIColorCellsControlClient;
			#endregion
			Keyboard.SendKeys(uIRichTextBox1Edit, this.InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon1, this.InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams.UIRibbonControl1Ribbon1SendKeys, ModifierKeys.None);
			Mouse.Click(uIColorCellsControlClient, new Point(80, 94));
		}
		public void InvokeRibbonPasteCommandViaShortcut()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon;
			#endregion
			Keyboard.SendKeys(uIRibbonControl1Ribbon, this.InvokeRibbonPasteCommandViaShortcutParams.UIRibbonControl1RibbonSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon, this.InvokeRibbonPasteCommandViaShortcutParams.UIRibbonControl1RibbonSendKeys1, ModifierKeys.Control);
		}
		public void InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTips()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon;
			#endregion
			Keyboard.SendKeys(uIRichTextBox1Edit, this.InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon, this.InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams.UIRibbonControl1RibbonSendKeys, ModifierKeys.None);
		}
		public void InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTips()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon1 = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.Click(uIRibbonControl1Ribbon1, new Point(569, 15));
			Keyboard.SendKeys(uIRichTextBox1Edit, this.InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon1, this.InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams.UIRibbonControl1Ribbon1SendKeys, ModifierKeys.None);
		}
		public void InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTips()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbon uIRibbonControl1Ribbon1 = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1;
			#endregion
			Keyboard.SendKeys(uIRichTextBox1Edit, this.InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams.UIRichTextBox1EditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRibbonControl1Ribbon1, this.InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams.UIRibbonControl1Ribbon1SendKeys, ModifierKeys.None);
		}
		public void MakeColumnNonFixedAndScroll()
		{
			#region Variable Declarations
			DXColumnHeader uIColCompanyNameColumnHeader = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIColCompanyNameColumnHeader;
			DXMenuItem uINotFixedMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UINotFixedMenuItem;
			DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIHCrkScrollBarScrollBarControl;
			#endregion
			Mouse.Click(uIColCompanyNameColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(170, 7));
			Mouse.Click(uINotFixedMenuItem, new Point(27, 14));
			uIHCrkScrollBarScrollBarControl.ValueAsString = this.MakeColumnNonFixedAndScrollParams.UIHCrkScrollBarScrollBarControlValueAsString;
		}
		public void MakeFooterBrickFontSettings()
		{
			#region Variable Declarations
			DXMenuEditItem uIBarEditItemLink0BarEditItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UIBarEditItemLink0BarEditItem;
			WinComboBox uIFontComboBox = this.UIFontWindow.UIItemWindow.UIFontComboBox;
			WinButton uIOKButton = this.UIFontWindow.UIOKWindow.UIOKButton;
			#endregion
			Mouse.Click(uIBarEditItemLink0BarEditItem, new Point(171, 10));
			uIFontComboBox.EditableItem = this.MakeFooterBrickFontSettingsParams.UIFontComboBoxEditableItem;
			Mouse.Click(uIOKButton, new Point(27, 9));
		}
		public void MakePictureEditAutoHeightOptionSwitchOn()
		{
			#region Variable Declarations
			DXCheckBox uIChePictureCheckBox = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIPnlTopClient.UIChePictureCheckBox;
			#endregion
			uIChePictureCheckBox.Checked = this.MakePictureEditAutoHeightOptionSwitchOnParams.UIChePictureCheckBoxChecked;
		}
		public void MinimizeRibbonViaCtrlF1Shortcut()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.Click(uIRibbonControl1Ribbon, new Point(595, 29));
			Keyboard.SendKeys(uIRichTextBox1Edit, this.MinimizeRibbonViaCtrlF1ShortcutParams.UIRichTextBox1EditSendKeys, ModifierKeys.Control);
		}
		public void MinimizeRibbonViaDoubleClickTabPageHeader()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			#endregion
			Mouse.DoubleClick(uIRibbonPage1RibbonPage, new Point(24, 8));
		}
		public void MinimizeRibbonViaExpandCollapseButton()
		{
			#region Variable Declarations
			DXRibbonItem uIRibbonExpandCollapseRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIPageHeaderToolbarRibbonBar.UIRibbonExpandCollapseRibbonItem;
			#endregion
			Mouse.Click(uIRibbonExpandCollapseRibbonItem, new Point(11, 10));
		}
		public void MinimizeRibbonViaMinimizeTheRibbonOption()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIExitRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup9RibbonPageGroup.UIExitRibbonBaseButtonItem;
			DXMenuBaseButtonItem uIBarCheckItemLink0MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarCheckItemLink0MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIExitRibbonBaseButtonItem, MouseButtons.Right, ModifierKeys.None, new Point(16, 20));
			Mouse.Click(uIBarCheckItemLink0MenuBaseButtonItem, new Point(63, 12));
		}
		public void MoveDockedBarToFormBottom()
		{
			#region Variable Declarations
			DXMenu uIPaintStyleMenuBar = this.UISimplePadCDemoWindow.UIBarDockControlCustom4.UIPaintStyleMenuBar;
			#endregion
			uIPaintStyleMenuBar.DockInfoAsString = this.MoveDockedBarToFormBottomParams.UIPaintStyleMenuBarDockInfoAsString;
		}
		public void MoveDockedBarToNewPosition()
		{
			#region Variable Declarations
			DXMenu uIPaintStyleMenuBar = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIPaintStyleMenuBar;
			#endregion
			uIPaintStyleMenuBar.DockInfoAsString = this.MoveDockedBarToNewPositionParams.UIPaintStyleMenuBarDockInfoAsString;
		}
		public void MoveFocusToAnotherBarItemViaArrowKeys()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			DXMenu uIStandardMenuBar = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIStandardMenuBar;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToAnotherBarItemViaArrowKeysParams.UIRtPadEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIStandardMenuBar, this.MoveFocusToAnotherBarItemViaArrowKeysParams.UIStandardMenuBarSendKeys, ModifierKeys.None);
			uIRtPadEdit.Text = this.MoveFocusToAnotherBarItemViaArrowKeysParams.UIRtPadEditText;
		}
		public void MoveFocusToAnotherBarViaCtrlTabShortcut()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToAnotherBarViaCtrlTabShortcutParams.UIRtPadEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToAnotherBarViaCtrlTabShortcutParams.UIRtPadEditSendKeys1, ModifierKeys.Control);
		}
		public void MoveFocusToAnotherMainMenuItemViaArrowKeys()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToAnotherMainMenuItemViaArrowKeysParams.UIRtPadEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToAnotherMainMenuItemViaArrowKeysParams.UIRtPadEditSendKeys1, ModifierKeys.None);
		}
		public void MoveFocusToBarCommandViaUnderscoredLetter()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UISimplePadCDemoClient.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToBarCommandViaUnderscoredLetterParams.UIRtPadEditSendKeys, ModifierKeys.Alt);
		}
		public void MoveFocusToNextBarCommandViaTabKey()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToNextBarCommandViaTabKeyParams.UIRtPadEditSendKeys, ModifierKeys.None);
		}
		public void MoveFocusToNextMainMenuItemViaTabKey()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToNextMainMenuItemViaTabKeyParams.UIRtPadEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToNextMainMenuItemViaTabKeyParams.UIRtPadEditSendKeys1, ModifierKeys.None);
		}
		public void MoveFocusToPreviousCommandViaShiftTabShortcut()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToPreviousCommandViaShiftTabShortcutParams.UIRtPadEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToPreviousCommandViaShiftTabShortcutParams.UIRtPadEditSendKeys1, ModifierKeys.Control);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToPreviousCommandViaShiftTabShortcutParams.UIRtPadEditSendKeys2, ModifierKeys.Shift);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToPreviousCommandViaShiftTabShortcutParams.UIRtPadEditSendKeys3, ModifierKeys.Shift);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToPreviousCommandViaShiftTabShortcutParams.UIRtPadEditSendKeys4, ModifierKeys.None);
		}
		public void MoveFocusToPreviousMainMenuItemViaShiftTabShortcut()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams.UIRtPadEditSendKeys, ModifierKeys.Shift);
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams.UIRtPadEditSendKeys1, ModifierKeys.None);
		}
		public void MoveFocusToSubmenuViaRightArrowKey()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.MoveFocusToSubmenuViaRightArrowKeyParams.UIRtPadEditSendKeys, ModifierKeys.None);
		}
		public void MoveNavBarOverflowPanelSplitterDown()
		{
			#region Variable Declarations
			DXNavBar uINavBarControl1NavBar = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar;
			#endregion
			uINavBarControl1NavBar.NavigationPaneMaxVisibleGroups = this.MoveNavBarOverflowPanelSplitterDownParams.UINavBarControl1NavBarNavigationPaneMaxVisibleGroups;
		}
		public void MoveNavBarOverflowPanelSplitterUp()
		{
			#region Variable Declarations
			DXNavBar uINavBarControl1NavBar = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar;
			#endregion
			uINavBarControl1NavBar.NavigationPaneMaxVisibleGroups = this.MoveNavBarOverflowPanelSplitterUpParams.UINavBarControl1NavBarNavigationPaneMaxVisibleGroups;
		}
		public void MultiExtendedSelectionInListBoxViaKeyboard()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.MultiExtendedSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSelectedIndicesAsString;
			Keyboard.SendKeys(uIListBoxControlSampleList, this.MultiExtendedSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.MultiExtendedSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSendKeys1, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.MultiExtendedSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSendKeys2, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.MultiExtendedSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSendKeys3, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.MultiExtendedSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSendKeys4, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.MultiExtendedSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSendKeys5, ModifierKeys.Shift);
		}
		public void MultiExtendedSelectionInListBoxViaMouse()
		{
			#region Variable Declarations
			DXListBoxItem uIAngolaListItem = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList.UIAngolaListItem;
			DXListBoxItem uIArmeniaimageamListItem = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList.UIArmeniaimageamListItem;
			#endregion
			uIArmeniaimageamListItem.EnsureClickable(new Point(47, 5));
			Mouse.StartDragging(uIAngolaListItem, new Point(34, 7));
			Mouse.StopDragging(uIArmeniaimageamListItem, new Point(47, 5));
		}
		public void MultiSimpleSelectionInListBoxViaKeyboard()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.MultiSimpleSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSelectedIndicesAsString;
			Keyboard.SendKeys(uIListBoxControlSampleList, this.MultiSimpleSelectionInListBoxViaKeyboardParams.UIListBoxControlSampleListSendKeys, ModifierKeys.None);
		}
		public void MultiSimpleSelectionInListBoxViaMouse()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.MultiSimpleSelectionInListBoxViaMouseParams.UIListBoxControlSampleListSelectedIndicesAsString;
		}
		public void ObtainNavBarHitInfo()
		{
			#region Variable Declarations
			DXNavBarLink uIReportNavBarLink = this.UITheXtraNavBarSuiteDeWindow3.UIPanelControl1Client.UIGcContainerClient.UIHitInfoCustom.UIPanelControlClient.UINavBarControl1NavBar.UILocalNavBarGroup.UIReportNavBarLink;
			#endregion
			Mouse.Click(uIReportNavBarLink, new Point(0, 0));
		}
		public void OpenCustomizationFormAndRearrangeBarItems()
		{
			#region Variable Declarations
			DXMenuItem uIItalicBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIItalicBarItem;
			DXMenuItem uIBoldBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBoldBarItem;
			#endregion
			uIBoldBarItem.EnsureClickable(new Point(0, 9));
			Mouse.StartDragging(uIItalicBarItem, new Point(12, 9));
			Mouse.StopDragging(uIBoldBarItem, new Point(0, 9));
		}
		public void OpenDropDownButtonPopupControl()
		{
			#region Variable Declarations
			DXButton uIDropDownButtonArrowBButton = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDropDownButtonCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGcSampleClient.UIDropDownButtonButton.UIDropDownButtonArrowBButton;
			#endregion
			Mouse.Click(uIDropDownButtonArrowBButton, new Point(9, 21));
		}
		public void OpenRecentDocumentViaBackstageViewControl()
		{
			#region Variable Declarations
			DXButton uIRibbonApplicationButButton = this.UIDocument1rtfRibbonSiWindow1.UIRibbonControl1Ribbon.UIRibbonApplicationButButton;
			DXTestControl uIRecentTabPage = this.UIDocument1rtfRibbonSiWindow1.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIRecentTabPage;
			DXTestControl uIAppMenuFileLabelCustom = this.UIDocument1rtfRibbonSiWindow1.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIBackstageViewClientCCustom.UIAppMenuFileLabelCustom;
			#endregion
			Mouse.Click(uIRibbonApplicationButButton, new Point(40, 8));
			Mouse.Click(uIRecentTabPage, new Point(75, 12));
			Mouse.Click(uIAppMenuFileLabelCustom, new Point(74, 8));
		}
		public void RemoveCalendarButtonViaAddOrRemoveButtonMenuItem()
		{
			#region Variable Declarations
			DXNavBarOverflowPanelButton uIConfigureButtonNavBarOverflowPanelButton = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UIConfigureButtonNavBarOverflowPanelButton;
			DXMenuBaseButtonItem uICalendarMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIAddorRemoveButtonsMenuItem.UICalendarMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIConfigureButtonNavBarOverflowPanelButton, new Point(13, 16));
			Mouse.Click(uICalendarMenuBaseButtonItem, new Point(64, 8));
		}
		public void PressSimplePadMenuShortcut()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.PressSimplePadMenuShortcutParams.UIRtPadEditSendKeys, ModifierKeys.Control);
		}
		public void PressUnderscoredLetterForExpandMainMenuDropdownList()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.PressUnderscoredLetterForExpandMainMenuDropdownListParams.UIRtPadEditSendKeys, ModifierKeys.Alt);
		}
		public void RearrangeBarCommandWithAltKey()
		{
			#region Variable Declarations
			DXMenuItem uIItalicBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIItalicBarItem;
			DXMenuItem uIBoldBarItem = this.UISimplePadCDemoWindow.UIBarDockControlCustom.UIFormatMenuBar.UIBoldBarItem;
			#endregion
			uIBoldBarItem.EnsureClickable(new Point(9, 6));
			Mouse.StartDragging(uIItalicBarItem, new Point(10, 6), MouseButtons.Left, ModifierKeys.Alt);
			Mouse.StopDragging(uIBoldBarItem, new Point(9, 6));
		}
		public void RemoveNavBarGroupViaContextMenu()
		{
			#region Variable Declarations
			DXNavBarGroup uIDeletedNavBarGroup = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDeletedNavBarGroup;
			DXMenuBaseButtonItem uIBiRemoveGroupMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBiRemoveGroupMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIDeletedNavBarGroup, MouseButtons.Right, ModifierKeys.None, new Point(55, 16));
			Mouse.Click(uIBiRemoveGroupMenuBaseButtonItem, new Point(48, 8));
		}
		public void RemoveRibbonGroupFromRibbonQuickAccessToolbar()
		{
			#region Variable Declarations
			DXRibbonItem uIRibbonToolbarPopupItRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UIRibbonToolbarPopupItRibbonItem;
			DXMenuItem uIRemovefromQuickAccesMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIRemovefromQuickAccesMenuItem;
			#endregion
			Mouse.Click(uIRibbonToolbarPopupItRibbonItem, MouseButtons.Right, ModifierKeys.None, new Point(12, 10));
			Mouse.Click(uIRemovefromQuickAccesMenuItem, new Point(11, 8));
		}
		public void RemoveRibbonItemFromRibbonQuickAccessToolbar()
		{
			#region Variable Declarations
			DXRibbonItem uIReplaceRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UIReplaceRibbonItem;
			DXMenuItem uIRemovefromQuickAccesMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIRemovefromQuickAccesMenuItem;
			#endregion
			Mouse.Click(uIReplaceRibbonItem, MouseButtons.Right, ModifierKeys.None, new Point(18, 14));
			Mouse.Click(uIRemovefromQuickAccesMenuItem, new Point(18, 13));
		}
		public void RemoveSortingViaMouseAndHoldingDownCTRL()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client1.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			#endregion
			Mouse.Click(uIGridColumn3ColumnHeader, MouseButtons.Left, ModifierKeys.Control, new Point(67, 7));
		}
		public void RenameRibbonCategoryViaCustomizationForm()
		{
			#region Variable Declarations
			WinCheckBoxTreeItem uINewCategoryCustomCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UINewCategoryCustomCheckBoxTreeItem;
			DXButton uIBtnRenameButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UIBtnRenameButton;
			DXTextEdit uITextEditEdit = this.UIItemWindow6.UITextEditEdit;
			DXButton uISimpleButtonButton = this.UIItemWindow6.UISimpleButtonButton;
			#endregion
			Mouse.Click(uINewCategoryCustomCheckBoxTreeItem, new Point(36, 7));
			Mouse.Click(uIBtnRenameButton, new Point(1, 1));
			uITextEditEdit.ValueAsString = this.RenameRibbonCategoryViaCustomizationFormParams.UITextEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void RenameRibbonGroupViaCustomizationForm()
		{
			#region Variable Declarations
			WinTreeItem uINewGroupCustomTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UIGalleryPageCheckBoxTreeItem.UINewGroupCustomTreeItem;
			DXButton uIBtnRenameButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UIBtnRenameButton;
			DXTextEdit uITextEditEdit = this.UIItemWindow6.UITextEditEdit;
			DXButton uISimpleButtonButton = this.UIItemWindow6.UISimpleButtonButton;
			#endregion
			Mouse.Click(uINewGroupCustomTreeItem, new Point(22, 7));
			Mouse.Click(uIBtnRenameButton, new Point(1, 1));
			uITextEditEdit.ValueAsString = this.RenameRibbonGroupViaCustomizationFormParams.UITextEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void RenameRibbonTabViaCustomizationForm()
		{
			#region Variable Declarations
			WinCheckBoxTreeItem uINewTabCustomCheckBoxTreeItem = this.UIRibbonCustomizationWindow.UIRightPanelPane.UIRightTreeViewWindow.UIRightTreeViewTree.UIUnassignedPagesCheckBoxTreeItem.UINewTabCustomCheckBoxTreeItem;
			DXButton uIBtnRenameButton = this.UIRibbonCustomizationWindow1.UISubstratePanelClient.UIRibbonCustomizationUCustom.UIPanelControl1Client.UIBtnRenameButton;
			DXTextEdit uITextEditEdit = this.UIItemWindow6.UITextEditEdit;
			DXButton uISimpleButtonButton = this.UIItemWindow6.UISimpleButtonButton;
			#endregion
			Mouse.Click(uINewTabCustomCheckBoxTreeItem, new Point(23, 8));
			Mouse.Click(uIBtnRenameButton, new Point(1, 1));
			uITextEditEdit.ValueAsString = this.RenameRibbonTabViaCustomizationFormParams.UITextEditEditValueAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ReorderBandsViaDraggingOnAdvancedBandedGridView()
		{
			#region Variable Declarations
			DXGridBand uIGbImageGridBand = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGbImageGridBand;
			#endregion
			uIGbImageGridBand.BandPositionAsString = this.ReorderBandsViaDraggingOnAdvancedBandedGridViewParams.UIGbImageGridBandBandPositionAsString;
		}
		public void ReorderBandsViaDraggingOnBandedGridView()
		{
			#region Variable Declarations
			DXGridBand uIGridBand4GridBand = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGridBand4GridBand;
			#endregion
			uIGridBand4GridBand.BandPositionAsString = this.ReorderBandsViaDraggingOnBandedGridViewParams.UIGridBand4GridBandBandPositionAsString;
		}
		public void ReorderColumnsViaDragging()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			#endregion
			uIGridColumn3ColumnHeader.ColumnPositionAsString = this.ReorderColumnsViaDraggingParams.UIGridColumn3ColumnHeaderColumnPositionAsString;
		}
		public void ReplaceInRibbonRichEditViaClickRibbonItem()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIReplaceRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UIReplaceRibbonBaseButtonItem;
			DXTextEdit uITxtFindEdit = this.UIItemWindow8.UITxtFindEdit;
			DXTextEdit uITxtReplaceEdit = this.UIItemWindow8.UITxtReplaceEdit;
			DXCheckBox uICheckEditCheckBox = this.UIItemWindow8.UICheckEditCheckBox;
			DXButton uISimpleButtonButton = this.UIItemWindow8.UISimpleButtonButton;
			DXButton uICloseButton = this.UIItemWindow8.UICloseButton;
			#endregion
			Mouse.Click(uIReplaceRibbonBaseButtonItem, new Point(13, 6));
			uITxtFindEdit.ValueAsString = this.ReplaceInRibbonRichEditViaClickRibbonItemParams.UITxtFindEditValueAsString;
			Keyboard.SendKeys(uITxtFindEdit, this.ReplaceInRibbonRichEditViaClickRibbonItemParams.UITxtFindEditSendKeys, ModifierKeys.None);
			uITxtReplaceEdit.ValueAsString = this.ReplaceInRibbonRichEditViaClickRibbonItemParams.UITxtReplaceEditValueAsString;
			uICheckEditCheckBox.Checked = this.ReplaceInRibbonRichEditViaClickRibbonItemParams.UICheckEditCheckBoxChecked;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
			Mouse.Click(uICloseButton, new Point(17, 8));
		}
		public void ReplaceInRibbonRichEditViaCtrlHShortcut()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXTextEdit uITextEditEdit = this.UIReplaceWindow.UITextEditEdit;
			DXTextEdit uITextEditEdit1 = this.UIReplaceWindow.UITextEditEdit1;
			DXCheckBox uIPropertyReadingErrorCheckBox = this.UIReplaceWindow.UIPropertyReadingErrorCheckBox;
			DXButton uISimpleButtonButton = this.UIReplaceWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIRibbonControl1Ribbon, new Point(339, 16));
			Keyboard.SendKeys(uIRichTextBox1Edit, this.ReplaceInRibbonRichEditViaCtrlHShortcutParams.UIRichTextBox1EditSendKeys, ModifierKeys.Control);
			uITextEditEdit.ValueAsString = this.ReplaceInRibbonRichEditViaCtrlHShortcutParams.UITextEditEditValueAsString;
			Keyboard.SendKeys(uITextEditEdit, this.ReplaceInRibbonRichEditViaCtrlHShortcutParams.UITextEditEditSendKeys, ModifierKeys.None);
			uITextEditEdit1.ValueAsString = this.ReplaceInRibbonRichEditViaCtrlHShortcutParams.UITextEditEdit1ValueAsString;
			uIPropertyReadingErrorCheckBox.Checked = this.ReplaceInRibbonRichEditViaCtrlHShortcutParams.UIPropertyReadingErrorCheckBoxChecked;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void ResetAllRibbonCustomizations()
		{
			#region Variable Declarations
			DXRibbonPageGroup uIRibbonPageGroup6RibbonPageGroup = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon1.UIRibbonPage2RibbonPage.UIRibbonPageGroup6RibbonPageGroup;
			DXMenuBaseButtonItem uICustomizetheRibbonMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UICustomizetheRibbonMenuBaseButtonItem;
			DXButton uIDropDownButtonArrowBButton = this.UIRibbonCustomizationFWindow.UISubstratePanelClient1.UIRibbonCustomizationUCustom.UIPanelControl1Client.UIResetOptonsDropDownBButton.UIDropDownButtonArrowBButton;
			WinMenuItem uIResetallcustomizatioMenuItem = this.UIItemWindow12.UIContextMenu.UIResetallcustomizatioMenuItem;
			#endregion
			Mouse.Click(uIRibbonPageGroup6RibbonPageGroup, MouseButtons.Right, ModifierKeys.None, new Point(40, 79));
			Mouse.Click(uICustomizetheRibbonMenuBaseButtonItem, new Point(97, 12));
			Mouse.Click(uIDropDownButtonArrowBButton, new Point(2, 13));
			Mouse.Click(uIResetallcustomizatioMenuItem, new Point(69, 13));
		}
		public void ResizeBandViaDraggingRightEdgeOnAdvancedBandedGridView()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.BandWidthAsString = this.ResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams.UIGridControl1TableBandWidthAsString;
		}
		public void ResizeBandViaDraggingRightEdgeOnBandedGridView()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.BandWidthAsString = this.ResizeBandViaDraggingRightEdgeOnBandedGridViewParams.UIGridControl1TableBandWidthAsString;
		}
		public void ResizeColumnViaBestFitOption()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			DXMenuItem uIBestFitMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBestFitMenuItem;
			#endregion
			Mouse.Click(uIGridColumn3ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(89, 5));
			Mouse.Click(uIBestFitMenuItem, new Point(81, 6));
		}
		public void ResizeColumnViaDraggingRightEdge()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.ColumnWidthAsString = this.ResizeColumnViaDraggingRightEdgeParams.UIGridControl1TableColumnWidthAsString;
		}
		public void ResizeFixedBand()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table;
			#endregion
			uIGridControl1Table.BandWidthAsString = this.ResizeFixedBandParams.UIGridControl1TableBandWidthAsString;
		}
		public void ResizeRibbonViaDraggingRightEdgeForAssertionQuickAccessToolbarRightPointingDoubleArrowButton()
		{
			#region Variable Declarations
			DXTestControl uISizeGripCustom = this.UINewDocument1RibbonSiWindow11.UIRibbonStatusBar1MenuBar.UISizeGripCustom;
			#endregion
			Mouse.StartDragging(uISizeGripCustom, new Point(10, 10));
			Mouse.StopDragging(uISizeGripCustom, -300, 0);
		}
		public void RestoreDefaultToolbarLayoutViaCustomizationForm()
		{
			#region Variable Declarations
			DXCheckedListBox uICheckedListBoxControCheckedListBox = this.UIWindowsForms10WindowWindow.UIXtraTabControlTabList.UIXtraTabPageClient.UICheckedListBoxControCheckedListBox;
			DXButton uISimpleButtonButton = this.UIWindowsForms10WindowWindow.UIXtraTabControlTabList.UIXtraTabPageClient.UISimpleButtonButton;
			DXButton uISimpleButtonButton1 = this.UIItemWindow.UIXtraMessageBoxFormWindow.UISimpleButtonButton;
			DXButton uISimpleButtonButton2 = this.UIWindowsForms10WindowWindow.UISimpleButtonButton;
			#endregion
			uICheckedListBoxControCheckedListBox.SelectedIndicesAsString = this.RestoreDefaultToolbarLayoutViaCustomizationFormParams.UICheckedListBoxControCheckedListBoxSelectedIndicesAsString;
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
			Mouse.Click(uISimpleButtonButton1, new Point(1, 1));
			Mouse.Click(uISimpleButtonButton2, new Point(1, 1));
		}
		public void RestoreDefaultToolbarLayoutViaQuickCustomization()
		{
			#region Variable Declarations
			DXMenuItem uIBarCustomizationItemBarItem = this.UISimplePadCDemoWindow1.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem;
			DXMenuItem uIFormatMenuItem = this.UISimplePadCDemoWindow1.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem.UIAddorRemoveButtonsMenuItem.UIFormatMenuItem;
			DXMenuBaseButtonItem uIResetToolbarMenuBaseButtonItem = this.UISimplePadCDemoWindow1.UIBarDockControlCustom.UIFormatMenuBar.UIBarCustomizationItemBarItem.UIAddorRemoveButtonsMenuItem.UIFormatMenuItem.UIResetToolbarMenuBaseButtonItem;
			DXButton uISimpleButtonButton = this.UIItemWindow.UIXtraMessageBoxFormWindow.UISimpleButtonButton;
			#endregion
			Mouse.Click(uIBarCustomizationItemBarItem, new Point(5, 15));
			Mouse.Click(uIFormatMenuItem, new Point(29, 7));
			Mouse.Click(uIResetToolbarMenuBaseButtonItem, new Point(76, 10));
			Mouse.Click(uISimpleButtonButton, new Point(1, 1));
		}
		public void RowSelectionViaMouse()
		{
			#region Variable Declarations
			DXTestControl uIGridControlRowIndicaRowHeader4 = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIGridControlRowIndicaRowHeader4;
			DXTestControl uIGridControlRowIndicaRowHeader5 = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIGridControlRowIndicaRowHeader5;
			DXCell uIBsBeveragesCell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIBsBeveragesCell;
			#endregion
			Mouse.Click(uIGridControlRowIndicaRowHeader4, new Point(3, 11));
			uIBsBeveragesCell.EnsureClickable(new Point(34, 0));
			Mouse.StartDragging(uIGridControlRowIndicaRowHeader5, new Point(8, 11));
			Mouse.StopDragging(uIBsBeveragesCell, new Point(34, 0));
		}
		public void RowSelectionViaMouseAndHoldingDownCTRL()
		{
			#region Variable Declarations
			DXTestControl uIGridControlRowIndicaRowHeader6 = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIGridControlRowIndicaRowHeader6;
			DXCell uIBerglundssnabbköpCell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIBerglundssnabbköpCell;
			DXTestControl uIGridControlRowIndicaRowHeader1 = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIGridControlRowIndicaRowHeader1;
			DXTestControl uIGridControlRowIndicaRowHeader3 = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIGridControlRowIndicaRowHeader3;
			DXTestControl uIGridControlRowIndicaRowHeader31 = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table.UIGridControlRowIndicaRowHeader31;
			#endregion
			uIBerglundssnabbköpCell.EnsureClickable(new Point(4, 8));
			Mouse.StartDragging(uIGridControlRowIndicaRowHeader6, new Point(6, 7));
			Mouse.StopDragging(uIBerglundssnabbköpCell, new Point(4, 8));
			Mouse.Click(uIGridControlRowIndicaRowHeader1, MouseButtons.Left, ModifierKeys.Control, new Point(9, 10));
			Mouse.StartDragging(uIGridControlRowIndicaRowHeader3, new Point(9, 16), MouseButtons.Left, ModifierKeys.Control);
			Mouse.StopDragging(uIGridControlRowIndicaRowHeader3, -1, -6);
			Mouse.Click(uIGridControlRowIndicaRowHeader31, MouseButtons.Left, ModifierKeys.Control, new Point(7, 11));
		}
		public void ScrollingInFixedBandsAndGroupingTabViaKeyboard()
		{
			#region Variable Declarations
			DXGrid uIGridControl2Table = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table;
			DXTextEdit uISpinEditEdit = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit;
			DXTextEdit uISpinEditEdit1 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit1;
			DXTextEdit uISpinEditEdit2 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit2;
			DXTextEdit uISpinEditEdit3 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit3;
			DXTextEdit uISpinEditEdit4 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit4;
			DXTextEdit uISpinEditEdit5 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit5;
			DXTextEdit uISpinEditEdit6 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit6;
			DXTextEdit uISpinEditEdit7 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit7;
			DXTextEdit uISpinEditEdit8 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit8;
			DXTextEdit uISpinEditEdit9 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit9;
			DXTextEdit uISpinEditEdit10 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UISpinEditEdit10;
			#endregion
			uIGridControl2Table.FocusedCellAsString = this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UIGridControl2TableFocusedCellAsString;
			uISpinEditEdit.ValueAsString = this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEditValueAsString;
			Keyboard.SendKeys(uISpinEditEdit, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit1, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit1SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit2, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit2SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit3, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit3SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit4, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit4SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit5, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit5SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit6, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit6SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit7, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit7SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit8, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit8SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit9, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit9SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit10, this.ScrollingInFixedBandsAndGroupingTabViaKeyboardParams.UISpinEditEdit10SendKeys, ModifierKeys.None);
		}
		public void ScrollingInFixedBandsAndGroupingTabViaMouse()
		{
			#region Variable Declarations
			DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIHCrkScrollBarScrollBarControl;
			#endregion
			uIHCrkScrollBarScrollBarControl.ValueAsString = this.ScrollingInFixedBandsAndGroupingTabViaMouseParams.UIHCrkScrollBarScrollBarControlValueAsString;
		}
		public void ScrollingInSimpleFixedBandsTabViaKeyboard()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table;
			DXTextEdit uISpinEditEdit = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit;
			DXTextEdit uISpinEditEdit1 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit1;
			DXTextEdit uISpinEditEdit2 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit2;
			DXTextEdit uISpinEditEdit3 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit3;
			DXTextEdit uISpinEditEdit4 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit4;
			DXTextEdit uISpinEditEdit5 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit5;
			DXTextEdit uISpinEditEdit6 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit6;
			DXTextEdit uISpinEditEdit7 = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UISpinEditEdit7;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UIGridControl1TableFocusedCellAsString;
			uISpinEditEdit.ValueAsString = this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEditValueAsString;
			Keyboard.SendKeys(uISpinEditEdit, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEditSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit1, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEdit1SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit2, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEdit2SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit3, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEdit3SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit4, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEdit4SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit5, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEdit5SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit6, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEdit6SendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uISpinEditEdit7, this.ScrollingInSimpleFixedBandsTabViaKeyboardParams.UISpinEditEdit7SendKeys, ModifierKeys.None);
		}
		public void ScrollingInSimpleFixedBandsTabViaMouse()
		{
			#region Variable Declarations
			DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UIHCrkScrollBarScrollBarControl;
			#endregion
			uIHCrkScrollBarScrollBarControl.ValueAsString = this.ScrollingInSimpleFixedBandsTabViaMouseParams.UIHCrkScrollBarScrollBarControlValueAsString;
		}
		public void ScrollingRibbonViaRightScrollButton()
		{
			#region Variable Declarations
			DXButton uIRibbonPanelRightScroButton = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonPanelRightScroButton;
			#endregion
			Mouse.Click(uIRibbonPanelRightScroButton, new Point(8, 43));
			Mouse.Click(uIRibbonPanelRightScroButton, new Point(8, 43));
			Mouse.Click(uIRibbonPanelRightScroButton, new Point(8, 43));
			Mouse.Click(uIRibbonPanelRightScroButton, new Point(8, 43));
		}
		public void ScrollPrintPreviewViaHScrollBar()
		{
			#region Variable Declarations
			DXScrollBar uIHScrollBarScrollBarControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIHScrollBarScrollBarControl;
			#endregion
			uIHScrollBarScrollBarControl.ValueAsString = this.ScrollPrintPreviewViaHScrollBarParams.UIHScrollBarScrollBarControlValueAsString;
		}
		public void ScrollPrintPreviewViaVScrollBar()
		{
			#region Variable Declarations
			DXScrollBar uIVScrollBarScrollBarControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIVScrollBarScrollBarControl;
			#endregion
			uIVScrollBarScrollBarControl.ValueAsString = this.ScrollPrintPreviewViaVScrollBarParams.UIVScrollBarScrollBarControlValueAsString;
		}
		public void ScrollTableLayoutToEnd()
		{
			#region Variable Declarations
			DXScrollBar uIVCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIVCrkScrollBarScrollBarControl;
			#endregion
			uIVCrkScrollBarScrollBarControl.ValueAsString = this.ScrollTableLayoutToEndParams.UIVCrkScrollBarScrollBarControlValueAsString;
		}
		public void ScrollTableLayoutToTop()
		{
			#region Variable Declarations
			DXScrollBar uIVCrkScrollBarScrollBarControl = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIVCrkScrollBarScrollBarControl;
			#endregion
			uIVCrkScrollBarScrollBarControl.ValueAsString = this.ScrollTableLayoutToTopParams.UIVCrkScrollBarScrollBarControlValueAsString;
		}
		public void SelectAllCells()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIGridControl1Table;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.SelectAllCellsParams.UIGridControl1TableFocusedCellAsString;
			Keyboard.SendKeys(uIGridControl1Table, this.SelectAllCellsParams.UIGridControl1TableSendKeys, ModifierKeys.Control);
		}
		public void SelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbonPage uIRibbonPage0RibbonPage = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPageCategory1RibbonPageCategory.UIRibbonPage0RibbonPage;
			DXRibbonButtonItem uICutRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPageCategory1RibbonPageCategory.UIRibbonPage0RibbonPage.UIRibbonPageGroup0RibbonPageGroup.UICutRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRichTextBox1Edit, new Point(214, 105));
			Mouse.StartDragging(uIRichTextBox1Edit, new Point(25, 11));
			Mouse.StopDragging(uIRichTextBox1Edit, -19, 0);
			Mouse.Click(uIRibbonPage0RibbonPage, new Point(14, 13));
			uICutRibbonBaseButtonItem.PerformClick = this.SelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams.UICutRibbonBaseButtonItemPerformClick;
		}
		public void SelectAndCutRibbonRichEditTextViaAddedRibbonGroupItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbonPage uIRibbonPage3RibbonPage = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage;
			DXRibbonButtonItem uICutRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon1.UIRibbonPage3RibbonPage.UIRibbonPageGroup3RibbonPageGroup.UICutRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRichTextBox1Edit, new Point(214, 105));
			Mouse.StartDragging(uIRichTextBox1Edit, new Point(25, 11));
			Mouse.StopDragging(uIRichTextBox1Edit, -19, 0);
			Mouse.Click(uIRibbonPage3RibbonPage, new Point(47, 6));
			uICutRibbonBaseButtonItem.PerformClick = this.SelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams.UICutRibbonBaseButtonItemPerformClick;
		}
		public void SelectAndCutRibbonRichEditTextViaAddedRibbonTabItem()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UINewDocument1Window.UINewDocument1Client.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXRibbonPage uIRibbonPage2RibbonPage = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPage2RibbonPage;
			DXRibbonButtonItem uICutRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow11.UIRibbonControl1Ribbon.UIRibbonPage2RibbonPage.UIRibbonPageGroup0RibbonPageGroup.UICutRibbonBaseButtonItem;
			#endregion
			Mouse.StartDragging(uIRichTextBox1Edit, new Point(49, 16));
			Mouse.StopDragging(uIRichTextBox1Edit, -39, 3);
			Mouse.Click(uIRibbonPage2RibbonPage, new Point(45, 17));
			uICutRibbonBaseButtonItem.PerformClick = this.SelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams.UICutRibbonBaseButtonItemPerformClick;
		}
		public void SelectCheckedListBoxValuesViaKeyboard()
		{
			#region Variable Declarations
			DXCheckedListBox uICheckedListBoxControCheckedListBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UICheckedListBoxControCheckedListBox;
			#endregion
			uICheckedListBoxControCheckedListBox.CheckedIndicesAsString = this.SelectCheckedListBoxValuesViaKeyboardParams.UICheckedListBoxControCheckedListBoxCheckedIndicesAsString;
		}
		public void SelectCheckedListBoxValuesViaMouse()
		{
			#region Variable Declarations
			DXCheckedListBox uICheckedListBoxControCheckedListBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UICheckedListBoxControCheckedListBox;
			#endregion
			uICheckedListBoxControCheckedListBox.CheckedIndicesAsString = this.SelectCheckedListBoxValuesViaMouseParams.UICheckedListBoxControCheckedListBoxCheckedIndicesAsString;
		}
		public void SelectFromMRUEditDropDownListViaF4KeyAndKeyboard()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			uIMruEditSampleMRUEdit.ValueAsString = this.SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams.UIMruEditSampleMRUEditValueAsString;
			Keyboard.SendKeys(uIMruEditSampleMRUEdit, this.SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams.UIMruEditSampleMRUEditSendKeys, ModifierKeys.None);
			uIMruEditSampleMRUEdit.MRUItemsAsString = this.SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams.UIMruEditSampleMRUEditMRUItemsAsString;
		}
		public void SelectFromMRUEditDropDownListViaKeyboard()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			uIMruEditSampleMRUEdit.ValueAsString = this.SelectFromMRUEditDropDownListViaKeyboardParams.UIMruEditSampleMRUEditValueAsString;
			Keyboard.SendKeys(uIMruEditSampleMRUEdit, this.SelectFromMRUEditDropDownListViaKeyboardParams.UIMruEditSampleMRUEditSendKeys, ModifierKeys.None);
			uIMruEditSampleMRUEdit.MRUItemsAsString = this.SelectFromMRUEditDropDownListViaKeyboardParams.UIMruEditSampleMRUEditMRUItemsAsString;
		}
		public void SelectFromMRUEditDropDownListViaMouse()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			uIMruEditSampleMRUEdit.MRUItemsAsString = this.SelectFromMRUEditDropDownListViaMouseParams.UIMruEditSampleMRUEditMRUItemsAsString;
			uIMruEditSampleMRUEdit.ValueAsString = this.SelectFromMRUEditDropDownListViaMouseParams.UIMruEditSampleMRUEditValueAsString;
		}
		public void SelectionRibbonRichEditTextViaMouse()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			Mouse.StartDragging(uIRichTextBox1Edit, new Point(21, 7));
			Mouse.StopDragging(uIRichTextBox1Edit, -16, 4);
		}
		public void SelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcut()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIMdiClientTabList.UINewDocument1Window.UIRichTextBox1Custom.UIRichTextBox1Edit;
			DXMenuBaseButtonItem uIICopyMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIICopyMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRichTextBox1Edit, new Point(142, 40));
			Keyboard.SendKeys(uIRichTextBox1Edit, this.SelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams.UIRichTextBox1EditSendKeys, ModifierKeys.Control);
			Mouse.Click(uIRichTextBox1Edit, MouseButtons.Right, ModifierKeys.None, new Point(9, 7));
			Mouse.Click(uIICopyMenuBaseButtonItem, new Point(24, 17));
			Mouse.Click(uIRichTextBox1Edit, new Point(103, 44));
		}
		public void SelectListBoxValueViaKeyboard()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.SelectListBoxValueViaKeyboardParams.UIListBoxControlSampleListSelectedIndicesAsString;
			Keyboard.SendKeys(uIListBoxControlSampleList, this.SelectListBoxValueViaKeyboardParams.UIListBoxControlSampleListSendKeys, ModifierKeys.None);
		}
		public void SelectListBoxValueViaMouse()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.SelectListBoxValueViaMouseParams.UIListBoxControlSampleListSelectedIndicesAsString;
		}
		public void SelectRadioItemViaKeyboard()
		{
			#region Variable Declarations
			DXRadioGroup uIRadioGroupSampleRadioGroup = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleRadioGroupCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIRadioGroupSampleRadioGroup;
			#endregion
			uIRadioGroupSampleRadioGroup.SelectedIndex = this.SelectRadioItemViaKeyboardParams.UIRadioGroupSampleRadioGroupSelectedIndex;
			Keyboard.SendKeys(uIRadioGroupSampleRadioGroup, this.SelectRadioItemViaKeyboardParams.UIRadioGroupSampleRadioGroupSendKeys, ModifierKeys.None);
		}
		public void SelectRadioItemViaMouse()
		{
			#region Variable Declarations
			DXRadioGroup uIRadioGroupSampleRadioGroup = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleRadioGroupCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIRadioGroupSampleRadioGroup;
			#endregion
			uIRadioGroupSampleRadioGroup.SelectedIndex = this.SelectRadioItemViaMouseParams.UIRadioGroupSampleRadioGroupSelectedIndex;
		}
		public void SelectRadioItemViaMouseWheelScroll()
		{
			#region Variable Declarations
			DXRadioGroup uIRadioGroupSampleRadioGroup = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleRadioGroupCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIRadioGroupSampleRadioGroup;
			#endregion
			uIRadioGroupSampleRadioGroup.SelectedIndex = this.SelectRadioItemViaMouseWheelScrollParams.UIRadioGroupSampleRadioGroupSelectedIndex;
		}
		public void SelectTextInMemoEditViaKeyboard()
		{
			#region Variable Declarations
			DXTextEdit uIMemoEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMemoEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoEditSampleEdit;
			#endregion
			uIMemoEditSampleEdit.ValueAsString = this.SelectTextInMemoEditViaKeyboardParams.UIMemoEditSampleEditValueAsString;
		}
		public void SelectTextInMemoEditViaMouse()
		{
			#region Variable Declarations
			DXTextEdit uIMemoEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMemoEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoEditSampleEdit;
			#endregion
			uIMemoEditSampleEdit.ValueAsString = this.SelectTextInMemoEditViaMouseParams.UIMemoEditSampleEditValueAsString;
		}
		public void SelectTextInTextEditViaKeyboard()
		{
			#region Variable Declarations
			DXTextEdit uITextEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTextEditCustom.UITabctrlTextEditTabList.UITabpgGeneralClient.UIPanelControl1Client.UITextEditSampleEdit;
			#endregion
			uITextEditSampleEdit.ValueAsString = this.SelectTextInTextEditViaKeyboardParams.UITextEditSampleEditValueAsString;
		}
		public void SelectTextInTextEditViaMouse()
		{
			#region Variable Declarations
			DXTextEdit uITextEditSampleEdit = this.UITheXtraEditorsSuiteDWindow3.UIPanelControl1Client.UIGcContainerClient.UIModuleTextEditCustom.UITabctrlTextEditTabList.UITabpgGeneralClient.UIPanelControl1Client.UITextEditSampleEdit;
			#endregion
			uITextEditSampleEdit.ValueAsString = this.SelectTextInTextEditViaMouseParams.UITextEditSampleEditValueAsString;
		}
		public void ShowRibbonQuickAccessToolbarAboveRibbon()
		{
			#region Variable Declarations
			DXRibbonItem uICustomizeToolbarRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UICustomizeToolbarRibbonItem;
			DXMenuItem uIShowQuickAccessToolbMenuItem1 = this.UIItemWindow.UIPopupMenuBarControlMenu.UIShowQuickAccessToolbMenuItem1;
			#endregion
			Mouse.Click(uICustomizeToolbarRibbonItem, MouseButtons.Right, ModifierKeys.None, new Point(11, 7));
			Mouse.Click(uIShowQuickAccessToolbMenuItem1, new Point(17, 5));
		}
		public void ShowRibbonQuickAccessToolbarBelowRibbon()
		{
			#region Variable Declarations
			DXRibbon uIRibbonControl1Ribbon = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon;
			DXRibbonItem uICustomizeToolbarRibbonItem = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UICustomizeToolbarRibbonItem;
			DXMenuItem uIShowQuickAccessToolbMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIShowQuickAccessToolbMenuItem;
			#endregion
			Mouse.Click(uIRibbonControl1Ribbon, new Point(330, 33));
			Mouse.Click(uICustomizeToolbarRibbonItem, MouseButtons.Right, ModifierKeys.None, new Point(7, 11));
			Mouse.Click(uIShowQuickAccessToolbMenuItem, new Point(56, 12));
		}
		public void SortAscendingDataViaContextMenu()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client1.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			DXMenuBaseButtonItem uISortAscendingMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UISortAscendingMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIGridColumn3ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(58, 9));
			Mouse.Click(uISortAscendingMenuBaseButtonItem, new Point(17, 12));
		}
		public void SortAscendingDataViaMouse()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client1.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			#endregion
			Mouse.Click(uIGridColumn3ColumnHeader, new Point(64, 8));
		}
		public void SortDescendingDataViaContextMenu()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client1.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			DXMenuBaseButtonItem uISortDescendingMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu8.UISortDescendingMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIGridColumn3ColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(61, 8));
			Mouse.Click(uISortDescendingMenuBaseButtonItem, new Point(21, 9));
		}
		public void SortDescendingDataViaMouse()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client1.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			#endregion
			Mouse.Click(uIGridColumn3ColumnHeader, new Point(76, 6));
			Mouse.Click(uIGridColumn3ColumnHeader, new Point(76, 6));
		}
		public void SortingDataByPriceAverageAscending()
		{
			#region Variable Declarations
			DXComboBox uICbeSortingComboBox = this.UIXtraGridFeaturesDemoWindow18.UIPanelControl1Client.UIGcContainerClient.UISortingBySummaryCustom.UIPanelControl1Client.UICbeSortingComboBox;
			#endregion
			uICbeSortingComboBox.ValueAsString = this.SortingDataByPriceAverageAscendingParams.UICbeSortingComboBoxValueAsString;
		}
		public void SwitchDropDownControlToPopupControlContrainer()
		{
			#region Variable Declarations
			DXComboBox uIIcbDropDownControlComboBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleDropDownButtonCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGroupControl2Client.UIIcbDropDownControlComboBox;
			#endregion
			uIIcbDropDownControlComboBox.ValueTypeName = this.SwitchDropDownControlToPopupControlContrainerParams.UIIcbDropDownControlComboBoxValueTypeName;
			uIIcbDropDownControlComboBox.ValueAsString = this.SwitchDropDownControlToPopupControlContrainerParams.UIIcbDropDownControlComboBoxValueAsString;
		}
		public void SwitchFindModeToFindClick()
		{
			#region Variable Declarations
			DXComboBox uIIcbFindModeComboBox = this.UIXtraGridFeaturesDemoWindow12.UIPanelControl1Client.UIGcContainerClient.UIFindFilterCustom.UILayoutControl1Custom.UIPanelControl1Client.UIUcFindOptions1Custom.UILayoutControl1Custom.UIIcbFindModeComboBox;
			#endregion
			uIIcbFindModeComboBox.ValueTypeName = this.SwitchFindModeToFindClickParams.UIIcbFindModeComboBoxValueTypeName;
			uIIcbFindModeComboBox.ValueAsString = this.SwitchFindModeToFindClickParams.UIIcbFindModeComboBoxValueAsString;
		}
		public void SwitchFocusToMainMenu()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UIRtPadWindow.UIRtPadEdit;
			#endregion
			Keyboard.SendKeys(uIRtPadEdit, this.SwitchFocusToMainMenuParams.UIRtPadEditSendKeys, ModifierKeys.None);
		}
		public void SwitchGridLookUpEditorDemoModuleToInPlaceTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraGridFeaturesDemoWindow8.UIPanelControl1Client.UIGcContainerClient.UIGridLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabControlHeaderTabPage;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(39, 6));
		}
		public void SwitchGroupingModeToCustomInterval()
		{
			#region Variable Declarations
			DXComboBox uICbeIntervalComboBox = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIPanelControl1Client.UICbeIntervalComboBox;
			#endregion
			uICbeIntervalComboBox.ValueAsString = this.SwitchGroupingModeToCustomIntervalParams.UICbeIntervalComboBoxValueAsString;
		}
		public void SwitchGroupingModeToDateMonth()
		{
			#region Variable Declarations
			DXComboBox uICbeIntervalComboBox = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIPanelControl1Client.UICbeIntervalComboBox;
			#endregion
			uICbeIntervalComboBox.ValueAsString = this.SwitchGroupingModeToDateMonthParams.UICbeIntervalComboBoxValueAsString;
		}
		public void SwitchGroupingModeToDateRange()
		{
			#region Variable Declarations
			DXComboBox uICbeIntervalComboBox = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIPanelControl1Client.UICbeIntervalComboBox;
			#endregion
			uICbeIntervalComboBox.ValueAsString = this.SwitchGroupingModeToDateRangeParams.UICbeIntervalComboBoxValueAsString;
		}
		public void SwitchGroupingModeToDateYear()
		{
			#region Variable Declarations
			DXComboBox uICbeIntervalComboBox = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIPanelControl1Client.UICbeIntervalComboBox;
			#endregion
			uICbeIntervalComboBox.ValueAsString = this.SwitchGroupingModeToDateYearParams.UICbeIntervalComboBoxValueAsString;
		}
		public void SwitchGroupingModeToGroupByCategory()
		{
			#region Variable Declarations
			DXComboBox uICbeIntervalComboBox = this.UIXtraGridFeaturesDemoWindow15.UIPanelControl1Client.UIGcContainerClient.UIGroupIntervalCustom.UIPanelControl1Client.UICbeIntervalComboBox;
			#endregion
			uICbeIntervalComboBox.ValueAsString = this.SwitchGroupingModeToGroupByCategoryParams.UICbeIntervalComboBoxValueAsString;
		}
		public void SwitchingBetweenRibbonTabsViaMouse()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage2RibbonPage = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonPage2RibbonPage;
			#endregion
			Mouse.Click(uIRibbonPage2RibbonPage, new Point(44, 12));
		}
		public void SwitchMultiSelectModeToRowSelect()
		{
			#region Variable Declarations
			DXComboBox uIIcbSelectModeComboBox = this.UIXtraGridFeaturesDemoWindow6.UIPanelControl1Client.UIGcContainerClient.UICellSelectionCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIIcbSelectModeComboBox;
			#endregion
			uIIcbSelectModeComboBox.ValueTypeName = this.SwitchMultiSelectModeToRowSelectParams.UIIcbSelectModeComboBoxValueTypeName;
			uIIcbSelectModeComboBox.ValueAsString = this.SwitchMultiSelectModeToRowSelectParams.UIIcbSelectModeComboBoxValueAsString;
		}
		public void SwitchOffAutoRowHeightOption()
		{
			#region Variable Declarations
			DXCheckBox uICheAutoHeightCheckBox = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIPnlTopClient.UICheAutoHeightCheckBox;
			#endregion
			uICheAutoHeightCheckBox.Checked = this.SwitchOffAutoRowHeightOptionParams.UICheAutoHeightCheckBoxChecked;
		}
		public void SwitchOnDisplaySummaryOption()
		{
			#region Variable Declarations
			DXCheckButton uIChDisplaySummaryCheckButton = this.UIXtraGridFeaturesDemoWindow19.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIPanelControl2Client.UIChDisplaySummaryCheckButton;
			#endregion
			uIChDisplaySummaryCheckButton.Checked = this.SwitchOnDisplaySummaryOptionParams.UIChDisplaySummaryCheckButtonChecked;
		}
		public void SwitchSearchLookUpEditorDemoModuleToInPlaceTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraGridFeaturesDemoWindow9.UIPanelControl1Client.UIGcContainerClient.UISearchLookUpEditDemoCustom.UIXtraTabControl1TabList.UIXtraTabControlHeaderTabPage;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(27, 9));
		}
		public void SwitchToAddGroupsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIAddGroupsNavBarLink = this.UITheXtraNavBarSuiteDeWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIUICustomizationNavBarGroup.UIAddGroupsNavBarLink;
			#endregion
			Mouse.Click(uIAddGroupsNavBarLink, new Point(0, 0));
		}
		public void SwitchToAddItemLinksDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIAddItemLinksNavBarLink = this.UITheXtraNavBarSuiteDeWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIUICustomizationNavBarGroup.UIAddItemLinksNavBarLink;
			#endregion
			Mouse.Click(uIAddItemLinksNavBarLink, new Point(0, 0));
		}
		public void SwitchToAlertControlDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIAlertControlNavBarLink = this.UIApplicationUIWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIMultiPurposeComponenNavBarGroup.UIAlertControlNavBarLink;
			#endregion
			Mouse.Click(uIAlertControlNavBarLink, new Point(0, 0));
		}
		public void SwitchToAlternateViewsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIBandedViewsNavBarLink = this.UIXtraGridFeaturesDemoWindow25.UIGcNavigationsClient.UINavBarControl1NavBar.UIGridViewsNavBarGroup.UIBandedViewsNavBarLink;
			#endregion
			Mouse.Click(uIBandedViewsNavBarLink, new Point(0, 0));
		}
		public void SwitchToAutoFilterRowDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIAutoFilterRowNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIFilteringNavBarGroup.UIAutoFilterRowNavBarLink;
			#endregion
			Mouse.Click(uIAutoFilterRowNavBarLink, new Point(82, 13));
		}
		public void SwitchToAutoRowHeightDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIAutoRowHeightNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutFeaturesNavBarGroup.UIAutoRowHeightNavBarLink;
			#endregion
			Mouse.Click(uIAutoRowHeightNavBarLink, new Point(81, 7));
		}
		public void SwitchToBandedGridView()
		{
			#region Variable Declarations
			DXCheckButton uIChBandedCheckButton = this.UIXtraGridFeaturesDemoWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIPanelControl1Client.UIChBandedCheckButton;
			#endregion
			uIChBandedCheckButton.Checked = this.SwitchToBandedGridViewParams.UIChBandedCheckButtonChecked;
		}
		public void SwitchToBarLinkContainerItemDemoModule()
		{
			#region Variable Declarations
			DXListBox uIListBoxControl1List = this.UIApplicationUIWindow1.UIGcNavigationsClient.UIListBoxControl1List;
			#endregion
			uIListBoxControl1List.SelectedIndicesAsString = this.SwitchToBarLinkContainerItemDemoModuleParams.UIListBoxControl1ListSelectedIndicesAsString;
		}
		public void SwitchToCustomizableDistancesDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICustomizableDistanceNavBarLink = this.UITheXtraNavBarSuiteDeWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIUICustomizationNavBarGroup.UICustomizableDistanceNavBarLink;
			#endregion
			Mouse.Click(uICustomizableDistanceNavBarLink, new Point(0, 0));
		}
		public void SwitchToCalcEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICalcEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UICalcEditNavBarLink;
			#endregion
			Mouse.Click(uICalcEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToCalendarDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICalendarNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIMiscellaneousNavBarGroup.UICalendarNavBarLink;
			#endregion
			Mouse.Click(uICalendarNavBarLink, new Point(0, 0));
		}
		public void SwitchToCellSelectionDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICellSelectionNavBarLink = this.UIXtraGridFeaturesDemoWindow25.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutFeaturesNavBarGroup.UICellSelectionNavBarLink;
			#endregion
			Mouse.Click(uICellSelectionNavBarLink, new Point(0, 0));
		}
		public void SwitchToCheckedComboBoxEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICheckedComboboxEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UICheckedComboboxEditNavBarLink;
			#endregion
			Mouse.Click(uICheckedComboboxEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToCheckEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICheckEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithoutTextboNavBarGroup.UICheckEditNavBarLink;
			#endregion
			Mouse.Click(uICheckEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToCheckedListBoxTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabControlHeaderTabPage;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(67, 7));
		}
		public void SwitchToCheckHeaderButtonType()
		{
			#region Variable Declarations
			DXRadioGroup uIRgTemplatesButtonRadioGroup = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIRgTemplatesButtonRadioGroup;
			#endregion
			uIRgTemplatesButtonRadioGroup.SelectedIndex = this.SwitchToCheckHeaderButtonTypeParams.UIRgTemplatesButtonRadioGroupSelectedIndex;
		}
		public void SwitchToColorEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIColorEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UIColorEditNavBarLink;
			#endregion
			Mouse.Click(uIColorEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToColumnCustomizationDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIColumnCustomizationNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutFeaturesNavBarGroup.UIColumnCustomizationNavBarLink;
			#endregion
			Mouse.Click(uIColumnCustomizationNavBarLink, new Point(113, 9));
		}
		public void SwitchToComboBoxEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIComboboxEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UIComboboxEditNavBarLink;
			#endregion
			Mouse.Click(uIComboboxEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToCustomFilterControlBindingTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraGridFeaturesDemoWindow14.UIPanelControl1Client.UIGcContainerClient.UIFilterControlCustom.UIXtraTabControl1TabList.UIXtraTabControlHeaderTabPage;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(110, 15));
		}
		public void SwitchToCustomHeaderButtonsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICustomHeaderButtonsNavBarLink = this.UIApplicationUIWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIDockingUINavBarGroup.UICustomHeaderButtonsNavBarLink;
			#endregion
			Mouse.Click(uICustomHeaderButtonsNavBarLink, new Point(0, 0));
		}
		public void SwitchToCustomSummaryDemoModule()
		{
			#region Variable Declarations
			DXTestControl uICustomSummaryNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UISummariesNavBarGroup.UICustomSummaryNavBarLink;
			#endregion
			Mouse.Click(uICustomSummaryNavBarLink, new Point(81, 12));
		}
		public void SwitchToMruFilterListDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMRUFilterListNavBarLink = this.UIXtraGridFeaturesDemoWindow25.UIGcNavigationsClient.UINavBarControl1NavBar.UIFilteringNavBarGroup.UIMRUFilterListNavBarLink;
			#endregion
			Mouse.Click(uIMRUFilterListNavBarLink, new Point(0, 0));
		}
		public void SwitchToDataGridDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIDataGridNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIPrintableControlsNavBarGroup.UIDataGridNavBarLink;
			#endregion
			Mouse.Click(uIDataGridNavBarLink, new Point(0, 0));
		}
		public void SwitchToDataNavigatorDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIDataNavigatorNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIMultiPurposeNavBarGroup.UIDataNavigatorNavBarLink;
			#endregion
			Mouse.Click(uIDataNavigatorNavBarLink, new Point(0, 0));
		}
		public void SwitchToDataSummariesDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIDataSummariesNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UISummariesNavBarGroup.UIDataSummariesNavBarLink;
			#endregion
			Mouse.Click(uIDataSummariesNavBarLink, new Point(89, 10));
		}
		public void SwitchToDateEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIDateEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UIDateEditNavBarLink;
			#endregion
			Mouse.Click(uIDateEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToDateTimeTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtraTabControlHeaderTabPage;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(55, 13));
		}
		public void SwitchToDevExpressAppearance()
		{
			#region Variable Declarations
			DXButton uIRibbonGalleryDropDowButton = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRpMainRibbonPage.UIRpgAppearanceRibbonPageGroup.UISkinsRibbonGallery.UIRibbonGalleryDropDowButton;
			DXTestControl uIDevExpressStyleGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIStandardSkinsGalleryItemGroup.UIDevExpressStyleGalleryItem;
			#endregion
			Mouse.Click(uIRibbonGalleryDropDowButton, new Point(7, 6));
			Mouse.Click(uIDevExpressStyleGalleryItem, new Point(82, 44));
		}
		public void SwitchToDragAndDropDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIDragAndDropNavBarLink = this.UITheXtraNavBarSuiteDeWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIUICustomizationNavBarGroup.UIDragAndDropNavBarLink;
			#endregion
			Mouse.Click(uIDragAndDropNavBarLink, new Point(0, 0));
		}
		public void SwitchToDropDownButtonDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIDropDownButtonNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIMultiPurposeNavBarGroup.UIDropDownButtonNavBarLink;
			#endregion
			Mouse.Click(uIDropDownButtonNavBarLink, new Point(0, 0));
		}
		public void SwitchToEditorItemsDemoModule()
		{
			#region Variable Declarations
			DXListBox uIListBoxControl1List = this.UIApplicationUIWindow.UIGcNavigationsClient.UIListBoxControl1List;
			#endregion
			uIListBoxControl1List.SelectedIndicesAsString = this.SwitchToEditorItemsDemoModuleParams.UIListBoxControl1ListSelectedIndicesAsString;
		}
		public void SwitchToFacingPrintPreviewDisplayMode()
		{
			#region Variable Declarations
			DXMenuItem uIViewBarItem = this.UIPreviewWindow.UIBarDockControlCustom.UIMainMenuMenuBar.UIViewBarItem;
			DXMenuItem uIFacingMenuItem = this.UIPreviewWindow.UIBarDockControlCustom.UIMainMenuMenuBar.UIViewBarItem.UIPageLayoutMenuItem.UIFacingMenuItem;
			#endregion
			Mouse.Click(uIViewBarItem, new Point(22, 10));
			Mouse.Click(uIFacingMenuItem, new Point(34, 14));
		}
		public void SwitchToFilterControlDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIAdvancedFilterControNavBarLink = this.UIXtraGridFeaturesDemoWindow25.UIGcNavigationsClient.UINavBarControl1NavBar.UIFilteringNavBarGroup.UIAdvancedFilterControNavBarLink;
			#endregion
			Mouse.Click(uIAdvancedFilterControNavBarLink, new Point(0, 0));
		}
		public void SwitchToFindPanelDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIFindPanelupdatedNavBarLink = this.UIXtraGridFeaturesDemoWindow25.UIGcNavigationsClient.UINavBarControl1NavBar.UIFilteringNavBarGroup.UIFindPanelupdatedNavBarLink;
			#endregion
			Mouse.Click(uIFindPanelupdatedNavBarLink, new Point(0, 0));
		}
		public void SwitchToFixedBandsAndGroupingTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabControlHeaderTabPage;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(68, 8));
		}
		public void SwitchToFixedBandsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIFixedBandsNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutFeaturesNavBarGroup.UIFixedBandsNavBarLink;
			#endregion
			Mouse.Click(uIFixedBandsNavBarLink, new Point(76, 13));
		}
		public void SwitchToFixedColumnsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIFixedColumnsNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutFeaturesNavBarGroup.UIFixedColumnsNavBarLink;
			#endregion
			Mouse.Click(uIFixedColumnsNavBarLink, new Point(72, 8));
		}
		public void SwitchToFormatConditionsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIFormatConditionsNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIFilteringNavBarGroup.UIFormatConditionsNavBarLink;
			#endregion
			Mouse.Click(uIFormatConditionsNavBarLink, new Point(87, 14));
		}
		public void SwitchToGalleryPageTab()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage3RibbonPage = this.UINewDocument1RibbonSiWindow.UIRibbonControl1Ribbon.UIRibbonPage3RibbonPage;
			#endregion
			Mouse.Click(uIRibbonPage3RibbonPage, new Point(44, 9));
		}
		public void SwitchToGlyphsHeaderButtonType()
		{
			#region Variable Declarations
			DXRadioGroup uIRgTemplatesButtonRadioGroup = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIRgTemplatesButtonRadioGroup;
			#endregion
			uIRgTemplatesButtonRadioGroup.SelectedIndex = this.SwitchToGlyphsHeaderButtonTypeParams.UIRgTemplatesButtonRadioGroupSelectedIndex;
		}
		public void SwitchToGridLookUpEditorDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIGridLookUpEditorNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditingNavBarGroup.UIGridLookUpEditorNavBarLink;
			#endregion
			Mouse.Click(uIGridLookUpEditorNavBarLink, new Point(71, 9));
		}
		public void SwitchToGridView()
		{
			#region Variable Declarations
			DXCheckButton uIChGridCheckButton = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIPanelControl1Client.UIChGridCheckButton;
			#endregion
			uIChGridCheckButton.Checked = this.SwitchToGridViewParams.UIChGridCheckButtonChecked;
		}
		public void SwitchToGroupIntervalDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIGroupIntervalNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UISortingAndGroupingNavBarGroup.UIGroupIntervalNavBarLink;
			#endregion
			Mouse.Click(uIGroupIntervalNavBarLink, new Point(77, 19));
		}
		public void SwitchToGroupsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIGroupsNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutNavBarGroup.UIGroupsNavBarLink;
			#endregion
			Mouse.Click(uIGroupsNavBarLink, new Point(0, 0));
		}
		public void SwitchToHorizontalSplitPresentationTab()
		{
			#region Variable Declarations
			DXBaseLayoutItem uILayoutControlGroup3TabbedGroupTabHeader = this.UIXtraGridFeaturesDemoWindow34.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIRootLayoutGroup.UITabbedControlGroup1TabbedGroup.UILayoutControlGroup3TabbedGroupTabHeader;
			#endregion
			Mouse.Click(uILayoutControlGroup3TabbedGroupTabHeader, new Point(87, 10));
		}
		public void SwitchToImageComboBoxEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIImageComboboxEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UIImageComboboxEditNavBarLink;
			#endregion
			Mouse.Click(uIImageComboboxEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToImageHeaderButtonType()
		{
			#region Variable Declarations
			DXRadioGroup uIRgTemplatesButtonRadioGroup = this.UIApplicationUIWindow1.UIPcMainClient.UIGcContainerClient.UICustomHeaderButtonsCustom.UILayoutControl1Custom.UIRgTemplatesButtonRadioGroup;
			#endregion
			uIRgTemplatesButtonRadioGroup.SelectedIndex = this.SwitchToImageHeaderButtonTypeParams.UIRgTemplatesButtonRadioGroupSelectedIndex;
		}
		public void SwitchToJoinedGroupPanel()
		{
			#region Variable Declarations
			DXCheckButton uIChJoinedCheckButton = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIPanelControl1Client.UIChJoinedCheckButton;
			#endregion
			uIChJoinedCheckButton.Checked = this.SwitchToJoinedGroupPanelParams.UIChJoinedCheckButtonChecked;
		}
		public void SwitchToLabelsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uILabelsNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutNavBarGroup.UILabelsNavBarLink;
			#endregion
			Mouse.Click(uILabelsNavBarLink, new Point(0, 0));
		}
		public void SwitchToListBoxesDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIListBoxNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIMultiPurposeNavBarGroup.UIListBoxNavBarLink;
			#endregion
			Mouse.Click(uIListBoxNavBarLink, new Point(0, 0));
		}
		public void SwitchToListViewDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIListViewNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIPrintableControlsNavBarGroup.UIListViewNavBarLink;
			#endregion
			Mouse.Click(uIListViewNavBarLink, new Point(0, 0));
		}
		public void SwitchToLookUpEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uILookUpEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UILookUpEditNavBarLink;
			#endregion
			Mouse.Click(uILookUpEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToMaskBoxDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMaskBoxNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIMultiPurposeNavBarGroup.UIMaskBoxNavBarLink;
			#endregion
			Mouse.Click(uIMaskBoxNavBarLink, new Point(0, 0));
		}
		public void SwitchToMasterDetailGroupingDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMasterDetailGroupingNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UISortingAndGroupingNavBarGroup.UIMasterDetailGroupingNavBarLink;
			#endregion
			Mouse.Click(uIMasterDetailGroupingNavBarLink, new Point(111, 9));
		}
		public void SwitchToMemoEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMemoEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithTextboxesNavBarGroup.UIMemoEditNavBarLink;
			#endregion
			Mouse.Click(uIMemoEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToMemoExEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMemoExEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UIMemoExEditNavBarLink;
			#endregion
			Mouse.Click(uIMemoExEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToMRUEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMRUEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UIMRUEditNavBarLink;
			#endregion
			Mouse.Click(uIMRUEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToMultiEditorsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMultiEditorsIListbouNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditingNavBarGroup.UIMultiEditorsIListbouNavBarLink;
			#endregion
			Mouse.Click(uIMultiEditorsIListbouNavBarLink, new Point(117, 12));
		}
		public void SwitchToMultiExtendedSelectionMode()
		{
			#region Variable Declarations
			DXComboBox uIIcbSelectionModeComboBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl2TabList.UIXtraTabPage5Client.UIGroupControl1Client.UIIcbSelectionModeComboBox;
			#endregion
			uIIcbSelectionModeComboBox.ValueTypeName = this.SwitchToMultiExtendedSelectionModeParams.UIIcbSelectionModeComboBoxValueTypeName;
			uIIcbSelectionModeComboBox.ValueAsString = this.SwitchToMultiExtendedSelectionModeParams.UIIcbSelectionModeComboBoxValueAsString;
		}
		public void SwitchToMultipleValuesGroupingDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMultipleValuesGroupiNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UISortingAndGroupingNavBarGroup.UIMultipleValuesGroupiNavBarLink;
			#endregion
			Mouse.Click(uIMultipleValuesGroupiNavBarLink, new Point(101, 4));
		}
		public void SwitchToMultiSimpleSelectionMode()
		{
			#region Variable Declarations
			DXComboBox uIIcbSelectionModeComboBox = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl2TabList.UIXtraTabPage5Client.UIGroupControl1Client.UIIcbSelectionModeComboBox;
			#endregion
			uIIcbSelectionModeComboBox.ValueTypeName = this.SwitchToMultiSimpleSelectionModeParams.UIIcbSelectionModeComboBoxValueTypeName;
			uIIcbSelectionModeComboBox.ValueAsString = this.SwitchToMultiSimpleSelectionModeParams.UIIcbSelectionModeComboBoxValueAsString;
		}
		public void SwitchToNavBarHitInfoDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIHitInfoNavBarLink = this.UITheXtraNavBarSuiteDeWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIUICustomizationNavBarGroup.UIHitInfoNavBarLink;
			#endregion
			Mouse.Click(uIHitInfoNavBarLink, new Point(0, 0));
		}
		public void SwitchToNavBarPropertiesDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIPropertiesNavBarLink = this.UITheXtraNavBarSuiteDeWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIUICustomizationNavBarGroup.UIPropertiesNavBarLink;
			#endregion
			Mouse.Click(uIPropertiesNavBarLink, new Point(0, 0));
		}
		public void SwitchToNavigationPaneDemoModule()
		{
			#region Variable Declarations
			DXTestControl uINavigationPaneNavBarLink = this.UITheXtraNavBarSuiteDeWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIViewsNavBarGroup.UINavigationPaneNavBarLink;
			#endregion
			Mouse.Click(uINavigationPaneNavBarLink, new Point(0, 0));
		}
		public void SwitchToOffice2010RibbonStyle()
		{
			#region Variable Declarations
			DXRibbonEditItem uIBarEditItemLink0RibbonEditItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIPageHeaderToolbarRibbonBar.UIBarEditItemLink0RibbonEditItem;
			DXListBoxItem uIOffice2010ListItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIImageComboBoxEditComboBox.UIPopupImageComboBoxEdWindow.UIPopupImageComboBoxEdList.UIOffice2010ListItem;
			#endregion
			Mouse.Click(uIBarEditItemLink0RibbonEditItem, new Point(71, 6));
			Mouse.Click(uIOffice2010ListItem, new Point(43, 11));
		}
		public void SwitchToPopupContainerEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIPopupContainerEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithDropdownsNavBarGroup.UIPopupContainerEditNavBarLink;
			#endregion
			Mouse.Click(uIPopupContainerEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToRadioEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIRadioGroupNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithoutTextboNavBarGroup.UIRadioGroupNavBarLink;
			#endregion
			Mouse.Click(uIRadioGroupNavBarLink, new Point(0, 0));
		}
		public void SwitchToRangeTrackBarDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIRangeTrackBarNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithoutTextboNavBarGroup.UIRangeTrackBarNavBarLink;
			#endregion
			Mouse.Click(uIRangeTrackBarNavBarLink, new Point(0, 0));
		}
		public void SwitchToRecentDocumentViaQuicklyAccess()
		{
			#region Variable Declarations
			DXTestControl uIDocument1rtfTabPage = this.UIDocument1rtfRibbonSiWindow1.UIRibbonControl1Ribbon.UIBackstageViewControlCustom.UIDocument1rtfTabPage;
			#endregion
			Mouse.Click(uIDocument1rtfTabPage, new Point(75, 26));
		}
		public void SwitchToRegExTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage1 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtraTabControlHeaderTabPage1;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage1, new Point(42, 11));
		}
		public void SwitchToRegularTab()
		{
			#region Variable Declarations
			DXTestControl uIXtcMainTabList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList;
			DXTestControl uIXtraTabControlHeaderTabPage3 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtraTabControlHeaderTabPage3;
			#endregion
			Mouse.Click(uIXtcMainTabList, new Point(301, 6));
			Mouse.Click(uIXtraTabControlHeaderTabPage3, new Point(42, 4));
		}
		public void SwitchToRichTextBoxDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIRichTextBoxNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIPrintableControlsNavBarGroup.UIRichTextBoxNavBarLink;
			#endregion
			Mouse.Click(uIRichTextBoxNavBarLink, new Point(0, 0));
		}
		public void SwitchToSearchLookUpEditorDemoModule()
		{
			#region Variable Declarations
			DXTestControl uISearchLookUpEditorNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditingNavBarGroup.UISearchLookUpEditorNavBarLink;
			#endregion
			Mouse.Click(uISearchLookUpEditorNavBarLink, new Point(83, 10));
		}
		public void SwitchToSimpleConditionsTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage = this.UIXtraGridFeaturesDemoWindow23.UIPanelControl1Client.UIGcContainerClient.UIStyleConditionsCustom.UIXtraTabControl1TabList.UIXtraTabControlHeaderTabPage;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(40, 6));
		}
		public void SwitchToSimpleTab()
		{
			#region Variable Declarations
			DXTestControl uIXtraTabControlHeaderTabPage2 = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleMaskBoxCustom.UIXtcMainTabList.UIXtraTabControlHeaderTabPage2;
			#endregion
			Mouse.Click(uIXtraTabControlHeaderTabPage2, new Point(21, 9));
		}
		public void SwitchToSortingBySummaryDemoModule()
		{
			#region Variable Declarations
			DXTestControl uISortingbySummaryNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UISummariesNavBarGroup.UISortingbySummaryNavBarLink;
			#endregion
			Mouse.Click(uISortingbySummaryNavBarLink, new Point(112, 4));
		}
		public void SwitchToSpinEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uISpinEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UISpinUpDownEditorsNavBarGroup.UISpinEditNavBarLink;
			#endregion
			Mouse.Click(uISpinEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToSplitPresentationDemoModule()
		{
			#region Variable Declarations
			DXTestControl uISplitPresentationVieNavBarLink = this.UIXtraGridFeaturesDemoWindow25.UIGcNavigationsClient.UINavBarControl1NavBar.UIGridViewsNavBarGroup.UISplitPresentationVieNavBarLink;
			#endregion
			Mouse.Click(uISplitPresentationVieNavBarLink, new Point(0, 0));
		}
		public void SwitchToSpreadSheetDemoModule()
		{
			#region Variable Declarations
			DXTestControl uISpreadSheetNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIDataBindingNavBarGroup.UISpreadSheetNavBarLink;
			#endregion
			Mouse.Click(uISpreadSheetNavBarLink, new Point(68, 9));
		}
		public void SwitchToStandaloneBarDockControlDemoModule()
		{
			#region Variable Declarations
			DXListBox uIListBoxControl1List = this.UIApplicationUIWindow.UIGcNavigationsClient.UIListBoxControl1List;
			#endregion
			uIListBoxControl1List.SelectedIndicesAsString = this.SwitchToStandaloneBarDockControlDemoModuleParams.UIListBoxControl1ListSelectedIndicesAsString;
		}
		public void SwitchToSummariesDemoModule()
		{
			#region Variable Declarations
			DXTestControl uISummariesNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutNavBarGroup.UISummariesNavBarLink;
			#endregion
			Mouse.Click(uISummariesNavBarLink, new Point(0, 0));
		}
		public void SwitchToTableDemoModule()
		{
			#region Variable Declarations
			DXTestControl uITableNavBarLink = this.UIXtraPrintingFeaturesWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutNavBarGroup.UITableNavBarLink;
			#endregion
			Mouse.Click(uITableNavBarLink, new Point(0, 0));
		}
		public void SwitchToTableLayoutDemoModule()
		{
			#region Variable Declarations
			DXTestControl uITableLayoutNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UILayoutFeaturesNavBarGroup.UITableLayoutNavBarLink;
			#endregion
			Mouse.Click(uITableLayoutNavBarLink, new Point(67, 10));
		}
		public void SwitchToTextEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uITextEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithTextboxesNavBarGroup.UITextEditNavBarLink;
			#endregion
			Mouse.Click(uITextEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToTimeEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uITimeEditNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UISpinUpDownEditorsNavBarGroup.UITimeEditNavBarLink;
			#endregion
			Mouse.Click(uITimeEditNavBarLink, new Point(0, 0));
		}
		public void SwitchToTrackBarEditDemoModule()
		{
			#region Variable Declarations
			DXTestControl uITrackBarNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithoutTextboNavBarGroup.UITrackBarNavBarLink;
			#endregion
			Mouse.Click(uITrackBarNavBarLink, new Point(0, 0));
		}
		public void SwitchToUnboundExpressionsDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIUnboundExpressionsNavBarLink = this.UIXtraGridFeaturesDemoWindow.UIGcNavigationsClient.UINavBarControl1NavBar.UIDataBindingNavBarGroup.UIUnboundExpressionsNavBarLink;
			#endregion
			Mouse.Click(uIUnboundExpressionsNavBarLink, new Point(96, 8));
		}
		public void SwitchToZoomTrackBarDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIZoomTrackBarNavBarLink = this.UIXtraEditorsTutorialsWindow1.UIGcNavigationsClient.UINavBarControl1NavBar.UIEditorswithoutTextboNavBarGroup.UIZoomTrackBarNavBarLink;
			#endregion
			Mouse.Click(uIZoomTrackBarNavBarLink, new Point(0, 0));
		}
		public void TryClickFixedColumnInFixedBandsAndGroupingTab()
		{
			#region Variable Declarations
			DXColumnHeader uIColCustomerNameColumnHeader = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage2Client.UIGridControl2Table.UIColCustomerNameColumnHeader;
			#endregion
			Mouse.Click(uIColCustomerNameColumnHeader, new Point(87, 11));
		}
		public void TryClickFixedColumnInSimpleFixedBandsTab()
		{
			#region Variable Declarations
			DXColumnHeader uIGrColumnMakerColumnHeader = this.UIXtraGridFeaturesDemoWindow3.UIPanelControl1Client.UIGcContainerClient.UIFixedBandsCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIGridControl1Table.UIGrColumnMakerColumnHeader;
			#endregion
			Mouse.Click(uIGrColumnMakerColumnHeader, new Point(53, 8));
		}
		public void TryClickNewLeftFixedColumn()
		{
			#region Variable Declarations
			DXColumnHeader uIColRegionColumnHeader = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIColRegionColumnHeader;
			#endregion
			Mouse.Click(uIColRegionColumnHeader, new Point(53, 16));
		}
		public void TryClickNewRightFixedColumn()
		{
			#region Variable Declarations
			DXColumnHeader uIColCountryColumnHeader = this.UIXtraGridFeaturesDemoWindow2.UIPanelControl1Client.UIGcContainerClient.UIFixedColumnsCustom.UIGridControl2Table.UIColCountryColumnHeader;
			#endregion
			uIColCountryColumnHeader.ColumnPositionAsString = this.TryClickNewRightFixedColumnParams.UIColCountryColumnHeaderColumnPositionAsString;
		}
		public void TypeInMemoEdit()
		{
			#region Variable Declarations
			DXTextEdit uIMemoEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMemoEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoEditSampleEdit;
			#endregion
			uIMemoEditSampleEdit.ValueAsString = this.TypeInMemoEditParams.UIMemoEditSampleEditValueAsString;
		}
		public void TypeInMRUEdit()
		{
			#region Variable Declarations
			DXMRUEdit uIMruEditSampleMRUEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleMRUEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMruEditSampleMRUEdit;
			#endregion
			uIMruEditSampleMRUEdit.ValueAsString = this.TypeInMRUEditParams.UIMruEditSampleMRUEditValueAsString;
		}
		public void TypeInNewRibbonRichTextBox()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UIRibbonSimplePadWindow.UIItemWindow.UINewDocument2RibbonSiClient.UINewDocument2Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			uIRichTextBox1Edit.Text = this.TypeInNewRibbonRichTextBoxParams.UIRichTextBox1EditText;
		}
		public void TypeInRecentDocumentRichTextBox()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UIDocument1rtfRibbonSiWindow.UIItemWindow.UIDocument1rtfRibbonSiClient.UIDocument1rtfWindow.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			uIRichTextBox1Edit.Text = this.TypeInRecentDocumentRichTextBoxParams.UIRichTextBox1EditText;
		}
		public void TypeInRibbonRichTextBox()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			uIRichTextBox1Edit.Text = this.TypeInRibbonRichTextBoxParams.UIRichTextBox1EditText;
		}
		public void TypeInRibbonRichTextBoxForAssertChangingStatusBarInfo()
		{
			#region Variable Declarations
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			#endregion
			uIRichTextBox1Edit.Text = this.TypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams.UIRichTextBox1EditText;
		}
		public void TypeInSimplePadDemo()
		{
			#region Variable Declarations
			WinEdit uIRtPadEdit = this.UISimplePadCDemoWindow.UISimplePadCDemoClient.UIRtPadWindow.UIRtPadEdit;
			#endregion
			uIRtPadEdit.Text = this.TypeInSimplePadDemoParams.UIRtPadEditText;
		}
		public void TypeInTextEdit()
		{
			#region Variable Declarations
			DXTextEdit uITextEditSampleEdit = this.UIXtraEditorsTutorialsWindow.UIPcMainClient.UIGcContainerClient.UIModuleTextEditCustom.UITabctrlTextEditTabList.UITabpgGeneralClient.UIPanelControl1Client.UITextEditSampleEdit;
			#endregion
			uITextEditSampleEdit.ValueAsString = this.TypeInTextEditParams.UITextEditSampleEditValueAsString;
		}
		public void TypingTextInCell()
		{
			#region Variable Declarations
			DXGrid uIGridControl1Table = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIGridControl1Table;
			DXTextEdit uIMemoEditEdit = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIGridControl1Table.UIMemoEditEdit;
			DXCell uIAndrewreceivedhisBTSCell = this.UIXtraGridFeaturesDemoWindow4.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIGridControl1Table.UIAndrewreceivedhisBTSCell;
			#endregion
			uIGridControl1Table.FocusedCellAsString = this.TypingTextInCellParams.UIGridControl1TableFocusedCellAsString;
			uIMemoEditEdit.ValueAsString = this.TypingTextInCellParams.UIMemoEditEditValueAsString;
			uIGridControl1Table.FocusedCellAsString = this.TypingTextInCellParams.UIGridControl1TableFocusedCellAsString1;
			uIAndrewreceivedhisBTSCell.ActiveEditorValue = this.TypingTextInCellParams.UIAndrewreceivedhisBTSCellActiveEditorValue;
		}
		public void UndoMultiExtendedSelectionListBoxValuesViaKeyboard()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSelectedIndicesAsString;
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys, ModifierKeys.None);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys1, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys2, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys3, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys4, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys5, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys6, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys7, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys8, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys9, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys10, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys11, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys12, ModifierKeys.Shift);
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys13, ModifierKeys.Shift);
		}
		public void UndoMultiExtendedSelectionListBoxValuesViaMouse()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.UndoMultiExtendedSelectionListBoxValuesViaMouseParams.UIListBoxControlSampleListSelectedIndicesAsString;
		}
		public void UndoMultiSimpleSelectionListBoxValuesViaKeyboard()
		{
			#region Variable Declarations
			DXScrollBar uIHScrollBarScrollBarControl = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList.UIHScrollBarScrollBarControl;
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIHScrollBarScrollBarControl.ValueAsString = this.UndoMultiSimpleSelectionListBoxValuesViaKeyboardParams.UIHScrollBarScrollBarControlValueAsString;
			Keyboard.SendKeys(uIListBoxControlSampleList, this.UndoMultiSimpleSelectionListBoxValuesViaKeyboardParams.UIListBoxControlSampleListSendKeys, ModifierKeys.None);
		}
		public void UndoSelectionListBoxValuesViaMouse()
		{
			#region Variable Declarations
			DXListBox uIListBoxControlSampleList = this.UIXtraEditorsTutorialsWindow1.UIPcMainClient.UIGcContainerClient.UIModuleListBoxCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIListBoxControlSampleList;
			#endregion
			uIListBoxControlSampleList.SelectedIndicesAsString = this.UndoSelectionListBoxValuesViaMouseParams.UIListBoxControlSampleListSelectedIndicesAsString;
		}
		public void UngroupDataViaClearGroupingOption()
		{
			#region Variable Declarations
			DXTestControl uIGridControlGroupPaneCustom = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlGroupPaneCustom;
			DXMenuItem uIClearGroupingMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIClearGroupingMenuItem;
			#endregion
			Mouse.Click(uIGridControlGroupPaneCustom, MouseButtons.Right, ModifierKeys.None, new Point(270, 23));
			Mouse.Click(uIClearGroupingMenuItem, new Point(67, 15));
		}
		public void UngroupDataViaDraggingColumnHeader()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn2ColumnHeader1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader1;
			DXColumnHeader uIGridColumn5ColumnHeader1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader1;
			#endregion
			uIGridColumn2ColumnHeader1.ColumnPositionAsString = this.UngroupDataViaDraggingColumnHeaderParams.UIGridColumn2ColumnHeader1ColumnPositionAsString;
			uIGridColumn5ColumnHeader1.ColumnPositionAsString = this.UngroupDataViaDraggingColumnHeaderParams.UIGridColumn5ColumnHeader1ColumnPositionAsString;
		}
		public void UngroupDataViaUnGroupOption()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn5ColumnHeader1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn5ColumnHeader1;
			DXMenuItem uIUnGroupMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIUnGroupMenuItem;
			DXColumnHeader uIGridColumn2ColumnHeader1 = this.UIXtraGridFeaturesDemoWindow1.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn2ColumnHeader1;
			DXMenuItem uIUnGroupMenuItem1 = this.UIItemWindow.UIPopupMenuBarControlMenu1.UIUnGroupMenuItem;
			#endregion
			Mouse.Click(uIGridColumn5ColumnHeader1, MouseButtons.Right, ModifierKeys.None, new Point(27, 8));
			Mouse.Click(uIUnGroupMenuItem, new Point(73, 14));
			Mouse.Click(uIGridColumn2ColumnHeader1, MouseButtons.Right, ModifierKeys.None, new Point(22, 7));
			Mouse.Click(uIUnGroupMenuItem1, new Point(57, 15));
		}
		public void UngroupMasterDetailData()
		{
			#region Variable Declarations
			DXColumnHeader uIColRegionColumnHeader = this.UIXtraGridFeaturesDemoWindow16.UIPanelControl1Client.UIGcContainerClient.UIMasterDetailGroupingCustom.UIGridControl2Table.UIColRegionColumnHeader;
			DXMenuItem uIUnGroupBarItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIUnGroupBarItem;
			#endregion
			Mouse.Click(uIColRegionColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(24, 7));
			Mouse.Click(uIUnGroupBarItem, new Point(109, 9));
		}
		public void UseRibbonGroupCaptionButtonForCopyPaste()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXButton uIRibbonPageGroup2Button = this.UINewDocument1RibbonSiWindow1.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup2RibbonPageGroup.UIRibbonPageGroup2Button;
			DXMenuBaseButtonItem uICopyMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UICopyMenuBaseButtonItem;
			WinEdit uIRichTextBox1Edit = this.UINewDocument1RibbonSiWindow1.UIItemWindow.UINewDocument1RibbonSiClient.UINewDocument1Window.UIRichTextBox1Window.UIRichTextBox1Edit;
			DXMenuBaseButtonItem uIPasteMenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu1.UIPasteMenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(34, 12));
			Mouse.Click(uIRibbonPageGroup2Button, new Point(8, 7));
			uICopyMenuBaseButtonItem.PerformClick = this.UseRibbonGroupCaptionButtonForCopyPasteParams.UICopyMenuBaseButtonItemPerformClick;
			Mouse.Click(uIRichTextBox1Edit, new Point(266, 98));
			Mouse.Click(uIRibbonPageGroup2Button, new Point(10, 7));
			uIPasteMenuBaseButtonItem.PerformClick = this.UseRibbonGroupCaptionButtonForCopyPasteParams.UIPasteMenuBaseButtonItemPerformClick;
		}
		public void SwitchToVerticalSplitPresentationTab()
		{
			#region Variable Declarations
			DXBaseLayoutItem uILayoutControlGroup2TabbedGroupTabHeader = this.UIXtraGridFeaturesDemoWindow34.UIPanelControl1Client.UIGcContainerClient.UISplitPresentationCustom.UILayoutControl1Custom.UIRootLayoutGroup.UITabbedControlGroup1TabbedGroup.UILayoutControlGroup2TabbedGroupTabHeader;
			#endregion
			Mouse.Click(uILayoutControlGroup2TabbedGroupTabHeader, new Point(56, 8));
		}
		public void CheckSelectedCellsViaMouse()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UISelectedCellsClient.UIRow1AnaTrujilloEmparWindow1.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaMouseExpectedValues.UIItemEditText, uIItemEdit.Text);
		}
		public void CheckSelectedCellsViaKeyboard()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UISelectedCellsWindow.UISelectedCellsClient.UIRow12CentrocomercialWindow.UIItemEdit;
			#endregion
			Assert.AreEqual(this.CheckSelectedCellsViaKeyboardExpectedValues.UIItemEditText, uIItemEdit.Text);
		}
		public void SwitchOffMemoEditAutoHeight()
		{
			#region Variable Declarations
			DXCheckBox uICheMemoCheckBox = this.UIXtraGridFeaturesDemoWindow35.UIPanelControl1Client.UIGcContainerClient.UIRowHeightCustom.UIPnlTopClient.UICheMemoCheckBox;
			#endregion
			uICheMemoCheckBox.Checked = this.SwitchOffMemoEditAutoHeightParams.UICheMemoCheckBoxChecked;
		}
		public void BricksSelectionViaMouseAndCopyViaCtrlCShortcut()
		{
			#region Variable Declarations
			DXScrollBar uIVScrollBarScrollBarControl = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIVScrollBarScrollBarControl;
			DXPrintingBrick uIPage0BrickIndices06PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices06PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices011PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices011PrintControlBrick;
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIVScrollBarScrollBarControl.ValueAsString = this.BricksSelectionViaMouseAndCopyViaCtrlCShortcutParams.UIVScrollBarScrollBarControlValueAsString;
			uIPage0BrickIndices011PrintControlBrick.EnsureClickable(new Point(21, 17));
			Mouse.StartDragging(uIPage0BrickIndices06PrintControlBrick, new Point(47, 33));
			Mouse.StopDragging(uIPage0BrickIndices011PrintControlBrick, new Point(21, 17));
			Keyboard.SendKeys(uIDocumentViewerPrintViewControl, this.BricksSelectionViaMouseAndCopyViaCtrlCShortcutParams.UIDocumentViewerPrintViewControlSendKeys, ModifierKeys.Control);
		}
		public void CheckBricksSelectedState()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices06PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices06PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices07PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices07PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices010PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices010PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices011PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices011PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckBricksSelectedStateExpectedValues.UIPage0BrickIndices06PrintControlBrickSelected, uIPage0BrickIndices06PrintControlBrick.Selected);
			Assert.AreEqual(this.CheckBricksSelectedStateExpectedValues.UIPage0BrickIndices07PrintControlBrickSelected, uIPage0BrickIndices07PrintControlBrick.Selected);
			Assert.AreEqual(this.CheckBricksSelectedStateExpectedValues.UIPage0BrickIndices010PrintControlBrickSelected, uIPage0BrickIndices010PrintControlBrick.Selected);
			Assert.AreEqual(this.CheckBricksSelectedStateExpectedValues.UIPage0BrickIndices011PrintControlBrickSelected, uIPage0BrickIndices011PrintControlBrick.Selected);
		}
		public void CheckedBrickSelectionViaMouse()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices014PrintControlBrick = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices014PrintControlBrick;
			#endregion
			Mouse.StartDragging(uIPage0BrickIndices014PrintControlBrick, new Point(5, 6));
			Mouse.StopDragging(uIPage0BrickIndices014PrintControlBrick, 11, 9);
		}
		public void SelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcut()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices200PrintControlBrick = this.UIXtraPrintingFeaturesWindow14.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIMasterDetailControlCustom.UIPSTabTabList.UITabPage1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices200PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices08PrintControlBrick = this.UIXtraPrintingFeaturesWindow14.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIMasterDetailControlCustom.UIPSTabTabList.UITabPage1Client.UIDocumentViewerPrintViewControl.UIPage0BrickIndices08PrintControlBrick;
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow14.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIMasterDetailControlCustom.UIPSTabTabList.UITabPage1Client.UIDocumentViewerPrintViewControl;
			#endregion
			uIPage0BrickIndices08PrintControlBrick.EnsureClickable(new Point(70, 21));
			Mouse.StartDragging(uIPage0BrickIndices200PrintControlBrick, new Point(7, 30));
			Mouse.StopDragging(uIPage0BrickIndices08PrintControlBrick, new Point(70, 21));
			Keyboard.SendKeys(uIDocumentViewerPrintViewControl, this.SelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams.UIDocumentViewerPrintViewControlSendKeys, ModifierKeys.Control);
		}
		public void ClickRunDemoButton()
		{
			#region Variable Declarations
			WinClient uIPcRunButtonClient = this.UIXtraGridFeaturesDemoWindow.UIPanelControl1Client1.UIGcContainerClient.UIAboutCustom.UILayoutControl1Custom.UILayoutControlGroup1LayoutGroup.UILayoutControlItem7LayoutControlItem.UIPcRunButtonClient.UIOverviewButtonCustom.UIPcRunButtonClient;
			#endregion
			Mouse.Click(uIPcRunButtonClient, new Point(109, 30));
		}
		public void CheckAddedNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroup uIGroup3NavBarGroup = this.UITheXtraNavBarSuiteDeWindow1.UIPanelControl1Client.UIGcContainerClient.UIAddGroupsCustom.UIPanelControlClient.UINavBarControl1NavBar.UIGroup3NavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckAddedNavBarGroupExpectedValues.UIGroup3NavBarGroupExists, uIGroup3NavBarGroup.Exists);
		}
		public void CheckDeletedNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroup uIGroup4NavBarGroup = this.UITheXtraNavBarSuiteDeWindow1.UIPanelControl1Client.UIGcContainerClient.UIAddGroupsCustom.UIPanelControlClient.UINavBarControl1NavBar.UIGroup4NavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckDeletedNavBarGroupExpectedValues.UIGroup4NavBarGroupExists, uIGroup4NavBarGroup.Exists);
		}
		public void CheckAddedNavBarItemLink()
		{
			#region Variable Declarations
			DXNavBarLink uIItem0NavBarLink = this.UITheXtraNavBarSuiteDeWindow2.UIPanelControl1Client.UIGcContainerClient.UIAddItemLinksCustom.UIPanelControlClient.UINavBarControl1NavBar.UISmallLinksNavBarGroup.UIItem0NavBarLink;
			#endregion
			Assert.AreEqual(this.CheckAddedNavBarItemLinkExpectedValues.UIItem0NavBarLinkExists, uIItem0NavBarLink.Exists);
		}
		public void CheckDeletedNavBarItemLink()
		{
			#region Variable Declarations
			DXNavBarLink uIItem0NavBarLink = this.UITheXtraNavBarSuiteDeWindow2.UIPanelControl1Client.UIGcContainerClient.UIAddItemLinksCustom.UIPanelControlClient.UINavBarControl1NavBar.UISmallLinksNavBarGroup.UIItem0NavBarLink;
			#endregion
			Assert.AreEqual(this.CheckDeletedNavBarItemLinkExpectedValues.UIItem0NavBarLinkExists, uIItem0NavBarLink.Exists);
		}
		public void CheckObtainedNavBarHitInfo()
		{
			#region Variable Declarations
			DXTextEdit uILbClickEdit = this.UITheXtraNavBarSuiteDeWindow3.UIPanelControl1Client.UIGcContainerClient.UIHitInfoCustom.UIPanelControlClient.UIPanelControl1Client.UILbClickEdit;
			#endregion
			Assert.AreEqual(this.CheckObtainedNavBarHitInfoExpectedValues.UILbClickEditText, uILbClickEdit.Text);
		}
		public void CheckChangedNavBarItemCaption()
		{
			#region Variable Declarations
			DXNavBarLink uIOutboxtestNavBarLink = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UILocalNavBarGroup.UIOutboxtestNavBarLink;
			#endregion
			Assert.AreEqual(this.CheckChangedNavBarItemCaptionExpectedValues.UIOutboxtestNavBarLinkText, uIOutboxtestNavBarLink.Text);
		}
		public void CheckChangedNavBarLinkItemAndItemCaption()
		{
			#region Variable Declarations
			DXNavBarLink uICalendar2013NavBarLink = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UILocalNavBarGroup.UICalendar2013NavBarLink;
			DXNavBarLink uICalendar2013NavBarLink1 = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UIContactsNavBarGroup.UICalendar2013NavBarLink;
			#endregion
			Assert.AreEqual(this.CheckChangedNavBarLinkItemAndItemCaptionExpectedValues.UICalendar2013NavBarLinkText, uICalendar2013NavBarLink.Text);
			Assert.AreEqual(this.CheckChangedNavBarLinkItemAndItemCaptionExpectedValues.UICalendar2013NavBarLinkText1, uICalendar2013NavBarLink1.Text);
		}
		public void CheckDeletedViaContextMenuNavBarLink()
		{
			#region Variable Declarations
			DXNavBarLink uIInboxNavBarLink = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UILocalNavBarGroup.UIInboxNavBarLink;
			#endregion
			Assert.AreEqual(this.CheckDeletedViaContextMenuNavBarLinkExpectedValues.UIInboxNavBarLinkExists, uIInboxNavBarLink.Exists);
		}
		public void CheckAddedViaContextMenuNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroup uIElementNavBarGroup = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UIElementNavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckAddedViaContextMenuNavBarGroupExpectedValues.UIElementNavBarGroupExists, uIElementNavBarGroup.Exists);
		}
		public void CheckRemovedNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroup uIDeletedNavBarGroup = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDeletedNavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckRemovedNavBarGroupExpectedValues.UIDeletedNavBarGroupExists, uIDeletedNavBarGroup.Exists);
		}
		public void CheckDraggedNavBarLinkToItemList()
		{
			#region Variable Declarations
			WinListItem uILabelListItem = this.UITheXtraNavBarSuiteDeWindow6.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UIGroupControl1Client.UIListView1Custom.UIListView1Window.UIListView1List.UILabelListItem;
			#endregion
			Assert.AreEqual(this.CheckDraggedNavBarLinkToItemListExpectedValues.UILabelListItemExists, uILabelListItem.Exists);
		}
		public void CheckDraggedItemToNavBar()
		{
			#region Variable Declarations
			DXNavBarLink uITreeListNavBarLink = this.UITheXtraNavBarSuiteDeWindow6.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UINavBarControl1NavBar.UIWindowsFormsNavBarGroup.UITreeListNavBarLink;
			#endregion
			Assert.AreEqual(this.CheckDraggedItemToNavBarExpectedValues.UITreeListNavBarLinkExists, uITreeListNavBarLink.Exists);
		}
		public void CheckDraggedNavBarLinkToRecycleBin()
		{
			#region Variable Declarations
			DXNavBarLink uILabelNavBarLink = this.UITheXtraNavBarSuiteDeWindow6.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarDragDropCustom.UIPanelControlClient.UINavBarControl1NavBar.UIWindowsFormsNavBarGroup.UILabelNavBarLink;
			#endregion
			Assert.AreEqual(this.CheckDraggedNavBarLinkToRecycleBinExpectedValues.UILabelNavBarLinkExists, uILabelNavBarLink.Exists);
		}
		public void CheckCollapsedNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroup uIDisksNavBarGroup = this.UITheXtraNavBarSuiteDeWindow7.UIPanelControl1Client.UIGcContainerClient.UICustomizableDistanceCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDisksNavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckCollapsedNavBarGroupExpectedValues.UIDisksNavBarGroupExpanded, uIDisksNavBarGroup.Expanded);
		}
		public void CheckExpandedNavBarGroup()
		{
			#region Variable Declarations
			DXNavBarGroup uIDisksNavBarGroup = this.UITheXtraNavBarSuiteDeWindow7.UIPanelControl1Client.UIGcContainerClient.UICustomizableDistanceCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDisksNavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckExpandedNavBarGroupExpectedValues.UIDisksNavBarGroupExpanded, uIDisksNavBarGroup.Expanded);
		}
		public void ChangeNavBarIntervals()
		{
			#region Variable Declarations
			DXTrackBar uITrackBar1TrackBar = this.UITheXtraNavBarSuiteDeWindow7.UIPanelControl1Client.UIGcContainerClient.UICustomizableDistanceCustom.UIPanelControlClient.UIPanel1Client.UIDistanceChanger1Custom.UITrackBar1TrackBar;
			DXTrackBar uITrackBar1TrackBar1 = this.UITheXtraNavBarSuiteDeWindow7.UIPanelControl1Client.UIGcContainerClient.UICustomizableDistanceCustom.UIPanelControlClient.UIPanel1Client.UIDistanceChanger2Custom.UITrackBar1TrackBar;
			DXTrackBar uITrackBar1TrackBar2 = this.UITheXtraNavBarSuiteDeWindow7.UIPanelControl1Client.UIGcContainerClient.UICustomizableDistanceCustom.UIPanelControlClient.UIPanel1Client.UIDistanceChanger3Custom.UITrackBar1TrackBar;
			#endregion
			uITrackBar1TrackBar.ValueAsString = this.ChangeNavBarIntervalsParams.UITrackBar1TrackBarValueAsString;
			uITrackBar1TrackBar1.ValueAsString = this.ChangeNavBarIntervalsParams.UITrackBar1TrackBarValueAsString1;
			uITrackBar1TrackBar2.ValueAsString = this.ChangeNavBarIntervalsParams.UITrackBar1TrackBarValueAsString2;
		}
		public void CheckCalendarButtonRemoved()
		{
			#region Variable Declarations
			DXNavBarGroup uICalendarNavBarGroup = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UICalendarNavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckCalendarButtonRemovedExpectedValues.UICalendarNavBarGroupLocation, uICalendarNavBarGroup.GetProperty("Location").ToString());
		}
		public void CheckCalendarButtonAdded()
		{
			#region Variable Declarations
			DXNavBarGroup uICalendarNavBarGroup = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UICalendarNavBarGroup;
			#endregion
			Assert.AreNotEqual(this.CheckCalendarButtonAddedExpectedValues.UICalendarNavBarGroupLocation, uICalendarNavBarGroup.GetProperty("Location").ToString());
		}
		public void CheckFolderListButtonInvisible()
		{
			#region Variable Declarations
			DXNavBarGroup uIFolderListNavBarGroup = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UIFolderListNavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckFolderListButtonInvisibleExpectedValues.UIFolderListNavBarGroupLocation, uIFolderListNavBarGroup.GetProperty("Location").ToString());
		}
		public void CheckFolderListButtonVisible()
		{
			#region Variable Declarations
			DXNavBarGroup uIFolderListNavBarGroup = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UIFolderListNavBarGroup;
			#endregion
			Assert.AreNotEqual(this.CheckFolderListButtonVisibleExpectedValues.UIFolderListNavBarGroupLocation, uIFolderListNavBarGroup.GetProperty("Location").ToString());
		}
		public void CheckNotesButtonInvisible()
		{
			#region Variable Declarations
			DXNavBarGroup uINotesNavBarGroup = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UINotesNavBarGroup;
			#endregion
			Assert.AreEqual(this.CheckNotesButtonInvisibleExpectedValues.UINotesNavBarGroupLocation, uINotesNavBarGroup.GetProperty("Location").ToString());
		}
		public void CheckNotesButtonVisible()
		{
			#region Variable Declarations
			DXNavBarGroup uINotesNavBarGroup = this.UITheXtraNavBarSuiteDeWindow8.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarNavigationPCustom.UIPanelControlClient.UIPanelControl3Client.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UINavBarControl1NavBar.UINotesNavBarGroup;
			#endregion
			Assert.AreNotEqual(this.CheckNotesButtonVisibleExpectedValues.UINotesNavBarGroupLocation, uINotesNavBarGroup.GetProperty("Location").ToString());
		}
		public void CheckAddedViaContextMenuNavBarLink()
		{
			#region Variable Declarations
			DXNavBarLink uIInboxNavBarLink = this.UITheXtraNavBarSuiteDeWindow4.UIPanelControl1Client.UIGcContainerClient.UIFrmNavBarPropertiesCustom.UIPanelControlClient.UINavBarControl1NavBar.UIDeletedNavBarGroup.UIInboxNavBarLink;
			#endregion
			Assert.AreEqual(this.CheckAddedViaContextMenuNavBarLinkExpectedValues.UIInboxNavBarLinkExists, uIInboxNavBarLink.Exists);
		}
		public void CheckPopupContainerEditValue()
		{
			#region Variable Declarations
			DXPopupEdit uIPopupContainerEditSaPopupEdit = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit;
			#endregion
			Assert.AreEqual(this.CheckPopupContainerEditValueExpectedValues.UIPopupContainerEditSaPopupEditValueAsString, uIPopupContainerEditSaPopupEdit.ValueAsString);
		}
		public void CheckPopupContainerEditValueWasNotChanged()
		{
			#region Variable Declarations
			DXPopupEdit uIPopupContainerEditSaPopupEdit = this.UITheXtraEditorsSuiteDWindow1.UIPanelControl1Client.UIGcContainerClient.UIModulePopupContainerCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIPopupContainerEditSaPopupEdit;
			#endregion
			Assert.AreEqual(this.CheckPopupContainerEditValueWasNotChangedExpectedValues.UIPopupContainerEditSaPopupEditValueAsString, uIPopupContainerEditSaPopupEdit.ValueAsString);
		}
		public void CheckMemoExEditValue()
		{
			#region Variable Declarations
			DXPopupEdit uIMemoExEditSamplePopupEdit = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit;
			#endregion
			Assert.AreEqual(this.CheckMemoExEditValueExpectedValues.UIMemoExEditSamplePopupEditValueAsString, uIMemoExEditSamplePopupEdit.ValueAsString);
		}
		public void CheckMemoExEditSize()
		{
			#region Variable Declarations
			DXWindow uIMemoExPopupFormWindow = this.UITheXtraEditorsSuiteDWindow2.UIPanelControl1Client.UIGcContainerClient.UIModuleMemoExEditCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UIPanelControl1Client.UIMemoExEditSamplePopupEdit.UIMemoExPopupFormWindow;
			#endregion
			Assert.AreEqual(this.CheckMemoExEditSizeExpectedValues.UIMemoExPopupFormWindowSize, uIMemoExPopupFormWindow.Size.ToString());
		}
		public void OpenNavigationBarPanel()
		{
			#region Variable Declarations
			DXButton uINavigationButton = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIAutoHideContainerClient.UINavigationButton;
			DXButton uIPinButtonButton = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIAutoHideControlClient.UIDockPanelDockPanel.UIPinButtonButton;
			#endregion
			Mouse.Click(uINavigationButton, new Point(38, 29));
			Mouse.Click(uIPinButtonButton, new Point(9, 10));
		}
		public void FindDataForChangingPrintPreviewViaNextButton()
		{
			#region Variable Declarations
			DXButton uINextButton = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel2Client.UINextButton;
			#endregion
			Mouse.Click(uINextButton, new Point(1, 1));
			Mouse.Click(uINextButton, new Point(1, 1));
			Mouse.Click(uINextButton, new Point(1, 1));
			Mouse.Click(uINextButton, new Point(1, 1));
			Mouse.Click(uINextButton, new Point(1, 1));
		}
		public void FindDataForChangingPrintPreviewViaFirstButton()
		{
			#region Variable Declarations
			DXButton uIFirstButton = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel2Client.UIFirstButton;
			#endregion
			Mouse.Click(uIFirstButton, new Point(1, 1));
		}
		public void ChangeDataForChangingPrintPreviewAfterUsePreviousButton()
		{
			#region Variable Declarations
			DXTextEdit uITxtSpeciesNoEdit = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtSpeciesNoEdit;
			DXTextEdit uITxtLengthEdit = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtLengthEdit;
			DXTextEdit uITxtCategoryEdit = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCategoryEdit;
			DXTextEdit uITxtCommonNameEdit = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCommonNameEdit;
			#endregion
			uITxtSpeciesNoEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams.UITxtSpeciesNoEditValueAsString;
			uITxtLengthEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams.UITxtLengthEditValueAsString;
			uITxtCategoryEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams.UITxtCategoryEditValueAsString;
			uITxtCommonNameEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams.UITxtCommonNameEditValueAsString;
		}
		public void ClickRefreshPreviewButtonInLabelsDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIRefreshRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow15.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupDocumentRibbonPageGroup.UIRefreshRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRefreshRibbonBaseButtonItem, new Point(47, 13));
		}
		public void UnpinNavigationBarPanel()
		{
			#region Variable Declarations
			DXButton uIPinButtonButton = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIPinButtonButton;
			#endregion
			Mouse.Click(uIPinButtonButton, new Point(5, 7));
		}
		public void CheckBricksAfterChangingDataViaPreviousButton()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices03PrintControlBrick = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices03PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices05PrintControlBrick = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices05PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices07PrintControlBrick = this.UIXtraPrintingFeaturesWindow15.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices07PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaPreviousButtonExpectedValues.UIPage0BrickIndices03PrintControlBrickText, uIPage0BrickIndices03PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaPreviousButtonExpectedValues.UIPage0BrickIndices05PrintControlBrickText, uIPage0BrickIndices05PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaPreviousButtonExpectedValues.UIPage0BrickIndices07PrintControlBrickText, uIPage0BrickIndices07PrintControlBrick.Text);
		}
		public void FindDataForChangingPrintPreviewViaLastButton()
		{
			#region Variable Declarations
			DXButton uILastButton = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel2Client.UILastButton;
			#endregion
			Mouse.Click(uILastButton, new Point(1, 1));
		}
		public void ChangeDataForChangingPrintPreviewAfterUseLastButton()
		{
			#region Variable Declarations
			DXTextEdit uITxtSpeciesNoEdit = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtSpeciesNoEdit;
			DXTextEdit uITxtLengthEdit = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtLengthEdit;
			DXTextEdit uITxtCategoryEdit = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCategoryEdit;
			#endregion
			uITxtSpeciesNoEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUseLastButtonParams.UITxtSpeciesNoEditValueAsString;
			uITxtLengthEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUseLastButtonParams.UITxtLengthEditValueAsString;
			Keyboard.SendKeys(uITxtLengthEdit, this.ChangeDataForChangingPrintPreviewAfterUseLastButtonParams.UITxtLengthEditSendKeys, ModifierKeys.None);
			uITxtCategoryEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUseLastButtonParams.UITxtCategoryEditValueAsString;
			Keyboard.SendKeys(uITxtLengthEdit, this.ChangeDataForChangingPrintPreviewAfterUseLastButtonParams.UITxtLengthEditSendKeys1, ModifierKeys.None);
		}
		public void CheckBricksAfterChangingDataViaLastButton()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage4BrickIndices048PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage4BrickIndices048PrintControlBrick;
			DXPrintingBrick uIPage4BrickIndices050PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage4BrickIndices050PrintControlBrick;
			DXPrintingBrick uIPage4BrickIndices052PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage4BrickIndices052PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaLastButtonExpectedValues.UIPage4BrickIndices048PrintControlBrickText, uIPage4BrickIndices048PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaLastButtonExpectedValues.UIPage4BrickIndices050PrintControlBrickText, uIPage4BrickIndices050PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaLastButtonExpectedValues.UIPage4BrickIndices052PrintControlBrickText, uIPage4BrickIndices052PrintControlBrick.Text);
		}
		public void ChangeDataForChangingPrintPreviewAfterUseNextButton()
		{
			#region Variable Declarations
			DXTextEdit uITxtSpeciesNoEdit = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtSpeciesNoEdit;
			DXTextEdit uITxtLengthEdit = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtLengthEdit;
			DXTextEdit uITxtCategoryEdit = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCategoryEdit;
			DXTextEdit uITxtCommonNameEdit = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCommonNameEdit;
			#endregion
			uITxtSpeciesNoEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUseNextButtonParams.UITxtSpeciesNoEditValueAsString;
			uITxtLengthEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUseNextButtonParams.UITxtLengthEditValueAsString;
			uITxtCategoryEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUseNextButtonParams.UITxtCategoryEditValueAsString;
			Keyboard.SendKeys(uITxtCategoryEdit, this.ChangeDataForChangingPrintPreviewAfterUseNextButtonParams.UITxtCategoryEditSendKeys, ModifierKeys.None);
			uITxtCommonNameEdit.ValueAsString = this.ChangeDataForChangingPrintPreviewAfterUseNextButtonParams.UITxtCommonNameEditValueAsString;
		}
		public void CheckBricksAfterChangingDataViaNextButton()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices078PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices078PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices080PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices080PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices082PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices082PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices084PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices084PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaNextButtonExpectedValues.UIPage0BrickIndices078PrintControlBrickText, uIPage0BrickIndices078PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaNextButtonExpectedValues.UIPage0BrickIndices080PrintControlBrickText, uIPage0BrickIndices080PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaNextButtonExpectedValues.UIPage0BrickIndices082PrintControlBrickClassName, uIPage0BrickIndices082PrintControlBrick.ClassName);
			Assert.AreEqual(this.CheckBricksAfterChangingDataViaNextButtonExpectedValues.UIPage0BrickIndices084PrintControlBrickClassName, uIPage0BrickIndices084PrintControlBrick.ClassName);
		}
		public void FindDataForChangingPrintPreviewViaPreviousButton()
		{
			#region Variable Declarations
			DXButton uIPreviousButton = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel2Client.UIPreviousButton;
			#endregion
			Mouse.Click(uIPreviousButton, new Point(1, 1));
			Mouse.Click(uIPreviousButton, new Point(1, 1));
			Mouse.Click(uIPreviousButton, new Point(1, 1));
			Mouse.Click(uIPreviousButton, new Point(1, 1));
			Mouse.Click(uIPreviousButton, new Point(1, 1));
		}
		public void OpenNavigationBarPanelInGroupsDemoModule()
		{
			#region Variable Declarations
			DXButton uINavigationButton = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIAutoHideContainerClient.UINavigationButton;
			DXButton uIPinButtonButton = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIAutoHideControlClient.UIDockPanelDockPanel.UIPinButtonButton;
			#endregion
			Mouse.Click(uINavigationButton, new Point(39, 27));
			Mouse.Click(uIPinButtonButton, new Point(10, 4));
		}
		public void ChangeGroupsDemoModuleDataForChangingPrintPreview()
		{
			#region Variable Declarations
			DXTextEdit uITxtSpeciesNoEdit = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtSpeciesNoEdit;
			DXTextEdit uITxtLengthEdit = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtLengthEdit;
			DXTextEdit uITxtCategoryEdit = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCategoryEdit;
			DXTextEdit uITxtCommonNameEdit = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCommonNameEdit;
			#endregion
			uITxtSpeciesNoEdit.ValueAsString = this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtSpeciesNoEditValueAsString;
			Keyboard.SendKeys(uITxtSpeciesNoEdit, this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtSpeciesNoEditSendKeys, ModifierKeys.None);
			uITxtLengthEdit.ValueAsString = this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtLengthEditValueAsString;
			Keyboard.SendKeys(uITxtLengthEdit, this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtLengthEditSendKeys, ModifierKeys.None);
			uITxtCategoryEdit.ValueAsString = this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtCategoryEditValueAsString;
			Keyboard.SendKeys(uITxtCategoryEdit, this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtCategoryEditSendKeys, ModifierKeys.None);
			uITxtCommonNameEdit.ValueAsString = this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtCommonNameEditValueAsString;
			uITxtCategoryEdit.ValueAsString = this.ChangeGroupsDemoModuleDataForChangingPrintPreviewParams.UITxtCategoryEditValueAsString1;
		}
		public void ClickRefreshPreviewButtonInGroupsDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIRefreshRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow16.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupDocumentRibbonPageGroup.UIRefreshRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRefreshRibbonBaseButtonItem, new Point(37, 10));
		}
		public void ClearPrintPreviewAllRecordsCheckBox()
		{
			#region Variable Declarations
			DXCheckBox uIChAllRecordsCheckBox = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel2Client.UIChAllRecordsCheckBox;
			#endregion
			uIChAllRecordsCheckBox.Checked = this.ClearPrintPreviewAllRecordsCheckBoxParams.UIChAllRecordsCheckBoxChecked;
		}
		public void CheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewMode()
		{
			#region Variable Declarations
			DXMenuItem uIPage1of1BarItem = this.UIXtraPrintingFeaturesWindow19.UIRibbonStatusBarMenuBar.UIPage1of1BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues.UIPage1of1BarItemText, uIPage1of1BarItem.Text);
		}
		public void ChangeTableToPopulateDataGrid()
		{
			#region Variable Declarations
			DXRibbonItem uICategoriesRibbonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UICategoriesRibbonItem;
			DXMenuBaseButtonItem uIBarInListItemLink4MenuBaseButtonItem = this.UIItemWindow.UISubMenuBarControlMenu.UIBarInListItemLink4MenuBaseButtonItem;
			#endregion
			Mouse.Click(uICategoriesRibbonItem, new Point(30, 55));
			Mouse.Click(uIBarInListItemLink4MenuBaseButtonItem, new Point(56, 3));
		}
		public void ClickRefreshPreviewButtonInDataGridDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIRefreshRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UIRefreshRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRefreshRibbonBaseButtonItem, new Point(25, 38));
		}
		public void ChangeToWiderTableForPopulatingDataGrid()
		{
			#region Variable Declarations
			DXRibbonItem uICategoriesRibbonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UICategoriesRibbonItem;
			DXMenuBaseButtonItem uIBarInListItemLink1MenuBaseButtonItem = this.UIItemWindow.UISubMenuBarControlMenu.UIBarInListItemLink1MenuBaseButtonItem;
			#endregion
			Mouse.Click(uICategoriesRibbonItem, new Point(27, 58));
			Mouse.Click(uIBarInListItemLink1MenuBaseButtonItem, new Point(66, 18));
		}
		public void ClickPrintPreviewZoomInBarCommand()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIZoomInRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIZoomInRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(49, 11));
			Mouse.Click(uIZoomInRibbonBaseButtonItem, new Point(42, 12));
			Mouse.Click(uIZoomInRibbonBaseButtonItem, new Point(42, 12));
			Mouse.Click(uIZoomInRibbonBaseButtonItem, new Point(42, 12));
			Mouse.Click(uIZoomInRibbonBaseButtonItem, new Point(42, 12));
			Mouse.Click(uIZoomInRibbonBaseButtonItem, new Point(42, 12));
		}
		public void ScrollPrintPreviewViaHandTool()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIHandToolRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIHandToolRibbonBaseButtonItem;
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow1.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIPanelControl1Client.UIDocumentViewerPrintViewControl;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(55, 12));
			Mouse.Click(uIHandToolRibbonBaseButtonItem, new Point(14, 11));
			Mouse.StartDragging(uIDocumentViewerPrintViewControl, new Point(482, 124));
			Mouse.StopDragging(uIDocumentViewerPrintViewControl, 26, -81);
			Mouse.StartDragging(uIDocumentViewerPrintViewControl, new Point(433, 155));
			Mouse.StopDragging(uIDocumentViewerPrintViewControl, 48, -135);
			Mouse.StartDragging(uIDocumentViewerPrintViewControl, new Point(442, 157));
			Mouse.StopDragging(uIDocumentViewerPrintViewControl, 27, -131);
		}
		public void MakeHeaderBrickSettings()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIHeaderFooterRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPageSetupRibbonPageGroup.UIHeaderFooterRibbonBaseButtonItem;
			DXMenuBaseButtonItem uIBarButtonItem1BarBaseButtonItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UIBarButtonItem1BarBaseButtonItem;
			DXTextEdit uITbHead2Edit = this.UIHeaderandFooterWindow2.UITbHead2Edit;
			DXMenuBaseButtonItem uIBarButtonItem2BarBaseButtonItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UIBarButtonItem2BarBaseButtonItem;
			DXTextEdit uITbHead3Edit = this.UIHeaderandFooterWindow2.UITbHead3Edit;
			DXMenuBaseButtonItem uIBarButtonItem3BarBaseButtonItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UIBarButtonItem3BarBaseButtonItem;
			DXMenuBaseButtonItem uIBarButtonItem4BarBaseButtonItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UIBarButtonItem4BarBaseButtonItem;
			DXMenuBaseButtonItem uICheckItem2BarBaseButtonItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UICheckItem2BarBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(40, 14));
			Mouse.Click(uIHeaderFooterRibbonBaseButtonItem, new Point(31, 26));
			Mouse.Click(uIBarButtonItem1BarBaseButtonItem, new Point(9, 15));
			uITbHead2Edit.ValueAsString = this.MakeHeaderBrickSettingsParams.UITbHead2EditValueAsString;
			Mouse.Click(uIBarButtonItem2BarBaseButtonItem, new Point(10, 13));
			uITbHead3Edit.ValueAsString = this.MakeHeaderBrickSettingsParams.UITbHead3EditValueAsString;
			Mouse.Click(uIBarButtonItem3BarBaseButtonItem, new Point(11, 15));
			uITbHead3Edit.ValueAsString = this.MakeHeaderBrickSettingsParams.UITbHead3EditValueAsString1;
			Mouse.Click(uIBarButtonItem4BarBaseButtonItem, new Point(8, 7));
			Mouse.Click(uICheckItem2BarBaseButtonItem, new Point(10, 6));
		}
		public void MakeFooterBrickSettings()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIHeaderFooterRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPageSetupRibbonPageGroup.UIHeaderFooterRibbonBaseButtonItem;
			DXCheckBox uIFooterCheckEditCheckBox = this.UIHeaderandFooterWindow2.UIFooterCheckEditCheckBox;
			DXMenuBaseButtonItem uIBarButtonItem6BarBaseButtonItem = this.UIHeaderandFooterWindow2.UIBarDockControlCustom.UICustom1MenuBar.UIBarButtonItem6BarBaseButtonItem;
			DXTextEdit uITbFoot2Edit = this.UIHeaderandFooterWindow2.UITbFoot2Edit;
			DXTextEdit uITbFoot3Edit = this.UIHeaderandFooterWindow2.UITbFoot3Edit;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(44, 9));
			Mouse.Click(uIHeaderFooterRibbonBaseButtonItem, new Point(48, 23));
			uIFooterCheckEditCheckBox.Checked = this.MakeFooterBrickSettingsParams.UIFooterCheckEditCheckBoxChecked;
			Mouse.Click(uIBarButtonItem6BarBaseButtonItem, new Point(7, 12));
			uITbFoot2Edit.ValueAsString = this.MakeFooterBrickSettingsParams.UITbFoot2EditValueAsString;
			uITbFoot3Edit.ValueAsString = this.MakeFooterBrickSettingsParams.UITbFoot3EditValueAsString;
		}
		public void CheckChangedTableBrickText()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices00PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices00PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckChangedTableBrickTextExpectedValues.UIPage0BrickIndices00PrintControlBrickText, uIPage0BrickIndices00PrintControlBrick.Text);
		}
		public void ClickNextPageBar()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uINextPageRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup1.UINextPageRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(44, 11));
			Mouse.Click(uINextPageRibbonBaseButtonItem, new Point(43, 14));
			Mouse.Click(uINextPageRibbonBaseButtonItem, new Point(43, 14));
		}
		public void CheckSwitchToNextPageViaStatusBarInfo()
		{
			#region Variable Declarations
			DXMenuItem uIPage3of46BarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIPage3of46BarItem;
			#endregion
			Assert.AreEqual(this.CheckSwitchToNextPageViaStatusBarInfoExpectedValues.UIPage3of46BarItemText, uIPage3of46BarItem.Text);
		}
		public void ClickLastPageBar()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uILastPageRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup1.UILastPageRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(47, 14));
			Mouse.Click(uILastPageRibbonBaseButtonItem, new Point(20, 14));
		}
		public void ClickFirstPageBar()
		{
			#region Variable Declarations
			DXRibbonButtonItem uINextPageRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup1.UINextPageRibbonBaseButtonItem;
			DXRibbonButtonItem uIFirstPageRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup1.UIFirstPageRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uINextPageRibbonBaseButtonItem, new Point(43, 14));
			Mouse.Click(uIFirstPageRibbonBaseButtonItem, new Point(28, 37));
		}
		public void CheckSwitchToLastPageViaStatusBarInfo()
		{
			#region Variable Declarations
			DXMenuItem uIPage3of46BarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIPage3of46BarItem;
			#endregion
			Assert.AreEqual(this.CheckSwitchToLastPageViaStatusBarInfoExpectedValues.UIPage3of46BarItemText, uIPage3of46BarItem.Text);
		}
		public void CheckSwitchToFirstPageViaStatusBarInfo()
		{
			#region Variable Declarations
			DXMenuItem uIPage3of46BarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIPage3of46BarItem;
			#endregion
			Assert.AreEqual(this.CheckSwitchToFirstPageViaStatusBarInfoExpectedValues.UIPage3of46BarItemText, uIPage3of46BarItem.Text);
		}
		public void ClickPreviousPageBar()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIPreviousPageRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup1.UIPreviousPageRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIPreviousPageRibbonBaseButtonItem, new Point(37, 10));
			Mouse.Click(uIPreviousPageRibbonBaseButtonItem, new Point(37, 10));
		}
		public void CheckZoomValueAfterZoomIn()
		{
			#region Variable Declarations
			DXMenuItem uIItem150BarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIItem150BarItem;
			#endregion
			Assert.AreEqual(this.CheckZoomValueAfterZoomInExpectedValues.UIItem150BarItemText, uIItem150BarItem.Text);
		}
		public void ChangePrintPreviewZoomBarValueViaTyping()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIZoomRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIZoomRibbonBaseButtonItem;
			DXMenuEditItem uIExactMenuEditItem = this.UIItemWindow.UIPopupMenuBarControlMenu11.UIExactMenuEditItem;
			DXTextEdit uIBarEditItemLink0Edit = this.UIItemWindow.UIPopupMenuBarControlMenu11.UIBarEditItemLink0Edit;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(45, 16));
			Mouse.Click(uIZoomRibbonBaseButtonItem, new Point(58, 14));
			Mouse.Click(uIExactMenuEditItem, new Point(84, 12));
			uIBarEditItemLink0Edit.ValueAsString = this.ChangePrintPreviewZoomBarValueViaTypingParams.UIBarEditItemLink0EditValueAsString;
			Keyboard.SendKeys(uIBarEditItemLink0Edit, this.ChangePrintPreviewZoomBarValueViaTypingParams.UIBarEditItemLink0EditSendKeys, ModifierKeys.None);
		}
		public void ChangePrintPreviewZoomViaZoomDropDownList()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIZoomRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIZoomRibbonBaseButtonItem;
			DXMenuBaseButtonItem uIBarButtonItemLink6MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu11.UIBarButtonItemLink6MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(48, 9));
			Mouse.Click(uIZoomRibbonBaseButtonItem, new Point(58, 12));
			Mouse.Click(uIBarButtonItemLink6MenuBaseButtonItem, new Point(69, 15));
		}
		public void ChangePrintPreviewZoomViaZoomOutBarCommand()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIZoomOutRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIZoomOutRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(59, 12));
			Mouse.Click(uIZoomOutRibbonBaseButtonItem, new Point(47, 6));
			Mouse.Click(uIZoomOutRibbonBaseButtonItem, new Point(47, 6));
			Mouse.Click(uIZoomOutRibbonBaseButtonItem, new Point(47, 6));
		}
		public void CheckZoomBarValueAfterZoomOut()
		{
			#region Variable Declarations
			DXMenuItem uIItem150BarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIItem150BarItem;
			#endregion
			Assert.AreEqual(this.CheckZoomBarValueAfterZoomOutExpectedValues.UIItem150BarItemText, uIItem150BarItem.Text);
		}
		public void CheckStatusBarZoomBarValueAfterChangingViaMouse()
		{
			#region Variable Declarations
			DXMenuItem uIItem150BarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIItem150BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues.UIItem150BarItemText, uIItem150BarItem.Text);
		}
		public void ChangeZoomInStatusBarViaMouse()
		{
			#region Variable Declarations
			DXMenuItem uIZoomTrackBarEditItemBarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIZoomTrackBarEditItemBarItem;
			DXButton uIEditorButtonButton = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIZoomTrackBarControlTrackBar.UIEditorButtonButton;
			#endregion
			Mouse.Click(uIZoomTrackBarEditItemBarItem, new Point(12, 10));
			Mouse.Click(uIEditorButtonButton, new Point(6, 7));
			Mouse.Click(uIEditorButtonButton, new Point(6, 7));
			Mouse.Click(uIEditorButtonButton, new Point(6, 7));
			Mouse.Click(uIEditorButtonButton, new Point(6, 7));
		}
		public void ChangeZoomInStatusBarViaPlusButton()
		{
			#region Variable Declarations
			DXMenuItem uIZoomTrackBarEditItemBarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIZoomTrackBarEditItemBarItem;
			DXButton uIEditorButtonButton1 = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIZoomTrackBarControlTrackBar.UIEditorButtonButton1;
			DXButton uIEditorButtonButton2 = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIZoomTrackBarControlTrackBar.UIEditorButtonButton2;
			DXButton uIEditorButtonButton3 = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIZoomTrackBarControlTrackBar.UIEditorButtonButton3;
			DXButton uIEditorButtonButton4 = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIZoomTrackBarControlTrackBar.UIEditorButtonButton4;
			#endregion
			Mouse.Click(uIZoomTrackBarEditItemBarItem, new Point(137, 8));
			Mouse.Click(uIEditorButtonButton1, new Point(7, 5));
			Mouse.Click(uIEditorButtonButton2, new Point(7, 5));
			Mouse.Click(uIEditorButtonButton3, new Point(7, 5));
			Mouse.Click(uIEditorButtonButton4, new Point(7, 5));
		}
		public void CheckStatusBarZoomBarValueAfterChangingViaPlusButton()
		{
			#region Variable Declarations
			DXMenuItem uIItem150BarItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonStatusBarMenuBar.UIItem150BarItem;
			#endregion
			Assert.AreEqual(this.CheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues.UIItem150BarItemText, uIItem150BarItem.Text);
		}
		public void ClickWaterMarkBarItem()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIWatermarkRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup2.UIWatermarkRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIWatermarkRibbonBaseButtonItem, new Point(30, 26));
		}
		public void SelectLargeIconViewTypeInListViewDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIOptionsRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow20.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPrintRibbonPageGroup.UIOptionsRibbonBaseButtonItem;
			DXRadioGroup uIViewRadioGroupRadioGroup = this.UIPrintOptionsWindow.UIViewRadioGroupRadioGroup;
			DXButton uIApplyButton = this.UIPrintOptionsWindow.UIApplyButton;
			DXButton uICloseButton = this.UIPrintOptionsWindow.UICloseButton;
			#endregion
			Mouse.Click(uIOptionsRibbonBaseButtonItem, new Point(21, 27));
			uIViewRadioGroupRadioGroup.SelectedIndex = this.SelectLargeIconViewTypeInListViewDemoModuleParams.UIViewRadioGroupRadioGroupSelectedIndex;
			Mouse.Click(uIApplyButton, new Point(1, 1));
			Mouse.Click(uICloseButton, new Point(18, 6));
		}
		public void SelectSmallIconViewTypeInListViewDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIOptionsRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow20.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPrintRibbonPageGroup.UIOptionsRibbonBaseButtonItem;
			DXRadioGroup uIViewRadioGroupRadioGroup = this.UIPrintOptionsWindow.UIViewRadioGroupRadioGroup;
			DXButton uIApplyButton = this.UIPrintOptionsWindow.UIApplyButton;
			DXButton uICloseButton = this.UIPrintOptionsWindow.UICloseButton;
			#endregion
			Mouse.Click(uIOptionsRibbonBaseButtonItem, new Point(23, 28));
			uIViewRadioGroupRadioGroup.SelectedIndex = this.SelectSmallIconViewTypeInListViewDemoModuleParams.UIViewRadioGroupRadioGroupSelectedIndex;
			Mouse.Click(uIApplyButton, new Point(1, 1));
			Mouse.Click(uICloseButton, new Point(28, 5));
		}
		public void SelectListViewTypeInListViewDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIOptionsRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow20.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPrintRibbonPageGroup.UIOptionsRibbonBaseButtonItem;
			DXRadioGroup uIViewRadioGroupRadioGroup = this.UIPrintOptionsWindow.UIViewRadioGroupRadioGroup;
			DXButton uIApplyButton = this.UIPrintOptionsWindow.UIApplyButton;
			DXButton uICloseButton = this.UIPrintOptionsWindow.UICloseButton;
			#endregion
			Mouse.Click(uIOptionsRibbonBaseButtonItem, new Point(26, 25));
			uIViewRadioGroupRadioGroup.SelectedIndex = this.SelectListViewTypeInListViewDemoModuleParams.UIViewRadioGroupRadioGroupSelectedIndex;
			Mouse.Click(uIApplyButton, new Point(1, 1));
			Mouse.Click(uICloseButton, new Point(19, 9));
		}
		public void OpenNavigationBarPanelInTableDemoModule()
		{
			#region Variable Declarations
			DXButton uINavigationButton = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIAutoHideContainerClient.UINavigationButton;
			DXButton uIPinButtonButton = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIAutoHideControlClient.UIDockPanelDockPanel.UIPinButtonButton;
			#endregion
			Mouse.Click(uINavigationButton, new Point(28, 30));
			Mouse.Click(uIPinButtonButton, new Point(8, 3));
		}
		public void ClickRefreshPreviewButtonInTableDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIRefreshRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow17.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupDocumentRibbonPageGroup.UIRefreshRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRefreshRibbonBaseButtonItem, new Point(27, 26));
		}
		public void CheckBricksAfterChangingTableDemoModuleData()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices025PrintControlBrick = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices025PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices028PrintControlBrick = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices028PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices021PrintControlBrick = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices021PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckBricksAfterChangingTableDemoModuleDataExpectedValues.UIPage0BrickIndices025PrintControlBrickText, uIPage0BrickIndices025PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingTableDemoModuleDataExpectedValues.UIPage0BrickIndices028PrintControlBrickText, uIPage0BrickIndices028PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingTableDemoModuleDataExpectedValues.UIPage0BrickIndices021PrintControlBrickText, uIPage0BrickIndices021PrintControlBrick.Text);
		}
		public void ChangeTableDemoModuleDataForChangingPrintPreview()
		{
			#region Variable Declarations
			DXTextEdit uITxtSpeciesNoEdit = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtSpeciesNoEdit;
			DXTextEdit uITxtLengthEdit = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtLengthEdit;
			DXTextEdit uITxtCategoryEdit = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCategoryEdit;
			DXTextEdit uITxtCommonNameEdit = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIPnlNavigationClient.UIPanel1Client.UITxtCommonNameEdit;
			DXButton uIPinButtonButton = this.UIXtraPrintingFeaturesWindow17.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIPinButtonButton;
			#endregion
			uITxtSpeciesNoEdit.ValueAsString = this.ChangeTableDemoModuleDataForChangingPrintPreviewParams.UITxtSpeciesNoEditValueAsString;
			uITxtLengthEdit.ValueAsString = this.ChangeTableDemoModuleDataForChangingPrintPreviewParams.UITxtLengthEditValueAsString;
			uITxtCategoryEdit.ValueAsString = this.ChangeTableDemoModuleDataForChangingPrintPreviewParams.UITxtCategoryEditValueAsString;
			uITxtCommonNameEdit.ValueAsString = this.ChangeTableDemoModuleDataForChangingPrintPreviewParams.UITxtCommonNameEditValueAsString;
			Mouse.Click(uIPinButtonButton, new Point(9, 8));
		}
		public void CheckBricksAfterChangingGroupsDemoModuleData()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices011PrintControlBrick = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices011PrintControlBrick;
			DXPrintingBrick uIPage0BrickIndices011PrintControlBrick1 = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices011PrintControlBrick1;
			DXPrintingBrick uIPage0BrickIndices011PrintControlBrick2 = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices011PrintControlBrick2;
			DXPrintingBrick uIPage0BrickIndices011PrintControlBrick3 = this.UIXtraPrintingFeaturesWindow16.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices011PrintControlBrick3;
			#endregion
			Assert.AreEqual(this.CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues.UIPage0BrickIndices011PrintControlBrickText, uIPage0BrickIndices011PrintControlBrick.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues.UIPage0BrickIndices011PrintControlBrick1Text, uIPage0BrickIndices011PrintControlBrick1.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues.UIPage0BrickIndices011PrintControlBrick2Text, uIPage0BrickIndices011PrintControlBrick2.Text);
			Assert.AreEqual(this.CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues.UIPage0BrickIndices011PrintControlBrick3Text, uIPage0BrickIndices011PrintControlBrick3.Text);
		}
		public void SwitchToMasterDetailDemoModule()
		{
			#region Variable Declarations
			DXTestControl uIMasterDetailNavBarLink = this.UIXtraPrintingFeaturesWindow21.UIGcNavigationsClient.UINavBarControl1NavBar.UIMiscellaneousNavBarGroup.UIMasterDetailNavBarLink;
			#endregion
			Mouse.Click(uIMasterDetailNavBarLink, new Point(0, 0));
		}
		public void CheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickText()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices201PrintControlBrick = this.UIXtraPrintingFeaturesWindow14.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIMasterDetailControlCustom.UIPSTabTabList.UIXtraTabPageClient.UIDocumentViewerPrintViewControl.UIPage0BrickIndices201PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues.UIPage0BrickIndices201PrintControlBrickText, uIPage0BrickIndices201PrintControlBrick.Text);
		}
		public void PageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcut()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices20PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices20PrintControlBrick;
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl;
			#endregion
			Mouse.StartDragging(uIPage0BrickIndices20PrintControlBrick, new Point(14, 2));
			Mouse.StopDragging(uIPage0BrickIndices20PrintControlBrick, 149, 10);
			Keyboard.SendKeys(uIDocumentViewerPrintViewControl, this.PageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams.UIDocumentViewerPrintViewControlSendKeys, ModifierKeys.Control);
		}
		public void ChangePrintPreviewOrientationInCalendarDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uILandscapeRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow13.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UILandscapeRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uILandscapeRibbonBaseButtonItem, new Point(26, 26));
		}
		public void CheckSwitchToLandscapePrintPreviewOrientation()
		{
			#region Variable Declarations
			DXRibbonButtonItem uILandscapeRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow13.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UILandscapeRibbonBaseButtonItem;
			DXRibbonButtonItem uIPortraitRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow13.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UIPortraitRibbonBaseButtonItem;
			#endregion
			Assert.AreEqual(this.CheckSwitchToLandscapePrintPreviewOrientationExpectedValues.UILandscapeRibbonBaseButtonItemChecked, uILandscapeRibbonBaseButtonItem.Checked);
			Assert.AreEqual(this.CheckSwitchToLandscapePrintPreviewOrientationExpectedValues.UIPortraitRibbonBaseButtonItemChecked, uIPortraitRibbonBaseButtonItem.Checked);
		}
		public void ChangeMultiplePagesBarItemValue()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIManyPagesRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIManyPagesRibbonBaseButtonItem;
			DXTestControl uIPopupContainerBarConClient = this.UIItemWindow.UIPopupContainerBarConMenu.UIPopupContainerBarConClient;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(41, 7));
			Mouse.Click(uIManyPagesRibbonBaseButtonItem, new Point(34, 58));
			Mouse.Click(uIPopupContainerBarConClient, new Point(47, 16));
		}
		public void CheckChangedMultiplePagesBarItemValueViaBrickClick()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage1BrickIndices000PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage1BrickIndices000PrintControlBrick;
			#endregion
			Mouse.Click(uIPage1BrickIndices000PrintControlBrick, new Point(24, 7));
		}
		public void ClickExportDocumentBar()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXButton uIPrintPreviewBarItem2Button = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup3.UIExportToRibbonItem.UIPrintPreviewBarItem2Button;
			DXTestControl uIPDFFileGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIItemGalleryItemGroup.UIPDFFileGalleryItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(34, 15));
			Mouse.Click(uIPrintPreviewBarItem2Button, new Point(6, 14));
			Mouse.Click(uIPDFFileGalleryItem, new Point(40, 18));
		}
		public void ClickExportDocumentHTMLItem()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXButton uIPrintPreviewBarItem2Button = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup3.UIExportToRibbonItem.UIPrintPreviewBarItem2Button;
			DXTestControl uIHTMLFileGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIItemGalleryItemGroup.UIHTMLFileGalleryItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(70, 13));
			Mouse.Click(uIPrintPreviewBarItem2Button, new Point(27, 10));
			Mouse.Click(uIHTMLFileGalleryItem, new Point(43, 18));
		}
		public void ClickExportDocumentRTFItem()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXButton uIPrintPreviewBarItem2Button = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup3.UIExportToRibbonItem.UIPrintPreviewBarItem2Button;
			DXTestControl uIRTFFileGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIItemGalleryItemGroup.UIRTFFileGalleryItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(49, 9));
			Mouse.Click(uIPrintPreviewBarItem2Button, new Point(20, 16));
			Mouse.Click(uIRTFFileGalleryItem, new Point(61, 26));
		}
		public void ClickExportDocumentXLSItem()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXButton uIPrintPreviewBarItem2Button = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup3.UIExportToRibbonItem.UIPrintPreviewBarItem2Button;
			DXTestControl uIXLSFileGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIItemGalleryItemGroup.UIXLSFileGalleryItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(61, 9));
			Mouse.Click(uIPrintPreviewBarItem2Button, new Point(26, 17));
			Mouse.Click(uIXLSFileGalleryItem, new Point(33, 19));
		}
		public void ClickExportDocumentCSVItem()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXButton uIPrintPreviewBarItem2Button = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup3.UIExportToRibbonItem.UIPrintPreviewBarItem2Button;
			DXTestControl uICSVFileGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIItemGalleryItemGroup.UICSVFileGalleryItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(66, 14));
			Mouse.Click(uIPrintPreviewBarItem2Button, new Point(25, 17));
			Mouse.Click(uICSVFileGalleryItem, new Point(72, 21));
		}
		public void ClickExportDocumentImageItem()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXButton uIPrintPreviewBarItem2Button = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup3.UIExportToRibbonItem.UIPrintPreviewBarItem2Button;
			DXTestControl uIImageFileGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIItemGalleryItemGroup.UIImageFileGalleryItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(56, 11));
			Mouse.Click(uIPrintPreviewBarItem2Button, new Point(18, 21));
			Mouse.Click(uIImageFileGalleryItem, new Point(87, 19));
		}
		public void ClickRefreshPreviewButtonInRichTextBoxDemoModule()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIRefreshRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow22.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UIRefreshRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRefreshRibbonBaseButtonItem, new Point(30, 15));
		}
		public void ClickRichTextBoxSizeBar()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow22.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uISizeRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow22.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPageSetupRibbonPageGroup.UISizeRibbonBaseButtonItem;
			DXTestControl uIA5GalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu6.UIItemGalleryItemGroup.UIA5GalleryItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(41, 15));
			Mouse.Click(uISizeRibbonBaseButtonItem, new Point(22, 53));
			Mouse.Click(uIA5GalleryItem, new Point(60, 30));
		}
		public void SwitchCalendarPreviewModeToMonthPreview()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIMonthViewRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow13.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UIMonthViewRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIMonthViewRibbonBaseButtonItem, new Point(25, 21));
		}
		public void ChangePrintPreviewMonthCalendarDimensions()
		{
			#region Variable Declarations
			DXRibbonItem uIFullPageRibbonItem = this.UIXtraPrintingFeaturesWindow13.UIRibbonControl1Ribbon.UIRibbonPageActionsRibbonPage.UIRibbonGroupActionsRibbonPageGroup.UIFullPageRibbonItem;
			DXMenuBaseButtonItem uIBarInListItemLink2MenuBaseButtonItem = this.UIItemWindow.UISubMenuBarControlMenu.UIBarInListItemLink2MenuBaseButtonItem;
			#endregion
			Mouse.Click(uIFullPageRibbonItem, new Point(29, 59));
			Mouse.Click(uIBarInListItemLink2MenuBaseButtonItem, new Point(50, 11));
		}
		public void ClickMagnifierBarCommandToFitWholePage()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIMagnifierRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIMagnifierRibbonBaseButtonItem;
			DXPrintingBrick uIPage0BrickIndices08PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices08PrintControlBrick;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(54, 14));
			Mouse.Click(uIMagnifierRibbonBaseButtonItem, new Point(16, 9));
			Mouse.Click(uIPage0BrickIndices08PrintControlBrick, new Point(11, 21));
		}
		public void ClickMagnifierBarCommandToNormalSizeView()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices020PrintControlBrick = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices020PrintControlBrick;
			#endregion
			Mouse.Click(uIPage0BrickIndices020PrintControlBrick, new Point(3, 10));
		}
		public void CheckPostponedFormCount()
		{
			#region Variable Declarations
			DXTextEdit uISePostponedFormCountEdit = this.UIApplicationUILayoutCWindow.UIPanelControl1Client.UIGcContainerClient.UIAlertControlTutorialCustom.UIXtraTabControl1TabList.UIXtraTabPage1Client.UISePostponedFormCountEdit;
			#endregion
			Assert.AreEqual(this.CheckPostponedFormCountExpectedValues.UISePostponedFormCountEditValueAsString, uISePostponedFormCountEdit.ValueAsString);
		}
		public void CheckChangedHiddenStateOfColumn()
		{
			#region Variable Declarations
			DXColumnHeader uIColTrademark2ColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIColTrademark2ColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckChangedHiddenStateOfColumnExpectedValues.UIColTrademark2ColumnHeaderVisibleIndex, uIColTrademark2ColumnHeader.VisibleIndex);
		}
		public void CheckDeletedSummary()
		{
			#region Variable Declarations
			DXGridFooterCell uIGridControlFooterCelGridFooterCell = this.UITheXtraGridSuitebyDeWindow1.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UIGridControl1Table.UIGridControlFooterCelGridFooterCell;
			#endregion
			Assert.AreEqual(this.CheckDeletedSummaryExpectedValues.UIGridControlFooterCelGridFooterCellValueAsString, uIGridControlFooterCelGridFooterCell.ValueAsString);
			Assert.AreEqual(this.CheckDeletedSummaryExpectedValues.UIGridControlFooterCelGridFooterCellText, uIGridControlFooterCelGridFooterCell.Text);
		}
		public void CheckRibbonItemAddedToQuickAccessToolbar()
		{
			#region Variable Declarations
			DXRibbonButtonItem uIIExitRibbonBaseButtonItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIRibbonQuickAccessTooRibbonBar.UIIExitRibbonBaseButtonItem;
			#endregion
			Assert.AreEqual(this.CheckRibbonItemAddedToQuickAccessToolbarExpectedValues.UIIExitRibbonBaseButtonItemExists, uIIExitRibbonBaseButtonItem.Exists);
		}
		public void SetOffice2013ThemeForRibbonSimplePad()
		{
			#region Variable Declarations
			DXRibbonEditItem uIBiStyleRibbonEditItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIPageHeaderToolbarRibbonBar.UIBiStyleRibbonEditItem;
			DXListBoxItem uIOffice2013ListItem = this.UINewDocument1RibbonSiWindow2.UIRibbonControl1Ribbon.UIImageComboBoxEditComboBox.UIPopupImageComboBoxEdWindow.UIPopupImageComboBoxEdList.UIOffice2013ListItem;
			#endregion
			Mouse.Click(uIBiStyleRibbonEditItem, new Point(72, 10));
			Mouse.Click(uIOffice2013ListItem, new Point(48, 6));
		}
		public void CheckAddedConditionExpressionOnSimpleConditionsTab()
		{
			#region Variable Declarations
			DXListBoxItem uINotBetween1040ListItem = this.UIFormatRulesEditorforWindow.UIFormatItemListList.UINotBetween1040ListItem;
			#endregion
			Assert.AreEqual(this.CheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues.UINotBetween1040ListItemText, uINotBetween1040ListItem.Text);
			Assert.AreEqual(this.CheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues.UINotBetween1040ListItemSelected, uINotBetween1040ListItem.Selected);
		}
		public void CheckComplexFilteredData()
		{
			#region Variable Declarations
			DXColumnHeader uIGridColumn3ColumnHeader = this.UITheXtraGridSuitebyDeWindow2.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridColumn3ColumnHeader;
			DXTestControl uIGridControlFilterPanCustom = this.UITheXtraGridSuitebyDeWindow2.UIPanelControl1Client.UIGcContainerClient.UITableViewCustom.UIGridControl1Table.UIGridControlFilterPanCustom;
			#endregion
			Assert.AreEqual(this.CheckComplexFilteredDataExpectedValues.UIGridColumn3ColumnHeaderFilterString, uIGridColumn3ColumnHeader.FilterString);
			Assert.AreEqual(this.CheckComplexFilteredDataExpectedValues.UIGridControlFilterPanCustomFilterString, uIGridControlFilterPanCustom.FilterString);
		}
		public void ChangeRichTextBoxValueForChangingPrintPreview()
		{
			#region Variable Declarations
			WinEdit uIItemEdit = this.UIXtraPrintingFeaturesWindow4.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDockPanelDockPanel.UIControlContainerCustom.UIMyRichTextBoxCustom.UIItemEdit;
			#endregion
			uIItemEdit.Text = this.ChangeRichTextBoxValueForChangingPrintPreviewParams.UIItemEditText;
		}
		public void CheckChangedRichTextBoxValueViaCheckingBrickText()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices00PrintControlBrick = this.UIXtraPrintingFeaturesWindow22.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices00PrintControlBrick;
			#endregion
			Assert.AreEqual(this.CheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues.UIPage0BrickIndices00PrintControlBrickText, uIPage0BrickIndices00PrintControlBrick.Text);
		}
		public void SearchInPrintPreviewViaSearchBar()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIFindRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup1.UIFindRibbonBaseButtonItem;
			DXTextEdit uITextEditEdit = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIFindPanelClient.UIFindControlCustom.UITextEditEdit;
			DXButton uIDropDownButtonArrowBButton = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIFindPanelClient.UIFindControlCustom.UIDdBtnParametersButton.UIDropDownButtonArrowBButton;
			DXMenuBaseButtonItem uIBarCheckItemLink1MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu11.UIBarCheckItemLink1MenuBaseButtonItem;
			DXButton uINextButton = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIFindPanelClient.UIFindControlCustom.UINextButton;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(43, 9));
			Mouse.Click(uIFindRibbonBaseButtonItem, new Point(15, 21));
			uITextEditEdit.ValueAsString = this.SearchInPrintPreviewViaSearchBarParams.UITextEditEditValueAsString;
			Mouse.Click(uIDropDownButtonArrowBButton, new Point(11, 9));
			Mouse.Click(uIBarCheckItemLink1MenuBaseButtonItem, new Point(47, 11));
			Mouse.Click(uINextButton, new Point(1, 1));
		}
		public void SearchBrickViaCtrlFShortcut()
		{
			#region Variable Declarations
			DXPrinting uIDocumentViewerPrintViewControl = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl;
			DXTextEdit uITextEditEdit = this.UIXtraPrintingFeaturesWindow12.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIFindPanelClient.UIFindControlCustom.UITextEditEdit;
			#endregion
			Mouse.Click(uIDocumentViewerPrintViewControl, new Point(377, 70));
			Keyboard.SendKeys(uIDocumentViewerPrintViewControl, this.SearchBrickViaCtrlFShortcutParams.UIDocumentViewerPrintViewControlSendKeys, ModifierKeys.Control);
			uITextEditEdit.ValueAsString = this.SearchBrickViaCtrlFShortcutParams.UITextEditEditValueAsString;
			Keyboard.SendKeys(uITextEditEdit, this.SearchBrickViaCtrlFShortcutParams.UITextEditEditSendKeys, ModifierKeys.None);
		}
		public void TextBricksSelectionViaMouseAndCopyViaCtrlCShortcut()
		{
			#region Variable Declarations
			DXPrintingBrick uIPage0BrickIndices00PrintControlBrick = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom.UIDocumentViewerPrintViewControl.UIPage0BrickIndices00PrintControlBrick;
			DXTestControl uIPreviewControlCustom = this.UIXtraPrintingFeaturesWindow19.UIPanelControl1Client.UIGcContainerClient.UIPreviewControlCustom;
			#endregion
			Mouse.StartDragging(uIPage0BrickIndices00PrintControlBrick, new Point(5, 179));
			Mouse.StopDragging(uIPage0BrickIndices00PrintControlBrick, 148, 3);
			Keyboard.SendKeys(uIPreviewControlCustom, this.TextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams.UIPreviewControlCustomSendKeys, ModifierKeys.Control);
		}
		public void ChangePrintPreviewZoomViaPageWidthDropDownList()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIZoomOutRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPrintPreviewRibbonPaRibbonPageGroup.UIZoomOutRibbonBaseButtonItem;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(63, 8));
			Mouse.Click(uIZoomOutRibbonBaseButtonItem, new Point(23, 9));
		}
		public void CheckCustomizedWatermarkOptions()
		{
			#region Variable Declarations
			DXComboBox uICmbWatermarkTextComboBox = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup10LayoutGroup.UILayoutControlItem25LayoutControlItem.UICmbWatermarkTextComboBox;
			DXLookUpEdit uILkpTextDirectionLookUpEdit = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup10LayoutGroup.UILayoutControlItem26LayoutControlItem.UILkpTextDirectionLookUpEdit;
			DXComboBox uICmbWatermarkFontSizeComboBox = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup10LayoutGroup.UILayoutControlItem27LayoutControlItem.UICmbWatermarkFontSizeComboBox;
			DXTrackBar uITrBarTextTransparencTrackBar = this.UIWatermarkWindow1.UILayoutControl1Custom.UIRootLayoutGroup.UIPanelControl1itemTabbedGroup.UITpTextWaterMarkLayoutGroup.UILayoutControlGroup9LayoutGroup.UILayoutControlItem14LayoutControlItem.UITrBarTextTransparencTrackBar;
			#endregion
			Assert.AreEqual(this.CheckCustomizedWatermarkOptionsExpectedValues.UICmbWatermarkTextComboBoxValueAsString, uICmbWatermarkTextComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedWatermarkOptionsExpectedValues.UILkpTextDirectionLookUpEditValueAsString, uILkpTextDirectionLookUpEdit.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedWatermarkOptionsExpectedValues.UICmbWatermarkFontSizeComboBoxValueAsString, uICmbWatermarkFontSizeComboBox.ValueAsString);
			Assert.AreEqual(this.CheckCustomizedWatermarkOptionsExpectedValues.UITrBarTextTransparencTrackBarValueAsString, uITrBarTextTransparencTrackBar.ValueAsString);
		}
		public void ChangePrintPreviewScaleBySpecifyingPercentageBox()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIScaleRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPageSetupRibbonPageGroup.UIScaleRibbonBaseButtonItem;
			DXTextEdit uISpinScalePercentEdit = this.UIItemWindow.UIPopupContainerBarConMenu.UIPopupContainerBarConClient2.UILayoutControl1Custom.UIRootLayoutGroup.UIGroupLayoutGroup.UILayoutControlItem3LayoutControlItem.UISpinScalePercentEdit;
			DXButton uIOKButton = this.UIItemWindow.UIPopupContainerBarConMenu.UIPopupContainerBarConClient2.UILayoutControl1Custom.UIRootLayoutGroup.UIGrpButtonsLayoutGroup.UILayoutControlItem7LayoutControlItem.UIOKButton;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(46, 12));
			Mouse.Click(uIScaleRibbonBaseButtonItem, new Point(27, 65));
			uISpinScalePercentEdit.ValueAsString = this.ChangePrintPreviewScaleBySpecifyingPercentageBoxParams.UISpinScalePercentEditValueAsString;
			Mouse.Click(uIOKButton, new Point(1, 1));
		}
		public void ChangePrintPreviewScaleViaFitToPagesBox()
		{
			#region Variable Declarations
			DXRibbonPage uIRibbonPage1RibbonPage = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage;
			DXRibbonButtonItem uIScaleRibbonBaseButtonItem = this.UIXtraPrintingFeaturesWindow12.UIRibbonControl1Ribbon.UIRibbonPage1RibbonPage.UIPageGroupPageSetupRibbonPageGroup.UIScaleRibbonBaseButtonItem;
			DXCheckBox uIRadioFitToPageWidthCheckBox = this.UIItemWindow.UIPopupContainerBarConMenu.UIPopupContainerBarConClient2.UILayoutControl1Custom.UIRootLayoutGroup.UIGroupLayoutGroup.UILayoutControlItem2LayoutControlItem.UIRadioFitToPageWidthCheckBox;
			DXButton uIOKButton = this.UIItemWindow.UIPopupContainerBarConMenu.UIPopupContainerBarConClient2.UILayoutControl1Custom.UIRootLayoutGroup.UIGrpButtonsLayoutGroup.UILayoutControlItem7LayoutControlItem.UIOKButton;
			#endregion
			Mouse.Click(uIRibbonPage1RibbonPage, new Point(60, 14));
			Mouse.Click(uIScaleRibbonBaseButtonItem, new Point(24, 65));
			uIRadioFitToPageWidthCheckBox.Checked = this.ChangePrintPreviewScaleViaFitToPagesBoxParams.UIRadioFitToPageWidthCheckBoxChecked;
			Mouse.Click(uIOKButton, new Point(1, 1));
		}
		public void ShowFooterSummary()
		{
			#region Variable Declarations
			DXCheckBox uIChShowFooterCheckBox = this.UITheXtraGridSuitebyDeWindow3.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UINavigationPage1ScrollableControl.UILayoutControl1Custom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UIChShowFooterCheckBox;
			#endregion
			uIChShowFooterCheckBox.Checked = this.ShowFooterSummaryParams.UIChShowFooterCheckBoxChecked;
		}
		public void SwitchToGroupFooterSummaryOption()
		{
			#region Variable Declarations
			DXCheckBox uIChDisplaySummaryCheckBox = this.UITheXtraGridSuitebyDeWindow3.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UINavigationPage1ScrollableControl.UILayoutControl1Custom.UIRootLayoutGroup.UILayoutControlItem3LayoutControlItem.UIChDisplaySummaryCheckBox;
			#endregion
			uIChDisplaySummaryCheckBox.Checked = this.SwitchToGroupFooterSummaryOptionParams.UIChDisplaySummaryCheckBoxChecked;
		}
		public void DisableAlignInGroupRow()
		{
			#region Variable Declarations
			DXCheckBox uIChAlignSummaryCheckBox = this.UITheXtraGridSuitebyDeWindow3.UIPanelControl1Client.UIGcContainerClient.UIDataSummariesCustom.UINavigationPage1ScrollableControl.UILayoutControl1Custom.UIRootLayoutGroup.UILayoutControlItem4LayoutControlItem.UIChAlignSummaryCheckBox;
			#endregion
			uIChAlignSummaryCheckBox.Checked = this.DisableAlignInGroupRowParams.UIChAlignSummaryCheckBoxChecked;
		}
		public void DisplayColumnChooserWindow()
		{
			#region Variable Declarations
			DXColumnHeader uIGcNameColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGcNameColumnHeader;
			DXMenuBaseButtonItem uIBarButtonItemLink5MenuBaseButtonItem1 = this.UIItemWindow.UIPopupMenuBarControlMenu8.UIBarButtonItemLink5MenuBaseButtonItem1;
			#endregion
			Mouse.Click(uIGcNameColumnHeader, MouseButtons.Right, ModifierKeys.None, new Point(20, 5));
			Mouse.Click(uIBarButtonItemLink5MenuBaseButtonItem1, new Point(97, 11));
		}
		public void CheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenu()
		{
			#region Variable Declarations
			DXColumnHeader uIGcIDColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGcIDColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues.UIGcIDColumnHeaderVisibleIndex, uIGcIDColumnHeader.VisibleIndex);
		}
		public void CheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationForm()
		{
			#region Variable Declarations
			DXColumnHeader uIGcIDColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGcIDColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues.UIGcIDColumnHeaderVisibleIndex, uIGcIDColumnHeader.VisibleIndex);
		}
		public void CheckColumnHeaderAfterHidingColumn()
		{
			#region Variable Declarations
			DXColumnHeader uIGcModificationColumnHeader = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGcModificationColumnHeader;
			#endregion
			Assert.AreEqual(this.CheckColumnHeaderAfterHidingColumnExpectedValues.UIGcModificationColumnHeaderVisibleIndex, uIGcModificationColumnHeader.VisibleIndex);
		}
		public void CheckReorderedBandsOnAdvancedBandedGridView()
		{
			#region Variable Declarations
			DXGridBand uIGbImageGridBand = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGbImageGridBand;
			DXGridBand uIGbMainGridBand = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGbMainGridBand;
			DXGridBand uIGbPerfomanceGridBand = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGbPerfomanceGridBand;
			#endregion
			Assert.AreEqual(this.CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues.UIGbImageGridBandVisibleIndex, uIGbImageGridBand.VisibleIndex);
			Assert.AreEqual(this.CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues.UIGbMainGridBandVisibleIndex, uIGbMainGridBand.VisibleIndex);
			Assert.AreEqual(this.CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues.UIGbPerfomanceGridBandVisibleIndex, uIGbPerfomanceGridBand.VisibleIndex);
		}
		public void CheckReorderedBandsOnBandedGridView()
		{
			#region Variable Declarations
			DXGridBand uIGridBand4GridBand = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGridBand4GridBand;
			DXGridBand uIGridBand1GridBand = this.UITheXtraGridSuitebyDeWindow.UIPanelControl1Client.UIGcContainerClient.UIViewStylesCustom.UIGridControl1Table.UIGridBand1GridBand;
			#endregion
			Assert.AreEqual(this.CheckReorderedBandsOnBandedGridViewExpectedValues.UIGridBand4GridBandVisibleIndex, uIGridBand4GridBand.VisibleIndex);
			Assert.AreEqual(this.CheckReorderedBandsOnBandedGridViewExpectedValues.UIGridBand1GridBandVisibleIndex, uIGridBand1GridBand.VisibleIndex);
		}
		#region Properties
		public virtual CellSelectionViaPageDownButtonParams CellSelectionViaPageDownButtonParams
		{
			get
			{
				if ((this.mCellSelectionViaPageDownButtonParams == null))
				{
					this.mCellSelectionViaPageDownButtonParams = new CellSelectionViaPageDownButtonParams();
				}
				return this.mCellSelectionViaPageDownButtonParams;
			}
		}
		public virtual ChangeLookUpEditValueViaTypingParams ChangeLookUpEditValueViaTypingParams
		{
			get
			{
				if ((this.mChangeLookUpEditValueViaTypingParams == null))
				{
					this.mChangeLookUpEditValueViaTypingParams = new ChangeLookUpEditValueViaTypingParams();
				}
				return this.mChangeLookUpEditValueViaTypingParams;
			}
		}
		public virtual ChangeZoomTrackBarValueViaMouseWheelScrollParams ChangeZoomTrackBarValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeZoomTrackBarValueViaMouseWheelScrollParams == null))
				{
					this.mChangeZoomTrackBarValueViaMouseWheelScrollParams = new ChangeZoomTrackBarValueViaMouseWheelScrollParams();
				}
				return this.mChangeZoomTrackBarValueViaMouseWheelScrollParams;
			}
		}
		public virtual SwitchOffMemoEditAutoHeightOptionParams SwitchOffMemoEditAutoHeightOptionParams
		{
			get
			{
				if ((this.mSwitchOffMemoEditAutoHeightOptionParams == null))
				{
					this.mSwitchOffMemoEditAutoHeightOptionParams = new SwitchOffMemoEditAutoHeightOptionParams();
				}
				return this.mSwitchOffMemoEditAutoHeightOptionParams;
			}
		}
		public virtual SwitchToEditTimeModeParams SwitchToEditTimeModeParams
		{
			get
			{
				if ((this.mSwitchToEditTimeModeParams == null))
				{
					this.mSwitchToEditTimeModeParams = new SwitchToEditTimeModeParams();
				}
				return this.mSwitchToEditTimeModeParams;
			}
		}
		public virtual AddBarToStandaloneBarDockControlParams AddBarToStandaloneBarDockControlParams
		{
			get
			{
				if ((this.mAddBarToStandaloneBarDockControlParams == null))
				{
					this.mAddBarToStandaloneBarDockControlParams = new AddBarToStandaloneBarDockControlParams();
				}
				return this.mAddBarToStandaloneBarDockControlParams;
			}
		}
		public virtual AdditionNewRowParams AdditionNewRowParams
		{
			get
			{
				if ((this.mAdditionNewRowParams == null))
				{
					this.mAdditionNewRowParams = new AdditionNewRowParams();
				}
				return this.mAdditionNewRowParams;
			}
		}
		public virtual AddNewConditionExpressionViaConditionExpressionEditorParams AddNewConditionExpressionViaConditionExpressionEditorParams
		{
			get
			{
				if ((this.mAddNewConditionExpressionViaConditionExpressionEditorParams == null))
				{
					this.mAddNewConditionExpressionViaConditionExpressionEditorParams = new AddNewConditionExpressionViaConditionExpressionEditorParams();
				}
				return this.mAddNewConditionExpressionViaConditionExpressionEditorParams;
			}
		}
		public virtual AddNewConditionExpressionViaStyleFormatConditionEditorParams AddNewConditionExpressionViaStyleFormatConditionEditorParams
		{
			get
			{
				if ((this.mAddNewConditionExpressionViaStyleFormatConditionEditorParams == null))
				{
					this.mAddNewConditionExpressionViaStyleFormatConditionEditorParams = new AddNewConditionExpressionViaStyleFormatConditionEditorParams();
				}
				return this.mAddNewConditionExpressionViaStyleFormatConditionEditorParams;
			}
		}
		public virtual AddNewFixedColumnToLeftAndScrollParams AddNewFixedColumnToLeftAndScrollParams
		{
			get
			{
				if ((this.mAddNewFixedColumnToLeftAndScrollParams == null))
				{
					this.mAddNewFixedColumnToLeftAndScrollParams = new AddNewFixedColumnToLeftAndScrollParams();
				}
				return this.mAddNewFixedColumnToLeftAndScrollParams;
			}
		}
		public virtual AddNewFixedColumnToRightAndScrollParams AddNewFixedColumnToRightAndScrollParams
		{
			get
			{
				if ((this.mAddNewFixedColumnToRightAndScrollParams == null))
				{
					this.mAddNewFixedColumnToRightAndScrollParams = new AddNewFixedColumnToRightAndScrollParams();
				}
				return this.mAddNewFixedColumnToRightAndScrollParams;
			}
		}
		public virtual AddNewRibbonGroupItemViaCustomizationFormParams AddNewRibbonGroupItemViaCustomizationFormParams
		{
			get
			{
				if ((this.mAddNewRibbonGroupItemViaCustomizationFormParams == null))
				{
					this.mAddNewRibbonGroupItemViaCustomizationFormParams = new AddNewRibbonGroupItemViaCustomizationFormParams();
				}
				return this.mAddNewRibbonGroupItemViaCustomizationFormParams;
			}
		}
		public virtual AddNewSomeRibbonGroupViaCustomizationFormParams AddNewSomeRibbonGroupViaCustomizationFormParams
		{
			get
			{
				if ((this.mAddNewSomeRibbonGroupViaCustomizationFormParams == null))
				{
					this.mAddNewSomeRibbonGroupViaCustomizationFormParams = new AddNewSomeRibbonGroupViaCustomizationFormParams();
				}
				return this.mAddNewSomeRibbonGroupViaCustomizationFormParams;
			}
		}
		public virtual AddRibbonCommandToNewRibbonCategoryInCustomizationFormParams AddRibbonCommandToNewRibbonCategoryInCustomizationFormParams
		{
			get
			{
				if ((this.mAddRibbonCommandToNewRibbonCategoryInCustomizationFormParams == null))
				{
					this.mAddRibbonCommandToNewRibbonCategoryInCustomizationFormParams = new AddRibbonCommandToNewRibbonCategoryInCustomizationFormParams();
				}
				return this.mAddRibbonCommandToNewRibbonCategoryInCustomizationFormParams;
			}
		}
		public virtual AddRibbonCommandToNewRibbonTabInCustomizationFormParams AddRibbonCommandToNewRibbonTabInCustomizationFormParams
		{
			get
			{
				if ((this.mAddRibbonCommandToNewRibbonTabInCustomizationFormParams == null))
				{
					this.mAddRibbonCommandToNewRibbonTabInCustomizationFormParams = new AddRibbonCommandToNewRibbonTabInCustomizationFormParams();
				}
				return this.mAddRibbonCommandToNewRibbonTabInCustomizationFormParams;
			}
		}
		public virtual AddRibbonGroupToQuickAccessToolbarParams AddRibbonGroupToQuickAccessToolbarParams
		{
			get
			{
				if ((this.mAddRibbonGroupToQuickAccessToolbarParams == null))
				{
					this.mAddRibbonGroupToQuickAccessToolbarParams = new AddRibbonGroupToQuickAccessToolbarParams();
				}
				return this.mAddRibbonGroupToQuickAccessToolbarParams;
			}
		}
		public virtual AssignFindPanelFilterColumnParams AssignFindPanelFilterColumnParams
		{
			get
			{
				if ((this.mAssignFindPanelFilterColumnParams == null))
				{
					this.mAssignFindPanelFilterColumnParams = new AssignFindPanelFilterColumnParams();
				}
				return this.mAssignFindPanelFilterColumnParams;
			}
		}
		public virtual CellSelectionViaKeyboardParams CellSelectionViaKeyboardParams
		{
			get
			{
				if ((this.mCellSelectionViaKeyboardParams == null))
				{
					this.mCellSelectionViaKeyboardParams = new CellSelectionViaKeyboardParams();
				}
				return this.mCellSelectionViaKeyboardParams;
			}
		}
		public virtual CellSelectionViaKeyboardAndHoldingDownCTRLParams CellSelectionViaKeyboardAndHoldingDownCTRLParams
		{
			get
			{
				if ((this.mCellSelectionViaKeyboardAndHoldingDownCTRLParams == null))
				{
					this.mCellSelectionViaKeyboardAndHoldingDownCTRLParams = new CellSelectionViaKeyboardAndHoldingDownCTRLParams();
				}
				return this.mCellSelectionViaKeyboardAndHoldingDownCTRLParams;
			}
		}
		public virtual CellSelectionViaPageUpButtonParams CellSelectionViaPageUpButtonParams
		{
			get
			{
				if ((this.mCellSelectionViaPageUpButtonParams == null))
				{
					this.mCellSelectionViaPageUpButtonParams = new CellSelectionViaPageUpButtonParams();
				}
				return this.mCellSelectionViaPageUpButtonParams;
			}
		}
		public virtual CellSelectionViaShiftPageDownShortcutParams CellSelectionViaShiftPageDownShortcutParams
		{
			get
			{
				if ((this.mCellSelectionViaShiftPageDownShortcutParams == null))
				{
					this.mCellSelectionViaShiftPageDownShortcutParams = new CellSelectionViaShiftPageDownShortcutParams();
				}
				return this.mCellSelectionViaShiftPageDownShortcutParams;
			}
		}
		public virtual CellSelectionViaShiftPageUpShortcutParams CellSelectionViaShiftPageUpShortcutParams
		{
			get
			{
				if ((this.mCellSelectionViaShiftPageUpShortcutParams == null))
				{
					this.mCellSelectionViaShiftPageUpShortcutParams = new CellSelectionViaShiftPageUpShortcutParams();
				}
				return this.mCellSelectionViaShiftPageUpShortcutParams;
			}
		}
		public virtual CellSelectionViaShiftTabShortcutParams CellSelectionViaShiftTabShortcutParams
		{
			get
			{
				if ((this.mCellSelectionViaShiftTabShortcutParams == null))
				{
					this.mCellSelectionViaShiftTabShortcutParams = new CellSelectionViaShiftTabShortcutParams();
				}
				return this.mCellSelectionViaShiftTabShortcutParams;
			}
		}
		public virtual CellSelectionViaTabButtonParams CellSelectionViaTabButtonParams
		{
			get
			{
				if ((this.mCellSelectionViaTabButtonParams == null))
				{
					this.mCellSelectionViaTabButtonParams = new CellSelectionViaTabButtonParams();
				}
				return this.mCellSelectionViaTabButtonParams;
			}
		}
		public virtual ChangeAlertControlPropertiesParams ChangeAlertControlPropertiesParams
		{
			get
			{
				if ((this.mChangeAlertControlPropertiesParams == null))
				{
					this.mChangeAlertControlPropertiesParams = new ChangeAlertControlPropertiesParams();
				}
				return this.mChangeAlertControlPropertiesParams;
			}
		}
		public virtual ChangeAlertFormLocationParams ChangeAlertFormLocationParams
		{
			get
			{
				if ((this.mChangeAlertFormLocationParams == null))
				{
					this.mChangeAlertFormLocationParams = new ChangeAlertFormLocationParams();
				}
				return this.mChangeAlertFormLocationParams;
			}
		}
		public virtual ChangeAlertFormSizeParams ChangeAlertFormSizeParams
		{
			get
			{
				if ((this.mChangeAlertFormSizeParams == null))
				{
					this.mChangeAlertFormSizeParams = new ChangeAlertFormSizeParams();
				}
				return this.mChangeAlertFormSizeParams;
			}
		}
		public virtual ChangeBarCalcEditValueViaF4KeyAndKeyboardParams ChangeBarCalcEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeBarCalcEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeBarCalcEditValueViaF4KeyAndKeyboardParams = new ChangeBarCalcEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeBarCalcEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeBarCalcEditValueViaKeyboardParams ChangeBarCalcEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeBarCalcEditValueViaKeyboardParams == null))
				{
					this.mChangeBarCalcEditValueViaKeyboardParams = new ChangeBarCalcEditValueViaKeyboardParams();
				}
				return this.mChangeBarCalcEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeBarCalcEditValueViaMouseParams ChangeBarCalcEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeBarCalcEditValueViaMouseParams == null))
				{
					this.mChangeBarCalcEditValueViaMouseParams = new ChangeBarCalcEditValueViaMouseParams();
				}
				return this.mChangeBarCalcEditValueViaMouseParams;
			}
		}
		public virtual ChangeBarCalcEditValueViaMouseWheelScrollParams ChangeBarCalcEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeBarCalcEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeBarCalcEditValueViaMouseWheelScrollParams = new ChangeBarCalcEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeBarCalcEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeBarColorEditValueViaKeyboardParams ChangeBarColorEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeBarColorEditValueViaKeyboardParams == null))
				{
					this.mChangeBarColorEditValueViaKeyboardParams = new ChangeBarColorEditValueViaKeyboardParams();
				}
				return this.mChangeBarColorEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeBarColorEditValueViaMouseParams ChangeBarColorEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeBarColorEditValueViaMouseParams == null))
				{
					this.mChangeBarColorEditValueViaMouseParams = new ChangeBarColorEditValueViaMouseParams();
				}
				return this.mChangeBarColorEditValueViaMouseParams;
			}
		}
		public virtual ChangeBarComboBoxEditValueParams ChangeBarComboBoxEditValueParams
		{
			get
			{
				if ((this.mChangeBarComboBoxEditValueParams == null))
				{
					this.mChangeBarComboBoxEditValueParams = new ChangeBarComboBoxEditValueParams();
				}
				return this.mChangeBarComboBoxEditValueParams;
			}
		}
		public virtual ChangeBarComboBoxValueViaF4KeyAndKeyboardParams ChangeBarComboBoxValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeBarComboBoxValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeBarComboBoxValueViaF4KeyAndKeyboardParams = new ChangeBarComboBoxValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeBarComboBoxValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeBarComboBoxValueViaKeyboardParams ChangeBarComboBoxValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeBarComboBoxValueViaKeyboardParams == null))
				{
					this.mChangeBarComboBoxValueViaKeyboardParams = new ChangeBarComboBoxValueViaKeyboardParams();
				}
				return this.mChangeBarComboBoxValueViaKeyboardParams;
			}
		}
		public virtual ChangeBarComboBoxValueViaMouseWheelScrollParams ChangeBarComboBoxValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeBarComboBoxValueViaMouseWheelScrollParams == null))
				{
					this.mChangeBarComboBoxValueViaMouseWheelScrollParams = new ChangeBarComboBoxValueViaMouseWheelScrollParams();
				}
				return this.mChangeBarComboBoxValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeBarDateEditValueViaF4KeyAndKeyboardParams ChangeBarDateEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeBarDateEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeBarDateEditValueViaF4KeyAndKeyboardParams = new ChangeBarDateEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeBarDateEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeBarDateEditValueViaKeyboardParams ChangeBarDateEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeBarDateEditValueViaKeyboardParams == null))
				{
					this.mChangeBarDateEditValueViaKeyboardParams = new ChangeBarDateEditValueViaKeyboardParams();
				}
				return this.mChangeBarDateEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeBarDateEditValueViaMouseParams ChangeBarDateEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeBarDateEditValueViaMouseParams == null))
				{
					this.mChangeBarDateEditValueViaMouseParams = new ChangeBarDateEditValueViaMouseParams();
				}
				return this.mChangeBarDateEditValueViaMouseParams;
			}
		}
		public virtual ChangeBarDateEditValueViaMouseWheelScrollParams ChangeBarDateEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeBarDateEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeBarDateEditValueViaMouseWheelScrollParams = new ChangeBarDateEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeBarDateEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeBarMemoExEditValueParams ChangeBarMemoExEditValueParams
		{
			get
			{
				if ((this.mChangeBarMemoExEditValueParams == null))
				{
					this.mChangeBarMemoExEditValueParams = new ChangeBarMemoExEditValueParams();
				}
				return this.mChangeBarMemoExEditValueParams;
			}
		}
		public virtual ChangeBarSpinEditValueViaArrowButtonsParams ChangeBarSpinEditValueViaArrowButtonsParams
		{
			get
			{
				if ((this.mChangeBarSpinEditValueViaArrowButtonsParams == null))
				{
					this.mChangeBarSpinEditValueViaArrowButtonsParams = new ChangeBarSpinEditValueViaArrowButtonsParams();
				}
				return this.mChangeBarSpinEditValueViaArrowButtonsParams;
			}
		}
		public virtual ChangeBarSpinEditValueViaMouseWheelScrollParams ChangeBarSpinEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeBarSpinEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeBarSpinEditValueViaMouseWheelScrollParams = new ChangeBarSpinEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeBarSpinEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeBarSpinEditValueViaUpDownKeysParams ChangeBarSpinEditValueViaUpDownKeysParams
		{
			get
			{
				if ((this.mChangeBarSpinEditValueViaUpDownKeysParams == null))
				{
					this.mChangeBarSpinEditValueViaUpDownKeysParams = new ChangeBarSpinEditValueViaUpDownKeysParams();
				}
				return this.mChangeBarSpinEditValueViaUpDownKeysParams;
			}
		}
		public virtual ChangeBarTextEditValueParams ChangeBarTextEditValueParams
		{
			get
			{
				if ((this.mChangeBarTextEditValueParams == null))
				{
					this.mChangeBarTextEditValueParams = new ChangeBarTextEditValueParams();
				}
				return this.mChangeBarTextEditValueParams;
			}
		}
		public virtual ChangeBottomMarginForRecalculatedSummariesParams ChangeBottomMarginForRecalculatedSummariesParams
		{
			get
			{
				if ((this.mChangeBottomMarginForRecalculatedSummariesParams == null))
				{
					this.mChangeBottomMarginForRecalculatedSummariesParams = new ChangeBottomMarginForRecalculatedSummariesParams();
				}
				return this.mChangeBottomMarginForRecalculatedSummariesParams;
			}
		}
		public virtual ChangeBottomMarginValueParams ChangeBottomMarginValueParams
		{
			get
			{
				if ((this.mChangeBottomMarginValueParams == null))
				{
					this.mChangeBottomMarginValueParams = new ChangeBottomMarginValueParams();
				}
				return this.mChangeBottomMarginValueParams;
			}
		}
		public virtual ChangeButtonEditValueViaKeyboardParams ChangeButtonEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeButtonEditValueViaKeyboardParams == null))
				{
					this.mChangeButtonEditValueViaKeyboardParams = new ChangeButtonEditValueViaKeyboardParams();
				}
				return this.mChangeButtonEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeCalcEditValueParams ChangeCalcEditValueParams
		{
			get
			{
				if ((this.mChangeCalcEditValueParams == null))
				{
					this.mChangeCalcEditValueParams = new ChangeCalcEditValueParams();
				}
				return this.mChangeCalcEditValueParams;
			}
		}
		public virtual ChangeCalcEditValueViaKeyboardParams ChangeCalcEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeCalcEditValueViaKeyboardParams == null))
				{
					this.mChangeCalcEditValueViaKeyboardParams = new ChangeCalcEditValueViaKeyboardParams();
				}
				return this.mChangeCalcEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeCalcEditValueViaKeyboardInOpenedDropDownListParams ChangeCalcEditValueViaKeyboardInOpenedDropDownListParams
		{
			get
			{
				if ((this.mChangeCalcEditValueViaKeyboardInOpenedDropDownListParams == null))
				{
					this.mChangeCalcEditValueViaKeyboardInOpenedDropDownListParams = new ChangeCalcEditValueViaKeyboardInOpenedDropDownListParams();
				}
				return this.mChangeCalcEditValueViaKeyboardInOpenedDropDownListParams;
			}
		}
		public virtual ChangeCalcEditValueViaMouseParams ChangeCalcEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeCalcEditValueViaMouseParams == null))
				{
					this.mChangeCalcEditValueViaMouseParams = new ChangeCalcEditValueViaMouseParams();
				}
				return this.mChangeCalcEditValueViaMouseParams;
			}
		}
		public virtual ChangeCalcEditValueViaViaMouseWheelScrollParams ChangeCalcEditValueViaViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeCalcEditValueViaViaMouseWheelScrollParams == null))
				{
					this.mChangeCalcEditValueViaViaMouseWheelScrollParams = new ChangeCalcEditValueViaViaMouseWheelScrollParams();
				}
				return this.mChangeCalcEditValueViaViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeCellsValueOnSpreadSheetParams ChangeCellsValueOnSpreadSheetParams
		{
			get
			{
				if ((this.mChangeCellsValueOnSpreadSheetParams == null))
				{
					this.mChangeCellsValueOnSpreadSheetParams = new ChangeCellsValueOnSpreadSheetParams();
				}
				return this.mChangeCellsValueOnSpreadSheetParams;
			}
		}
		public virtual ChangeCellValuesInFixedBandsAndGroupingTabParams ChangeCellValuesInFixedBandsAndGroupingTabParams
		{
			get
			{
				if ((this.mChangeCellValuesInFixedBandsAndGroupingTabParams == null))
				{
					this.mChangeCellValuesInFixedBandsAndGroupingTabParams = new ChangeCellValuesInFixedBandsAndGroupingTabParams();
				}
				return this.mChangeCellValuesInFixedBandsAndGroupingTabParams;
			}
		}
		public virtual ChangeCellValuesInSimpleFixedBandsTabParams ChangeCellValuesInSimpleFixedBandsTabParams
		{
			get
			{
				if ((this.mChangeCellValuesInSimpleFixedBandsTabParams == null))
				{
					this.mChangeCellValuesInSimpleFixedBandsTabParams = new ChangeCellValuesInSimpleFixedBandsTabParams();
				}
				return this.mChangeCellValuesInSimpleFixedBandsTabParams;
			}
		}
		public virtual ChangeCellValueToRecalculateSummariesParams ChangeCellValueToRecalculateSummariesParams
		{
			get
			{
				if ((this.mChangeCellValueToRecalculateSummariesParams == null))
				{
					this.mChangeCellValueToRecalculateSummariesParams = new ChangeCellValueToRecalculateSummariesParams();
				}
				return this.mChangeCellValueToRecalculateSummariesParams;
			}
		}
		public virtual ChangeCellValueViaButtonClearParams ChangeCellValueViaButtonClearParams
		{
			get
			{
				if ((this.mChangeCellValueViaButtonClearParams == null))
				{
					this.mChangeCellValueViaButtonClearParams = new ChangeCellValueViaButtonClearParams();
				}
				return this.mChangeCellValueViaButtonClearParams;
			}
		}
		public virtual ChangeCheckedComboBoxEditValueViaButtonSelectAllParams ChangeCheckedComboBoxEditValueViaButtonSelectAllParams
		{
			get
			{
				if ((this.mChangeCheckedComboBoxEditValueViaButtonSelectAllParams == null))
				{
					this.mChangeCheckedComboBoxEditValueViaButtonSelectAllParams = new ChangeCheckedComboBoxEditValueViaButtonSelectAllParams();
				}
				return this.mChangeCheckedComboBoxEditValueViaButtonSelectAllParams;
			}
		}
		public virtual ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams = new ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams
		{
			get
			{
				if ((this.mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams == null))
				{
					this.mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams = new ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams();
				}
				return this.mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams;
			}
		}
		public virtual ChangeCheckedComboBoxEditValueViaKeyboardParams ChangeCheckedComboBoxEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeCheckedComboBoxEditValueViaKeyboardParams == null))
				{
					this.mChangeCheckedComboBoxEditValueViaKeyboardParams = new ChangeCheckedComboBoxEditValueViaKeyboardParams();
				}
				return this.mChangeCheckedComboBoxEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeCheckedComboBoxEditValueViaMouseParams ChangeCheckedComboBoxEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeCheckedComboBoxEditValueViaMouseParams == null))
				{
					this.mChangeCheckedComboBoxEditValueViaMouseParams = new ChangeCheckedComboBoxEditValueViaMouseParams();
				}
				return this.mChangeCheckedComboBoxEditValueViaMouseParams;
			}
		}
		public virtual ChangeCheckEditValueViaKeyboardParams ChangeCheckEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeCheckEditValueViaKeyboardParams == null))
				{
					this.mChangeCheckEditValueViaKeyboardParams = new ChangeCheckEditValueViaKeyboardParams();
				}
				return this.mChangeCheckEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams ChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams = new ChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams();
				}
				return this.mChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeColorEditValueInTabCustomViaKeyboardParams ChangeColorEditValueInTabCustomViaKeyboardParams
		{
			get
			{
				if ((this.mChangeColorEditValueInTabCustomViaKeyboardParams == null))
				{
					this.mChangeColorEditValueInTabCustomViaKeyboardParams = new ChangeColorEditValueInTabCustomViaKeyboardParams();
				}
				return this.mChangeColorEditValueInTabCustomViaKeyboardParams;
			}
		}
		public virtual ChangeColorEditValueInTabCustomViaMouseParams ChangeColorEditValueInTabCustomViaMouseParams
		{
			get
			{
				if ((this.mChangeColorEditValueInTabCustomViaMouseParams == null))
				{
					this.mChangeColorEditValueInTabCustomViaMouseParams = new ChangeColorEditValueInTabCustomViaMouseParams();
				}
				return this.mChangeColorEditValueInTabCustomViaMouseParams;
			}
		}
		public virtual ChangeColorEditValueInTabSystemViaKeyboardParams ChangeColorEditValueInTabSystemViaKeyboardParams
		{
			get
			{
				if ((this.mChangeColorEditValueInTabSystemViaKeyboardParams == null))
				{
					this.mChangeColorEditValueInTabSystemViaKeyboardParams = new ChangeColorEditValueInTabSystemViaKeyboardParams();
				}
				return this.mChangeColorEditValueInTabSystemViaKeyboardParams;
			}
		}
		public virtual ChangeColorEditValueInTabSystemViaMouseParams ChangeColorEditValueInTabSystemViaMouseParams
		{
			get
			{
				if ((this.mChangeColorEditValueInTabSystemViaMouseParams == null))
				{
					this.mChangeColorEditValueInTabSystemViaMouseParams = new ChangeColorEditValueInTabSystemViaMouseParams();
				}
				return this.mChangeColorEditValueInTabSystemViaMouseParams;
			}
		}
		public virtual ChangeColorEditValueInTabWebViaKeyboardParams ChangeColorEditValueInTabWebViaKeyboardParams
		{
			get
			{
				if ((this.mChangeColorEditValueInTabWebViaKeyboardParams == null))
				{
					this.mChangeColorEditValueInTabWebViaKeyboardParams = new ChangeColorEditValueInTabWebViaKeyboardParams();
				}
				return this.mChangeColorEditValueInTabWebViaKeyboardParams;
			}
		}
		public virtual ChangeColorEditValueInTabWebViaMouseParams ChangeColorEditValueInTabWebViaMouseParams
		{
			get
			{
				if ((this.mChangeColorEditValueInTabWebViaMouseParams == null))
				{
					this.mChangeColorEditValueInTabWebViaMouseParams = new ChangeColorEditValueInTabWebViaMouseParams();
				}
				return this.mChangeColorEditValueInTabWebViaMouseParams;
			}
		}
		public virtual ChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams ChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams
		{
			get
			{
				if ((this.mChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams == null))
				{
					this.mChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams = new ChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams();
				}
				return this.mChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams;
			}
		}
		public virtual ChangeComboBoxEditValueParams ChangeComboBoxEditValueParams
		{
			get
			{
				if ((this.mChangeComboBoxEditValueParams == null))
				{
					this.mChangeComboBoxEditValueParams = new ChangeComboBoxEditValueParams();
				}
				return this.mChangeComboBoxEditValueParams;
			}
		}
		public virtual ChangeComboBoxEditValueViaF4KeyAndKeyboardParams ChangeComboBoxEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeComboBoxEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeComboBoxEditValueViaF4KeyAndKeyboardParams = new ChangeComboBoxEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeComboBoxEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeComboBoxEditValueViaKeyboardParams ChangeComboBoxEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeComboBoxEditValueViaKeyboardParams == null))
				{
					this.mChangeComboBoxEditValueViaKeyboardParams = new ChangeComboBoxEditValueViaKeyboardParams();
				}
				return this.mChangeComboBoxEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams ChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams
		{
			get
			{
				if ((this.mChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams == null))
				{
					this.mChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams = new ChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams();
				}
				return this.mChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams;
			}
		}
		public virtual ChangeComboBoxEditValueViaMouseParams ChangeComboBoxEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeComboBoxEditValueViaMouseParams == null))
				{
					this.mChangeComboBoxEditValueViaMouseParams = new ChangeComboBoxEditValueViaMouseParams();
				}
				return this.mChangeComboBoxEditValueViaMouseParams;
			}
		}
		public virtual ChangeComboBoxEditValueViaMouseWheelScrollParams ChangeComboBoxEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeComboBoxEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeComboBoxEditValueViaMouseWheelScrollParams = new ChangeComboBoxEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeComboBoxEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeCustomFreightParams ChangeCustomFreightParams
		{
			get
			{
				if ((this.mChangeCustomFreightParams == null))
				{
					this.mChangeCustomFreightParams = new ChangeCustomFreightParams();
				}
				return this.mChangeCustomFreightParams;
			}
		}
		public virtual ChangeDateEditValueInVistaTimeModeParams ChangeDateEditValueInVistaTimeModeParams
		{
			get
			{
				if ((this.mChangeDateEditValueInVistaTimeModeParams == null))
				{
					this.mChangeDateEditValueInVistaTimeModeParams = new ChangeDateEditValueInVistaTimeModeParams();
				}
				return this.mChangeDateEditValueInVistaTimeModeParams;
			}
		}
		public virtual ChangeDateEditValueViaF4KeyAndKeyboardParams ChangeDateEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeDateEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeDateEditValueViaF4KeyAndKeyboardParams = new ChangeDateEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeDateEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeDateEditValueViaKeyboardParams ChangeDateEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeDateEditValueViaKeyboardParams == null))
				{
					this.mChangeDateEditValueViaKeyboardParams = new ChangeDateEditValueViaKeyboardParams();
				}
				return this.mChangeDateEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeDateEditValueViaKeyboardInOpenedDropDownListParams ChangeDateEditValueViaKeyboardInOpenedDropDownListParams
		{
			get
			{
				if ((this.mChangeDateEditValueViaKeyboardInOpenedDropDownListParams == null))
				{
					this.mChangeDateEditValueViaKeyboardInOpenedDropDownListParams = new ChangeDateEditValueViaKeyboardInOpenedDropDownListParams();
				}
				return this.mChangeDateEditValueViaKeyboardInOpenedDropDownListParams;
			}
		}
		public virtual ChangeDateEditValueViaMouseParams ChangeDateEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeDateEditValueViaMouseParams == null))
				{
					this.mChangeDateEditValueViaMouseParams = new ChangeDateEditValueViaMouseParams();
				}
				return this.mChangeDateEditValueViaMouseParams;
			}
		}
		public virtual ChangeDayTimeDateTimeEditValueParams ChangeDayTimeDateTimeEditValueParams
		{
			get
			{
				if ((this.mChangeDayTimeDateTimeEditValueParams == null))
				{
					this.mChangeDayTimeDateTimeEditValueParams = new ChangeDayTimeDateTimeEditValueParams();
				}
				return this.mChangeDayTimeDateTimeEditValueParams;
			}
		}
		public virtual ChangeFormMaxCountParams ChangeFormMaxCountParams
		{
			get
			{
				if ((this.mChangeFormMaxCountParams == null))
				{
					this.mChangeFormMaxCountParams = new ChangeFormMaxCountParams();
				}
				return this.mChangeFormMaxCountParams;
			}
		}
		public virtual ChangeFullDateAndTimeEditValueParams ChangeFullDateAndTimeEditValueParams
		{
			get
			{
				if ((this.mChangeFullDateAndTimeEditValueParams == null))
				{
					this.mChangeFullDateAndTimeEditValueParams = new ChangeFullDateAndTimeEditValueParams();
				}
				return this.mChangeFullDateAndTimeEditValueParams;
			}
		}
		public virtual ChangeFullDateTimeEditValueParams ChangeFullDateTimeEditValueParams
		{
			get
			{
				if ((this.mChangeFullDateTimeEditValueParams == null))
				{
					this.mChangeFullDateTimeEditValueParams = new ChangeFullDateTimeEditValueParams();
				}
				return this.mChangeFullDateTimeEditValueParams;
			}
		}
		public virtual ChangeGridLookUpEditorValueViaButtonLastParams ChangeGridLookUpEditorValueViaButtonLastParams
		{
			get
			{
				if ((this.mChangeGridLookUpEditorValueViaButtonLastParams == null))
				{
					this.mChangeGridLookUpEditorValueViaButtonLastParams = new ChangeGridLookUpEditorValueViaButtonLastParams();
				}
				return this.mChangeGridLookUpEditorValueViaButtonLastParams;
			}
		}
		public virtual ChangeGridLookUpEditorValueViaKeyboardParams ChangeGridLookUpEditorValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeGridLookUpEditorValueViaKeyboardParams == null))
				{
					this.mChangeGridLookUpEditorValueViaKeyboardParams = new ChangeGridLookUpEditorValueViaKeyboardParams();
				}
				return this.mChangeGridLookUpEditorValueViaKeyboardParams;
			}
		}
		public virtual ChangeGridLookUpEditorValueViaMouseParams ChangeGridLookUpEditorValueViaMouseParams
		{
			get
			{
				if ((this.mChangeGridLookUpEditorValueViaMouseParams == null))
				{
					this.mChangeGridLookUpEditorValueViaMouseParams = new ChangeGridLookUpEditorValueViaMouseParams();
				}
				return this.mChangeGridLookUpEditorValueViaMouseParams;
			}
		}
		public virtual ChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams ChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams = new ChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeImageComboBoxEditValueViaKeyboardParams ChangeImageComboBoxEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeImageComboBoxEditValueViaKeyboardParams == null))
				{
					this.mChangeImageComboBoxEditValueViaKeyboardParams = new ChangeImageComboBoxEditValueViaKeyboardParams();
				}
				return this.mChangeImageComboBoxEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeImageComboBoxEditValueViaMouseParams ChangeImageComboBoxEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeImageComboBoxEditValueViaMouseParams == null))
				{
					this.mChangeImageComboBoxEditValueViaMouseParams = new ChangeImageComboBoxEditValueViaMouseParams();
				}
				return this.mChangeImageComboBoxEditValueViaMouseParams;
			}
		}
		public virtual ChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams ChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams
		{
			get
			{
				if ((this.mChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams == null))
				{
					this.mChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams = new ChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams();
				}
				return this.mChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams;
			}
		}
		public virtual ChangeImageComboBoxEditValueViaMouseWheelScrollParams ChangeImageComboBoxEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeImageComboBoxEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeImageComboBoxEditValueViaMouseWheelScrollParams = new ChangeImageComboBoxEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeImageComboBoxEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeInPlaceGridLookUpEditorValueViaKeyboardParams ChangeInPlaceGridLookUpEditorValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeInPlaceGridLookUpEditorValueViaKeyboardParams == null))
				{
					this.mChangeInPlaceGridLookUpEditorValueViaKeyboardParams = new ChangeInPlaceGridLookUpEditorValueViaKeyboardParams();
				}
				return this.mChangeInPlaceGridLookUpEditorValueViaKeyboardParams;
			}
		}
		public virtual ChangeInPlaceGridLookUpEditorValueViaMouseParams ChangeInPlaceGridLookUpEditorValueViaMouseParams
		{
			get
			{
				if ((this.mChangeInPlaceGridLookUpEditorValueViaMouseParams == null))
				{
					this.mChangeInPlaceGridLookUpEditorValueViaMouseParams = new ChangeInPlaceGridLookUpEditorValueViaMouseParams();
				}
				return this.mChangeInPlaceGridLookUpEditorValueViaMouseParams;
			}
		}
		public virtual ChangeLeftMarginValueParams ChangeLeftMarginValueParams
		{
			get
			{
				if ((this.mChangeLeftMarginValueParams == null))
				{
					this.mChangeLeftMarginValueParams = new ChangeLeftMarginValueParams();
				}
				return this.mChangeLeftMarginValueParams;
			}
		}
		public virtual ChangeLoanAmountValueAndClickButtonCalculateParams ChangeLoanAmountValueAndClickButtonCalculateParams
		{
			get
			{
				if ((this.mChangeLoanAmountValueAndClickButtonCalculateParams == null))
				{
					this.mChangeLoanAmountValueAndClickButtonCalculateParams = new ChangeLoanAmountValueAndClickButtonCalculateParams();
				}
				return this.mChangeLoanAmountValueAndClickButtonCalculateParams;
			}
		}
		public virtual ChangeLookUpEditValueViaF4KeyAndKeyboardParams ChangeLookUpEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeLookUpEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeLookUpEditValueViaF4KeyAndKeyboardParams = new ChangeLookUpEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeLookUpEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeLookUpEditValueViaKeyboardParams ChangeLookUpEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeLookUpEditValueViaKeyboardParams == null))
				{
					this.mChangeLookUpEditValueViaKeyboardParams = new ChangeLookUpEditValueViaKeyboardParams();
				}
				return this.mChangeLookUpEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeLookUpEditValueViaMouseParams ChangeLookUpEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangeLookUpEditValueViaMouseParams == null))
				{
					this.mChangeLookUpEditValueViaMouseParams = new ChangeLookUpEditValueViaMouseParams();
				}
				return this.mChangeLookUpEditValueViaMouseParams;
			}
		}
		public virtual ChangeLookUpEditValueViaMouseWheelScrollParams ChangeLookUpEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeLookUpEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeLookUpEditValueViaMouseWheelScrollParams = new ChangeLookUpEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeLookUpEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeMemoExEditSizeParams ChangeMemoExEditSizeParams
		{
			get
			{
				if ((this.mChangeMemoExEditSizeParams == null))
				{
					this.mChangeMemoExEditSizeParams = new ChangeMemoExEditSizeParams();
				}
				return this.mChangeMemoExEditSizeParams;
			}
		}
		public virtual ChangeMemoExEditValueParams ChangeMemoExEditValueParams
		{
			get
			{
				if ((this.mChangeMemoExEditValueParams == null))
				{
					this.mChangeMemoExEditValueParams = new ChangeMemoExEditValueParams();
				}
				return this.mChangeMemoExEditValueParams;
			}
		}
		public virtual ChangeMemoExEditValueViaCancelButtonParams ChangeMemoExEditValueViaCancelButtonParams
		{
			get
			{
				if ((this.mChangeMemoExEditValueViaCancelButtonParams == null))
				{
					this.mChangeMemoExEditValueViaCancelButtonParams = new ChangeMemoExEditValueViaCancelButtonParams();
				}
				return this.mChangeMemoExEditValueViaCancelButtonParams;
			}
		}
		public virtual ChangeMemoExEditValueViaF4KeyAndKeyboardParams ChangeMemoExEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangeMemoExEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangeMemoExEditValueViaF4KeyAndKeyboardParams = new ChangeMemoExEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangeMemoExEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangeMemoExEditValueViaOkButtonParams ChangeMemoExEditValueViaOkButtonParams
		{
			get
			{
				if ((this.mChangeMemoExEditValueViaOkButtonParams == null))
				{
					this.mChangeMemoExEditValueViaOkButtonParams = new ChangeMemoExEditValueViaOkButtonParams();
				}
				return this.mChangeMemoExEditValueViaOkButtonParams;
			}
		}
		public virtual ChangeMonthAndDayDateTimeEditValueParams ChangeMonthAndDayDateTimeEditValueParams
		{
			get
			{
				if ((this.mChangeMonthAndDayDateTimeEditValueParams == null))
				{
					this.mChangeMonthAndDayDateTimeEditValueParams = new ChangeMonthAndDayDateTimeEditValueParams();
				}
				return this.mChangeMonthAndDayDateTimeEditValueParams;
			}
		}
		public virtual ChangeMRUEditValueViaAddingToDropDownListParams ChangeMRUEditValueViaAddingToDropDownListParams
		{
			get
			{
				if ((this.mChangeMRUEditValueViaAddingToDropDownListParams == null))
				{
					this.mChangeMRUEditValueViaAddingToDropDownListParams = new ChangeMRUEditValueViaAddingToDropDownListParams();
				}
				return this.mChangeMRUEditValueViaAddingToDropDownListParams;
			}
		}
		public virtual ChangeMRUEditValueViaDeletingFromDropDownListParams ChangeMRUEditValueViaDeletingFromDropDownListParams
		{
			get
			{
				if ((this.mChangeMRUEditValueViaDeletingFromDropDownListParams == null))
				{
					this.mChangeMRUEditValueViaDeletingFromDropDownListParams = new ChangeMRUEditValueViaDeletingFromDropDownListParams();
				}
				return this.mChangeMRUEditValueViaDeletingFromDropDownListParams;
			}
		}
		public virtual ChangeNavBarItemCaptionParams ChangeNavBarItemCaptionParams
		{
			get
			{
				if ((this.mChangeNavBarItemCaptionParams == null))
				{
					this.mChangeNavBarItemCaptionParams = new ChangeNavBarItemCaptionParams();
				}
				return this.mChangeNavBarItemCaptionParams;
			}
		}
		public virtual ChangeNavBarLinkItemAndItemCaptionParams ChangeNavBarLinkItemAndItemCaptionParams
		{
			get
			{
				if ((this.mChangeNavBarLinkItemAndItemCaptionParams == null))
				{
					this.mChangeNavBarLinkItemAndItemCaptionParams = new ChangeNavBarLinkItemAndItemCaptionParams();
				}
				return this.mChangeNavBarLinkItemAndItemCaptionParams;
			}
		}
		public virtual ChangeNumberOfRecentDocumentsViaBackstageViewControlParams ChangeNumberOfRecentDocumentsViaBackstageViewControlParams
		{
			get
			{
				if ((this.mChangeNumberOfRecentDocumentsViaBackstageViewControlParams == null))
				{
					this.mChangeNumberOfRecentDocumentsViaBackstageViewControlParams = new ChangeNumberOfRecentDocumentsViaBackstageViewControlParams();
				}
				return this.mChangeNumberOfRecentDocumentsViaBackstageViewControlParams;
			}
		}
		public virtual ChangeNumericMaskBoxEditValuesParams ChangeNumericMaskBoxEditValuesParams
		{
			get
			{
				if ((this.mChangeNumericMaskBoxEditValuesParams == null))
				{
					this.mChangeNumericMaskBoxEditValuesParams = new ChangeNumericMaskBoxEditValuesParams();
				}
				return this.mChangeNumericMaskBoxEditValuesParams;
			}
		}
		public virtual ChangePickImageEditValueViaKeyboardParams ChangePickImageEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangePickImageEditValueViaKeyboardParams == null))
				{
					this.mChangePickImageEditValueViaKeyboardParams = new ChangePickImageEditValueViaKeyboardParams();
				}
				return this.mChangePickImageEditValueViaKeyboardParams;
			}
		}
		public virtual ChangePickImageEditValueViaMouseParams ChangePickImageEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangePickImageEditValueViaMouseParams == null))
				{
					this.mChangePickImageEditValueViaMouseParams = new ChangePickImageEditValueViaMouseParams();
				}
				return this.mChangePickImageEditValueViaMouseParams;
			}
		}
		public virtual ChangePopupContainerEditSizeParams ChangePopupContainerEditSizeParams
		{
			get
			{
				if ((this.mChangePopupContainerEditSizeParams == null))
				{
					this.mChangePopupContainerEditSizeParams = new ChangePopupContainerEditSizeParams();
				}
				return this.mChangePopupContainerEditSizeParams;
			}
		}
		public virtual ChangePopupContainerEditValueAndClickCloseButtonParams ChangePopupContainerEditValueAndClickCloseButtonParams
		{
			get
			{
				if ((this.mChangePopupContainerEditValueAndClickCloseButtonParams == null))
				{
					this.mChangePopupContainerEditValueAndClickCloseButtonParams = new ChangePopupContainerEditValueAndClickCloseButtonParams();
				}
				return this.mChangePopupContainerEditValueAndClickCloseButtonParams;
			}
		}
		public virtual ChangePopupContainerEditValueViaF4KeyAndKeyboardParams ChangePopupContainerEditValueViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mChangePopupContainerEditValueViaF4KeyAndKeyboardParams == null))
				{
					this.mChangePopupContainerEditValueViaF4KeyAndKeyboardParams = new ChangePopupContainerEditValueViaF4KeyAndKeyboardParams();
				}
				return this.mChangePopupContainerEditValueViaF4KeyAndKeyboardParams;
			}
		}
		public virtual ChangePopupContainerEditValueViaKeyboardParams ChangePopupContainerEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangePopupContainerEditValueViaKeyboardParams == null))
				{
					this.mChangePopupContainerEditValueViaKeyboardParams = new ChangePopupContainerEditValueViaKeyboardParams();
				}
				return this.mChangePopupContainerEditValueViaKeyboardParams;
			}
		}
		public virtual ChangePopupContainerEditValueViaMouseParams ChangePopupContainerEditValueViaMouseParams
		{
			get
			{
				if ((this.mChangePopupContainerEditValueViaMouseParams == null))
				{
					this.mChangePopupContainerEditValueViaMouseParams = new ChangePopupContainerEditValueViaMouseParams();
				}
				return this.mChangePopupContainerEditValueViaMouseParams;
			}
		}
		public virtual ChangePrintingSettingsViaPageSetupDialogParams ChangePrintingSettingsViaPageSetupDialogParams
		{
			get
			{
				if ((this.mChangePrintingSettingsViaPageSetupDialogParams == null))
				{
					this.mChangePrintingSettingsViaPageSetupDialogParams = new ChangePrintingSettingsViaPageSetupDialogParams();
				}
				return this.mChangePrintingSettingsViaPageSetupDialogParams;
			}
		}
		public virtual ChangeProgressBarValueViaButtonMinusParams ChangeProgressBarValueViaButtonMinusParams
		{
			get
			{
				if ((this.mChangeProgressBarValueViaButtonMinusParams == null))
				{
					this.mChangeProgressBarValueViaButtonMinusParams = new ChangeProgressBarValueViaButtonMinusParams();
				}
				return this.mChangeProgressBarValueViaButtonMinusParams;
			}
		}
		public virtual ChangeProgressBarValueViaButtonPlusParams ChangeProgressBarValueViaButtonPlusParams
		{
			get
			{
				if ((this.mChangeProgressBarValueViaButtonPlusParams == null))
				{
					this.mChangeProgressBarValueViaButtonPlusParams = new ChangeProgressBarValueViaButtonPlusParams();
				}
				return this.mChangeProgressBarValueViaButtonPlusParams;
			}
		}
		public virtual ChangeRangeTrackBarValueViaMouseParams ChangeRangeTrackBarValueViaMouseParams
		{
			get
			{
				if ((this.mChangeRangeTrackBarValueViaMouseParams == null))
				{
					this.mChangeRangeTrackBarValueViaMouseParams = new ChangeRangeTrackBarValueViaMouseParams();
				}
				return this.mChangeRangeTrackBarValueViaMouseParams;
			}
		}
		public virtual ChangeRegExMaskBoxEditValuesParams ChangeRegExMaskBoxEditValuesParams
		{
			get
			{
				if ((this.mChangeRegExMaskBoxEditValuesParams == null))
				{
					this.mChangeRegExMaskBoxEditValuesParams = new ChangeRegExMaskBoxEditValuesParams();
				}
				return this.mChangeRegExMaskBoxEditValuesParams;
			}
		}
		public virtual ChangeRegularMaskBoxEditValuesParams ChangeRegularMaskBoxEditValuesParams
		{
			get
			{
				if ((this.mChangeRegularMaskBoxEditValuesParams == null))
				{
					this.mChangeRegularMaskBoxEditValuesParams = new ChangeRegularMaskBoxEditValuesParams();
				}
				return this.mChangeRegularMaskBoxEditValuesParams;
			}
		}
		public virtual ChangeRFCDateTimeEditValueParams ChangeRFCDateTimeEditValueParams
		{
			get
			{
				if ((this.mChangeRFCDateTimeEditValueParams == null))
				{
					this.mChangeRFCDateTimeEditValueParams = new ChangeRFCDateTimeEditValueParams();
				}
				return this.mChangeRFCDateTimeEditValueParams;
			}
		}
		public virtual ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams
		{
			get
			{
				if ((this.mChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams == null))
				{
					this.mChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams = new ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams();
				}
				return this.mChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams;
			}
		}
		public virtual ChangeRightMarginValueParams ChangeRightMarginValueParams
		{
			get
			{
				if ((this.mChangeRightMarginValueParams == null))
				{
					this.mChangeRightMarginValueParams = new ChangeRightMarginValueParams();
				}
				return this.mChangeRightMarginValueParams;
			}
		}
		public virtual ChangeShortTimeDateTimeEditValueParams ChangeShortTimeDateTimeEditValueParams
		{
			get
			{
				if ((this.mChangeShortTimeDateTimeEditValueParams == null))
				{
					this.mChangeShortTimeDateTimeEditValueParams = new ChangeShortTimeDateTimeEditValueParams();
				}
				return this.mChangeShortTimeDateTimeEditValueParams;
			}
		}
		public virtual ChangeSimpleMaskBoxEditValuesParams ChangeSimpleMaskBoxEditValuesParams
		{
			get
			{
				if ((this.mChangeSimpleMaskBoxEditValuesParams == null))
				{
					this.mChangeSimpleMaskBoxEditValuesParams = new ChangeSimpleMaskBoxEditValuesParams();
				}
				return this.mChangeSimpleMaskBoxEditValuesParams;
			}
		}
		public virtual ChangeSpinBoxEditValueViaTypingParams ChangeSpinBoxEditValueViaTypingParams
		{
			get
			{
				if ((this.mChangeSpinBoxEditValueViaTypingParams == null))
				{
					this.mChangeSpinBoxEditValueViaTypingParams = new ChangeSpinBoxEditValueViaTypingParams();
				}
				return this.mChangeSpinBoxEditValueViaTypingParams;
			}
		}
		public virtual ChangeSpinEditValueViaArrowButtonsParams ChangeSpinEditValueViaArrowButtonsParams
		{
			get
			{
				if ((this.mChangeSpinEditValueViaArrowButtonsParams == null))
				{
					this.mChangeSpinEditValueViaArrowButtonsParams = new ChangeSpinEditValueViaArrowButtonsParams();
				}
				return this.mChangeSpinEditValueViaArrowButtonsParams;
			}
		}
		public virtual ChangeSpinEditValueViaKeyboardParams ChangeSpinEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeSpinEditValueViaKeyboardParams == null))
				{
					this.mChangeSpinEditValueViaKeyboardParams = new ChangeSpinEditValueViaKeyboardParams();
				}
				return this.mChangeSpinEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeSpinEditValueViaMouseWheelScrollParams ChangeSpinEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeSpinEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeSpinEditValueViaMouseWheelScrollParams = new ChangeSpinEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeSpinEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeSplitterPositionOnHorizontalSplitPresentationTabParams ChangeSplitterPositionOnHorizontalSplitPresentationTabParams
		{
			get
			{
				if ((this.mChangeSplitterPositionOnHorizontalSplitPresentationTabParams == null))
				{
					this.mChangeSplitterPositionOnHorizontalSplitPresentationTabParams = new ChangeSplitterPositionOnHorizontalSplitPresentationTabParams();
				}
				return this.mChangeSplitterPositionOnHorizontalSplitPresentationTabParams;
			}
		}
		public virtual ChangeSplitterPositionOnVerticalSplitPresentationTabParams ChangeSplitterPositionOnVerticalSplitPresentationTabParams
		{
			get
			{
				if ((this.mChangeSplitterPositionOnVerticalSplitPresentationTabParams == null))
				{
					this.mChangeSplitterPositionOnVerticalSplitPresentationTabParams = new ChangeSplitterPositionOnVerticalSplitPresentationTabParams();
				}
				return this.mChangeSplitterPositionOnVerticalSplitPresentationTabParams;
			}
		}
		public virtual ChangeStatusBarInfoViaChangingLeftMarginValueParams ChangeStatusBarInfoViaChangingLeftMarginValueParams
		{
			get
			{
				if ((this.mChangeStatusBarInfoViaChangingLeftMarginValueParams == null))
				{
					this.mChangeStatusBarInfoViaChangingLeftMarginValueParams = new ChangeStatusBarInfoViaChangingLeftMarginValueParams();
				}
				return this.mChangeStatusBarInfoViaChangingLeftMarginValueParams;
			}
		}
		public virtual ChangeTimeEditValueViaArrowButtonsParams ChangeTimeEditValueViaArrowButtonsParams
		{
			get
			{
				if ((this.mChangeTimeEditValueViaArrowButtonsParams == null))
				{
					this.mChangeTimeEditValueViaArrowButtonsParams = new ChangeTimeEditValueViaArrowButtonsParams();
				}
				return this.mChangeTimeEditValueViaArrowButtonsParams;
			}
		}
		public virtual ChangeTimeEditValueViaKeyboardParams ChangeTimeEditValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeTimeEditValueViaKeyboardParams == null))
				{
					this.mChangeTimeEditValueViaKeyboardParams = new ChangeTimeEditValueViaKeyboardParams();
				}
				return this.mChangeTimeEditValueViaKeyboardParams;
			}
		}
		public virtual ChangeTimeEditValueViaMouseWheelScrollParams ChangeTimeEditValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeTimeEditValueViaMouseWheelScrollParams == null))
				{
					this.mChangeTimeEditValueViaMouseWheelScrollParams = new ChangeTimeEditValueViaMouseWheelScrollParams();
				}
				return this.mChangeTimeEditValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeTopMarginForRecalculatedSummariesParams ChangeTopMarginForRecalculatedSummariesParams
		{
			get
			{
				if ((this.mChangeTopMarginForRecalculatedSummariesParams == null))
				{
					this.mChangeTopMarginForRecalculatedSummariesParams = new ChangeTopMarginForRecalculatedSummariesParams();
				}
				return this.mChangeTopMarginForRecalculatedSummariesParams;
			}
		}
		public virtual ChangeTopMarginValueParams ChangeTopMarginValueParams
		{
			get
			{
				if ((this.mChangeTopMarginValueParams == null))
				{
					this.mChangeTopMarginValueParams = new ChangeTopMarginValueParams();
				}
				return this.mChangeTopMarginValueParams;
			}
		}
		public virtual ChangeTrackBarValueViaKeyboardParams ChangeTrackBarValueViaKeyboardParams
		{
			get
			{
				if ((this.mChangeTrackBarValueViaKeyboardParams == null))
				{
					this.mChangeTrackBarValueViaKeyboardParams = new ChangeTrackBarValueViaKeyboardParams();
				}
				return this.mChangeTrackBarValueViaKeyboardParams;
			}
		}
		public virtual ChangeTrackBarValueViaMouseParams ChangeTrackBarValueViaMouseParams
		{
			get
			{
				if ((this.mChangeTrackBarValueViaMouseParams == null))
				{
					this.mChangeTrackBarValueViaMouseParams = new ChangeTrackBarValueViaMouseParams();
				}
				return this.mChangeTrackBarValueViaMouseParams;
			}
		}
		public virtual ChangeTrackBarValueViaMouseWheelScrollParams ChangeTrackBarValueViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mChangeTrackBarValueViaMouseWheelScrollParams == null))
				{
					this.mChangeTrackBarValueViaMouseWheelScrollParams = new ChangeTrackBarValueViaMouseWheelScrollParams();
				}
				return this.mChangeTrackBarValueViaMouseWheelScrollParams;
			}
		}
		public virtual ChangeUniversalSortableDateTimeEditValueParams ChangeUniversalSortableDateTimeEditValueParams
		{
			get
			{
				if ((this.mChangeUniversalSortableDateTimeEditValueParams == null))
				{
					this.mChangeUniversalSortableDateTimeEditValueParams = new ChangeUniversalSortableDateTimeEditValueParams();
				}
				return this.mChangeUniversalSortableDateTimeEditValueParams;
			}
		}
		public virtual ChangeVScrollbarValueParams ChangeVScrollbarValueParams
		{
			get
			{
				if ((this.mChangeVScrollbarValueParams == null))
				{
					this.mChangeVScrollbarValueParams = new ChangeVScrollbarValueParams();
				}
				return this.mChangeVScrollbarValueParams;
			}
		}
		public virtual ChangeZoomTrackBarValueViaLeftRightButtonsParams ChangeZoomTrackBarValueViaLeftRightButtonsParams
		{
			get
			{
				if ((this.mChangeZoomTrackBarValueViaLeftRightButtonsParams == null))
				{
					this.mChangeZoomTrackBarValueViaLeftRightButtonsParams = new ChangeZoomTrackBarValueViaLeftRightButtonsParams();
				}
				return this.mChangeZoomTrackBarValueViaLeftRightButtonsParams;
			}
		}
		public virtual ChangeZoomTrackBarValueViaMouseParams ChangeZoomTrackBarValueViaMouseParams
		{
			get
			{
				if ((this.mChangeZoomTrackBarValueViaMouseParams == null))
				{
					this.mChangeZoomTrackBarValueViaMouseParams = new ChangeZoomTrackBarValueViaMouseParams();
				}
				return this.mChangeZoomTrackBarValueViaMouseParams;
			}
		}
		public virtual ChangeZoomTrackBarValueViaUpDownKeysParams ChangeZoomTrackBarValueViaUpDownKeysParams
		{
			get
			{
				if ((this.mChangeZoomTrackBarValueViaUpDownKeysParams == null))
				{
					this.mChangeZoomTrackBarValueViaUpDownKeysParams = new ChangeZoomTrackBarValueViaUpDownKeysParams();
				}
				return this.mChangeZoomTrackBarValueViaUpDownKeysParams;
			}
		}
		public virtual CheckActionsMemoAfterClickImageHeaderButtonExpectedValues CheckActionsMemoAfterClickImageHeaderButtonExpectedValues
		{
			get
			{
				if ((this.mCheckActionsMemoAfterClickImageHeaderButtonExpectedValues == null))
				{
					this.mCheckActionsMemoAfterClickImageHeaderButtonExpectedValues = new CheckActionsMemoAfterClickImageHeaderButtonExpectedValues();
				}
				return this.mCheckActionsMemoAfterClickImageHeaderButtonExpectedValues;
			}
		}
		public virtual CheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues CheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues
		{
			get
			{
				if ((this.mCheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues == null))
				{
					this.mCheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues = new CheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues();
				}
				return this.mCheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues;
			}
		}
		public virtual CheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues CheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues
		{
			get
			{
				if ((this.mCheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues == null))
				{
					this.mCheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues = new CheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues();
				}
				return this.mCheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues;
			}
		}
		public virtual CheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues CheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues
		{
			get
			{
				if ((this.mCheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues == null))
				{
					this.mCheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues = new CheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues();
				}
				return this.mCheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues;
			}
		}
		public virtual CheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues CheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues
		{
			get
			{
				if ((this.mCheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues == null))
				{
					this.mCheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues = new CheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues();
				}
				return this.mCheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues;
			}
		}
		public virtual CheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues CheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues
		{
			get
			{
				if ((this.mCheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues == null))
				{
					this.mCheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues = new CheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues();
				}
				return this.mCheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues;
			}
		}
		public virtual CheckAddedConditionExpressionExpectedValues CheckAddedConditionExpressionExpectedValues
		{
			get
			{
				if ((this.mCheckAddedConditionExpressionExpectedValues == null))
				{
					this.mCheckAddedConditionExpressionExpectedValues = new CheckAddedConditionExpressionExpectedValues();
				}
				return this.mCheckAddedConditionExpressionExpectedValues;
			}
		}
		public virtual CheckAddedFooterBricksTextExpectedValues CheckAddedFooterBricksTextExpectedValues
		{
			get
			{
				if ((this.mCheckAddedFooterBricksTextExpectedValues == null))
				{
					this.mCheckAddedFooterBricksTextExpectedValues = new CheckAddedFooterBricksTextExpectedValues();
				}
				return this.mCheckAddedFooterBricksTextExpectedValues;
			}
		}
		public virtual CheckAddedHeaderBricksTextExpectedValues CheckAddedHeaderBricksTextExpectedValues
		{
			get
			{
				if ((this.mCheckAddedHeaderBricksTextExpectedValues == null))
				{
					this.mCheckAddedHeaderBricksTextExpectedValues = new CheckAddedHeaderBricksTextExpectedValues();
				}
				return this.mCheckAddedHeaderBricksTextExpectedValues;
			}
		}
		public virtual CheckAddedRowExpectedValues CheckAddedRowExpectedValues
		{
			get
			{
				if ((this.mCheckAddedRowExpectedValues == null))
				{
					this.mCheckAddedRowExpectedValues = new CheckAddedRowExpectedValues();
				}
				return this.mCheckAddedRowExpectedValues;
			}
		}
		public virtual CheckAddedSummaryExpectedValues CheckAddedSummaryExpectedValues
		{
			get
			{
				if ((this.mCheckAddedSummaryExpectedValues == null))
				{
					this.mCheckAddedSummaryExpectedValues = new CheckAddedSummaryExpectedValues();
				}
				return this.mCheckAddedSummaryExpectedValues;
			}
		}
		public virtual CheckAscendingSortBySummaryExpectedValues CheckAscendingSortBySummaryExpectedValues
		{
			get
			{
				if ((this.mCheckAscendingSortBySummaryExpectedValues == null))
				{
					this.mCheckAscendingSortBySummaryExpectedValues = new CheckAscendingSortBySummaryExpectedValues();
				}
				return this.mCheckAscendingSortBySummaryExpectedValues;
			}
		}
		public virtual CheckBarCalcEditValueExpectedValues CheckBarCalcEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckBarCalcEditValueExpectedValues == null))
				{
					this.mCheckBarCalcEditValueExpectedValues = new CheckBarCalcEditValueExpectedValues();
				}
				return this.mCheckBarCalcEditValueExpectedValues;
			}
		}
		public virtual CheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues CheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues
		{
			get
			{
				if ((this.mCheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues == null))
				{
					this.mCheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues = new CheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues();
				}
				return this.mCheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues;
			}
		}
		public virtual CheckBarComboBoxEditValueExpectedValues CheckBarComboBoxEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckBarComboBoxEditValueExpectedValues == null))
				{
					this.mCheckBarComboBoxEditValueExpectedValues = new CheckBarComboBoxEditValueExpectedValues();
				}
				return this.mCheckBarComboBoxEditValueExpectedValues;
			}
		}
		public virtual CheckBarDateEditValueExpectedValues CheckBarDateEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckBarDateEditValueExpectedValues == null))
				{
					this.mCheckBarDateEditValueExpectedValues = new CheckBarDateEditValueExpectedValues();
				}
				return this.mCheckBarDateEditValueExpectedValues;
			}
		}
		public virtual CheckBarMemoExEditValueExpectedValues CheckBarMemoExEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckBarMemoExEditValueExpectedValues == null))
				{
					this.mCheckBarMemoExEditValueExpectedValues = new CheckBarMemoExEditValueExpectedValues();
				}
				return this.mCheckBarMemoExEditValueExpectedValues;
			}
		}
		public virtual CheckBarTextEditValueExpectedValues CheckBarTextEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckBarTextEditValueExpectedValues == null))
				{
					this.mCheckBarTextEditValueExpectedValues = new CheckBarTextEditValueExpectedValues();
				}
				return this.mCheckBarTextEditValueExpectedValues;
			}
		}
		public virtual CheckButtonEditValueExpectedValues CheckButtonEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckButtonEditValueExpectedValues == null))
				{
					this.mCheckButtonEditValueExpectedValues = new CheckButtonEditValueExpectedValues();
				}
				return this.mCheckButtonEditValueExpectedValues;
			}
		}
		public virtual CheckCalcEditValueExpectedValues CheckCalcEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckCalcEditValueExpectedValues == null))
				{
					this.mCheckCalcEditValueExpectedValues = new CheckCalcEditValueExpectedValues();
				}
				return this.mCheckCalcEditValueExpectedValues;
			}
		}
		public virtual CheckCalcEditValueChangedViaMouseWheelScrollExpectedValues CheckCalcEditValueChangedViaMouseWheelScrollExpectedValues
		{
			get
			{
				if ((this.mCheckCalcEditValueChangedViaMouseWheelScrollExpectedValues == null))
				{
					this.mCheckCalcEditValueChangedViaMouseWheelScrollExpectedValues = new CheckCalcEditValueChangedViaMouseWheelScrollExpectedValues();
				}
				return this.mCheckCalcEditValueChangedViaMouseWheelScrollExpectedValues;
			}
		}
		public virtual CheckChangedBottomMarginValueExpectedValues CheckChangedBottomMarginValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedBottomMarginValueExpectedValues == null))
				{
					this.mCheckChangedBottomMarginValueExpectedValues = new CheckChangedBottomMarginValueExpectedValues();
				}
				return this.mCheckChangedBottomMarginValueExpectedValues;
			}
		}
		public virtual CheckChangedGridLookUpEditorValueExpectedValues CheckChangedGridLookUpEditorValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedGridLookUpEditorValueExpectedValues == null))
				{
					this.mCheckChangedGridLookUpEditorValueExpectedValues = new CheckChangedGridLookUpEditorValueExpectedValues();
				}
				return this.mCheckChangedGridLookUpEditorValueExpectedValues;
			}
		}
		public virtual CheckChangedGridLookUpEditorValueViaButtonLastExpectedValues CheckChangedGridLookUpEditorValueViaButtonLastExpectedValues
		{
			get
			{
				if ((this.mCheckChangedGridLookUpEditorValueViaButtonLastExpectedValues == null))
				{
					this.mCheckChangedGridLookUpEditorValueViaButtonLastExpectedValues = new CheckChangedGridLookUpEditorValueViaButtonLastExpectedValues();
				}
				return this.mCheckChangedGridLookUpEditorValueViaButtonLastExpectedValues;
			}
		}
		public virtual CheckChangedGridLookUpEditorValueViaButtonNextExpectedValues CheckChangedGridLookUpEditorValueViaButtonNextExpectedValues
		{
			get
			{
				if ((this.mCheckChangedGridLookUpEditorValueViaButtonNextExpectedValues == null))
				{
					this.mCheckChangedGridLookUpEditorValueViaButtonNextExpectedValues = new CheckChangedGridLookUpEditorValueViaButtonNextExpectedValues();
				}
				return this.mCheckChangedGridLookUpEditorValueViaButtonNextExpectedValues;
			}
		}
		public virtual CheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues CheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues
		{
			get
			{
				if ((this.mCheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues == null))
				{
					this.mCheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues = new CheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues();
				}
				return this.mCheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues;
			}
		}
		public virtual CheckChangedInPlaceGridLookUpEditorValueExpectedValues CheckChangedInPlaceGridLookUpEditorValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedInPlaceGridLookUpEditorValueExpectedValues == null))
				{
					this.mCheckChangedInPlaceGridLookUpEditorValueExpectedValues = new CheckChangedInPlaceGridLookUpEditorValueExpectedValues();
				}
				return this.mCheckChangedInPlaceGridLookUpEditorValueExpectedValues;
			}
		}
		public virtual CheckChangedInPlaceSearchLookUpEditorValueExpectedValues CheckChangedInPlaceSearchLookUpEditorValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedInPlaceSearchLookUpEditorValueExpectedValues == null))
				{
					this.mCheckChangedInPlaceSearchLookUpEditorValueExpectedValues = new CheckChangedInPlaceSearchLookUpEditorValueExpectedValues();
				}
				return this.mCheckChangedInPlaceSearchLookUpEditorValueExpectedValues;
			}
		}
		public virtual CheckChangedLeftMarginValueExpectedValues CheckChangedLeftMarginValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedLeftMarginValueExpectedValues == null))
				{
					this.mCheckChangedLeftMarginValueExpectedValues = new CheckChangedLeftMarginValueExpectedValues();
				}
				return this.mCheckChangedLeftMarginValueExpectedValues;
			}
		}
		public virtual CheckChangedListViewTypeViaCheckingBrickTextExpectedValues CheckChangedListViewTypeViaCheckingBrickTextExpectedValues
		{
			get
			{
				if ((this.mCheckChangedListViewTypeViaCheckingBrickTextExpectedValues == null))
				{
					this.mCheckChangedListViewTypeViaCheckingBrickTextExpectedValues = new CheckChangedListViewTypeViaCheckingBrickTextExpectedValues();
				}
				return this.mCheckChangedListViewTypeViaCheckingBrickTextExpectedValues;
			}
		}
		public virtual CheckChangedNumericMaskBoxEditValuesExpectedValues CheckChangedNumericMaskBoxEditValuesExpectedValues
		{
			get
			{
				if ((this.mCheckChangedNumericMaskBoxEditValuesExpectedValues == null))
				{
					this.mCheckChangedNumericMaskBoxEditValuesExpectedValues = new CheckChangedNumericMaskBoxEditValuesExpectedValues();
				}
				return this.mCheckChangedNumericMaskBoxEditValuesExpectedValues;
			}
		}
		public virtual CheckChangedProgressBarValueViaButtonMinusExpectedValues CheckChangedProgressBarValueViaButtonMinusExpectedValues
		{
			get
			{
				if ((this.mCheckChangedProgressBarValueViaButtonMinusExpectedValues == null))
				{
					this.mCheckChangedProgressBarValueViaButtonMinusExpectedValues = new CheckChangedProgressBarValueViaButtonMinusExpectedValues();
				}
				return this.mCheckChangedProgressBarValueViaButtonMinusExpectedValues;
			}
		}
		public virtual CheckChangedProgressBarValueViaButtonPlusExpectedValues CheckChangedProgressBarValueViaButtonPlusExpectedValues
		{
			get
			{
				if ((this.mCheckChangedProgressBarValueViaButtonPlusExpectedValues == null))
				{
					this.mCheckChangedProgressBarValueViaButtonPlusExpectedValues = new CheckChangedProgressBarValueViaButtonPlusExpectedValues();
				}
				return this.mCheckChangedProgressBarValueViaButtonPlusExpectedValues;
			}
		}
		public virtual CheckChangedRibbonGallerySelectedItemExpectedValues CheckChangedRibbonGallerySelectedItemExpectedValues
		{
			get
			{
				if ((this.mCheckChangedRibbonGallerySelectedItemExpectedValues == null))
				{
					this.mCheckChangedRibbonGallerySelectedItemExpectedValues = new CheckChangedRibbonGallerySelectedItemExpectedValues();
				}
				return this.mCheckChangedRibbonGallerySelectedItemExpectedValues;
			}
		}
		public virtual CheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues CheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues
		{
			get
			{
				if ((this.mCheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues == null))
				{
					this.mCheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues = new CheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues();
				}
				return this.mCheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues;
			}
		}
		public virtual CheckChangedRightMarginValueExpectedValues CheckChangedRightMarginValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedRightMarginValueExpectedValues == null))
				{
					this.mCheckChangedRightMarginValueExpectedValues = new CheckChangedRightMarginValueExpectedValues();
				}
				return this.mCheckChangedRightMarginValueExpectedValues;
			}
		}
		public virtual CheckChangedSearchLookUpEditorValueExpectedValues CheckChangedSearchLookUpEditorValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedSearchLookUpEditorValueExpectedValues == null))
				{
					this.mCheckChangedSearchLookUpEditorValueExpectedValues = new CheckChangedSearchLookUpEditorValueExpectedValues();
				}
				return this.mCheckChangedSearchLookUpEditorValueExpectedValues;
			}
		}
		public virtual CheckChangedSummaryExpectedValues CheckChangedSummaryExpectedValues
		{
			get
			{
				if ((this.mCheckChangedSummaryExpectedValues == null))
				{
					this.mCheckChangedSummaryExpectedValues = new CheckChangedSummaryExpectedValues();
				}
				return this.mCheckChangedSummaryExpectedValues;
			}
		}
		public virtual CheckChangedTopMarginValueExpectedValues CheckChangedTopMarginValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedTopMarginValueExpectedValues == null))
				{
					this.mCheckChangedTopMarginValueExpectedValues = new CheckChangedTopMarginValueExpectedValues();
				}
				return this.mCheckChangedTopMarginValueExpectedValues;
			}
		}
		public virtual CheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues CheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues == null))
				{
					this.mCheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues = new CheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues();
				}
				return this.mCheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues;
			}
		}
		public virtual CheckChangedViaKeyboardCheckEditValueExpectedValues CheckChangedViaKeyboardCheckEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedViaKeyboardCheckEditValueExpectedValues == null))
				{
					this.mCheckChangedViaKeyboardCheckEditValueExpectedValues = new CheckChangedViaKeyboardCheckEditValueExpectedValues();
				}
				return this.mCheckChangedViaKeyboardCheckEditValueExpectedValues;
			}
		}
		public virtual CheckChangedViaMouseCheckEditValueExpectedValues CheckChangedViaMouseCheckEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckChangedViaMouseCheckEditValueExpectedValues == null))
				{
					this.mCheckChangedViaMouseCheckEditValueExpectedValues = new CheckChangedViaMouseCheckEditValueExpectedValues();
				}
				return this.mCheckChangedViaMouseCheckEditValueExpectedValues;
			}
		}
		public virtual CheckCheckedComboBoxEditValueExpectedValues CheckCheckedComboBoxEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckCheckedComboBoxEditValueExpectedValues == null))
				{
					this.mCheckCheckedComboBoxEditValueExpectedValues = new CheckCheckedComboBoxEditValueExpectedValues();
				}
				return this.mCheckCheckedComboBoxEditValueExpectedValues;
			}
		}
		public virtual CheckCheckedStateTrueExpectedValues CheckCheckedStateTrueExpectedValues
		{
			get
			{
				if ((this.mCheckCheckedStateTrueExpectedValues == null))
				{
					this.mCheckCheckedStateTrueExpectedValues = new CheckCheckedStateTrueExpectedValues();
				}
				return this.mCheckCheckedStateTrueExpectedValues;
			}
		}
		public virtual CheckClearedCellValueExpectedValues CheckClearedCellValueExpectedValues
		{
			get
			{
				if ((this.mCheckClearedCellValueExpectedValues == null))
				{
					this.mCheckClearedCellValueExpectedValues = new CheckClearedCellValueExpectedValues();
				}
				return this.mCheckClearedCellValueExpectedValues;
			}
		}
		public virtual CheckClearedDateEditValueExpectedValues CheckClearedDateEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckClearedDateEditValueExpectedValues == null))
				{
					this.mCheckClearedDateEditValueExpectedValues = new CheckClearedDateEditValueExpectedValues();
				}
				return this.mCheckClearedDateEditValueExpectedValues;
			}
		}
		public virtual CheckClearedFilterExpectedValues CheckClearedFilterExpectedValues
		{
			get
			{
				if ((this.mCheckClearedFilterExpectedValues == null))
				{
					this.mCheckClearedFilterExpectedValues = new CheckClearedFilterExpectedValues();
				}
				return this.mCheckClearedFilterExpectedValues;
			}
		}
		public virtual CheckClearedSummaryItemExpectedValues CheckClearedSummaryItemExpectedValues
		{
			get
			{
				if ((this.mCheckClearedSummaryItemExpectedValues == null))
				{
					this.mCheckClearedSummaryItemExpectedValues = new CheckClearedSummaryItemExpectedValues();
				}
				return this.mCheckClearedSummaryItemExpectedValues;
			}
		}
		public virtual CheckColorEditValueExpectedValues CheckColorEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckColorEditValueExpectedValues == null))
				{
					this.mCheckColorEditValueExpectedValues = new CheckColorEditValueExpectedValues();
				}
				return this.mCheckColorEditValueExpectedValues;
			}
		}
		public virtual CheckColorEditValueInTabCustomExpectedValues CheckColorEditValueInTabCustomExpectedValues
		{
			get
			{
				if ((this.mCheckColorEditValueInTabCustomExpectedValues == null))
				{
					this.mCheckColorEditValueInTabCustomExpectedValues = new CheckColorEditValueInTabCustomExpectedValues();
				}
				return this.mCheckColorEditValueInTabCustomExpectedValues;
			}
		}
		public virtual CheckColorEditValueInTabSystemExpectedValues CheckColorEditValueInTabSystemExpectedValues
		{
			get
			{
				if ((this.mCheckColorEditValueInTabSystemExpectedValues == null))
				{
					this.mCheckColorEditValueInTabSystemExpectedValues = new CheckColorEditValueInTabSystemExpectedValues();
				}
				return this.mCheckColorEditValueInTabSystemExpectedValues;
			}
		}
		public virtual CheckColorEditValueInTabWebExpectedValues CheckColorEditValueInTabWebExpectedValues
		{
			get
			{
				if ((this.mCheckColorEditValueInTabWebExpectedValues == null))
				{
					this.mCheckColorEditValueInTabWebExpectedValues = new CheckColorEditValueInTabWebExpectedValues();
				}
				return this.mCheckColorEditValueInTabWebExpectedValues;
			}
		}
		public virtual CheckComboBoxEditSelectedIndexExpectedValues CheckComboBoxEditSelectedIndexExpectedValues
		{
			get
			{
				if ((this.mCheckComboBoxEditSelectedIndexExpectedValues == null))
				{
					this.mCheckComboBoxEditSelectedIndexExpectedValues = new CheckComboBoxEditSelectedIndexExpectedValues();
				}
				return this.mCheckComboBoxEditSelectedIndexExpectedValues;
			}
		}
		public virtual CheckComboBoxEditValueExpectedValues CheckComboBoxEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckComboBoxEditValueExpectedValues == null))
				{
					this.mCheckComboBoxEditValueExpectedValues = new CheckComboBoxEditValueExpectedValues();
				}
				return this.mCheckComboBoxEditValueExpectedValues;
			}
		}
		public virtual CheckConservationOfQuantityPagesExpectedValues CheckConservationOfQuantityPagesExpectedValues
		{
			get
			{
				if ((this.mCheckConservationOfQuantityPagesExpectedValues == null))
				{
					this.mCheckConservationOfQuantityPagesExpectedValues = new CheckConservationOfQuantityPagesExpectedValues();
				}
				return this.mCheckConservationOfQuantityPagesExpectedValues;
			}
		}
		public virtual CheckCreatedYearCalendarExpectedValues CheckCreatedYearCalendarExpectedValues
		{
			get
			{
				if ((this.mCheckCreatedYearCalendarExpectedValues == null))
				{
					this.mCheckCreatedYearCalendarExpectedValues = new CheckCreatedYearCalendarExpectedValues();
				}
				return this.mCheckCreatedYearCalendarExpectedValues;
			}
		}
		public virtual CheckCustomizedAlertFormCaptionExpectedValues CheckCustomizedAlertFormCaptionExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedAlertFormCaptionExpectedValues == null))
				{
					this.mCheckCustomizedAlertFormCaptionExpectedValues = new CheckCustomizedAlertFormCaptionExpectedValues();
				}
				return this.mCheckCustomizedAlertFormCaptionExpectedValues;
			}
		}
		public virtual CheckCustomizedCSVSpecificExportOptionsExpectedValues CheckCustomizedCSVSpecificExportOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedCSVSpecificExportOptionsExpectedValues == null))
				{
					this.mCheckCustomizedCSVSpecificExportOptionsExpectedValues = new CheckCustomizedCSVSpecificExportOptionsExpectedValues();
				}
				return this.mCheckCustomizedCSVSpecificExportOptionsExpectedValues;
			}
		}
		public virtual CheckCustomizedHTMLSpecificExportOptionsExpectedValues CheckCustomizedHTMLSpecificExportOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedHTMLSpecificExportOptionsExpectedValues == null))
				{
					this.mCheckCustomizedHTMLSpecificExportOptionsExpectedValues = new CheckCustomizedHTMLSpecificExportOptionsExpectedValues();
				}
				return this.mCheckCustomizedHTMLSpecificExportOptionsExpectedValues;
			}
		}
		public virtual CheckCustomizedImageSpecificExportOptionsExpectedValues CheckCustomizedImageSpecificExportOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedImageSpecificExportOptionsExpectedValues == null))
				{
					this.mCheckCustomizedImageSpecificExportOptionsExpectedValues = new CheckCustomizedImageSpecificExportOptionsExpectedValues();
				}
				return this.mCheckCustomizedImageSpecificExportOptionsExpectedValues;
			}
		}
		public virtual CheckCustomizedPasswordSecurityOptionsExpectedValues CheckCustomizedPasswordSecurityOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedPasswordSecurityOptionsExpectedValues == null))
				{
					this.mCheckCustomizedPasswordSecurityOptionsExpectedValues = new CheckCustomizedPasswordSecurityOptionsExpectedValues();
				}
				return this.mCheckCustomizedPasswordSecurityOptionsExpectedValues;
			}
		}
		public virtual CheckCustomizedPDFSpecificExportOptionsExpectedValues CheckCustomizedPDFSpecificExportOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedPDFSpecificExportOptionsExpectedValues == null))
				{
					this.mCheckCustomizedPDFSpecificExportOptionsExpectedValues = new CheckCustomizedPDFSpecificExportOptionsExpectedValues();
				}
				return this.mCheckCustomizedPDFSpecificExportOptionsExpectedValues;
			}
		}
		public virtual CheckCustomizedRibbonPrintSettingsExpectedValues CheckCustomizedRibbonPrintSettingsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedRibbonPrintSettingsExpectedValues == null))
				{
					this.mCheckCustomizedRibbonPrintSettingsExpectedValues = new CheckCustomizedRibbonPrintSettingsExpectedValues();
				}
				return this.mCheckCustomizedRibbonPrintSettingsExpectedValues;
			}
		}
		public virtual CheckCustomizedRTFSpecificExportOptionsExpectedValues CheckCustomizedRTFSpecificExportOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedRTFSpecificExportOptionsExpectedValues == null))
				{
					this.mCheckCustomizedRTFSpecificExportOptionsExpectedValues = new CheckCustomizedRTFSpecificExportOptionsExpectedValues();
				}
				return this.mCheckCustomizedRTFSpecificExportOptionsExpectedValues;
			}
		}
		public virtual CheckCustomizedXLSSpecificExportOptionsExpectedValues CheckCustomizedXLSSpecificExportOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedXLSSpecificExportOptionsExpectedValues == null))
				{
					this.mCheckCustomizedXLSSpecificExportOptionsExpectedValues = new CheckCustomizedXLSSpecificExportOptionsExpectedValues();
				}
				return this.mCheckCustomizedXLSSpecificExportOptionsExpectedValues;
			}
		}
		public virtual CheckCustomSumAfterChangingCustomFreightExpectedValues CheckCustomSumAfterChangingCustomFreightExpectedValues
		{
			get
			{
				if ((this.mCheckCustomSumAfterChangingCustomFreightExpectedValues == null))
				{
					this.mCheckCustomSumAfterChangingCustomFreightExpectedValues = new CheckCustomSumAfterChangingCustomFreightExpectedValues();
				}
				return this.mCheckCustomSumAfterChangingCustomFreightExpectedValues;
			}
		}
		public virtual CheckDateEditValueChangedViaKeyboardExpectedValues CheckDateEditValueChangedViaKeyboardExpectedValues
		{
			get
			{
				if ((this.mCheckDateEditValueChangedViaKeyboardExpectedValues == null))
				{
					this.mCheckDateEditValueChangedViaKeyboardExpectedValues = new CheckDateEditValueChangedViaKeyboardExpectedValues();
				}
				return this.mCheckDateEditValueChangedViaKeyboardExpectedValues;
			}
		}
		public virtual CheckDateEditValueChangedViaMouseExpectedValues CheckDateEditValueChangedViaMouseExpectedValues
		{
			get
			{
				if ((this.mCheckDateEditValueChangedViaMouseExpectedValues == null))
				{
					this.mCheckDateEditValueChangedViaMouseExpectedValues = new CheckDateEditValueChangedViaMouseExpectedValues();
				}
				return this.mCheckDateEditValueChangedViaMouseExpectedValues;
			}
		}
		public virtual CheckDateEditValueInVistaTimeModeExpectedValues CheckDateEditValueInVistaTimeModeExpectedValues
		{
			get
			{
				if ((this.mCheckDateEditValueInVistaTimeModeExpectedValues == null))
				{
					this.mCheckDateEditValueInVistaTimeModeExpectedValues = new CheckDateEditValueInVistaTimeModeExpectedValues();
				}
				return this.mCheckDateEditValueInVistaTimeModeExpectedValues;
			}
		}
		public virtual CheckDayTimeDateTimeEditValueExpectedValues CheckDayTimeDateTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckDayTimeDateTimeEditValueExpectedValues == null))
				{
					this.mCheckDayTimeDateTimeEditValueExpectedValues = new CheckDayTimeDateTimeEditValueExpectedValues();
				}
				return this.mCheckDayTimeDateTimeEditValueExpectedValues;
			}
		}
		public virtual CheckDeletedBarLinkContainerPasteLinkExpectedValues CheckDeletedBarLinkContainerPasteLinkExpectedValues
		{
			get
			{
				if ((this.mCheckDeletedBarLinkContainerPasteLinkExpectedValues == null))
				{
					this.mCheckDeletedBarLinkContainerPasteLinkExpectedValues = new CheckDeletedBarLinkContainerPasteLinkExpectedValues();
				}
				return this.mCheckDeletedBarLinkContainerPasteLinkExpectedValues;
			}
		}
		public virtual CheckDeletedConditionExpressionExpectedValues CheckDeletedConditionExpressionExpectedValues
		{
			get
			{
				if ((this.mCheckDeletedConditionExpressionExpectedValues == null))
				{
					this.mCheckDeletedConditionExpressionExpectedValues = new CheckDeletedConditionExpressionExpectedValues();
				}
				return this.mCheckDeletedConditionExpressionExpectedValues;
			}
		}
		public virtual CheckDescendingSortBySummaryExpectedValues CheckDescendingSortBySummaryExpectedValues
		{
			get
			{
				if ((this.mCheckDescendingSortBySummaryExpectedValues == null))
				{
					this.mCheckDescendingSortBySummaryExpectedValues = new CheckDescendingSortBySummaryExpectedValues();
				}
				return this.mCheckDescendingSortBySummaryExpectedValues;
			}
		}
		public virtual CheckExpandedGroupRowExpectedValues CheckExpandedGroupRowExpectedValues
		{
			get
			{
				if ((this.mCheckExpandedGroupRowExpectedValues == null))
				{
					this.mCheckExpandedGroupRowExpectedValues = new CheckExpandedGroupRowExpectedValues();
				}
				return this.mCheckExpandedGroupRowExpectedValues;
			}
		}
		public virtual CheckExpandedMasterRowExpectedValues CheckExpandedMasterRowExpectedValues
		{
			get
			{
				if ((this.mCheckExpandedMasterRowExpectedValues == null))
				{
					this.mCheckExpandedMasterRowExpectedValues = new CheckExpandedMasterRowExpectedValues();
				}
				return this.mCheckExpandedMasterRowExpectedValues;
			}
		}
		public virtual CheckFilterConditionExpectedValues CheckFilterConditionExpectedValues
		{
			get
			{
				if ((this.mCheckFilterConditionExpectedValues == null))
				{
					this.mCheckFilterConditionExpectedValues = new CheckFilterConditionExpectedValues();
				}
				return this.mCheckFilterConditionExpectedValues;
			}
		}
		public virtual CheckFilterDisplayBugsExpectedValues CheckFilterDisplayBugsExpectedValues
		{
			get
			{
				if ((this.mCheckFilterDisplayBugsExpectedValues == null))
				{
					this.mCheckFilterDisplayBugsExpectedValues = new CheckFilterDisplayBugsExpectedValues();
				}
				return this.mCheckFilterDisplayBugsExpectedValues;
			}
		}
		public virtual CheckFilterDisplayNonBugsExpectedValues CheckFilterDisplayNonBugsExpectedValues
		{
			get
			{
				if ((this.mCheckFilterDisplayNonBugsExpectedValues == null))
				{
					this.mCheckFilterDisplayNonBugsExpectedValues = new CheckFilterDisplayNonBugsExpectedValues();
				}
				return this.mCheckFilterDisplayNonBugsExpectedValues;
			}
		}
		public virtual CheckFilteredDataExpectedValues CheckFilteredDataExpectedValues
		{
			get
			{
				if ((this.mCheckFilteredDataExpectedValues == null))
				{
					this.mCheckFilteredDataExpectedValues = new CheckFilteredDataExpectedValues();
				}
				return this.mCheckFilteredDataExpectedValues;
			}
		}
		public virtual CheckFilteringResultAfterApplyingFilterExpectedValues CheckFilteringResultAfterApplyingFilterExpectedValues
		{
			get
			{
				if ((this.mCheckFilteringResultAfterApplyingFilterExpectedValues == null))
				{
					this.mCheckFilteringResultAfterApplyingFilterExpectedValues = new CheckFilteringResultAfterApplyingFilterExpectedValues();
				}
				return this.mCheckFilteringResultAfterApplyingFilterExpectedValues;
			}
		}
		public virtual CheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues CheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues
		{
			get
			{
				if ((this.mCheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues == null))
				{
					this.mCheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues = new CheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues();
				}
				return this.mCheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues;
			}
		}
		public virtual CheckFilteringResultAfterCleaningFilterExpectedValues CheckFilteringResultAfterCleaningFilterExpectedValues
		{
			get
			{
				if ((this.mCheckFilteringResultAfterCleaningFilterExpectedValues == null))
				{
					this.mCheckFilteringResultAfterCleaningFilterExpectedValues = new CheckFilteringResultAfterCleaningFilterExpectedValues();
				}
				return this.mCheckFilteringResultAfterCleaningFilterExpectedValues;
			}
		}
		public virtual CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues
		{
			get
			{
				if ((this.mCheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues == null))
				{
					this.mCheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues = new CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues();
				}
				return this.mCheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues;
			}
		}
		public virtual CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues
		{
			get
			{
				if ((this.mCheckFilterMadeViaFilterControlInPropertiesTabExpectedValues == null))
				{
					this.mCheckFilterMadeViaFilterControlInPropertiesTabExpectedValues = new CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues();
				}
				return this.mCheckFilterMadeViaFilterControlInPropertiesTabExpectedValues;
			}
		}
		public virtual CheckFilterMadeViaFilterDropdownListExpectedValues CheckFilterMadeViaFilterDropdownListExpectedValues
		{
			get
			{
				if ((this.mCheckFilterMadeViaFilterDropdownListExpectedValues == null))
				{
					this.mCheckFilterMadeViaFilterDropdownListExpectedValues = new CheckFilterMadeViaFilterDropdownListExpectedValues();
				}
				return this.mCheckFilterMadeViaFilterDropdownListExpectedValues;
			}
		}
		public virtual CheckFooterBrickSettingsExpectedValues CheckFooterBrickSettingsExpectedValues
		{
			get
			{
				if ((this.mCheckFooterBrickSettingsExpectedValues == null))
				{
					this.mCheckFooterBrickSettingsExpectedValues = new CheckFooterBrickSettingsExpectedValues();
				}
				return this.mCheckFooterBrickSettingsExpectedValues;
			}
		}
		public virtual CheckFullCollapsedGroupRowExpectedValues CheckFullCollapsedGroupRowExpectedValues
		{
			get
			{
				if ((this.mCheckFullCollapsedGroupRowExpectedValues == null))
				{
					this.mCheckFullCollapsedGroupRowExpectedValues = new CheckFullCollapsedGroupRowExpectedValues();
				}
				return this.mCheckFullCollapsedGroupRowExpectedValues;
			}
		}
		public virtual CheckFullDateAndTimeEditValueExpectedValues CheckFullDateAndTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckFullDateAndTimeEditValueExpectedValues == null))
				{
					this.mCheckFullDateAndTimeEditValueExpectedValues = new CheckFullDateAndTimeEditValueExpectedValues();
				}
				return this.mCheckFullDateAndTimeEditValueExpectedValues;
			}
		}
		public virtual CheckFullDateTimeEditValueExpectedValues CheckFullDateTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckFullDateTimeEditValueExpectedValues == null))
				{
					this.mCheckFullDateTimeEditValueExpectedValues = new CheckFullDateTimeEditValueExpectedValues();
				}
				return this.mCheckFullDateTimeEditValueExpectedValues;
			}
		}
		public virtual CheckFullExpandedGroupRowExpectedValues CheckFullExpandedGroupRowExpectedValues
		{
			get
			{
				if ((this.mCheckFullExpandedGroupRowExpectedValues == null))
				{
					this.mCheckFullExpandedGroupRowExpectedValues = new CheckFullExpandedGroupRowExpectedValues();
				}
				return this.mCheckFullExpandedGroupRowExpectedValues;
			}
		}
		public virtual CheckGroupedDataExpectedValues CheckGroupedDataExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedDataExpectedValues == null))
				{
					this.mCheckGroupedDataExpectedValues = new CheckGroupedDataExpectedValues();
				}
				return this.mCheckGroupedDataExpectedValues;
			}
		}
		public virtual CheckGroupedDataByCategoryExpectedValues CheckGroupedDataByCategoryExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedDataByCategoryExpectedValues == null))
				{
					this.mCheckGroupedDataByCategoryExpectedValues = new CheckGroupedDataByCategoryExpectedValues();
				}
				return this.mCheckGroupedDataByCategoryExpectedValues;
			}
		}
		public virtual CheckGroupedDataByCustomIntervalExpectedValues CheckGroupedDataByCustomIntervalExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedDataByCustomIntervalExpectedValues == null))
				{
					this.mCheckGroupedDataByCustomIntervalExpectedValues = new CheckGroupedDataByCustomIntervalExpectedValues();
				}
				return this.mCheckGroupedDataByCustomIntervalExpectedValues;
			}
		}
		public virtual CheckGroupedDataByDateRangeDataExpectedValues CheckGroupedDataByDateRangeDataExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedDataByDateRangeDataExpectedValues == null))
				{
					this.mCheckGroupedDataByDateRangeDataExpectedValues = new CheckGroupedDataByDateRangeDataExpectedValues();
				}
				return this.mCheckGroupedDataByDateRangeDataExpectedValues;
			}
		}
		public virtual CheckGroupedDataByMonthDataExpectedValues CheckGroupedDataByMonthDataExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedDataByMonthDataExpectedValues == null))
				{
					this.mCheckGroupedDataByMonthDataExpectedValues = new CheckGroupedDataByMonthDataExpectedValues();
				}
				return this.mCheckGroupedDataByMonthDataExpectedValues;
			}
		}
		public virtual CheckGroupedDataByYearDataExpectedValues CheckGroupedDataByYearDataExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedDataByYearDataExpectedValues == null))
				{
					this.mCheckGroupedDataByYearDataExpectedValues = new CheckGroupedDataByYearDataExpectedValues();
				}
				return this.mCheckGroupedDataByYearDataExpectedValues;
			}
		}
		public virtual CheckGroupedDataWithMultipleValuesGroupingExpectedValues CheckGroupedDataWithMultipleValuesGroupingExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedDataWithMultipleValuesGroupingExpectedValues == null))
				{
					this.mCheckGroupedDataWithMultipleValuesGroupingExpectedValues = new CheckGroupedDataWithMultipleValuesGroupingExpectedValues();
				}
				return this.mCheckGroupedDataWithMultipleValuesGroupingExpectedValues;
			}
		}
		public virtual CheckGroupedMasterDetailDataExpectedValues CheckGroupedMasterDetailDataExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedMasterDetailDataExpectedValues == null))
				{
					this.mCheckGroupedMasterDetailDataExpectedValues = new CheckGroupedMasterDetailDataExpectedValues();
				}
				return this.mCheckGroupedMasterDetailDataExpectedValues;
			}
		}
		public virtual CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues
		{
			get
			{
				if ((this.mCheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues == null))
				{
					this.mCheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues = new CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues();
				}
				return this.mCheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues;
			}
		}
		public virtual CheckGroupIndexAfterGroupedDataExpectedValues CheckGroupIndexAfterGroupedDataExpectedValues
		{
			get
			{
				if ((this.mCheckGroupIndexAfterGroupedDataExpectedValues == null))
				{
					this.mCheckGroupIndexAfterGroupedDataExpectedValues = new CheckGroupIndexAfterGroupedDataExpectedValues();
				}
				return this.mCheckGroupIndexAfterGroupedDataExpectedValues;
			}
		}
		public virtual CheckGroupIndexAfterUngroupedDataExpectedValues CheckGroupIndexAfterUngroupedDataExpectedValues
		{
			get
			{
				if ((this.mCheckGroupIndexAfterUngroupedDataExpectedValues == null))
				{
					this.mCheckGroupIndexAfterUngroupedDataExpectedValues = new CheckGroupIndexAfterUngroupedDataExpectedValues();
				}
				return this.mCheckGroupIndexAfterUngroupedDataExpectedValues;
			}
		}
		public virtual CheckHeaderBrickSettingsExpectedValues CheckHeaderBrickSettingsExpectedValues
		{
			get
			{
				if ((this.mCheckHeaderBrickSettingsExpectedValues == null))
				{
					this.mCheckHeaderBrickSettingsExpectedValues = new CheckHeaderBrickSettingsExpectedValues();
				}
				return this.mCheckHeaderBrickSettingsExpectedValues;
			}
		}
		public virtual CheckHiddenToolbarExpectedValues CheckHiddenToolbarExpectedValues
		{
			get
			{
				if ((this.mCheckHiddenToolbarExpectedValues == null))
				{
					this.mCheckHiddenToolbarExpectedValues = new CheckHiddenToolbarExpectedValues();
				}
				return this.mCheckHiddenToolbarExpectedValues;
			}
		}
		public virtual CheckImageComboBoxEditSelectedIndexExpectedValues CheckImageComboBoxEditSelectedIndexExpectedValues
		{
			get
			{
				if ((this.mCheckImageComboBoxEditSelectedIndexExpectedValues == null))
				{
					this.mCheckImageComboBoxEditSelectedIndexExpectedValues = new CheckImageComboBoxEditSelectedIndexExpectedValues();
				}
				return this.mCheckImageComboBoxEditSelectedIndexExpectedValues;
			}
		}
		public virtual CheckImageComboBoxEditValueExpectedValues CheckImageComboBoxEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckImageComboBoxEditValueExpectedValues == null))
				{
					this.mCheckImageComboBoxEditValueExpectedValues = new CheckImageComboBoxEditValueExpectedValues();
				}
				return this.mCheckImageComboBoxEditValueExpectedValues;
			}
		}
		public virtual CheckInvertedSelectedCheckedListBoxValuesExpectedValues CheckInvertedSelectedCheckedListBoxValuesExpectedValues
		{
			get
			{
				if ((this.mCheckInvertedSelectedCheckedListBoxValuesExpectedValues == null))
				{
					this.mCheckInvertedSelectedCheckedListBoxValuesExpectedValues = new CheckInvertedSelectedCheckedListBoxValuesExpectedValues();
				}
				return this.mCheckInvertedSelectedCheckedListBoxValuesExpectedValues;
			}
		}
		public virtual CheckInvokedCustomizationFormExpectedValues CheckInvokedCustomizationFormExpectedValues
		{
			get
			{
				if ((this.mCheckInvokedCustomizationFormExpectedValues == null))
				{
					this.mCheckInvokedCustomizationFormExpectedValues = new CheckInvokedCustomizationFormExpectedValues();
				}
				return this.mCheckInvokedCustomizationFormExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorAppendButtonExpectedValues CheckLogAfterClickDataNavigatorAppendButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorAppendButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorAppendButtonExpectedValues = new CheckLogAfterClickDataNavigatorAppendButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorAppendButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues CheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues = new CheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorEndEditButtonExpectedValues CheckLogAfterClickDataNavigatorEndEditButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorEndEditButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorEndEditButtonExpectedValues = new CheckLogAfterClickDataNavigatorEndEditButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorEndEditButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorFirstButtonExpectedValues CheckLogAfterClickDataNavigatorFirstButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorFirstButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorFirstButtonExpectedValues = new CheckLogAfterClickDataNavigatorFirstButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorFirstButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorLastButtonExpectedValues CheckLogAfterClickDataNavigatorLastButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorLastButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorLastButtonExpectedValues = new CheckLogAfterClickDataNavigatorLastButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorLastButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorLockButtonExpectedValues CheckLogAfterClickDataNavigatorLockButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorLockButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorLockButtonExpectedValues = new CheckLogAfterClickDataNavigatorLockButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorLockButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorNextButtonExpectedValues CheckLogAfterClickDataNavigatorNextButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorNextButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorNextButtonExpectedValues = new CheckLogAfterClickDataNavigatorNextButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorNextButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorNextPageButtonExpectedValues CheckLogAfterClickDataNavigatorNextPageButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorNextPageButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorNextPageButtonExpectedValues = new CheckLogAfterClickDataNavigatorNextPageButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorNextPageButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorPreviousButtonExpectedValues CheckLogAfterClickDataNavigatorPreviousButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorPreviousButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorPreviousButtonExpectedValues = new CheckLogAfterClickDataNavigatorPreviousButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorPreviousButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues CheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues = new CheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorRemoveButtonExpectedValues CheckLogAfterClickDataNavigatorRemoveButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorRemoveButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorRemoveButtonExpectedValues = new CheckLogAfterClickDataNavigatorRemoveButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorRemoveButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDataNavigatorSearchButtonExpectedValues CheckLogAfterClickDataNavigatorSearchButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDataNavigatorSearchButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDataNavigatorSearchButtonExpectedValues = new CheckLogAfterClickDataNavigatorSearchButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDataNavigatorSearchButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterClickDropDownButtonExpectedValues CheckLogAfterClickDropDownButtonExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterClickDropDownButtonExpectedValues == null))
				{
					this.mCheckLogAfterClickDropDownButtonExpectedValues = new CheckLogAfterClickDropDownButtonExpectedValues();
				}
				return this.mCheckLogAfterClickDropDownButtonExpectedValues;
			}
		}
		public virtual CheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues CheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues == null))
				{
					this.mCheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues = new CheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues();
				}
				return this.mCheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues;
			}
		}
		public virtual CheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues CheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues
		{
			get
			{
				if ((this.mCheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues == null))
				{
					this.mCheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues = new CheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues();
				}
				return this.mCheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues;
			}
		}
		public virtual CheckLookUpEditValueExpectedValues CheckLookUpEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckLookUpEditValueExpectedValues == null))
				{
					this.mCheckLookUpEditValueExpectedValues = new CheckLookUpEditValueExpectedValues();
				}
				return this.mCheckLookUpEditValueExpectedValues;
			}
		}
		public virtual CheckMemoEditValueExpectedValues CheckMemoEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckMemoEditValueExpectedValues == null))
				{
					this.mCheckMemoEditValueExpectedValues = new CheckMemoEditValueExpectedValues();
				}
				return this.mCheckMemoEditValueExpectedValues;
			}
		}
		public virtual CheckMonthAndDayDateTimeEditValueExpectedValues CheckMonthAndDayDateTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckMonthAndDayDateTimeEditValueExpectedValues == null))
				{
					this.mCheckMonthAndDayDateTimeEditValueExpectedValues = new CheckMonthAndDayDateTimeEditValueExpectedValues();
				}
				return this.mCheckMonthAndDayDateTimeEditValueExpectedValues;
			}
		}
		public virtual CheckMRUEditValueAfterAddingExpectedValues CheckMRUEditValueAfterAddingExpectedValues
		{
			get
			{
				if ((this.mCheckMRUEditValueAfterAddingExpectedValues == null))
				{
					this.mCheckMRUEditValueAfterAddingExpectedValues = new CheckMRUEditValueAfterAddingExpectedValues();
				}
				return this.mCheckMRUEditValueAfterAddingExpectedValues;
			}
		}
		public virtual CheckMRUEditValueAfterDeletingExpectedValues CheckMRUEditValueAfterDeletingExpectedValues
		{
			get
			{
				if ((this.mCheckMRUEditValueAfterDeletingExpectedValues == null))
				{
					this.mCheckMRUEditValueAfterDeletingExpectedValues = new CheckMRUEditValueAfterDeletingExpectedValues();
				}
				return this.mCheckMRUEditValueAfterDeletingExpectedValues;
			}
		}
		public virtual CheckMRUEditValueAfterSelectionExpectedValues CheckMRUEditValueAfterSelectionExpectedValues
		{
			get
			{
				if ((this.mCheckMRUEditValueAfterSelectionExpectedValues == null))
				{
					this.mCheckMRUEditValueAfterSelectionExpectedValues = new CheckMRUEditValueAfterSelectionExpectedValues();
				}
				return this.mCheckMRUEditValueAfterSelectionExpectedValues;
			}
		}
		public virtual CheckMRUEditValueAfterTypingExpectedValues CheckMRUEditValueAfterTypingExpectedValues
		{
			get
			{
				if ((this.mCheckMRUEditValueAfterTypingExpectedValues == null))
				{
					this.mCheckMRUEditValueAfterTypingExpectedValues = new CheckMRUEditValueAfterTypingExpectedValues();
				}
				return this.mCheckMRUEditValueAfterTypingExpectedValues;
			}
		}
		public virtual CheckMultiExtendedSelectionInListBoxExpectedValues CheckMultiExtendedSelectionInListBoxExpectedValues
		{
			get
			{
				if ((this.mCheckMultiExtendedSelectionInListBoxExpectedValues == null))
				{
					this.mCheckMultiExtendedSelectionInListBoxExpectedValues = new CheckMultiExtendedSelectionInListBoxExpectedValues();
				}
				return this.mCheckMultiExtendedSelectionInListBoxExpectedValues;
			}
		}
		public virtual CheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues CheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues
		{
			get
			{
				if ((this.mCheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues == null))
				{
					this.mCheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues = new CheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues();
				}
				return this.mCheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues;
			}
		}
		public virtual CheckMultiSimpleSelectionInListBoxExpectedValues CheckMultiSimpleSelectionInListBoxExpectedValues
		{
			get
			{
				if ((this.mCheckMultiSimpleSelectionInListBoxExpectedValues == null))
				{
					this.mCheckMultiSimpleSelectionInListBoxExpectedValues = new CheckMultiSimpleSelectionInListBoxExpectedValues();
				}
				return this.mCheckMultiSimpleSelectionInListBoxExpectedValues;
			}
		}
		public virtual CheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues CheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues
		{
			get
			{
				if ((this.mCheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues == null))
				{
					this.mCheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues = new CheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues();
				}
				return this.mCheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues;
			}
		}
		public virtual CheckPickImageEditValueExpectedValues CheckPickImageEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckPickImageEditValueExpectedValues == null))
				{
					this.mCheckPickImageEditValueExpectedValues = new CheckPickImageEditValueExpectedValues();
				}
				return this.mCheckPickImageEditValueExpectedValues;
			}
		}
		public virtual CheckPopupContainerEditSizeExpectedValues CheckPopupContainerEditSizeExpectedValues
		{
			get
			{
				if ((this.mCheckPopupContainerEditSizeExpectedValues == null))
				{
					this.mCheckPopupContainerEditSizeExpectedValues = new CheckPopupContainerEditSizeExpectedValues();
				}
				return this.mCheckPopupContainerEditSizeExpectedValues;
			}
		}
		public virtual CheckQuicklyAccessToRecentDocumentsParams CheckQuicklyAccessToRecentDocumentsParams
		{
			get
			{
				if ((this.mCheckQuicklyAccessToRecentDocumentsParams == null))
				{
					this.mCheckQuicklyAccessToRecentDocumentsParams = new CheckQuicklyAccessToRecentDocumentsParams();
				}
				return this.mCheckQuicklyAccessToRecentDocumentsParams;
			}
		}
		public virtual CheckRangeTrackBarValueExpectedValues CheckRangeTrackBarValueExpectedValues
		{
			get
			{
				if ((this.mCheckRangeTrackBarValueExpectedValues == null))
				{
					this.mCheckRangeTrackBarValueExpectedValues = new CheckRangeTrackBarValueExpectedValues();
				}
				return this.mCheckRangeTrackBarValueExpectedValues;
			}
		}
		public virtual CheckRecalculatedSummariesValueExpectedValues CheckRecalculatedSummariesValueExpectedValues
		{
			get
			{
				if ((this.mCheckRecalculatedSummariesValueExpectedValues == null))
				{
					this.mCheckRecalculatedSummariesValueExpectedValues = new CheckRecalculatedSummariesValueExpectedValues();
				}
				return this.mCheckRecalculatedSummariesValueExpectedValues;
			}
		}
		public virtual CheckRecalculatedTotalRowAndColumnCellsExpectedValues CheckRecalculatedTotalRowAndColumnCellsExpectedValues
		{
			get
			{
				if ((this.mCheckRecalculatedTotalRowAndColumnCellsExpectedValues == null))
				{
					this.mCheckRecalculatedTotalRowAndColumnCellsExpectedValues = new CheckRecalculatedTotalRowAndColumnCellsExpectedValues();
				}
				return this.mCheckRecalculatedTotalRowAndColumnCellsExpectedValues;
			}
		}
		public virtual CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues
		{
			get
			{
				if ((this.mCheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues == null))
				{
					this.mCheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues = new CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues();
				}
				return this.mCheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues;
			}
		}
		public virtual CheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues CheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues
		{
			get
			{
				if ((this.mCheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues == null))
				{
					this.mCheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues = new CheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues();
				}
				return this.mCheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues;
			}
		}
		public virtual CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues
		{
			get
			{
				if ((this.mCheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues == null))
				{
					this.mCheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues = new CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues();
				}
				return this.mCheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues;
			}
		}
		public virtual CheckRegExMaskBoxEditValuesExpectedValues CheckRegExMaskBoxEditValuesExpectedValues
		{
			get
			{
				if ((this.mCheckRegExMaskBoxEditValuesExpectedValues == null))
				{
					this.mCheckRegExMaskBoxEditValuesExpectedValues = new CheckRegExMaskBoxEditValuesExpectedValues();
				}
				return this.mCheckRegExMaskBoxEditValuesExpectedValues;
			}
		}
		public virtual CheckRegularMaskBoxEditValuesExpectedValues CheckRegularMaskBoxEditValuesExpectedValues
		{
			get
			{
				if ((this.mCheckRegularMaskBoxEditValuesExpectedValues == null))
				{
					this.mCheckRegularMaskBoxEditValuesExpectedValues = new CheckRegularMaskBoxEditValuesExpectedValues();
				}
				return this.mCheckRegularMaskBoxEditValuesExpectedValues;
			}
		}
		public virtual CheckRemovedSortingExpectedValues CheckRemovedSortingExpectedValues
		{
			get
			{
				if ((this.mCheckRemovedSortingExpectedValues == null))
				{
					this.mCheckRemovedSortingExpectedValues = new CheckRemovedSortingExpectedValues();
				}
				return this.mCheckRemovedSortingExpectedValues;
			}
		}
		public virtual CheckReorderedColumnsExpectedValues CheckReorderedColumnsExpectedValues
		{
			get
			{
				if ((this.mCheckReorderedColumnsExpectedValues == null))
				{
					this.mCheckReorderedColumnsExpectedValues = new CheckReorderedColumnsExpectedValues();
				}
				return this.mCheckReorderedColumnsExpectedValues;
			}
		}
		public virtual CheckRFCDateTimeEditValueExpectedValues CheckRFCDateTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckRFCDateTimeEditValueExpectedValues == null))
				{
					this.mCheckRFCDateTimeEditValueExpectedValues = new CheckRFCDateTimeEditValueExpectedValues();
				}
				return this.mCheckRFCDateTimeEditValueExpectedValues;
			}
		}
		public virtual CheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues CheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues == null))
				{
					this.mCheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues = new CheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues();
				}
				return this.mCheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues;
			}
		}
		public virtual CheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues CheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues == null))
				{
					this.mCheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues = new CheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues();
				}
				return this.mCheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues;
			}
		}
		public virtual CheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues CheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues == null))
				{
					this.mCheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues = new CheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues();
				}
				return this.mCheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues;
			}
		}
		public virtual CheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues CheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues == null))
				{
					this.mCheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues = new CheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues();
				}
				return this.mCheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues;
			}
		}
		public virtual CheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues CheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues == null))
				{
					this.mCheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues = new CheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues();
				}
				return this.mCheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues;
			}
		}
		public virtual CheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues CheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues == null))
				{
					this.mCheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues = new CheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues();
				}
				return this.mCheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues;
			}
		}
		public virtual CheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues CheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues == null))
				{
					this.mCheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues = new CheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues();
				}
				return this.mCheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues;
			}
		}
		public virtual CheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues CheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues == null))
				{
					this.mCheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues = new CheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues();
				}
				return this.mCheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues;
			}
		}
		public virtual CheckRibbonRichEditTextForAssertionReplacingExpectedValues CheckRibbonRichEditTextForAssertionReplacingExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonRichEditTextForAssertionReplacingExpectedValues == null))
				{
					this.mCheckRibbonRichEditTextForAssertionReplacingExpectedValues = new CheckRibbonRichEditTextForAssertionReplacingExpectedValues();
				}
				return this.mCheckRibbonRichEditTextForAssertionReplacingExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaCtrlAShortcutExpectedValues CheckSelectedCellsViaCtrlAShortcutExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaCtrlAShortcutExpectedValues == null))
				{
					this.mCheckSelectedCellsViaCtrlAShortcutExpectedValues = new CheckSelectedCellsViaCtrlAShortcutExpectedValues();
				}
				return this.mCheckSelectedCellsViaCtrlAShortcutExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues CheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues == null))
				{
					this.mCheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues = new CheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues();
				}
				return this.mCheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues CheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues == null))
				{
					this.mCheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues = new CheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues();
				}
				return this.mCheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaPageDownButtonExpectedValues CheckSelectedCellsViaPageDownButtonExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaPageDownButtonExpectedValues == null))
				{
					this.mCheckSelectedCellsViaPageDownButtonExpectedValues = new CheckSelectedCellsViaPageDownButtonExpectedValues();
				}
				return this.mCheckSelectedCellsViaPageDownButtonExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaPageUpButtonExpectedValues CheckSelectedCellsViaPageUpButtonExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaPageUpButtonExpectedValues == null))
				{
					this.mCheckSelectedCellsViaPageUpButtonExpectedValues = new CheckSelectedCellsViaPageUpButtonExpectedValues();
				}
				return this.mCheckSelectedCellsViaPageUpButtonExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaShiftPageDownShortcutExpectedValues CheckSelectedCellsViaShiftPageDownShortcutExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaShiftPageDownShortcutExpectedValues == null))
				{
					this.mCheckSelectedCellsViaShiftPageDownShortcutExpectedValues = new CheckSelectedCellsViaShiftPageDownShortcutExpectedValues();
				}
				return this.mCheckSelectedCellsViaShiftPageDownShortcutExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaShiftPageUpShortcutExpectedValues CheckSelectedCellsViaShiftPageUpShortcutExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaShiftPageUpShortcutExpectedValues == null))
				{
					this.mCheckSelectedCellsViaShiftPageUpShortcutExpectedValues = new CheckSelectedCellsViaShiftPageUpShortcutExpectedValues();
				}
				return this.mCheckSelectedCellsViaShiftPageUpShortcutExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaShiftTabShortcutExpectedValues CheckSelectedCellsViaShiftTabShortcutExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaShiftTabShortcutExpectedValues == null))
				{
					this.mCheckSelectedCellsViaShiftTabShortcutExpectedValues = new CheckSelectedCellsViaShiftTabShortcutExpectedValues();
				}
				return this.mCheckSelectedCellsViaShiftTabShortcutExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaTabButtonExpectedValues CheckSelectedCellsViaTabButtonExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaTabButtonExpectedValues == null))
				{
					this.mCheckSelectedCellsViaTabButtonExpectedValues = new CheckSelectedCellsViaTabButtonExpectedValues();
				}
				return this.mCheckSelectedCellsViaTabButtonExpectedValues;
			}
		}
		public virtual CheckSelectedCheckedComboBoxEditValuesExpectedValues CheckSelectedCheckedComboBoxEditValuesExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCheckedComboBoxEditValuesExpectedValues == null))
				{
					this.mCheckSelectedCheckedComboBoxEditValuesExpectedValues = new CheckSelectedCheckedComboBoxEditValuesExpectedValues();
				}
				return this.mCheckSelectedCheckedComboBoxEditValuesExpectedValues;
			}
		}
		public virtual CheckSelectedCheckedListBoxValueExpectedValues CheckSelectedCheckedListBoxValueExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCheckedListBoxValueExpectedValues == null))
				{
					this.mCheckSelectedCheckedListBoxValueExpectedValues = new CheckSelectedCheckedListBoxValueExpectedValues();
				}
				return this.mCheckSelectedCheckedListBoxValueExpectedValues;
			}
		}
		public virtual CheckSelectedListBoxValueExpectedValues CheckSelectedListBoxValueExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedListBoxValueExpectedValues == null))
				{
					this.mCheckSelectedListBoxValueExpectedValues = new CheckSelectedListBoxValueExpectedValues();
				}
				return this.mCheckSelectedListBoxValueExpectedValues;
			}
		}
		public virtual CheckSelectedMemoEditTextExpectedValues CheckSelectedMemoEditTextExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedMemoEditTextExpectedValues == null))
				{
					this.mCheckSelectedMemoEditTextExpectedValues = new CheckSelectedMemoEditTextExpectedValues();
				}
				return this.mCheckSelectedMemoEditTextExpectedValues;
			}
		}
		public virtual CheckSelectedRowsViaMouseExpectedValues CheckSelectedRowsViaMouseExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedRowsViaMouseExpectedValues == null))
				{
					this.mCheckSelectedRowsViaMouseExpectedValues = new CheckSelectedRowsViaMouseExpectedValues();
				}
				return this.mCheckSelectedRowsViaMouseExpectedValues;
			}
		}
		public virtual CheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues CheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues == null))
				{
					this.mCheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues = new CheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues();
				}
				return this.mCheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues;
			}
		}
		public virtual CheckSelectedStateTrueExpectedValues CheckSelectedStateTrueExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedStateTrueExpectedValues == null))
				{
					this.mCheckSelectedStateTrueExpectedValues = new CheckSelectedStateTrueExpectedValues();
				}
				return this.mCheckSelectedStateTrueExpectedValues;
			}
		}
		public virtual CheckSelectedTextEditTextExpectedValues CheckSelectedTextEditTextExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedTextEditTextExpectedValues == null))
				{
					this.mCheckSelectedTextEditTextExpectedValues = new CheckSelectedTextEditTextExpectedValues();
				}
				return this.mCheckSelectedTextEditTextExpectedValues;
			}
		}
		public virtual CheckShortTimeDateTimeEditValueExpectedValues CheckShortTimeDateTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckShortTimeDateTimeEditValueExpectedValues == null))
				{
					this.mCheckShortTimeDateTimeEditValueExpectedValues = new CheckShortTimeDateTimeEditValueExpectedValues();
				}
				return this.mCheckShortTimeDateTimeEditValueExpectedValues;
			}
		}
		public virtual CheckShowedAlertFormCaptionExpectedValues CheckShowedAlertFormCaptionExpectedValues
		{
			get
			{
				if ((this.mCheckShowedAlertFormCaptionExpectedValues == null))
				{
					this.mCheckShowedAlertFormCaptionExpectedValues = new CheckShowedAlertFormCaptionExpectedValues();
				}
				return this.mCheckShowedAlertFormCaptionExpectedValues;
			}
		}
		public virtual CheckSimpleFilteredDataExpectedValues CheckSimpleFilteredDataExpectedValues
		{
			get
			{
				if ((this.mCheckSimpleFilteredDataExpectedValues == null))
				{
					this.mCheckSimpleFilteredDataExpectedValues = new CheckSimpleFilteredDataExpectedValues();
				}
				return this.mCheckSimpleFilteredDataExpectedValues;
			}
		}
		public virtual CheckSimpleMaskBoxEditValuesExpectedValues CheckSimpleMaskBoxEditValuesExpectedValues
		{
			get
			{
				if ((this.mCheckSimpleMaskBoxEditValuesExpectedValues == null))
				{
					this.mCheckSimpleMaskBoxEditValuesExpectedValues = new CheckSimpleMaskBoxEditValuesExpectedValues();
				}
				return this.mCheckSimpleMaskBoxEditValuesExpectedValues;
			}
		}
		public virtual CheckSimplePadTextExpectedValues CheckSimplePadTextExpectedValues
		{
			get
			{
				if ((this.mCheckSimplePadTextExpectedValues == null))
				{
					this.mCheckSimplePadTextExpectedValues = new CheckSimplePadTextExpectedValues();
				}
				return this.mCheckSimplePadTextExpectedValues;
			}
		}
		public virtual CheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues CheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues
		{
			get
			{
				if ((this.mCheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues == null))
				{
					this.mCheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues = new CheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues();
				}
				return this.mCheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues;
			}
		}
		public virtual CheckSortedDataByPriceAverageAscendingExpectedValues CheckSortedDataByPriceAverageAscendingExpectedValues
		{
			get
			{
				if ((this.mCheckSortedDataByPriceAverageAscendingExpectedValues == null))
				{
					this.mCheckSortedDataByPriceAverageAscendingExpectedValues = new CheckSortedDataByPriceAverageAscendingExpectedValues();
				}
				return this.mCheckSortedDataByPriceAverageAscendingExpectedValues;
			}
		}
		public virtual CheckSpinBoxEditValueExpectedValues CheckSpinBoxEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckSpinBoxEditValueExpectedValues == null))
				{
					this.mCheckSpinBoxEditValueExpectedValues = new CheckSpinBoxEditValueExpectedValues();
				}
				return this.mCheckSpinBoxEditValueExpectedValues;
			}
		}
		public virtual CheckSpinEditValueExpectedValues CheckSpinEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckSpinEditValueExpectedValues == null))
				{
					this.mCheckSpinEditValueExpectedValues = new CheckSpinEditValueExpectedValues();
				}
				return this.mCheckSpinEditValueExpectedValues;
			}
		}
		public virtual CheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues CheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues
		{
			get
			{
				if ((this.mCheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues == null))
				{
					this.mCheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues = new CheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues();
				}
				return this.mCheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues;
			}
		}
		public virtual CheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues CheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues
		{
			get
			{
				if ((this.mCheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues == null))
				{
					this.mCheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues = new CheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues();
				}
				return this.mCheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues;
			}
		}
		public virtual CheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues CheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues
		{
			get
			{
				if ((this.mCheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues == null))
				{
					this.mCheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues = new CheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues();
				}
				return this.mCheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues;
			}
		}
		public virtual CheckStatusBarInfoAfterChangingMarginExpectedValues CheckStatusBarInfoAfterChangingMarginExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoAfterChangingMarginExpectedValues == null))
				{
					this.mCheckStatusBarInfoAfterChangingMarginExpectedValues = new CheckStatusBarInfoAfterChangingMarginExpectedValues();
				}
				return this.mCheckStatusBarInfoAfterChangingMarginExpectedValues;
			}
		}
		public virtual CheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues CheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues == null))
				{
					this.mCheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues = new CheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues();
				}
				return this.mCheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues;
			}
		}
		public virtual CheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues CheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues == null))
				{
					this.mCheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues = new CheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues();
				}
				return this.mCheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues;
			}
		}
		public virtual CheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues CheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues == null))
				{
					this.mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues = new CheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues();
				}
				return this.mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues;
			}
		}
		public virtual CheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues CheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues == null))
				{
					this.mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues = new CheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues();
				}
				return this.mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues;
			}
		}
		public virtual CheckStatusBarInfoBeforeChangingMarginExpectedValues CheckStatusBarInfoBeforeChangingMarginExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoBeforeChangingMarginExpectedValues == null))
				{
					this.mCheckStatusBarInfoBeforeChangingMarginExpectedValues = new CheckStatusBarInfoBeforeChangingMarginExpectedValues();
				}
				return this.mCheckStatusBarInfoBeforeChangingMarginExpectedValues;
			}
		}
		public virtual CheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues CheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues == null))
				{
					this.mCheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues = new CheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues();
				}
				return this.mCheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues;
			}
		}
		public virtual CheckSumDiscountAmountExpectedValues CheckSumDiscountAmountExpectedValues
		{
			get
			{
				if ((this.mCheckSumDiscountAmountExpectedValues == null))
				{
					this.mCheckSumDiscountAmountExpectedValues = new CheckSumDiscountAmountExpectedValues();
				}
				return this.mCheckSumDiscountAmountExpectedValues;
			}
		}
		public virtual CheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues CheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues
		{
			get
			{
				if ((this.mCheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues == null))
				{
					this.mCheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues = new CheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues();
				}
				return this.mCheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues;
			}
		}
		public virtual CheckSumTotalExpectedValues CheckSumTotalExpectedValues
		{
			get
			{
				if ((this.mCheckSumTotalExpectedValues == null))
				{
					this.mCheckSumTotalExpectedValues = new CheckSumTotalExpectedValues();
				}
				return this.mCheckSumTotalExpectedValues;
			}
		}
		public virtual CheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues CheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues
		{
			get
			{
				if ((this.mCheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues == null))
				{
					this.mCheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues = new CheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues();
				}
				return this.mCheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues;
			}
		}
		public virtual CheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues CheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues
		{
			get
			{
				if ((this.mCheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues == null))
				{
					this.mCheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues = new CheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues();
				}
				return this.mCheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues;
			}
		}
		public virtual CheckTextEditValueExpectedValues CheckTextEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckTextEditValueExpectedValues == null))
				{
					this.mCheckTextEditValueExpectedValues = new CheckTextEditValueExpectedValues();
				}
				return this.mCheckTextEditValueExpectedValues;
			}
		}
		public virtual CheckTimeEditValueExpectedValues CheckTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckTimeEditValueExpectedValues == null))
				{
					this.mCheckTimeEditValueExpectedValues = new CheckTimeEditValueExpectedValues();
				}
				return this.mCheckTimeEditValueExpectedValues;
			}
		}
		public virtual CheckTrackBarValueExpectedValues CheckTrackBarValueExpectedValues
		{
			get
			{
				if ((this.mCheckTrackBarValueExpectedValues == null))
				{
					this.mCheckTrackBarValueExpectedValues = new CheckTrackBarValueExpectedValues();
				}
				return this.mCheckTrackBarValueExpectedValues;
			}
		}
		public virtual CheckUngroupedDataExpectedValues CheckUngroupedDataExpectedValues
		{
			get
			{
				if ((this.mCheckUngroupedDataExpectedValues == null))
				{
					this.mCheckUngroupedDataExpectedValues = new CheckUngroupedDataExpectedValues();
				}
				return this.mCheckUngroupedDataExpectedValues;
			}
		}
		public virtual CheckUngroupedMasterDetailDataExpectedValues CheckUngroupedMasterDetailDataExpectedValues
		{
			get
			{
				if ((this.mCheckUngroupedMasterDetailDataExpectedValues == null))
				{
					this.mCheckUngroupedMasterDetailDataExpectedValues = new CheckUngroupedMasterDetailDataExpectedValues();
				}
				return this.mCheckUngroupedMasterDetailDataExpectedValues;
			}
		}
		public virtual CheckUniversalSortableDateTimeEditValueExpectedValues CheckUniversalSortableDateTimeEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckUniversalSortableDateTimeEditValueExpectedValues == null))
				{
					this.mCheckUniversalSortableDateTimeEditValueExpectedValues = new CheckUniversalSortableDateTimeEditValueExpectedValues();
				}
				return this.mCheckUniversalSortableDateTimeEditValueExpectedValues;
			}
		}
		public virtual CheckViaKeyboardParams CheckViaKeyboardParams
		{
			get
			{
				if ((this.mCheckViaKeyboardParams == null))
				{
					this.mCheckViaKeyboardParams = new CheckViaKeyboardParams();
				}
				return this.mCheckViaKeyboardParams;
			}
		}
		public virtual CheckViaMouseParams CheckViaMouseParams
		{
			get
			{
				if ((this.mCheckViaMouseParams == null))
				{
					this.mCheckViaMouseParams = new CheckViaMouseParams();
				}
				return this.mCheckViaMouseParams;
			}
		}
		public virtual CheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues CheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues
		{
			get
			{
				if ((this.mCheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues == null))
				{
					this.mCheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues = new CheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues();
				}
				return this.mCheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues;
			}
		}
		public virtual CheckVisibleIndexOfHiddenBandExpectedValues CheckVisibleIndexOfHiddenBandExpectedValues
		{
			get
			{
				if ((this.mCheckVisibleIndexOfHiddenBandExpectedValues == null))
				{
					this.mCheckVisibleIndexOfHiddenBandExpectedValues = new CheckVisibleIndexOfHiddenBandExpectedValues();
				}
				return this.mCheckVisibleIndexOfHiddenBandExpectedValues;
			}
		}
		public virtual CheckWatermarkOptionsExpectedValues CheckWatermarkOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckWatermarkOptionsExpectedValues == null))
				{
					this.mCheckWatermarkOptionsExpectedValues = new CheckWatermarkOptionsExpectedValues();
				}
				return this.mCheckWatermarkOptionsExpectedValues;
			}
		}
		public virtual CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues
		{
			get
			{
				if ((this.mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues == null))
				{
					this.mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues = new CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues();
				}
				return this.mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues;
			}
		}
		public virtual CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues
		{
			get
			{
				if ((this.mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues == null))
				{
					this.mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues = new CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues();
				}
				return this.mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues;
			}
		}
		public virtual CheckZoomTrackBarValueExpectedValues CheckZoomTrackBarValueExpectedValues
		{
			get
			{
				if ((this.mCheckZoomTrackBarValueExpectedValues == null))
				{
					this.mCheckZoomTrackBarValueExpectedValues = new CheckZoomTrackBarValueExpectedValues();
				}
				return this.mCheckZoomTrackBarValueExpectedValues;
			}
		}
		public virtual ChoiceMenuItemWithSubmenuParams ChoiceMenuItemWithSubmenuParams
		{
			get
			{
				if ((this.mChoiceMenuItemWithSubmenuParams == null))
				{
					this.mChoiceMenuItemWithSubmenuParams = new ChoiceMenuItemWithSubmenuParams();
				}
				return this.mChoiceMenuItemWithSubmenuParams;
			}
		}
		public virtual ClearDateEditValueViaButtonClearParams ClearDateEditValueViaButtonClearParams
		{
			get
			{
				if ((this.mClearDateEditValueViaButtonClearParams == null))
				{
					this.mClearDateEditValueViaButtonClearParams = new ClearDateEditValueViaButtonClearParams();
				}
				return this.mClearDateEditValueViaButtonClearParams;
			}
		}
		public virtual ClearFilterViaButtonEscParams ClearFilterViaButtonEscParams
		{
			get
			{
				if ((this.mClearFilterViaButtonEscParams == null))
				{
					this.mClearFilterViaButtonEscParams = new ClearFilterViaButtonEscParams();
				}
				return this.mClearFilterViaButtonEscParams;
			}
		}
		public virtual ClearFilterViaClickColumnHeaderParams ClearFilterViaClickColumnHeaderParams
		{
			get
			{
				if ((this.mClearFilterViaClickColumnHeaderParams == null))
				{
					this.mClearFilterViaClickColumnHeaderParams = new ClearFilterViaClickColumnHeaderParams();
				}
				return this.mClearFilterViaClickColumnHeaderParams;
			}
		}
		public virtual ClickAddedHeaderBricksParams ClickAddedHeaderBricksParams
		{
			get
			{
				if ((this.mClickAddedHeaderBricksParams == null))
				{
					this.mClickAddedHeaderBricksParams = new ClickAddedHeaderBricksParams();
				}
				return this.mClickAddedHeaderBricksParams;
			}
		}
		public virtual ClickAddedToQuickAccessToolbarRibbonGroupParams ClickAddedToQuickAccessToolbarRibbonGroupParams
		{
			get
			{
				if ((this.mClickAddedToQuickAccessToolbarRibbonGroupParams == null))
				{
					this.mClickAddedToQuickAccessToolbarRibbonGroupParams = new ClickAddedToQuickAccessToolbarRibbonGroupParams();
				}
				return this.mClickAddedToQuickAccessToolbarRibbonGroupParams;
			}
		}
		public virtual ClickCopyRibbonItemViaMouseParams ClickCopyRibbonItemViaMouseParams
		{
			get
			{
				if ((this.mClickCopyRibbonItemViaMouseParams == null))
				{
					this.mClickCopyRibbonItemViaMouseParams = new ClickCopyRibbonItemViaMouseParams();
				}
				return this.mClickCopyRibbonItemViaMouseParams;
			}
		}
		public virtual ClickDisplayedRibbonTabParams ClickDisplayedRibbonTabParams
		{
			get
			{
				if ((this.mClickDisplayedRibbonTabParams == null))
				{
					this.mClickDisplayedRibbonTabParams = new ClickDisplayedRibbonTabParams();
				}
				return this.mClickDisplayedRibbonTabParams;
			}
		}
		public virtual ClickDownArrowKeyForExpandMainMenuDropdownListParams ClickDownArrowKeyForExpandMainMenuDropdownListParams
		{
			get
			{
				if ((this.mClickDownArrowKeyForExpandMainMenuDropdownListParams == null))
				{
					this.mClickDownArrowKeyForExpandMainMenuDropdownListParams = new ClickDownArrowKeyForExpandMainMenuDropdownListParams();
				}
				return this.mClickDownArrowKeyForExpandMainMenuDropdownListParams;
			}
		}
		public virtual ClickEditMenuCopyItemParams ClickEditMenuCopyItemParams
		{
			get
			{
				if ((this.mClickEditMenuCopyItemParams == null))
				{
					this.mClickEditMenuCopyItemParams = new ClickEditMenuCopyItemParams();
				}
				return this.mClickEditMenuCopyItemParams;
			}
		}
		public virtual ClickEditMenuPasteItemParams ClickEditMenuPasteItemParams
		{
			get
			{
				if ((this.mClickEditMenuPasteItemParams == null))
				{
					this.mClickEditMenuPasteItemParams = new ClickEditMenuPasteItemParams();
				}
				return this.mClickEditMenuPasteItemParams;
			}
		}
		public virtual ClickEditMenuUndoItemParams ClickEditMenuUndoItemParams
		{
			get
			{
				if ((this.mClickEditMenuUndoItemParams == null))
				{
					this.mClickEditMenuUndoItemParams = new ClickEditMenuUndoItemParams();
				}
				return this.mClickEditMenuUndoItemParams;
			}
		}
		public virtual ClickEnterKeyForExpandMainMenuDropdownListParams ClickEnterKeyForExpandMainMenuDropdownListParams
		{
			get
			{
				if ((this.mClickEnterKeyForExpandMainMenuDropdownListParams == null))
				{
					this.mClickEnterKeyForExpandMainMenuDropdownListParams = new ClickEnterKeyForExpandMainMenuDropdownListParams();
				}
				return this.mClickEnterKeyForExpandMainMenuDropdownListParams;
			}
		}
		public virtual ClickEnterOnRibbonRichEditParams ClickEnterOnRibbonRichEditParams
		{
			get
			{
				if ((this.mClickEnterOnRibbonRichEditParams == null))
				{
					this.mClickEnterOnRibbonRichEditParams = new ClickEnterOnRibbonRichEditParams();
				}
				return this.mClickEnterOnRibbonRichEditParams;
			}
		}
		public virtual ClickEscKeyForCollapseMainMenuDropdownListParams ClickEscKeyForCollapseMainMenuDropdownListParams
		{
			get
			{
				if ((this.mClickEscKeyForCollapseMainMenuDropdownListParams == null))
				{
					this.mClickEscKeyForCollapseMainMenuDropdownListParams = new ClickEscKeyForCollapseMainMenuDropdownListParams();
				}
				return this.mClickEscKeyForCollapseMainMenuDropdownListParams;
			}
		}
		public virtual ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams
		{
			get
			{
				if ((this.mClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams == null))
				{
					this.mClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams = new ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams();
				}
				return this.mClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams;
			}
		}
		public virtual ClickRibbonItemForAssertionSwitchingBetweenTabsParams ClickRibbonItemForAssertionSwitchingBetweenTabsParams
		{
			get
			{
				if ((this.mClickRibbonItemForAssertionSwitchingBetweenTabsParams == null))
				{
					this.mClickRibbonItemForAssertionSwitchingBetweenTabsParams = new ClickRibbonItemForAssertionSwitchingBetweenTabsParams();
				}
				return this.mClickRibbonItemForAssertionSwitchingBetweenTabsParams;
			}
		}
		public virtual ClickRibbonItemOfContextualTabParams ClickRibbonItemOfContextualTabParams
		{
			get
			{
				if ((this.mClickRibbonItemOfContextualTabParams == null))
				{
					this.mClickRibbonItemOfContextualTabParams = new ClickRibbonItemOfContextualTabParams();
				}
				return this.mClickRibbonItemOfContextualTabParams;
			}
		}
		public virtual CreateComplexFilterViaCustomAutoFilterParams CreateComplexFilterViaCustomAutoFilterParams
		{
			get
			{
				if ((this.mCreateComplexFilterViaCustomAutoFilterParams == null))
				{
					this.mCreateComplexFilterViaCustomAutoFilterParams = new CreateComplexFilterViaCustomAutoFilterParams();
				}
				return this.mCreateComplexFilterViaCustomAutoFilterParams;
			}
		}
		public virtual CreateExpressionsViaContextMenuParams CreateExpressionsViaContextMenuParams
		{
			get
			{
				if ((this.mCreateExpressionsViaContextMenuParams == null))
				{
					this.mCreateExpressionsViaContextMenuParams = new CreateExpressionsViaContextMenuParams();
				}
				return this.mCreateExpressionsViaContextMenuParams;
			}
		}
		public virtual CreateExpressionsViaShowExpressionsButtonParams CreateExpressionsViaShowExpressionsButtonParams
		{
			get
			{
				if ((this.mCreateExpressionsViaShowExpressionsButtonParams == null))
				{
					this.mCreateExpressionsViaShowExpressionsButtonParams = new CreateExpressionsViaShowExpressionsButtonParams();
				}
				return this.mCreateExpressionsViaShowExpressionsButtonParams;
			}
		}
		public virtual CreateFilterConditionViaAutoFilterRowParams CreateFilterConditionViaAutoFilterRowParams
		{
			get
			{
				if ((this.mCreateFilterConditionViaAutoFilterRowParams == null))
				{
					this.mCreateFilterConditionViaAutoFilterRowParams = new CreateFilterConditionViaAutoFilterRowParams();
				}
				return this.mCreateFilterConditionViaAutoFilterRowParams;
			}
		}
		public virtual CreateFilterDisplayBugsParams CreateFilterDisplayBugsParams
		{
			get
			{
				if ((this.mCreateFilterDisplayBugsParams == null))
				{
					this.mCreateFilterDisplayBugsParams = new CreateFilterDisplayBugsParams();
				}
				return this.mCreateFilterDisplayBugsParams;
			}
		}
		public virtual CreateFilterDisplayNonBugsParams CreateFilterDisplayNonBugsParams
		{
			get
			{
				if ((this.mCreateFilterDisplayNonBugsParams == null))
				{
					this.mCreateFilterDisplayNonBugsParams = new CreateFilterDisplayNonBugsParams();
				}
				return this.mCreateFilterDisplayNonBugsParams;
			}
		}
		public virtual CreateFilterViaFilterControlInCustomFilterControlBindingTabParams CreateFilterViaFilterControlInCustomFilterControlBindingTabParams
		{
			get
			{
				if ((this.mCreateFilterViaFilterControlInCustomFilterControlBindingTabParams == null))
				{
					this.mCreateFilterViaFilterControlInCustomFilterControlBindingTabParams = new CreateFilterViaFilterControlInCustomFilterControlBindingTabParams();
				}
				return this.mCreateFilterViaFilterControlInCustomFilterControlBindingTabParams;
			}
		}
		public virtual CreateFilterViaFilterControlInPropertiesTabParams CreateFilterViaFilterControlInPropertiesTabParams
		{
			get
			{
				if ((this.mCreateFilterViaFilterControlInPropertiesTabParams == null))
				{
					this.mCreateFilterViaFilterControlInPropertiesTabParams = new CreateFilterViaFilterControlInPropertiesTabParams();
				}
				return this.mCreateFilterViaFilterControlInPropertiesTabParams;
			}
		}
		public virtual CreateFilterViaFilterDropdownListParams CreateFilterViaFilterDropdownListParams
		{
			get
			{
				if ((this.mCreateFilterViaFilterDropdownListParams == null))
				{
					this.mCreateFilterViaFilterDropdownListParams = new CreateFilterViaFilterDropdownListParams();
				}
				return this.mCreateFilterViaFilterDropdownListParams;
			}
		}
		public virtual CreateFilterViaFilterEditorParams CreateFilterViaFilterEditorParams
		{
			get
			{
				if ((this.mCreateFilterViaFilterEditorParams == null))
				{
					this.mCreateFilterViaFilterEditorParams = new CreateFilterViaFilterEditorParams();
				}
				return this.mCreateFilterViaFilterEditorParams;
			}
		}
		public virtual CreateFilterViaFindPanelParams CreateFilterViaFindPanelParams
		{
			get
			{
				if ((this.mCreateFilterViaFindPanelParams == null))
				{
					this.mCreateFilterViaFindPanelParams = new CreateFilterViaFindPanelParams();
				}
				return this.mCreateFilterViaFindPanelParams;
			}
		}
		public virtual CreateNewDocumentViaClickRibbonItemNewParams CreateNewDocumentViaClickRibbonItemNewParams
		{
			get
			{
				if ((this.mCreateNewDocumentViaClickRibbonItemNewParams == null))
				{
					this.mCreateNewDocumentViaClickRibbonItemNewParams = new CreateNewDocumentViaClickRibbonItemNewParams();
				}
				return this.mCreateNewDocumentViaClickRibbonItemNewParams;
			}
		}
		public virtual CreatePrintPreviewYearCalendarParams CreatePrintPreviewYearCalendarParams
		{
			get
			{
				if ((this.mCreatePrintPreviewYearCalendarParams == null))
				{
					this.mCreatePrintPreviewYearCalendarParams = new CreatePrintPreviewYearCalendarParams();
				}
				return this.mCreatePrintPreviewYearCalendarParams;
			}
		}
		public virtual CreateSimpleFilterViaClickColumnHeaderParams CreateSimpleFilterViaClickColumnHeaderParams
		{
			get
			{
				if ((this.mCreateSimpleFilterViaClickColumnHeaderParams == null))
				{
					this.mCreateSimpleFilterViaClickColumnHeaderParams = new CreateSimpleFilterViaClickColumnHeaderParams();
				}
				return this.mCreateSimpleFilterViaClickColumnHeaderParams;
			}
		}
		public virtual CreateWaterMarkAndCustomizeOptionsParams CreateWaterMarkAndCustomizeOptionsParams
		{
			get
			{
				if ((this.mCreateWaterMarkAndCustomizeOptionsParams == null))
				{
					this.mCreateWaterMarkAndCustomizeOptionsParams = new CreateWaterMarkAndCustomizeOptionsParams();
				}
				return this.mCreateWaterMarkAndCustomizeOptionsParams;
			}
		}
		public virtual CreateWaterMarkViaChoosingValueInDropDownListParams CreateWaterMarkViaChoosingValueInDropDownListParams
		{
			get
			{
				if ((this.mCreateWaterMarkViaChoosingValueInDropDownListParams == null))
				{
					this.mCreateWaterMarkViaChoosingValueInDropDownListParams = new CreateWaterMarkViaChoosingValueInDropDownListParams();
				}
				return this.mCreateWaterMarkViaChoosingValueInDropDownListParams;
			}
		}
		public virtual CustomizeCSVSpecificExportOptionsParams CustomizeCSVSpecificExportOptionsParams
		{
			get
			{
				if ((this.mCustomizeCSVSpecificExportOptionsParams == null))
				{
					this.mCustomizeCSVSpecificExportOptionsParams = new CustomizeCSVSpecificExportOptionsParams();
				}
				return this.mCustomizeCSVSpecificExportOptionsParams;
			}
		}
		public virtual CustomizeHTMLSpecificExportOptionsParams CustomizeHTMLSpecificExportOptionsParams
		{
			get
			{
				if ((this.mCustomizeHTMLSpecificExportOptionsParams == null))
				{
					this.mCustomizeHTMLSpecificExportOptionsParams = new CustomizeHTMLSpecificExportOptionsParams();
				}
				return this.mCustomizeHTMLSpecificExportOptionsParams;
			}
		}
		public virtual CustomizeImageSpecificExportOptionsParams CustomizeImageSpecificExportOptionsParams
		{
			get
			{
				if ((this.mCustomizeImageSpecificExportOptionsParams == null))
				{
					this.mCustomizeImageSpecificExportOptionsParams = new CustomizeImageSpecificExportOptionsParams();
				}
				return this.mCustomizeImageSpecificExportOptionsParams;
			}
		}
		public virtual CustomizeLinksInBarLinkContainerParams CustomizeLinksInBarLinkContainerParams
		{
			get
			{
				if ((this.mCustomizeLinksInBarLinkContainerParams == null))
				{
					this.mCustomizeLinksInBarLinkContainerParams = new CustomizeLinksInBarLinkContainerParams();
				}
				return this.mCustomizeLinksInBarLinkContainerParams;
			}
		}
		public virtual CustomizePDFPasswordSecurityOptionsParams CustomizePDFPasswordSecurityOptionsParams
		{
			get
			{
				if ((this.mCustomizePDFPasswordSecurityOptionsParams == null))
				{
					this.mCustomizePDFPasswordSecurityOptionsParams = new CustomizePDFPasswordSecurityOptionsParams();
				}
				return this.mCustomizePDFPasswordSecurityOptionsParams;
			}
		}
		public virtual CustomizePDFSpecificExportOptionsParams CustomizePDFSpecificExportOptionsParams
		{
			get
			{
				if ((this.mCustomizePDFSpecificExportOptionsParams == null))
				{
					this.mCustomizePDFSpecificExportOptionsParams = new CustomizePDFSpecificExportOptionsParams();
				}
				return this.mCustomizePDFSpecificExportOptionsParams;
			}
		}
		public virtual CustomizePrintSettingsViaRibbonApplicationPrintItemParams CustomizePrintSettingsViaRibbonApplicationPrintItemParams
		{
			get
			{
				if ((this.mCustomizePrintSettingsViaRibbonApplicationPrintItemParams == null))
				{
					this.mCustomizePrintSettingsViaRibbonApplicationPrintItemParams = new CustomizePrintSettingsViaRibbonApplicationPrintItemParams();
				}
				return this.mCustomizePrintSettingsViaRibbonApplicationPrintItemParams;
			}
		}
		public virtual CustomizeRTFSpecificExportOptionsParams CustomizeRTFSpecificExportOptionsParams
		{
			get
			{
				if ((this.mCustomizeRTFSpecificExportOptionsParams == null))
				{
					this.mCustomizeRTFSpecificExportOptionsParams = new CustomizeRTFSpecificExportOptionsParams();
				}
				return this.mCustomizeRTFSpecificExportOptionsParams;
			}
		}
		public virtual CustomizeXLSSpecificExportOptionsParams CustomizeXLSSpecificExportOptionsParams
		{
			get
			{
				if ((this.mCustomizeXLSSpecificExportOptionsParams == null))
				{
					this.mCustomizeXLSSpecificExportOptionsParams = new CustomizeXLSSpecificExportOptionsParams();
				}
				return this.mCustomizeXLSSpecificExportOptionsParams;
			}
		}
		public virtual DeleteConditionExpressionParams DeleteConditionExpressionParams
		{
			get
			{
				if ((this.mDeleteConditionExpressionParams == null))
				{
					this.mDeleteConditionExpressionParams = new DeleteConditionExpressionParams();
				}
				return this.mDeleteConditionExpressionParams;
			}
		}
		public virtual DisplayBarCommandViaCustomizationFormParams DisplayBarCommandViaCustomizationFormParams
		{
			get
			{
				if ((this.mDisplayBarCommandViaCustomizationFormParams == null))
				{
					this.mDisplayBarCommandViaCustomizationFormParams = new DisplayBarCommandViaCustomizationFormParams();
				}
				return this.mDisplayBarCommandViaCustomizationFormParams;
			}
		}
		public virtual DisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams DisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams
		{
			get
			{
				if ((this.mDisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams == null))
				{
					this.mDisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams = new DisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams();
				}
				return this.mDisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams;
			}
		}
		public virtual DisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams DisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams
		{
			get
			{
				if ((this.mDisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams == null))
				{
					this.mDisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams = new DisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams();
				}
				return this.mDisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams;
			}
		}
		public virtual DisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams DisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams
		{
			get
			{
				if ((this.mDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams == null))
				{
					this.mDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams = new DisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams();
				}
				return this.mDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams;
			}
		}
		public virtual DisplayHiddenFindPanelViaCtrlFShortcutParams DisplayHiddenFindPanelViaCtrlFShortcutParams
		{
			get
			{
				if ((this.mDisplayHiddenFindPanelViaCtrlFShortcutParams == null))
				{
					this.mDisplayHiddenFindPanelViaCtrlFShortcutParams = new DisplayHiddenFindPanelViaCtrlFShortcutParams();
				}
				return this.mDisplayHiddenFindPanelViaCtrlFShortcutParams;
			}
		}
		public virtual DisplayRibbonTabViaCustomizationFormItemParams DisplayRibbonTabViaCustomizationFormItemParams
		{
			get
			{
				if ((this.mDisplayRibbonTabViaCustomizationFormItemParams == null))
				{
					this.mDisplayRibbonTabViaCustomizationFormItemParams = new DisplayRibbonTabViaCustomizationFormItemParams();
				}
				return this.mDisplayRibbonTabViaCustomizationFormItemParams;
			}
		}
		public virtual DisplayToolbarViaCustomizationFormParams DisplayToolbarViaCustomizationFormParams
		{
			get
			{
				if ((this.mDisplayToolbarViaCustomizationFormParams == null))
				{
					this.mDisplayToolbarViaCustomizationFormParams = new DisplayToolbarViaCustomizationFormParams();
				}
				return this.mDisplayToolbarViaCustomizationFormParams;
			}
		}
		public virtual ExpandMasterRowViaCtrlPlusShortcutParams ExpandMasterRowViaCtrlPlusShortcutParams
		{
			get
			{
				if ((this.mExpandMasterRowViaCtrlPlusShortcutParams == null))
				{
					this.mExpandMasterRowViaCtrlPlusShortcutParams = new ExpandMasterRowViaCtrlPlusShortcutParams();
				}
				return this.mExpandMasterRowViaCtrlPlusShortcutParams;
			}
		}
		public virtual ExpandRibbonViaCtrlF1ShortcutParams ExpandRibbonViaCtrlF1ShortcutParams
		{
			get
			{
				if ((this.mExpandRibbonViaCtrlF1ShortcutParams == null))
				{
					this.mExpandRibbonViaCtrlF1ShortcutParams = new ExpandRibbonViaCtrlF1ShortcutParams();
				}
				return this.mExpandRibbonViaCtrlF1ShortcutParams;
			}
		}
		public virtual FindAndSelectionResultViaKeyboardParams FindAndSelectionResultViaKeyboardParams
		{
			get
			{
				if ((this.mFindAndSelectionResultViaKeyboardParams == null))
				{
					this.mFindAndSelectionResultViaKeyboardParams = new FindAndSelectionResultViaKeyboardParams();
				}
				return this.mFindAndSelectionResultViaKeyboardParams;
			}
		}
		public virtual FindAndSelectionResultViaKeyboardOnInPlaceTabParams FindAndSelectionResultViaKeyboardOnInPlaceTabParams
		{
			get
			{
				if ((this.mFindAndSelectionResultViaKeyboardOnInPlaceTabParams == null))
				{
					this.mFindAndSelectionResultViaKeyboardOnInPlaceTabParams = new FindAndSelectionResultViaKeyboardOnInPlaceTabParams();
				}
				return this.mFindAndSelectionResultViaKeyboardOnInPlaceTabParams;
			}
		}
		public virtual FindAndSelectionResultViaMouseParams FindAndSelectionResultViaMouseParams
		{
			get
			{
				if ((this.mFindAndSelectionResultViaMouseParams == null))
				{
					this.mFindAndSelectionResultViaMouseParams = new FindAndSelectionResultViaMouseParams();
				}
				return this.mFindAndSelectionResultViaMouseParams;
			}
		}
		public virtual FindAndSelectionResultViaMouseOnInPlaceTabParams FindAndSelectionResultViaMouseOnInPlaceTabParams
		{
			get
			{
				if ((this.mFindAndSelectionResultViaMouseOnInPlaceTabParams == null))
				{
					this.mFindAndSelectionResultViaMouseOnInPlaceTabParams = new FindAndSelectionResultViaMouseOnInPlaceTabParams();
				}
				return this.mFindAndSelectionResultViaMouseOnInPlaceTabParams;
			}
		}
		public virtual GroupDataAndChangeGroupOrderParams GroupDataAndChangeGroupOrderParams
		{
			get
			{
				if ((this.mGroupDataAndChangeGroupOrderParams == null))
				{
					this.mGroupDataAndChangeGroupOrderParams = new GroupDataAndChangeGroupOrderParams();
				}
				return this.mGroupDataAndChangeGroupOrderParams;
			}
		}
		public virtual GroupDataViaDraggingColumnHeaderParams GroupDataViaDraggingColumnHeaderParams
		{
			get
			{
				if ((this.mGroupDataViaDraggingColumnHeaderParams == null))
				{
					this.mGroupDataViaDraggingColumnHeaderParams = new GroupDataViaDraggingColumnHeaderParams();
				}
				return this.mGroupDataViaDraggingColumnHeaderParams;
			}
		}
		public virtual GroupMasterDetailDataParams GroupMasterDetailDataParams
		{
			get
			{
				if ((this.mGroupMasterDetailDataParams == null))
				{
					this.mGroupMasterDetailDataParams = new GroupMasterDetailDataParams();
				}
				return this.mGroupMasterDetailDataParams;
			}
		}
		public virtual GroupMasterDetailDataOnJoinedGroupPanelParams GroupMasterDetailDataOnJoinedGroupPanelParams
		{
			get
			{
				if ((this.mGroupMasterDetailDataOnJoinedGroupPanelParams == null))
				{
					this.mGroupMasterDetailDataOnJoinedGroupPanelParams = new GroupMasterDetailDataOnJoinedGroupPanelParams();
				}
				return this.mGroupMasterDetailDataOnJoinedGroupPanelParams;
			}
		}
		public virtual HideBandViaDraggingBandHeaderParams HideBandViaDraggingBandHeaderParams
		{
			get
			{
				if ((this.mHideBandViaDraggingBandHeaderParams == null))
				{
					this.mHideBandViaDraggingBandHeaderParams = new HideBandViaDraggingBandHeaderParams();
				}
				return this.mHideBandViaDraggingBandHeaderParams;
			}
		}
		public virtual HideBandViaDraggingBandHeaderToCustomizationFormParams HideBandViaDraggingBandHeaderToCustomizationFormParams
		{
			get
			{
				if ((this.mHideBandViaDraggingBandHeaderToCustomizationFormParams == null))
				{
					this.mHideBandViaDraggingBandHeaderToCustomizationFormParams = new HideBandViaDraggingBandHeaderToCustomizationFormParams();
				}
				return this.mHideBandViaDraggingBandHeaderToCustomizationFormParams;
			}
		}
		public virtual HideColumnViaDraggingColumnHeaderParams HideColumnViaDraggingColumnHeaderParams
		{
			get
			{
				if ((this.mHideColumnViaDraggingColumnHeaderParams == null))
				{
					this.mHideColumnViaDraggingColumnHeaderParams = new HideColumnViaDraggingColumnHeaderParams();
				}
				return this.mHideColumnViaDraggingColumnHeaderParams;
			}
		}
		public virtual HideColumnViaDraggingColumnHeaderOnCustomizationFormParams HideColumnViaDraggingColumnHeaderOnCustomizationFormParams
		{
			get
			{
				if ((this.mHideColumnViaDraggingColumnHeaderOnCustomizationFormParams == null))
				{
					this.mHideColumnViaDraggingColumnHeaderOnCustomizationFormParams = new HideColumnViaDraggingColumnHeaderOnCustomizationFormParams();
				}
				return this.mHideColumnViaDraggingColumnHeaderOnCustomizationFormParams;
			}
		}
		public virtual HideRibbonTabViaCustomizationFormParams HideRibbonTabViaCustomizationFormParams
		{
			get
			{
				if ((this.mHideRibbonTabViaCustomizationFormParams == null))
				{
					this.mHideRibbonTabViaCustomizationFormParams = new HideRibbonTabViaCustomizationFormParams();
				}
				return this.mHideRibbonTabViaCustomizationFormParams;
			}
		}
		public virtual HideToolbarViaCustomizationFormParams HideToolbarViaCustomizationFormParams
		{
			get
			{
				if ((this.mHideToolbarViaCustomizationFormParams == null))
				{
					this.mHideToolbarViaCustomizationFormParams = new HideToolbarViaCustomizationFormParams();
				}
				return this.mHideToolbarViaCustomizationFormParams;
			}
		}
		public virtual InvokeCollapsedRibbonCommandViaMouseParams InvokeCollapsedRibbonCommandViaMouseParams
		{
			get
			{
				if ((this.mInvokeCollapsedRibbonCommandViaMouseParams == null))
				{
					this.mInvokeCollapsedRibbonCommandViaMouseParams = new InvokeCollapsedRibbonCommandViaMouseParams();
				}
				return this.mInvokeCollapsedRibbonCommandViaMouseParams;
			}
		}
		public virtual InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams
		{
			get
			{
				if ((this.mInvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams == null))
				{
					this.mInvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams = new InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams();
				}
				return this.mInvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams;
			}
		}
		public virtual InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams
		{
			get
			{
				if ((this.mInvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams == null))
				{
					this.mInvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams = new InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams();
				}
				return this.mInvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams;
			}
		}
		public virtual InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams
		{
			get
			{
				if ((this.mInvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams == null))
				{
					this.mInvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams = new InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams();
				}
				return this.mInvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams;
			}
		}
		public virtual InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams
		{
			get
			{
				if ((this.mInvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams == null))
				{
					this.mInvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams = new InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams();
				}
				return this.mInvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams;
			}
		}
		public virtual InvokeRibbonPasteCommandViaShortcutParams InvokeRibbonPasteCommandViaShortcutParams
		{
			get
			{
				if ((this.mInvokeRibbonPasteCommandViaShortcutParams == null))
				{
					this.mInvokeRibbonPasteCommandViaShortcutParams = new InvokeRibbonPasteCommandViaShortcutParams();
				}
				return this.mInvokeRibbonPasteCommandViaShortcutParams;
			}
		}
		public virtual InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams
		{
			get
			{
				if ((this.mInvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams == null))
				{
					this.mInvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams = new InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams();
				}
				return this.mInvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams;
			}
		}
		public virtual InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams
		{
			get
			{
				if ((this.mInvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams == null))
				{
					this.mInvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams = new InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams();
				}
				return this.mInvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams;
			}
		}
		public virtual InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams
		{
			get
			{
				if ((this.mInvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams == null))
				{
					this.mInvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams = new InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams();
				}
				return this.mInvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams;
			}
		}
		public virtual MakeColumnNonFixedAndScrollParams MakeColumnNonFixedAndScrollParams
		{
			get
			{
				if ((this.mMakeColumnNonFixedAndScrollParams == null))
				{
					this.mMakeColumnNonFixedAndScrollParams = new MakeColumnNonFixedAndScrollParams();
				}
				return this.mMakeColumnNonFixedAndScrollParams;
			}
		}
		public virtual MakeFooterBrickFontSettingsParams MakeFooterBrickFontSettingsParams
		{
			get
			{
				if ((this.mMakeFooterBrickFontSettingsParams == null))
				{
					this.mMakeFooterBrickFontSettingsParams = new MakeFooterBrickFontSettingsParams();
				}
				return this.mMakeFooterBrickFontSettingsParams;
			}
		}
		public virtual MakePictureEditAutoHeightOptionSwitchOnParams MakePictureEditAutoHeightOptionSwitchOnParams
		{
			get
			{
				if ((this.mMakePictureEditAutoHeightOptionSwitchOnParams == null))
				{
					this.mMakePictureEditAutoHeightOptionSwitchOnParams = new MakePictureEditAutoHeightOptionSwitchOnParams();
				}
				return this.mMakePictureEditAutoHeightOptionSwitchOnParams;
			}
		}
		public virtual MinimizeRibbonViaCtrlF1ShortcutParams MinimizeRibbonViaCtrlF1ShortcutParams
		{
			get
			{
				if ((this.mMinimizeRibbonViaCtrlF1ShortcutParams == null))
				{
					this.mMinimizeRibbonViaCtrlF1ShortcutParams = new MinimizeRibbonViaCtrlF1ShortcutParams();
				}
				return this.mMinimizeRibbonViaCtrlF1ShortcutParams;
			}
		}
		public virtual MoveDockedBarToFormBottomParams MoveDockedBarToFormBottomParams
		{
			get
			{
				if ((this.mMoveDockedBarToFormBottomParams == null))
				{
					this.mMoveDockedBarToFormBottomParams = new MoveDockedBarToFormBottomParams();
				}
				return this.mMoveDockedBarToFormBottomParams;
			}
		}
		public virtual MoveDockedBarToNewPositionParams MoveDockedBarToNewPositionParams
		{
			get
			{
				if ((this.mMoveDockedBarToNewPositionParams == null))
				{
					this.mMoveDockedBarToNewPositionParams = new MoveDockedBarToNewPositionParams();
				}
				return this.mMoveDockedBarToNewPositionParams;
			}
		}
		public virtual MoveFocusToAnotherBarItemViaArrowKeysParams MoveFocusToAnotherBarItemViaArrowKeysParams
		{
			get
			{
				if ((this.mMoveFocusToAnotherBarItemViaArrowKeysParams == null))
				{
					this.mMoveFocusToAnotherBarItemViaArrowKeysParams = new MoveFocusToAnotherBarItemViaArrowKeysParams();
				}
				return this.mMoveFocusToAnotherBarItemViaArrowKeysParams;
			}
		}
		public virtual MoveFocusToAnotherBarViaCtrlTabShortcutParams MoveFocusToAnotherBarViaCtrlTabShortcutParams
		{
			get
			{
				if ((this.mMoveFocusToAnotherBarViaCtrlTabShortcutParams == null))
				{
					this.mMoveFocusToAnotherBarViaCtrlTabShortcutParams = new MoveFocusToAnotherBarViaCtrlTabShortcutParams();
				}
				return this.mMoveFocusToAnotherBarViaCtrlTabShortcutParams;
			}
		}
		public virtual MoveFocusToAnotherMainMenuItemViaArrowKeysParams MoveFocusToAnotherMainMenuItemViaArrowKeysParams
		{
			get
			{
				if ((this.mMoveFocusToAnotherMainMenuItemViaArrowKeysParams == null))
				{
					this.mMoveFocusToAnotherMainMenuItemViaArrowKeysParams = new MoveFocusToAnotherMainMenuItemViaArrowKeysParams();
				}
				return this.mMoveFocusToAnotherMainMenuItemViaArrowKeysParams;
			}
		}
		public virtual MoveFocusToBarCommandViaUnderscoredLetterParams MoveFocusToBarCommandViaUnderscoredLetterParams
		{
			get
			{
				if ((this.mMoveFocusToBarCommandViaUnderscoredLetterParams == null))
				{
					this.mMoveFocusToBarCommandViaUnderscoredLetterParams = new MoveFocusToBarCommandViaUnderscoredLetterParams();
				}
				return this.mMoveFocusToBarCommandViaUnderscoredLetterParams;
			}
		}
		public virtual MoveFocusToNextBarCommandViaTabKeyParams MoveFocusToNextBarCommandViaTabKeyParams
		{
			get
			{
				if ((this.mMoveFocusToNextBarCommandViaTabKeyParams == null))
				{
					this.mMoveFocusToNextBarCommandViaTabKeyParams = new MoveFocusToNextBarCommandViaTabKeyParams();
				}
				return this.mMoveFocusToNextBarCommandViaTabKeyParams;
			}
		}
		public virtual MoveFocusToNextMainMenuItemViaTabKeyParams MoveFocusToNextMainMenuItemViaTabKeyParams
		{
			get
			{
				if ((this.mMoveFocusToNextMainMenuItemViaTabKeyParams == null))
				{
					this.mMoveFocusToNextMainMenuItemViaTabKeyParams = new MoveFocusToNextMainMenuItemViaTabKeyParams();
				}
				return this.mMoveFocusToNextMainMenuItemViaTabKeyParams;
			}
		}
		public virtual MoveFocusToPreviousCommandViaShiftTabShortcutParams MoveFocusToPreviousCommandViaShiftTabShortcutParams
		{
			get
			{
				if ((this.mMoveFocusToPreviousCommandViaShiftTabShortcutParams == null))
				{
					this.mMoveFocusToPreviousCommandViaShiftTabShortcutParams = new MoveFocusToPreviousCommandViaShiftTabShortcutParams();
				}
				return this.mMoveFocusToPreviousCommandViaShiftTabShortcutParams;
			}
		}
		public virtual MoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams MoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams
		{
			get
			{
				if ((this.mMoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams == null))
				{
					this.mMoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams = new MoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams();
				}
				return this.mMoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams;
			}
		}
		public virtual MoveFocusToSubmenuViaRightArrowKeyParams MoveFocusToSubmenuViaRightArrowKeyParams
		{
			get
			{
				if ((this.mMoveFocusToSubmenuViaRightArrowKeyParams == null))
				{
					this.mMoveFocusToSubmenuViaRightArrowKeyParams = new MoveFocusToSubmenuViaRightArrowKeyParams();
				}
				return this.mMoveFocusToSubmenuViaRightArrowKeyParams;
			}
		}
		public virtual MoveNavBarOverflowPanelSplitterDownParams MoveNavBarOverflowPanelSplitterDownParams
		{
			get
			{
				if ((this.mMoveNavBarOverflowPanelSplitterDownParams == null))
				{
					this.mMoveNavBarOverflowPanelSplitterDownParams = new MoveNavBarOverflowPanelSplitterDownParams();
				}
				return this.mMoveNavBarOverflowPanelSplitterDownParams;
			}
		}
		public virtual MoveNavBarOverflowPanelSplitterUpParams MoveNavBarOverflowPanelSplitterUpParams
		{
			get
			{
				if ((this.mMoveNavBarOverflowPanelSplitterUpParams == null))
				{
					this.mMoveNavBarOverflowPanelSplitterUpParams = new MoveNavBarOverflowPanelSplitterUpParams();
				}
				return this.mMoveNavBarOverflowPanelSplitterUpParams;
			}
		}
		public virtual MultiExtendedSelectionInListBoxViaKeyboardParams MultiExtendedSelectionInListBoxViaKeyboardParams
		{
			get
			{
				if ((this.mMultiExtendedSelectionInListBoxViaKeyboardParams == null))
				{
					this.mMultiExtendedSelectionInListBoxViaKeyboardParams = new MultiExtendedSelectionInListBoxViaKeyboardParams();
				}
				return this.mMultiExtendedSelectionInListBoxViaKeyboardParams;
			}
		}
		public virtual MultiSimpleSelectionInListBoxViaKeyboardParams MultiSimpleSelectionInListBoxViaKeyboardParams
		{
			get
			{
				if ((this.mMultiSimpleSelectionInListBoxViaKeyboardParams == null))
				{
					this.mMultiSimpleSelectionInListBoxViaKeyboardParams = new MultiSimpleSelectionInListBoxViaKeyboardParams();
				}
				return this.mMultiSimpleSelectionInListBoxViaKeyboardParams;
			}
		}
		public virtual MultiSimpleSelectionInListBoxViaMouseParams MultiSimpleSelectionInListBoxViaMouseParams
		{
			get
			{
				if ((this.mMultiSimpleSelectionInListBoxViaMouseParams == null))
				{
					this.mMultiSimpleSelectionInListBoxViaMouseParams = new MultiSimpleSelectionInListBoxViaMouseParams();
				}
				return this.mMultiSimpleSelectionInListBoxViaMouseParams;
			}
		}
		public virtual PressSimplePadMenuShortcutParams PressSimplePadMenuShortcutParams
		{
			get
			{
				if ((this.mPressSimplePadMenuShortcutParams == null))
				{
					this.mPressSimplePadMenuShortcutParams = new PressSimplePadMenuShortcutParams();
				}
				return this.mPressSimplePadMenuShortcutParams;
			}
		}
		public virtual PressUnderscoredLetterForExpandMainMenuDropdownListParams PressUnderscoredLetterForExpandMainMenuDropdownListParams
		{
			get
			{
				if ((this.mPressUnderscoredLetterForExpandMainMenuDropdownListParams == null))
				{
					this.mPressUnderscoredLetterForExpandMainMenuDropdownListParams = new PressUnderscoredLetterForExpandMainMenuDropdownListParams();
				}
				return this.mPressUnderscoredLetterForExpandMainMenuDropdownListParams;
			}
		}
		public virtual RenameRibbonCategoryViaCustomizationFormParams RenameRibbonCategoryViaCustomizationFormParams
		{
			get
			{
				if ((this.mRenameRibbonCategoryViaCustomizationFormParams == null))
				{
					this.mRenameRibbonCategoryViaCustomizationFormParams = new RenameRibbonCategoryViaCustomizationFormParams();
				}
				return this.mRenameRibbonCategoryViaCustomizationFormParams;
			}
		}
		public virtual RenameRibbonGroupViaCustomizationFormParams RenameRibbonGroupViaCustomizationFormParams
		{
			get
			{
				if ((this.mRenameRibbonGroupViaCustomizationFormParams == null))
				{
					this.mRenameRibbonGroupViaCustomizationFormParams = new RenameRibbonGroupViaCustomizationFormParams();
				}
				return this.mRenameRibbonGroupViaCustomizationFormParams;
			}
		}
		public virtual RenameRibbonTabViaCustomizationFormParams RenameRibbonTabViaCustomizationFormParams
		{
			get
			{
				if ((this.mRenameRibbonTabViaCustomizationFormParams == null))
				{
					this.mRenameRibbonTabViaCustomizationFormParams = new RenameRibbonTabViaCustomizationFormParams();
				}
				return this.mRenameRibbonTabViaCustomizationFormParams;
			}
		}
		public virtual ReorderBandsViaDraggingOnAdvancedBandedGridViewParams ReorderBandsViaDraggingOnAdvancedBandedGridViewParams
		{
			get
			{
				if ((this.mReorderBandsViaDraggingOnAdvancedBandedGridViewParams == null))
				{
					this.mReorderBandsViaDraggingOnAdvancedBandedGridViewParams = new ReorderBandsViaDraggingOnAdvancedBandedGridViewParams();
				}
				return this.mReorderBandsViaDraggingOnAdvancedBandedGridViewParams;
			}
		}
		public virtual ReorderBandsViaDraggingOnBandedGridViewParams ReorderBandsViaDraggingOnBandedGridViewParams
		{
			get
			{
				if ((this.mReorderBandsViaDraggingOnBandedGridViewParams == null))
				{
					this.mReorderBandsViaDraggingOnBandedGridViewParams = new ReorderBandsViaDraggingOnBandedGridViewParams();
				}
				return this.mReorderBandsViaDraggingOnBandedGridViewParams;
			}
		}
		public virtual ReorderColumnsViaDraggingParams ReorderColumnsViaDraggingParams
		{
			get
			{
				if ((this.mReorderColumnsViaDraggingParams == null))
				{
					this.mReorderColumnsViaDraggingParams = new ReorderColumnsViaDraggingParams();
				}
				return this.mReorderColumnsViaDraggingParams;
			}
		}
		public virtual ReplaceInRibbonRichEditViaClickRibbonItemParams ReplaceInRibbonRichEditViaClickRibbonItemParams
		{
			get
			{
				if ((this.mReplaceInRibbonRichEditViaClickRibbonItemParams == null))
				{
					this.mReplaceInRibbonRichEditViaClickRibbonItemParams = new ReplaceInRibbonRichEditViaClickRibbonItemParams();
				}
				return this.mReplaceInRibbonRichEditViaClickRibbonItemParams;
			}
		}
		public virtual ReplaceInRibbonRichEditViaCtrlHShortcutParams ReplaceInRibbonRichEditViaCtrlHShortcutParams
		{
			get
			{
				if ((this.mReplaceInRibbonRichEditViaCtrlHShortcutParams == null))
				{
					this.mReplaceInRibbonRichEditViaCtrlHShortcutParams = new ReplaceInRibbonRichEditViaCtrlHShortcutParams();
				}
				return this.mReplaceInRibbonRichEditViaCtrlHShortcutParams;
			}
		}
		public virtual ResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams ResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams
		{
			get
			{
				if ((this.mResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams == null))
				{
					this.mResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams = new ResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams();
				}
				return this.mResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams;
			}
		}
		public virtual ResizeBandViaDraggingRightEdgeOnBandedGridViewParams ResizeBandViaDraggingRightEdgeOnBandedGridViewParams
		{
			get
			{
				if ((this.mResizeBandViaDraggingRightEdgeOnBandedGridViewParams == null))
				{
					this.mResizeBandViaDraggingRightEdgeOnBandedGridViewParams = new ResizeBandViaDraggingRightEdgeOnBandedGridViewParams();
				}
				return this.mResizeBandViaDraggingRightEdgeOnBandedGridViewParams;
			}
		}
		public virtual ResizeColumnViaDraggingRightEdgeParams ResizeColumnViaDraggingRightEdgeParams
		{
			get
			{
				if ((this.mResizeColumnViaDraggingRightEdgeParams == null))
				{
					this.mResizeColumnViaDraggingRightEdgeParams = new ResizeColumnViaDraggingRightEdgeParams();
				}
				return this.mResizeColumnViaDraggingRightEdgeParams;
			}
		}
		public virtual ResizeFixedBandParams ResizeFixedBandParams
		{
			get
			{
				if ((this.mResizeFixedBandParams == null))
				{
					this.mResizeFixedBandParams = new ResizeFixedBandParams();
				}
				return this.mResizeFixedBandParams;
			}
		}
		public virtual RestoreDefaultToolbarLayoutViaCustomizationFormParams RestoreDefaultToolbarLayoutViaCustomizationFormParams
		{
			get
			{
				if ((this.mRestoreDefaultToolbarLayoutViaCustomizationFormParams == null))
				{
					this.mRestoreDefaultToolbarLayoutViaCustomizationFormParams = new RestoreDefaultToolbarLayoutViaCustomizationFormParams();
				}
				return this.mRestoreDefaultToolbarLayoutViaCustomizationFormParams;
			}
		}
		public virtual ScrollingInFixedBandsAndGroupingTabViaKeyboardParams ScrollingInFixedBandsAndGroupingTabViaKeyboardParams
		{
			get
			{
				if ((this.mScrollingInFixedBandsAndGroupingTabViaKeyboardParams == null))
				{
					this.mScrollingInFixedBandsAndGroupingTabViaKeyboardParams = new ScrollingInFixedBandsAndGroupingTabViaKeyboardParams();
				}
				return this.mScrollingInFixedBandsAndGroupingTabViaKeyboardParams;
			}
		}
		public virtual ScrollingInFixedBandsAndGroupingTabViaMouseParams ScrollingInFixedBandsAndGroupingTabViaMouseParams
		{
			get
			{
				if ((this.mScrollingInFixedBandsAndGroupingTabViaMouseParams == null))
				{
					this.mScrollingInFixedBandsAndGroupingTabViaMouseParams = new ScrollingInFixedBandsAndGroupingTabViaMouseParams();
				}
				return this.mScrollingInFixedBandsAndGroupingTabViaMouseParams;
			}
		}
		public virtual ScrollingInSimpleFixedBandsTabViaKeyboardParams ScrollingInSimpleFixedBandsTabViaKeyboardParams
		{
			get
			{
				if ((this.mScrollingInSimpleFixedBandsTabViaKeyboardParams == null))
				{
					this.mScrollingInSimpleFixedBandsTabViaKeyboardParams = new ScrollingInSimpleFixedBandsTabViaKeyboardParams();
				}
				return this.mScrollingInSimpleFixedBandsTabViaKeyboardParams;
			}
		}
		public virtual ScrollingInSimpleFixedBandsTabViaMouseParams ScrollingInSimpleFixedBandsTabViaMouseParams
		{
			get
			{
				if ((this.mScrollingInSimpleFixedBandsTabViaMouseParams == null))
				{
					this.mScrollingInSimpleFixedBandsTabViaMouseParams = new ScrollingInSimpleFixedBandsTabViaMouseParams();
				}
				return this.mScrollingInSimpleFixedBandsTabViaMouseParams;
			}
		}
		public virtual ScrollPrintPreviewViaHScrollBarParams ScrollPrintPreviewViaHScrollBarParams
		{
			get
			{
				if ((this.mScrollPrintPreviewViaHScrollBarParams == null))
				{
					this.mScrollPrintPreviewViaHScrollBarParams = new ScrollPrintPreviewViaHScrollBarParams();
				}
				return this.mScrollPrintPreviewViaHScrollBarParams;
			}
		}
		public virtual ScrollPrintPreviewViaVScrollBarParams ScrollPrintPreviewViaVScrollBarParams
		{
			get
			{
				if ((this.mScrollPrintPreviewViaVScrollBarParams == null))
				{
					this.mScrollPrintPreviewViaVScrollBarParams = new ScrollPrintPreviewViaVScrollBarParams();
				}
				return this.mScrollPrintPreviewViaVScrollBarParams;
			}
		}
		public virtual ScrollTableLayoutToEndParams ScrollTableLayoutToEndParams
		{
			get
			{
				if ((this.mScrollTableLayoutToEndParams == null))
				{
					this.mScrollTableLayoutToEndParams = new ScrollTableLayoutToEndParams();
				}
				return this.mScrollTableLayoutToEndParams;
			}
		}
		public virtual ScrollTableLayoutToTopParams ScrollTableLayoutToTopParams
		{
			get
			{
				if ((this.mScrollTableLayoutToTopParams == null))
				{
					this.mScrollTableLayoutToTopParams = new ScrollTableLayoutToTopParams();
				}
				return this.mScrollTableLayoutToTopParams;
			}
		}
		public virtual SelectAllCellsParams SelectAllCellsParams
		{
			get
			{
				if ((this.mSelectAllCellsParams == null))
				{
					this.mSelectAllCellsParams = new SelectAllCellsParams();
				}
				return this.mSelectAllCellsParams;
			}
		}
		public virtual SelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams SelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams
		{
			get
			{
				if ((this.mSelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams == null))
				{
					this.mSelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams = new SelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams();
				}
				return this.mSelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams;
			}
		}
		public virtual SelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams SelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams
		{
			get
			{
				if ((this.mSelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams == null))
				{
					this.mSelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams = new SelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams();
				}
				return this.mSelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams;
			}
		}
		public virtual SelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams SelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams
		{
			get
			{
				if ((this.mSelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams == null))
				{
					this.mSelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams = new SelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams();
				}
				return this.mSelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams;
			}
		}
		public virtual SelectCheckedListBoxValuesViaKeyboardParams SelectCheckedListBoxValuesViaKeyboardParams
		{
			get
			{
				if ((this.mSelectCheckedListBoxValuesViaKeyboardParams == null))
				{
					this.mSelectCheckedListBoxValuesViaKeyboardParams = new SelectCheckedListBoxValuesViaKeyboardParams();
				}
				return this.mSelectCheckedListBoxValuesViaKeyboardParams;
			}
		}
		public virtual SelectCheckedListBoxValuesViaMouseParams SelectCheckedListBoxValuesViaMouseParams
		{
			get
			{
				if ((this.mSelectCheckedListBoxValuesViaMouseParams == null))
				{
					this.mSelectCheckedListBoxValuesViaMouseParams = new SelectCheckedListBoxValuesViaMouseParams();
				}
				return this.mSelectCheckedListBoxValuesViaMouseParams;
			}
		}
		public virtual SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams
		{
			get
			{
				if ((this.mSelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams == null))
				{
					this.mSelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams = new SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams();
				}
				return this.mSelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams;
			}
		}
		public virtual SelectFromMRUEditDropDownListViaKeyboardParams SelectFromMRUEditDropDownListViaKeyboardParams
		{
			get
			{
				if ((this.mSelectFromMRUEditDropDownListViaKeyboardParams == null))
				{
					this.mSelectFromMRUEditDropDownListViaKeyboardParams = new SelectFromMRUEditDropDownListViaKeyboardParams();
				}
				return this.mSelectFromMRUEditDropDownListViaKeyboardParams;
			}
		}
		public virtual SelectFromMRUEditDropDownListViaMouseParams SelectFromMRUEditDropDownListViaMouseParams
		{
			get
			{
				if ((this.mSelectFromMRUEditDropDownListViaMouseParams == null))
				{
					this.mSelectFromMRUEditDropDownListViaMouseParams = new SelectFromMRUEditDropDownListViaMouseParams();
				}
				return this.mSelectFromMRUEditDropDownListViaMouseParams;
			}
		}
		public virtual SelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams SelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams
		{
			get
			{
				if ((this.mSelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams == null))
				{
					this.mSelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams = new SelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams();
				}
				return this.mSelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams;
			}
		}
		public virtual SelectListBoxValueViaKeyboardParams SelectListBoxValueViaKeyboardParams
		{
			get
			{
				if ((this.mSelectListBoxValueViaKeyboardParams == null))
				{
					this.mSelectListBoxValueViaKeyboardParams = new SelectListBoxValueViaKeyboardParams();
				}
				return this.mSelectListBoxValueViaKeyboardParams;
			}
		}
		public virtual SelectListBoxValueViaMouseParams SelectListBoxValueViaMouseParams
		{
			get
			{
				if ((this.mSelectListBoxValueViaMouseParams == null))
				{
					this.mSelectListBoxValueViaMouseParams = new SelectListBoxValueViaMouseParams();
				}
				return this.mSelectListBoxValueViaMouseParams;
			}
		}
		public virtual SelectRadioItemViaKeyboardParams SelectRadioItemViaKeyboardParams
		{
			get
			{
				if ((this.mSelectRadioItemViaKeyboardParams == null))
				{
					this.mSelectRadioItemViaKeyboardParams = new SelectRadioItemViaKeyboardParams();
				}
				return this.mSelectRadioItemViaKeyboardParams;
			}
		}
		public virtual SelectRadioItemViaMouseParams SelectRadioItemViaMouseParams
		{
			get
			{
				if ((this.mSelectRadioItemViaMouseParams == null))
				{
					this.mSelectRadioItemViaMouseParams = new SelectRadioItemViaMouseParams();
				}
				return this.mSelectRadioItemViaMouseParams;
			}
		}
		public virtual SelectRadioItemViaMouseWheelScrollParams SelectRadioItemViaMouseWheelScrollParams
		{
			get
			{
				if ((this.mSelectRadioItemViaMouseWheelScrollParams == null))
				{
					this.mSelectRadioItemViaMouseWheelScrollParams = new SelectRadioItemViaMouseWheelScrollParams();
				}
				return this.mSelectRadioItemViaMouseWheelScrollParams;
			}
		}
		public virtual SelectTextInMemoEditViaKeyboardParams SelectTextInMemoEditViaKeyboardParams
		{
			get
			{
				if ((this.mSelectTextInMemoEditViaKeyboardParams == null))
				{
					this.mSelectTextInMemoEditViaKeyboardParams = new SelectTextInMemoEditViaKeyboardParams();
				}
				return this.mSelectTextInMemoEditViaKeyboardParams;
			}
		}
		public virtual SelectTextInMemoEditViaMouseParams SelectTextInMemoEditViaMouseParams
		{
			get
			{
				if ((this.mSelectTextInMemoEditViaMouseParams == null))
				{
					this.mSelectTextInMemoEditViaMouseParams = new SelectTextInMemoEditViaMouseParams();
				}
				return this.mSelectTextInMemoEditViaMouseParams;
			}
		}
		public virtual SelectTextInTextEditViaKeyboardParams SelectTextInTextEditViaKeyboardParams
		{
			get
			{
				if ((this.mSelectTextInTextEditViaKeyboardParams == null))
				{
					this.mSelectTextInTextEditViaKeyboardParams = new SelectTextInTextEditViaKeyboardParams();
				}
				return this.mSelectTextInTextEditViaKeyboardParams;
			}
		}
		public virtual SelectTextInTextEditViaMouseParams SelectTextInTextEditViaMouseParams
		{
			get
			{
				if ((this.mSelectTextInTextEditViaMouseParams == null))
				{
					this.mSelectTextInTextEditViaMouseParams = new SelectTextInTextEditViaMouseParams();
				}
				return this.mSelectTextInTextEditViaMouseParams;
			}
		}
		public virtual SortingDataByPriceAverageAscendingParams SortingDataByPriceAverageAscendingParams
		{
			get
			{
				if ((this.mSortingDataByPriceAverageAscendingParams == null))
				{
					this.mSortingDataByPriceAverageAscendingParams = new SortingDataByPriceAverageAscendingParams();
				}
				return this.mSortingDataByPriceAverageAscendingParams;
			}
		}
		public virtual SwitchDropDownControlToPopupControlContrainerParams SwitchDropDownControlToPopupControlContrainerParams
		{
			get
			{
				if ((this.mSwitchDropDownControlToPopupControlContrainerParams == null))
				{
					this.mSwitchDropDownControlToPopupControlContrainerParams = new SwitchDropDownControlToPopupControlContrainerParams();
				}
				return this.mSwitchDropDownControlToPopupControlContrainerParams;
			}
		}
		public virtual SwitchFindModeToFindClickParams SwitchFindModeToFindClickParams
		{
			get
			{
				if ((this.mSwitchFindModeToFindClickParams == null))
				{
					this.mSwitchFindModeToFindClickParams = new SwitchFindModeToFindClickParams();
				}
				return this.mSwitchFindModeToFindClickParams;
			}
		}
		public virtual SwitchFocusToMainMenuParams SwitchFocusToMainMenuParams
		{
			get
			{
				if ((this.mSwitchFocusToMainMenuParams == null))
				{
					this.mSwitchFocusToMainMenuParams = new SwitchFocusToMainMenuParams();
				}
				return this.mSwitchFocusToMainMenuParams;
			}
		}
		public virtual SwitchGroupingModeToCustomIntervalParams SwitchGroupingModeToCustomIntervalParams
		{
			get
			{
				if ((this.mSwitchGroupingModeToCustomIntervalParams == null))
				{
					this.mSwitchGroupingModeToCustomIntervalParams = new SwitchGroupingModeToCustomIntervalParams();
				}
				return this.mSwitchGroupingModeToCustomIntervalParams;
			}
		}
		public virtual SwitchGroupingModeToDateMonthParams SwitchGroupingModeToDateMonthParams
		{
			get
			{
				if ((this.mSwitchGroupingModeToDateMonthParams == null))
				{
					this.mSwitchGroupingModeToDateMonthParams = new SwitchGroupingModeToDateMonthParams();
				}
				return this.mSwitchGroupingModeToDateMonthParams;
			}
		}
		public virtual SwitchGroupingModeToDateRangeParams SwitchGroupingModeToDateRangeParams
		{
			get
			{
				if ((this.mSwitchGroupingModeToDateRangeParams == null))
				{
					this.mSwitchGroupingModeToDateRangeParams = new SwitchGroupingModeToDateRangeParams();
				}
				return this.mSwitchGroupingModeToDateRangeParams;
			}
		}
		public virtual SwitchGroupingModeToDateYearParams SwitchGroupingModeToDateYearParams
		{
			get
			{
				if ((this.mSwitchGroupingModeToDateYearParams == null))
				{
					this.mSwitchGroupingModeToDateYearParams = new SwitchGroupingModeToDateYearParams();
				}
				return this.mSwitchGroupingModeToDateYearParams;
			}
		}
		public virtual SwitchGroupingModeToGroupByCategoryParams SwitchGroupingModeToGroupByCategoryParams
		{
			get
			{
				if ((this.mSwitchGroupingModeToGroupByCategoryParams == null))
				{
					this.mSwitchGroupingModeToGroupByCategoryParams = new SwitchGroupingModeToGroupByCategoryParams();
				}
				return this.mSwitchGroupingModeToGroupByCategoryParams;
			}
		}
		public virtual SwitchMultiSelectModeToRowSelectParams SwitchMultiSelectModeToRowSelectParams
		{
			get
			{
				if ((this.mSwitchMultiSelectModeToRowSelectParams == null))
				{
					this.mSwitchMultiSelectModeToRowSelectParams = new SwitchMultiSelectModeToRowSelectParams();
				}
				return this.mSwitchMultiSelectModeToRowSelectParams;
			}
		}
		public virtual SwitchOffAutoRowHeightOptionParams SwitchOffAutoRowHeightOptionParams
		{
			get
			{
				if ((this.mSwitchOffAutoRowHeightOptionParams == null))
				{
					this.mSwitchOffAutoRowHeightOptionParams = new SwitchOffAutoRowHeightOptionParams();
				}
				return this.mSwitchOffAutoRowHeightOptionParams;
			}
		}
		public virtual SwitchOnDisplaySummaryOptionParams SwitchOnDisplaySummaryOptionParams
		{
			get
			{
				if ((this.mSwitchOnDisplaySummaryOptionParams == null))
				{
					this.mSwitchOnDisplaySummaryOptionParams = new SwitchOnDisplaySummaryOptionParams();
				}
				return this.mSwitchOnDisplaySummaryOptionParams;
			}
		}
		public virtual SwitchToBandedGridViewParams SwitchToBandedGridViewParams
		{
			get
			{
				if ((this.mSwitchToBandedGridViewParams == null))
				{
					this.mSwitchToBandedGridViewParams = new SwitchToBandedGridViewParams();
				}
				return this.mSwitchToBandedGridViewParams;
			}
		}
		public virtual SwitchToBarLinkContainerItemDemoModuleParams SwitchToBarLinkContainerItemDemoModuleParams
		{
			get
			{
				if ((this.mSwitchToBarLinkContainerItemDemoModuleParams == null))
				{
					this.mSwitchToBarLinkContainerItemDemoModuleParams = new SwitchToBarLinkContainerItemDemoModuleParams();
				}
				return this.mSwitchToBarLinkContainerItemDemoModuleParams;
			}
		}
		public virtual SwitchToCheckHeaderButtonTypeParams SwitchToCheckHeaderButtonTypeParams
		{
			get
			{
				if ((this.mSwitchToCheckHeaderButtonTypeParams == null))
				{
					this.mSwitchToCheckHeaderButtonTypeParams = new SwitchToCheckHeaderButtonTypeParams();
				}
				return this.mSwitchToCheckHeaderButtonTypeParams;
			}
		}
		public virtual SwitchToEditorItemsDemoModuleParams SwitchToEditorItemsDemoModuleParams
		{
			get
			{
				if ((this.mSwitchToEditorItemsDemoModuleParams == null))
				{
					this.mSwitchToEditorItemsDemoModuleParams = new SwitchToEditorItemsDemoModuleParams();
				}
				return this.mSwitchToEditorItemsDemoModuleParams;
			}
		}
		public virtual SwitchToGlyphsHeaderButtonTypeParams SwitchToGlyphsHeaderButtonTypeParams
		{
			get
			{
				if ((this.mSwitchToGlyphsHeaderButtonTypeParams == null))
				{
					this.mSwitchToGlyphsHeaderButtonTypeParams = new SwitchToGlyphsHeaderButtonTypeParams();
				}
				return this.mSwitchToGlyphsHeaderButtonTypeParams;
			}
		}
		public virtual SwitchToGridViewParams SwitchToGridViewParams
		{
			get
			{
				if ((this.mSwitchToGridViewParams == null))
				{
					this.mSwitchToGridViewParams = new SwitchToGridViewParams();
				}
				return this.mSwitchToGridViewParams;
			}
		}
		public virtual SwitchToImageHeaderButtonTypeParams SwitchToImageHeaderButtonTypeParams
		{
			get
			{
				if ((this.mSwitchToImageHeaderButtonTypeParams == null))
				{
					this.mSwitchToImageHeaderButtonTypeParams = new SwitchToImageHeaderButtonTypeParams();
				}
				return this.mSwitchToImageHeaderButtonTypeParams;
			}
		}
		public virtual SwitchToJoinedGroupPanelParams SwitchToJoinedGroupPanelParams
		{
			get
			{
				if ((this.mSwitchToJoinedGroupPanelParams == null))
				{
					this.mSwitchToJoinedGroupPanelParams = new SwitchToJoinedGroupPanelParams();
				}
				return this.mSwitchToJoinedGroupPanelParams;
			}
		}
		public virtual SwitchToMultiExtendedSelectionModeParams SwitchToMultiExtendedSelectionModeParams
		{
			get
			{
				if ((this.mSwitchToMultiExtendedSelectionModeParams == null))
				{
					this.mSwitchToMultiExtendedSelectionModeParams = new SwitchToMultiExtendedSelectionModeParams();
				}
				return this.mSwitchToMultiExtendedSelectionModeParams;
			}
		}
		public virtual SwitchToMultiSimpleSelectionModeParams SwitchToMultiSimpleSelectionModeParams
		{
			get
			{
				if ((this.mSwitchToMultiSimpleSelectionModeParams == null))
				{
					this.mSwitchToMultiSimpleSelectionModeParams = new SwitchToMultiSimpleSelectionModeParams();
				}
				return this.mSwitchToMultiSimpleSelectionModeParams;
			}
		}
		public virtual SwitchToStandaloneBarDockControlDemoModuleParams SwitchToStandaloneBarDockControlDemoModuleParams
		{
			get
			{
				if ((this.mSwitchToStandaloneBarDockControlDemoModuleParams == null))
				{
					this.mSwitchToStandaloneBarDockControlDemoModuleParams = new SwitchToStandaloneBarDockControlDemoModuleParams();
				}
				return this.mSwitchToStandaloneBarDockControlDemoModuleParams;
			}
		}
		public virtual TryClickNewRightFixedColumnParams TryClickNewRightFixedColumnParams
		{
			get
			{
				if ((this.mTryClickNewRightFixedColumnParams == null))
				{
					this.mTryClickNewRightFixedColumnParams = new TryClickNewRightFixedColumnParams();
				}
				return this.mTryClickNewRightFixedColumnParams;
			}
		}
		public virtual TypeInMemoEditParams TypeInMemoEditParams
		{
			get
			{
				if ((this.mTypeInMemoEditParams == null))
				{
					this.mTypeInMemoEditParams = new TypeInMemoEditParams();
				}
				return this.mTypeInMemoEditParams;
			}
		}
		public virtual TypeInMRUEditParams TypeInMRUEditParams
		{
			get
			{
				if ((this.mTypeInMRUEditParams == null))
				{
					this.mTypeInMRUEditParams = new TypeInMRUEditParams();
				}
				return this.mTypeInMRUEditParams;
			}
		}
		public virtual TypeInNewRibbonRichTextBoxParams TypeInNewRibbonRichTextBoxParams
		{
			get
			{
				if ((this.mTypeInNewRibbonRichTextBoxParams == null))
				{
					this.mTypeInNewRibbonRichTextBoxParams = new TypeInNewRibbonRichTextBoxParams();
				}
				return this.mTypeInNewRibbonRichTextBoxParams;
			}
		}
		public virtual TypeInRecentDocumentRichTextBoxParams TypeInRecentDocumentRichTextBoxParams
		{
			get
			{
				if ((this.mTypeInRecentDocumentRichTextBoxParams == null))
				{
					this.mTypeInRecentDocumentRichTextBoxParams = new TypeInRecentDocumentRichTextBoxParams();
				}
				return this.mTypeInRecentDocumentRichTextBoxParams;
			}
		}
		public virtual TypeInRibbonRichTextBoxParams TypeInRibbonRichTextBoxParams
		{
			get
			{
				if ((this.mTypeInRibbonRichTextBoxParams == null))
				{
					this.mTypeInRibbonRichTextBoxParams = new TypeInRibbonRichTextBoxParams();
				}
				return this.mTypeInRibbonRichTextBoxParams;
			}
		}
		public virtual TypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams TypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams
		{
			get
			{
				if ((this.mTypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams == null))
				{
					this.mTypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams = new TypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams();
				}
				return this.mTypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams;
			}
		}
		public virtual TypeInSimplePadDemoParams TypeInSimplePadDemoParams
		{
			get
			{
				if ((this.mTypeInSimplePadDemoParams == null))
				{
					this.mTypeInSimplePadDemoParams = new TypeInSimplePadDemoParams();
				}
				return this.mTypeInSimplePadDemoParams;
			}
		}
		public virtual TypeInTextEditParams TypeInTextEditParams
		{
			get
			{
				if ((this.mTypeInTextEditParams == null))
				{
					this.mTypeInTextEditParams = new TypeInTextEditParams();
				}
				return this.mTypeInTextEditParams;
			}
		}
		public virtual TypingTextInCellParams TypingTextInCellParams
		{
			get
			{
				if ((this.mTypingTextInCellParams == null))
				{
					this.mTypingTextInCellParams = new TypingTextInCellParams();
				}
				return this.mTypingTextInCellParams;
			}
		}
		public virtual UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams
		{
			get
			{
				if ((this.mUndoMultiExtendedSelectionListBoxValuesViaKeyboardParams == null))
				{
					this.mUndoMultiExtendedSelectionListBoxValuesViaKeyboardParams = new UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams();
				}
				return this.mUndoMultiExtendedSelectionListBoxValuesViaKeyboardParams;
			}
		}
		public virtual UndoMultiExtendedSelectionListBoxValuesViaMouseParams UndoMultiExtendedSelectionListBoxValuesViaMouseParams
		{
			get
			{
				if ((this.mUndoMultiExtendedSelectionListBoxValuesViaMouseParams == null))
				{
					this.mUndoMultiExtendedSelectionListBoxValuesViaMouseParams = new UndoMultiExtendedSelectionListBoxValuesViaMouseParams();
				}
				return this.mUndoMultiExtendedSelectionListBoxValuesViaMouseParams;
			}
		}
		public virtual UndoMultiSimpleSelectionListBoxValuesViaKeyboardParams UndoMultiSimpleSelectionListBoxValuesViaKeyboardParams
		{
			get
			{
				if ((this.mUndoMultiSimpleSelectionListBoxValuesViaKeyboardParams == null))
				{
					this.mUndoMultiSimpleSelectionListBoxValuesViaKeyboardParams = new UndoMultiSimpleSelectionListBoxValuesViaKeyboardParams();
				}
				return this.mUndoMultiSimpleSelectionListBoxValuesViaKeyboardParams;
			}
		}
		public virtual UndoSelectionListBoxValuesViaMouseParams UndoSelectionListBoxValuesViaMouseParams
		{
			get
			{
				if ((this.mUndoSelectionListBoxValuesViaMouseParams == null))
				{
					this.mUndoSelectionListBoxValuesViaMouseParams = new UndoSelectionListBoxValuesViaMouseParams();
				}
				return this.mUndoSelectionListBoxValuesViaMouseParams;
			}
		}
		public virtual UngroupDataViaDraggingColumnHeaderParams UngroupDataViaDraggingColumnHeaderParams
		{
			get
			{
				if ((this.mUngroupDataViaDraggingColumnHeaderParams == null))
				{
					this.mUngroupDataViaDraggingColumnHeaderParams = new UngroupDataViaDraggingColumnHeaderParams();
				}
				return this.mUngroupDataViaDraggingColumnHeaderParams;
			}
		}
		public virtual UseRibbonGroupCaptionButtonForCopyPasteParams UseRibbonGroupCaptionButtonForCopyPasteParams
		{
			get
			{
				if ((this.mUseRibbonGroupCaptionButtonForCopyPasteParams == null))
				{
					this.mUseRibbonGroupCaptionButtonForCopyPasteParams = new UseRibbonGroupCaptionButtonForCopyPasteParams();
				}
				return this.mUseRibbonGroupCaptionButtonForCopyPasteParams;
			}
		}
		public virtual CheckSelectedCellsViaMouseExpectedValues CheckSelectedCellsViaMouseExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaMouseExpectedValues == null))
				{
					this.mCheckSelectedCellsViaMouseExpectedValues = new CheckSelectedCellsViaMouseExpectedValues();
				}
				return this.mCheckSelectedCellsViaMouseExpectedValues;
			}
		}
		public virtual CheckSelectedCellsViaKeyboardExpectedValues CheckSelectedCellsViaKeyboardExpectedValues
		{
			get
			{
				if ((this.mCheckSelectedCellsViaKeyboardExpectedValues == null))
				{
					this.mCheckSelectedCellsViaKeyboardExpectedValues = new CheckSelectedCellsViaKeyboardExpectedValues();
				}
				return this.mCheckSelectedCellsViaKeyboardExpectedValues;
			}
		}
		public virtual SwitchOffMemoEditAutoHeightParams SwitchOffMemoEditAutoHeightParams
		{
			get
			{
				if ((this.mSwitchOffMemoEditAutoHeightParams == null))
				{
					this.mSwitchOffMemoEditAutoHeightParams = new SwitchOffMemoEditAutoHeightParams();
				}
				return this.mSwitchOffMemoEditAutoHeightParams;
			}
		}
		public virtual BricksSelectionViaMouseAndCopyViaCtrlCShortcutParams BricksSelectionViaMouseAndCopyViaCtrlCShortcutParams
		{
			get
			{
				if ((this.mBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams == null))
				{
					this.mBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams = new BricksSelectionViaMouseAndCopyViaCtrlCShortcutParams();
				}
				return this.mBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams;
			}
		}
		public virtual CheckBricksSelectedStateExpectedValues CheckBricksSelectedStateExpectedValues
		{
			get
			{
				if ((this.mCheckBricksSelectedStateExpectedValues == null))
				{
					this.mCheckBricksSelectedStateExpectedValues = new CheckBricksSelectedStateExpectedValues();
				}
				return this.mCheckBricksSelectedStateExpectedValues;
			}
		}
		public virtual SelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams SelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams
		{
			get
			{
				if ((this.mSelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams == null))
				{
					this.mSelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams = new SelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams();
				}
				return this.mSelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams;
			}
		}
		public virtual CheckAddedNavBarGroupExpectedValues CheckAddedNavBarGroupExpectedValues
		{
			get
			{
				if ((this.mCheckAddedNavBarGroupExpectedValues == null))
				{
					this.mCheckAddedNavBarGroupExpectedValues = new CheckAddedNavBarGroupExpectedValues();
				}
				return this.mCheckAddedNavBarGroupExpectedValues;
			}
		}
		public virtual CheckDeletedNavBarGroupExpectedValues CheckDeletedNavBarGroupExpectedValues
		{
			get
			{
				if ((this.mCheckDeletedNavBarGroupExpectedValues == null))
				{
					this.mCheckDeletedNavBarGroupExpectedValues = new CheckDeletedNavBarGroupExpectedValues();
				}
				return this.mCheckDeletedNavBarGroupExpectedValues;
			}
		}
		public virtual CheckAddedNavBarItemLinkExpectedValues CheckAddedNavBarItemLinkExpectedValues
		{
			get
			{
				if ((this.mCheckAddedNavBarItemLinkExpectedValues == null))
				{
					this.mCheckAddedNavBarItemLinkExpectedValues = new CheckAddedNavBarItemLinkExpectedValues();
				}
				return this.mCheckAddedNavBarItemLinkExpectedValues;
			}
		}
		public virtual CheckDeletedNavBarItemLinkExpectedValues CheckDeletedNavBarItemLinkExpectedValues
		{
			get
			{
				if ((this.mCheckDeletedNavBarItemLinkExpectedValues == null))
				{
					this.mCheckDeletedNavBarItemLinkExpectedValues = new CheckDeletedNavBarItemLinkExpectedValues();
				}
				return this.mCheckDeletedNavBarItemLinkExpectedValues;
			}
		}
		public virtual CheckObtainedNavBarHitInfoExpectedValues CheckObtainedNavBarHitInfoExpectedValues
		{
			get
			{
				if ((this.mCheckObtainedNavBarHitInfoExpectedValues == null))
				{
					this.mCheckObtainedNavBarHitInfoExpectedValues = new CheckObtainedNavBarHitInfoExpectedValues();
				}
				return this.mCheckObtainedNavBarHitInfoExpectedValues;
			}
		}
		public virtual CheckChangedNavBarItemCaptionExpectedValues CheckChangedNavBarItemCaptionExpectedValues
		{
			get
			{
				if ((this.mCheckChangedNavBarItemCaptionExpectedValues == null))
				{
					this.mCheckChangedNavBarItemCaptionExpectedValues = new CheckChangedNavBarItemCaptionExpectedValues();
				}
				return this.mCheckChangedNavBarItemCaptionExpectedValues;
			}
		}
		public virtual CheckChangedNavBarLinkItemAndItemCaptionExpectedValues CheckChangedNavBarLinkItemAndItemCaptionExpectedValues
		{
			get
			{
				if ((this.mCheckChangedNavBarLinkItemAndItemCaptionExpectedValues == null))
				{
					this.mCheckChangedNavBarLinkItemAndItemCaptionExpectedValues = new CheckChangedNavBarLinkItemAndItemCaptionExpectedValues();
				}
				return this.mCheckChangedNavBarLinkItemAndItemCaptionExpectedValues;
			}
		}
		public virtual CheckDeletedViaContextMenuNavBarLinkExpectedValues CheckDeletedViaContextMenuNavBarLinkExpectedValues
		{
			get
			{
				if ((this.mCheckDeletedViaContextMenuNavBarLinkExpectedValues == null))
				{
					this.mCheckDeletedViaContextMenuNavBarLinkExpectedValues = new CheckDeletedViaContextMenuNavBarLinkExpectedValues();
				}
				return this.mCheckDeletedViaContextMenuNavBarLinkExpectedValues;
			}
		}
		public virtual CheckAddedViaContextMenuNavBarGroupExpectedValues CheckAddedViaContextMenuNavBarGroupExpectedValues
		{
			get
			{
				if ((this.mCheckAddedViaContextMenuNavBarGroupExpectedValues == null))
				{
					this.mCheckAddedViaContextMenuNavBarGroupExpectedValues = new CheckAddedViaContextMenuNavBarGroupExpectedValues();
				}
				return this.mCheckAddedViaContextMenuNavBarGroupExpectedValues;
			}
		}
		public virtual CheckRemovedNavBarGroupExpectedValues CheckRemovedNavBarGroupExpectedValues
		{
			get
			{
				if ((this.mCheckRemovedNavBarGroupExpectedValues == null))
				{
					this.mCheckRemovedNavBarGroupExpectedValues = new CheckRemovedNavBarGroupExpectedValues();
				}
				return this.mCheckRemovedNavBarGroupExpectedValues;
			}
		}
		public virtual CheckDraggedNavBarLinkToItemListExpectedValues CheckDraggedNavBarLinkToItemListExpectedValues
		{
			get
			{
				if ((this.mCheckDraggedNavBarLinkToItemListExpectedValues == null))
				{
					this.mCheckDraggedNavBarLinkToItemListExpectedValues = new CheckDraggedNavBarLinkToItemListExpectedValues();
				}
				return this.mCheckDraggedNavBarLinkToItemListExpectedValues;
			}
		}
		public virtual CheckDraggedItemToNavBarExpectedValues CheckDraggedItemToNavBarExpectedValues
		{
			get
			{
				if ((this.mCheckDraggedItemToNavBarExpectedValues == null))
				{
					this.mCheckDraggedItemToNavBarExpectedValues = new CheckDraggedItemToNavBarExpectedValues();
				}
				return this.mCheckDraggedItemToNavBarExpectedValues;
			}
		}
		public virtual CheckDraggedNavBarLinkToRecycleBinExpectedValues CheckDraggedNavBarLinkToRecycleBinExpectedValues
		{
			get
			{
				if ((this.mCheckDraggedNavBarLinkToRecycleBinExpectedValues == null))
				{
					this.mCheckDraggedNavBarLinkToRecycleBinExpectedValues = new CheckDraggedNavBarLinkToRecycleBinExpectedValues();
				}
				return this.mCheckDraggedNavBarLinkToRecycleBinExpectedValues;
			}
		}
		public virtual CheckCollapsedNavBarGroupExpectedValues CheckCollapsedNavBarGroupExpectedValues
		{
			get
			{
				if ((this.mCheckCollapsedNavBarGroupExpectedValues == null))
				{
					this.mCheckCollapsedNavBarGroupExpectedValues = new CheckCollapsedNavBarGroupExpectedValues();
				}
				return this.mCheckCollapsedNavBarGroupExpectedValues;
			}
		}
		public virtual CheckExpandedNavBarGroupExpectedValues CheckExpandedNavBarGroupExpectedValues
		{
			get
			{
				if ((this.mCheckExpandedNavBarGroupExpectedValues == null))
				{
					this.mCheckExpandedNavBarGroupExpectedValues = new CheckExpandedNavBarGroupExpectedValues();
				}
				return this.mCheckExpandedNavBarGroupExpectedValues;
			}
		}
		public virtual ChangeNavBarIntervalsParams ChangeNavBarIntervalsParams
		{
			get
			{
				if ((this.mChangeNavBarIntervalsParams == null))
				{
					this.mChangeNavBarIntervalsParams = new ChangeNavBarIntervalsParams();
				}
				return this.mChangeNavBarIntervalsParams;
			}
		}
		public virtual CheckCalendarButtonRemovedExpectedValues CheckCalendarButtonRemovedExpectedValues
		{
			get
			{
				if ((this.mCheckCalendarButtonRemovedExpectedValues == null))
				{
					this.mCheckCalendarButtonRemovedExpectedValues = new CheckCalendarButtonRemovedExpectedValues();
				}
				return this.mCheckCalendarButtonRemovedExpectedValues;
			}
		}
		public virtual CheckCalendarButtonAddedExpectedValues CheckCalendarButtonAddedExpectedValues
		{
			get
			{
				if ((this.mCheckCalendarButtonAddedExpectedValues == null))
				{
					this.mCheckCalendarButtonAddedExpectedValues = new CheckCalendarButtonAddedExpectedValues();
				}
				return this.mCheckCalendarButtonAddedExpectedValues;
			}
		}
		public virtual CheckFolderListButtonInvisibleExpectedValues CheckFolderListButtonInvisibleExpectedValues
		{
			get
			{
				if ((this.mCheckFolderListButtonInvisibleExpectedValues == null))
				{
					this.mCheckFolderListButtonInvisibleExpectedValues = new CheckFolderListButtonInvisibleExpectedValues();
				}
				return this.mCheckFolderListButtonInvisibleExpectedValues;
			}
		}
		public virtual CheckFolderListButtonVisibleExpectedValues CheckFolderListButtonVisibleExpectedValues
		{
			get
			{
				if ((this.mCheckFolderListButtonVisibleExpectedValues == null))
				{
					this.mCheckFolderListButtonVisibleExpectedValues = new CheckFolderListButtonVisibleExpectedValues();
				}
				return this.mCheckFolderListButtonVisibleExpectedValues;
			}
		}
		public virtual CheckNotesButtonInvisibleExpectedValues CheckNotesButtonInvisibleExpectedValues
		{
			get
			{
				if ((this.mCheckNotesButtonInvisibleExpectedValues == null))
				{
					this.mCheckNotesButtonInvisibleExpectedValues = new CheckNotesButtonInvisibleExpectedValues();
				}
				return this.mCheckNotesButtonInvisibleExpectedValues;
			}
		}
		public virtual CheckNotesButtonVisibleExpectedValues CheckNotesButtonVisibleExpectedValues
		{
			get
			{
				if ((this.mCheckNotesButtonVisibleExpectedValues == null))
				{
					this.mCheckNotesButtonVisibleExpectedValues = new CheckNotesButtonVisibleExpectedValues();
				}
				return this.mCheckNotesButtonVisibleExpectedValues;
			}
		}
		public virtual CheckAddedViaContextMenuNavBarLinkExpectedValues CheckAddedViaContextMenuNavBarLinkExpectedValues
		{
			get
			{
				if ((this.mCheckAddedViaContextMenuNavBarLinkExpectedValues == null))
				{
					this.mCheckAddedViaContextMenuNavBarLinkExpectedValues = new CheckAddedViaContextMenuNavBarLinkExpectedValues();
				}
				return this.mCheckAddedViaContextMenuNavBarLinkExpectedValues;
			}
		}
		public virtual CheckPopupContainerEditValueExpectedValues CheckPopupContainerEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckPopupContainerEditValueExpectedValues == null))
				{
					this.mCheckPopupContainerEditValueExpectedValues = new CheckPopupContainerEditValueExpectedValues();
				}
				return this.mCheckPopupContainerEditValueExpectedValues;
			}
		}
		public virtual CheckPopupContainerEditValueWasNotChangedExpectedValues CheckPopupContainerEditValueWasNotChangedExpectedValues
		{
			get
			{
				if ((this.mCheckPopupContainerEditValueWasNotChangedExpectedValues == null))
				{
					this.mCheckPopupContainerEditValueWasNotChangedExpectedValues = new CheckPopupContainerEditValueWasNotChangedExpectedValues();
				}
				return this.mCheckPopupContainerEditValueWasNotChangedExpectedValues;
			}
		}
		public virtual CheckMemoExEditValueExpectedValues CheckMemoExEditValueExpectedValues
		{
			get
			{
				if ((this.mCheckMemoExEditValueExpectedValues == null))
				{
					this.mCheckMemoExEditValueExpectedValues = new CheckMemoExEditValueExpectedValues();
				}
				return this.mCheckMemoExEditValueExpectedValues;
			}
		}
		public virtual CheckMemoExEditSizeExpectedValues CheckMemoExEditSizeExpectedValues
		{
			get
			{
				if ((this.mCheckMemoExEditSizeExpectedValues == null))
				{
					this.mCheckMemoExEditSizeExpectedValues = new CheckMemoExEditSizeExpectedValues();
				}
				return this.mCheckMemoExEditSizeExpectedValues;
			}
		}
		public virtual ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams
		{
			get
			{
				if ((this.mChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams == null))
				{
					this.mChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams = new ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams();
				}
				return this.mChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams;
			}
		}
		public virtual CheckBricksAfterChangingDataViaPreviousButtonExpectedValues CheckBricksAfterChangingDataViaPreviousButtonExpectedValues
		{
			get
			{
				if ((this.mCheckBricksAfterChangingDataViaPreviousButtonExpectedValues == null))
				{
					this.mCheckBricksAfterChangingDataViaPreviousButtonExpectedValues = new CheckBricksAfterChangingDataViaPreviousButtonExpectedValues();
				}
				return this.mCheckBricksAfterChangingDataViaPreviousButtonExpectedValues;
			}
		}
		public virtual ChangeDataForChangingPrintPreviewAfterUseLastButtonParams ChangeDataForChangingPrintPreviewAfterUseLastButtonParams
		{
			get
			{
				if ((this.mChangeDataForChangingPrintPreviewAfterUseLastButtonParams == null))
				{
					this.mChangeDataForChangingPrintPreviewAfterUseLastButtonParams = new ChangeDataForChangingPrintPreviewAfterUseLastButtonParams();
				}
				return this.mChangeDataForChangingPrintPreviewAfterUseLastButtonParams;
			}
		}
		public virtual CheckBricksAfterChangingDataViaLastButtonExpectedValues CheckBricksAfterChangingDataViaLastButtonExpectedValues
		{
			get
			{
				if ((this.mCheckBricksAfterChangingDataViaLastButtonExpectedValues == null))
				{
					this.mCheckBricksAfterChangingDataViaLastButtonExpectedValues = new CheckBricksAfterChangingDataViaLastButtonExpectedValues();
				}
				return this.mCheckBricksAfterChangingDataViaLastButtonExpectedValues;
			}
		}
		public virtual ChangeDataForChangingPrintPreviewAfterUseNextButtonParams ChangeDataForChangingPrintPreviewAfterUseNextButtonParams
		{
			get
			{
				if ((this.mChangeDataForChangingPrintPreviewAfterUseNextButtonParams == null))
				{
					this.mChangeDataForChangingPrintPreviewAfterUseNextButtonParams = new ChangeDataForChangingPrintPreviewAfterUseNextButtonParams();
				}
				return this.mChangeDataForChangingPrintPreviewAfterUseNextButtonParams;
			}
		}
		public virtual CheckBricksAfterChangingDataViaNextButtonExpectedValues CheckBricksAfterChangingDataViaNextButtonExpectedValues
		{
			get
			{
				if ((this.mCheckBricksAfterChangingDataViaNextButtonExpectedValues == null))
				{
					this.mCheckBricksAfterChangingDataViaNextButtonExpectedValues = new CheckBricksAfterChangingDataViaNextButtonExpectedValues();
				}
				return this.mCheckBricksAfterChangingDataViaNextButtonExpectedValues;
			}
		}
		public virtual ChangeGroupsDemoModuleDataForChangingPrintPreviewParams ChangeGroupsDemoModuleDataForChangingPrintPreviewParams
		{
			get
			{
				if ((this.mChangeGroupsDemoModuleDataForChangingPrintPreviewParams == null))
				{
					this.mChangeGroupsDemoModuleDataForChangingPrintPreviewParams = new ChangeGroupsDemoModuleDataForChangingPrintPreviewParams();
				}
				return this.mChangeGroupsDemoModuleDataForChangingPrintPreviewParams;
			}
		}
		public virtual ClearPrintPreviewAllRecordsCheckBoxParams ClearPrintPreviewAllRecordsCheckBoxParams
		{
			get
			{
				if ((this.mClearPrintPreviewAllRecordsCheckBoxParams == null))
				{
					this.mClearPrintPreviewAllRecordsCheckBoxParams = new ClearPrintPreviewAllRecordsCheckBoxParams();
				}
				return this.mClearPrintPreviewAllRecordsCheckBoxParams;
			}
		}
		public virtual CheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues CheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues == null))
				{
					this.mCheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues = new CheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues();
				}
				return this.mCheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues;
			}
		}
		public virtual MakeHeaderBrickSettingsParams MakeHeaderBrickSettingsParams
		{
			get
			{
				if ((this.mMakeHeaderBrickSettingsParams == null))
				{
					this.mMakeHeaderBrickSettingsParams = new MakeHeaderBrickSettingsParams();
				}
				return this.mMakeHeaderBrickSettingsParams;
			}
		}
		public virtual MakeFooterBrickSettingsParams MakeFooterBrickSettingsParams
		{
			get
			{
				if ((this.mMakeFooterBrickSettingsParams == null))
				{
					this.mMakeFooterBrickSettingsParams = new MakeFooterBrickSettingsParams();
				}
				return this.mMakeFooterBrickSettingsParams;
			}
		}
		public virtual CheckChangedTableBrickTextExpectedValues CheckChangedTableBrickTextExpectedValues
		{
			get
			{
				if ((this.mCheckChangedTableBrickTextExpectedValues == null))
				{
					this.mCheckChangedTableBrickTextExpectedValues = new CheckChangedTableBrickTextExpectedValues();
				}
				return this.mCheckChangedTableBrickTextExpectedValues;
			}
		}
		public virtual CheckSwitchToNextPageViaStatusBarInfoExpectedValues CheckSwitchToNextPageViaStatusBarInfoExpectedValues
		{
			get
			{
				if ((this.mCheckSwitchToNextPageViaStatusBarInfoExpectedValues == null))
				{
					this.mCheckSwitchToNextPageViaStatusBarInfoExpectedValues = new CheckSwitchToNextPageViaStatusBarInfoExpectedValues();
				}
				return this.mCheckSwitchToNextPageViaStatusBarInfoExpectedValues;
			}
		}
		public virtual CheckSwitchToLastPageViaStatusBarInfoExpectedValues CheckSwitchToLastPageViaStatusBarInfoExpectedValues
		{
			get
			{
				if ((this.mCheckSwitchToLastPageViaStatusBarInfoExpectedValues == null))
				{
					this.mCheckSwitchToLastPageViaStatusBarInfoExpectedValues = new CheckSwitchToLastPageViaStatusBarInfoExpectedValues();
				}
				return this.mCheckSwitchToLastPageViaStatusBarInfoExpectedValues;
			}
		}
		public virtual CheckSwitchToFirstPageViaStatusBarInfoExpectedValues CheckSwitchToFirstPageViaStatusBarInfoExpectedValues
		{
			get
			{
				if ((this.mCheckSwitchToFirstPageViaStatusBarInfoExpectedValues == null))
				{
					this.mCheckSwitchToFirstPageViaStatusBarInfoExpectedValues = new CheckSwitchToFirstPageViaStatusBarInfoExpectedValues();
				}
				return this.mCheckSwitchToFirstPageViaStatusBarInfoExpectedValues;
			}
		}
		public virtual CheckZoomValueAfterZoomInExpectedValues CheckZoomValueAfterZoomInExpectedValues
		{
			get
			{
				if ((this.mCheckZoomValueAfterZoomInExpectedValues == null))
				{
					this.mCheckZoomValueAfterZoomInExpectedValues = new CheckZoomValueAfterZoomInExpectedValues();
				}
				return this.mCheckZoomValueAfterZoomInExpectedValues;
			}
		}
		public virtual ChangePrintPreviewZoomBarValueViaTypingParams ChangePrintPreviewZoomBarValueViaTypingParams
		{
			get
			{
				if ((this.mChangePrintPreviewZoomBarValueViaTypingParams == null))
				{
					this.mChangePrintPreviewZoomBarValueViaTypingParams = new ChangePrintPreviewZoomBarValueViaTypingParams();
				}
				return this.mChangePrintPreviewZoomBarValueViaTypingParams;
			}
		}
		public virtual CheckZoomBarValueAfterZoomOutExpectedValues CheckZoomBarValueAfterZoomOutExpectedValues
		{
			get
			{
				if ((this.mCheckZoomBarValueAfterZoomOutExpectedValues == null))
				{
					this.mCheckZoomBarValueAfterZoomOutExpectedValues = new CheckZoomBarValueAfterZoomOutExpectedValues();
				}
				return this.mCheckZoomBarValueAfterZoomOutExpectedValues;
			}
		}
		public virtual CheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues CheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues == null))
				{
					this.mCheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues = new CheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues();
				}
				return this.mCheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues;
			}
		}
		public virtual CheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues CheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues
		{
			get
			{
				if ((this.mCheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues == null))
				{
					this.mCheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues = new CheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues();
				}
				return this.mCheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues;
			}
		}
		public virtual SelectLargeIconViewTypeInListViewDemoModuleParams SelectLargeIconViewTypeInListViewDemoModuleParams
		{
			get
			{
				if ((this.mSelectLargeIconViewTypeInListViewDemoModuleParams == null))
				{
					this.mSelectLargeIconViewTypeInListViewDemoModuleParams = new SelectLargeIconViewTypeInListViewDemoModuleParams();
				}
				return this.mSelectLargeIconViewTypeInListViewDemoModuleParams;
			}
		}
		public virtual SelectSmallIconViewTypeInListViewDemoModuleParams SelectSmallIconViewTypeInListViewDemoModuleParams
		{
			get
			{
				if ((this.mSelectSmallIconViewTypeInListViewDemoModuleParams == null))
				{
					this.mSelectSmallIconViewTypeInListViewDemoModuleParams = new SelectSmallIconViewTypeInListViewDemoModuleParams();
				}
				return this.mSelectSmallIconViewTypeInListViewDemoModuleParams;
			}
		}
		public virtual SelectListViewTypeInListViewDemoModuleParams SelectListViewTypeInListViewDemoModuleParams
		{
			get
			{
				if ((this.mSelectListViewTypeInListViewDemoModuleParams == null))
				{
					this.mSelectListViewTypeInListViewDemoModuleParams = new SelectListViewTypeInListViewDemoModuleParams();
				}
				return this.mSelectListViewTypeInListViewDemoModuleParams;
			}
		}
		public virtual CheckBricksAfterChangingTableDemoModuleDataExpectedValues CheckBricksAfterChangingTableDemoModuleDataExpectedValues
		{
			get
			{
				if ((this.mCheckBricksAfterChangingTableDemoModuleDataExpectedValues == null))
				{
					this.mCheckBricksAfterChangingTableDemoModuleDataExpectedValues = new CheckBricksAfterChangingTableDemoModuleDataExpectedValues();
				}
				return this.mCheckBricksAfterChangingTableDemoModuleDataExpectedValues;
			}
		}
		public virtual ChangeTableDemoModuleDataForChangingPrintPreviewParams ChangeTableDemoModuleDataForChangingPrintPreviewParams
		{
			get
			{
				if ((this.mChangeTableDemoModuleDataForChangingPrintPreviewParams == null))
				{
					this.mChangeTableDemoModuleDataForChangingPrintPreviewParams = new ChangeTableDemoModuleDataForChangingPrintPreviewParams();
				}
				return this.mChangeTableDemoModuleDataForChangingPrintPreviewParams;
			}
		}
		public virtual CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues
		{
			get
			{
				if ((this.mCheckBricksAfterChangingGroupsDemoModuleDataExpectedValues == null))
				{
					this.mCheckBricksAfterChangingGroupsDemoModuleDataExpectedValues = new CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues();
				}
				return this.mCheckBricksAfterChangingGroupsDemoModuleDataExpectedValues;
			}
		}
		public virtual CheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues CheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues
		{
			get
			{
				if ((this.mCheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues == null))
				{
					this.mCheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues = new CheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues();
				}
				return this.mCheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues;
			}
		}
		public virtual PageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams PageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams
		{
			get
			{
				if ((this.mPageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams == null))
				{
					this.mPageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams = new PageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams();
				}
				return this.mPageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams;
			}
		}
		public virtual CheckSwitchToLandscapePrintPreviewOrientationExpectedValues CheckSwitchToLandscapePrintPreviewOrientationExpectedValues
		{
			get
			{
				if ((this.mCheckSwitchToLandscapePrintPreviewOrientationExpectedValues == null))
				{
					this.mCheckSwitchToLandscapePrintPreviewOrientationExpectedValues = new CheckSwitchToLandscapePrintPreviewOrientationExpectedValues();
				}
				return this.mCheckSwitchToLandscapePrintPreviewOrientationExpectedValues;
			}
		}
		public virtual CheckPostponedFormCountExpectedValues CheckPostponedFormCountExpectedValues
		{
			get
			{
				if ((this.mCheckPostponedFormCountExpectedValues == null))
				{
					this.mCheckPostponedFormCountExpectedValues = new CheckPostponedFormCountExpectedValues();
				}
				return this.mCheckPostponedFormCountExpectedValues;
			}
		}
		public virtual CheckChangedHiddenStateOfColumnExpectedValues CheckChangedHiddenStateOfColumnExpectedValues
		{
			get
			{
				if ((this.mCheckChangedHiddenStateOfColumnExpectedValues == null))
				{
					this.mCheckChangedHiddenStateOfColumnExpectedValues = new CheckChangedHiddenStateOfColumnExpectedValues();
				}
				return this.mCheckChangedHiddenStateOfColumnExpectedValues;
			}
		}
		public virtual CheckDeletedSummaryExpectedValues CheckDeletedSummaryExpectedValues
		{
			get
			{
				if ((this.mCheckDeletedSummaryExpectedValues == null))
				{
					this.mCheckDeletedSummaryExpectedValues = new CheckDeletedSummaryExpectedValues();
				}
				return this.mCheckDeletedSummaryExpectedValues;
			}
		}
		public virtual CheckRibbonItemAddedToQuickAccessToolbarExpectedValues CheckRibbonItemAddedToQuickAccessToolbarExpectedValues
		{
			get
			{
				if ((this.mCheckRibbonItemAddedToQuickAccessToolbarExpectedValues == null))
				{
					this.mCheckRibbonItemAddedToQuickAccessToolbarExpectedValues = new CheckRibbonItemAddedToQuickAccessToolbarExpectedValues();
				}
				return this.mCheckRibbonItemAddedToQuickAccessToolbarExpectedValues;
			}
		}
		public virtual CheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues CheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues
		{
			get
			{
				if ((this.mCheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues == null))
				{
					this.mCheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues = new CheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues();
				}
				return this.mCheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues;
			}
		}
		public virtual CheckComplexFilteredDataExpectedValues CheckComplexFilteredDataExpectedValues
		{
			get
			{
				if ((this.mCheckComplexFilteredDataExpectedValues == null))
				{
					this.mCheckComplexFilteredDataExpectedValues = new CheckComplexFilteredDataExpectedValues();
				}
				return this.mCheckComplexFilteredDataExpectedValues;
			}
		}
		public virtual ChangeRichTextBoxValueForChangingPrintPreviewParams ChangeRichTextBoxValueForChangingPrintPreviewParams
		{
			get
			{
				if ((this.mChangeRichTextBoxValueForChangingPrintPreviewParams == null))
				{
					this.mChangeRichTextBoxValueForChangingPrintPreviewParams = new ChangeRichTextBoxValueForChangingPrintPreviewParams();
				}
				return this.mChangeRichTextBoxValueForChangingPrintPreviewParams;
			}
		}
		public virtual CheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues CheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues
		{
			get
			{
				if ((this.mCheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues == null))
				{
					this.mCheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues = new CheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues();
				}
				return this.mCheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues;
			}
		}
		public virtual SearchInPrintPreviewViaSearchBarParams SearchInPrintPreviewViaSearchBarParams
		{
			get
			{
				if ((this.mSearchInPrintPreviewViaSearchBarParams == null))
				{
					this.mSearchInPrintPreviewViaSearchBarParams = new SearchInPrintPreviewViaSearchBarParams();
				}
				return this.mSearchInPrintPreviewViaSearchBarParams;
			}
		}
		public virtual SearchBrickViaCtrlFShortcutParams SearchBrickViaCtrlFShortcutParams
		{
			get
			{
				if ((this.mSearchBrickViaCtrlFShortcutParams == null))
				{
					this.mSearchBrickViaCtrlFShortcutParams = new SearchBrickViaCtrlFShortcutParams();
				}
				return this.mSearchBrickViaCtrlFShortcutParams;
			}
		}
		public virtual TextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams TextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams
		{
			get
			{
				if ((this.mTextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams == null))
				{
					this.mTextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams = new TextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams();
				}
				return this.mTextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams;
			}
		}
		public virtual CheckCustomizedWatermarkOptionsExpectedValues CheckCustomizedWatermarkOptionsExpectedValues
		{
			get
			{
				if ((this.mCheckCustomizedWatermarkOptionsExpectedValues == null))
				{
					this.mCheckCustomizedWatermarkOptionsExpectedValues = new CheckCustomizedWatermarkOptionsExpectedValues();
				}
				return this.mCheckCustomizedWatermarkOptionsExpectedValues;
			}
		}
		public virtual ChangePrintPreviewScaleBySpecifyingPercentageBoxParams ChangePrintPreviewScaleBySpecifyingPercentageBoxParams
		{
			get
			{
				if ((this.mChangePrintPreviewScaleBySpecifyingPercentageBoxParams == null))
				{
					this.mChangePrintPreviewScaleBySpecifyingPercentageBoxParams = new ChangePrintPreviewScaleBySpecifyingPercentageBoxParams();
				}
				return this.mChangePrintPreviewScaleBySpecifyingPercentageBoxParams;
			}
		}
		public virtual ChangePrintPreviewScaleViaFitToPagesBoxParams ChangePrintPreviewScaleViaFitToPagesBoxParams
		{
			get
			{
				if ((this.mChangePrintPreviewScaleViaFitToPagesBoxParams == null))
				{
					this.mChangePrintPreviewScaleViaFitToPagesBoxParams = new ChangePrintPreviewScaleViaFitToPagesBoxParams();
				}
				return this.mChangePrintPreviewScaleViaFitToPagesBoxParams;
			}
		}
		public virtual ShowFooterSummaryParams ShowFooterSummaryParams
		{
			get
			{
				if ((this.mShowFooterSummaryParams == null))
				{
					this.mShowFooterSummaryParams = new ShowFooterSummaryParams();
				}
				return this.mShowFooterSummaryParams;
			}
		}
		public virtual SwitchToGroupFooterSummaryOptionParams SwitchToGroupFooterSummaryOptionParams
		{
			get
			{
				if ((this.mSwitchToGroupFooterSummaryOptionParams == null))
				{
					this.mSwitchToGroupFooterSummaryOptionParams = new SwitchToGroupFooterSummaryOptionParams();
				}
				return this.mSwitchToGroupFooterSummaryOptionParams;
			}
		}
		public virtual DisableAlignInGroupRowParams DisableAlignInGroupRowParams
		{
			get
			{
				if ((this.mDisableAlignInGroupRowParams == null))
				{
					this.mDisableAlignInGroupRowParams = new DisableAlignInGroupRowParams();
				}
				return this.mDisableAlignInGroupRowParams;
			}
		}
		public virtual CheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues CheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues
		{
			get
			{
				if ((this.mCheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues == null))
				{
					this.mCheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues = new CheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues();
				}
				return this.mCheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues;
			}
		}
		public virtual CheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues CheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues
		{
			get
			{
				if ((this.mCheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues == null))
				{
					this.mCheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues = new CheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues();
				}
				return this.mCheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues;
			}
		}
		public virtual CheckColumnHeaderAfterHidingColumnExpectedValues CheckColumnHeaderAfterHidingColumnExpectedValues
		{
			get
			{
				if ((this.mCheckColumnHeaderAfterHidingColumnExpectedValues == null))
				{
					this.mCheckColumnHeaderAfterHidingColumnExpectedValues = new CheckColumnHeaderAfterHidingColumnExpectedValues();
				}
				return this.mCheckColumnHeaderAfterHidingColumnExpectedValues;
			}
		}
		public virtual CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues
		{
			get
			{
				if ((this.mCheckReorderedBandsOnAdvancedBandedGridViewExpectedValues == null))
				{
					this.mCheckReorderedBandsOnAdvancedBandedGridViewExpectedValues = new CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues();
				}
				return this.mCheckReorderedBandsOnAdvancedBandedGridViewExpectedValues;
			}
		}
		public virtual CheckReorderedBandsOnBandedGridViewExpectedValues CheckReorderedBandsOnBandedGridViewExpectedValues
		{
			get
			{
				if ((this.mCheckReorderedBandsOnBandedGridViewExpectedValues == null))
				{
					this.mCheckReorderedBandsOnBandedGridViewExpectedValues = new CheckReorderedBandsOnBandedGridViewExpectedValues();
				}
				return this.mCheckReorderedBandsOnBandedGridViewExpectedValues;
			}
		}
		public UIXtraEditorsTutorialsWindow UIXtraEditorsTutorialsWindow
		{
			get
			{
				if ((this.mUIXtraEditorsTutorialsWindow == null))
				{
					this.mUIXtraEditorsTutorialsWindow = new UIXtraEditorsTutorialsWindow();
				}
				return this.mUIXtraEditorsTutorialsWindow;
			}
		}
		public UIXtraGridFeaturesDemoWindow UIXtraGridFeaturesDemoWindow
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow == null))
				{
					this.mUIXtraGridFeaturesDemoWindow = new UIXtraGridFeaturesDemoWindow();
				}
				return this.mUIXtraGridFeaturesDemoWindow;
			}
		}
		public UIItemWindow UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow();
				}
				return this.mUIItemWindow;
			}
		}
		public UIXtraGridFeaturesDemoWindow1 UIXtraGridFeaturesDemoWindow1
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow1 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow1 = new UIXtraGridFeaturesDemoWindow1();
				}
				return this.mUIXtraGridFeaturesDemoWindow1;
			}
		}
		public UIItemWindow12 UIItemWindow1
		{
			get
			{
				if ((this.mUIItemWindow1 == null))
				{
					this.mUIItemWindow1 = new UIItemWindow12();
				}
				return this.mUIItemWindow1;
			}
		}
		public UIFilterEditorWindow UIFilterEditorWindow
		{
			get
			{
				if ((this.mUIFilterEditorWindow == null))
				{
					this.mUIFilterEditorWindow = new UIFilterEditorWindow();
				}
				return this.mUIFilterEditorWindow;
			}
		}
		public UIXtraGridFeaturesDemoWindow3 UIXtraGridFeaturesDemoWindow3
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow3 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow3 = new UIXtraGridFeaturesDemoWindow3();
				}
				return this.mUIXtraGridFeaturesDemoWindow3;
			}
		}
		public UIXtraGridFeaturesDemoWindow2 UIXtraGridFeaturesDemoWindow2
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow2 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow2 = new UIXtraGridFeaturesDemoWindow2();
				}
				return this.mUIXtraGridFeaturesDemoWindow2;
			}
		}
		public UIXtraGridFeaturesDemoWindow4 UIXtraGridFeaturesDemoWindow4
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow4 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow4 = new UIXtraGridFeaturesDemoWindow4();
				}
				return this.mUIXtraGridFeaturesDemoWindow4;
			}
		}
		public UIXtraGridFeaturesDemoWindow5 UIXtraGridFeaturesDemoWindow5
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow5 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow5 = new UIXtraGridFeaturesDemoWindow5();
				}
				return this.mUIXtraGridFeaturesDemoWindow5;
			}
		}
		public UICustomizationWindow UICustomizationWindow
		{
			get
			{
				if ((this.mUICustomizationWindow == null))
				{
					this.mUICustomizationWindow = new UICustomizationWindow();
				}
				return this.mUICustomizationWindow;
			}
		}
		public UISelectedCellsWindow UISelectedCellsWindow
		{
			get
			{
				if ((this.mUISelectedCellsWindow == null))
				{
					this.mUISelectedCellsWindow = new UISelectedCellsWindow();
				}
				return this.mUISelectedCellsWindow;
			}
		}
		public UIXtraGridFeaturesDemoWindow6 UIXtraGridFeaturesDemoWindow6
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow6 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow6 = new UIXtraGridFeaturesDemoWindow6();
				}
				return this.mUIXtraGridFeaturesDemoWindow6;
			}
		}
		public UISelectedRowsWindow UISelectedRowsWindow
		{
			get
			{
				if ((this.mUISelectedRowsWindow == null))
				{
					this.mUISelectedRowsWindow = new UISelectedRowsWindow();
				}
				return this.mUISelectedRowsWindow;
			}
		}
		public UIXtraGridFeaturesDemoWindow7 UIXtraGridFeaturesDemoWindow7
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow7 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow7 = new UIXtraGridFeaturesDemoWindow7();
				}
				return this.mUIXtraGridFeaturesDemoWindow7;
			}
		}
		public UIXtraGridFeaturesDemoWindow8 UIXtraGridFeaturesDemoWindow8
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow8 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow8 = new UIXtraGridFeaturesDemoWindow8();
				}
				return this.mUIXtraGridFeaturesDemoWindow8;
			}
		}
		public UIПереводчикGoogleWindWindow UIПереводчикGoogleWindWindow
		{
			get
			{
				if ((this.mUIПереводчикGoogleWindWindow == null))
				{
					this.mUIПереводчикGoogleWindWindow = new UIПереводчикGoogleWindWindow();
				}
				return this.mUIПереводчикGoogleWindWindow;
			}
		}
		public UIXtraGridFeaturesDemoWindow9 UIXtraGridFeaturesDemoWindow9
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow9 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow9 = new UIXtraGridFeaturesDemoWindow9();
				}
				return this.mUIXtraGridFeaturesDemoWindow9;
			}
		}
		public UIXtraGridFeaturesDemoWindow10 UIXtraGridFeaturesDemoWindow10
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow10 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow10 = new UIXtraGridFeaturesDemoWindow10();
				}
				return this.mUIXtraGridFeaturesDemoWindow10;
			}
		}
		public UIXtraGridFeaturesDemoWindow11 UIXtraGridFeaturesDemoWindow11
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow11 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow11 = new UIXtraGridFeaturesDemoWindow11();
				}
				return this.mUIXtraGridFeaturesDemoWindow11;
			}
		}
		public UIXtraGridFeaturesDemoWindow12 UIXtraGridFeaturesDemoWindow12
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow12 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow12 = new UIXtraGridFeaturesDemoWindow12();
				}
				return this.mUIXtraGridFeaturesDemoWindow12;
			}
		}
		public UIXtraGridFeaturesDemoWindow13 UIXtraGridFeaturesDemoWindow13
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow13 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow13 = new UIXtraGridFeaturesDemoWindow13();
				}
				return this.mUIXtraGridFeaturesDemoWindow13;
			}
		}
		public UIXtraGridFeaturesDemoWindow14 UIXtraGridFeaturesDemoWindow14
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow14 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow14 = new UIXtraGridFeaturesDemoWindow14();
				}
				return this.mUIXtraGridFeaturesDemoWindow14;
			}
		}
		public UIXtraGridFeaturesDemoWindow15 UIXtraGridFeaturesDemoWindow15
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow15 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow15 = new UIXtraGridFeaturesDemoWindow15();
				}
				return this.mUIXtraGridFeaturesDemoWindow15;
			}
		}
		public UIXtraGridFeaturesDemoWindow16 UIXtraGridFeaturesDemoWindow16
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow16 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow16 = new UIXtraGridFeaturesDemoWindow16();
				}
				return this.mUIXtraGridFeaturesDemoWindow16;
			}
		}
		public UIXtraGridFeaturesDemoWindow17 UIXtraGridFeaturesDemoWindow17
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow17 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow17 = new UIXtraGridFeaturesDemoWindow17();
				}
				return this.mUIXtraGridFeaturesDemoWindow17;
			}
		}
		public UIXtraGridFeaturesDemoWindow18 UIXtraGridFeaturesDemoWindow18
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow18 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow18 = new UIXtraGridFeaturesDemoWindow18();
				}
				return this.mUIXtraGridFeaturesDemoWindow18;
			}
		}
		public UIXtraGridFeaturesDemoWindow19 UIXtraGridFeaturesDemoWindow19
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow19 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow19 = new UIXtraGridFeaturesDemoWindow19();
				}
				return this.mUIXtraGridFeaturesDemoWindow19;
			}
		}
		public UIXtraGridFeaturesDemoWindow20 UIXtraGridFeaturesDemoWindow20
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow20 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow20 = new UIXtraGridFeaturesDemoWindow20();
				}
				return this.mUIXtraGridFeaturesDemoWindow20;
			}
		}
		public UIXtraGridFeaturesDemoWindow21 UIXtraGridFeaturesDemoWindow21
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow21 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow21 = new UIXtraGridFeaturesDemoWindow21();
				}
				return this.mUIXtraGridFeaturesDemoWindow21;
			}
		}
		public UIExpressioneditorWindow UIExpressioneditorWindow
		{
			get
			{
				if ((this.mUIExpressioneditorWindow == null))
				{
					this.mUIExpressioneditorWindow = new UIExpressioneditorWindow();
				}
				return this.mUIExpressioneditorWindow;
			}
		}
		public UIXtraGridFeaturesDemoWindow22 UIXtraGridFeaturesDemoWindow22
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow22 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow22 = new UIXtraGridFeaturesDemoWindow22();
				}
				return this.mUIXtraGridFeaturesDemoWindow22;
			}
		}
		public UIXtraGridFeaturesDemoWindow23 UIXtraGridFeaturesDemoWindow23
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow23 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow23 = new UIXtraGridFeaturesDemoWindow23();
				}
				return this.mUIXtraGridFeaturesDemoWindow23;
			}
		}
		public UIConditionexpressioneWindow UIConditionexpressioneWindow
		{
			get
			{
				if ((this.mUIConditionexpressioneWindow == null))
				{
					this.mUIConditionexpressioneWindow = new UIConditionexpressioneWindow();
				}
				return this.mUIConditionexpressioneWindow;
			}
		}
		public UIStyleFormatConditionWindow UIStyleFormatConditionWindow
		{
			get
			{
				if ((this.mUIStyleFormatConditionWindow == null))
				{
					this.mUIStyleFormatConditionWindow = new UIStyleFormatConditionWindow();
				}
				return this.mUIStyleFormatConditionWindow;
			}
		}
		public UILinkPropertiesWindow UILinkPropertiesWindow
		{
			get
			{
				if ((this.mUILinkPropertiesWindow == null))
				{
					this.mUILinkPropertiesWindow = new UILinkPropertiesWindow();
				}
				return this.mUILinkPropertiesWindow;
			}
		}
		public UIItemWindow111 UIItemWindow11
		{
			get
			{
				if ((this.mUIItemWindow11 == null))
				{
					this.mUIItemWindow11 = new UIItemWindow111();
				}
				return this.mUIItemWindow11;
			}
		}
		public UISimplePadCDemoWindow UISimplePadCDemoWindow
		{
			get
			{
				if ((this.mUISimplePadCDemoWindow == null))
				{
					this.mUISimplePadCDemoWindow = new UISimplePadCDemoWindow();
				}
				return this.mUISimplePadCDemoWindow;
			}
		}
		public UICustomizeWindow UICustomizeWindow
		{
			get
			{
				if ((this.mUICustomizeWindow == null))
				{
					this.mUICustomizeWindow = new UICustomizeWindow();
				}
				return this.mUICustomizeWindow;
			}
		}
		public UISimplePadQuestionWindow UISimplePadQuestionWindow
		{
			get
			{
				if ((this.mUISimplePadQuestionWindow == null))
				{
					this.mUISimplePadQuestionWindow = new UISimplePadQuestionWindow();
				}
				return this.mUISimplePadQuestionWindow;
			}
		}
		public UIApplicationUIWindow UIApplicationUIWindow
		{
			get
			{
				if ((this.mUIApplicationUIWindow == null))
				{
					this.mUIApplicationUIWindow = new UIApplicationUIWindow();
				}
				return this.mUIApplicationUIWindow;
			}
		}
		public UIItemWindow2 UIItemWindow2
		{
			get
			{
				if ((this.mUIItemWindow2 == null))
				{
					this.mUIItemWindow2 = new UIItemWindow2();
				}
				return this.mUIItemWindow2;
			}
		}
		public UIButtonClickWindow1 UIButtonClickWindow
		{
			get
			{
				if ((this.mUIButtonClickWindow == null))
				{
					this.mUIButtonClickWindow = new UIButtonClickWindow1();
				}
				return this.mUIButtonClickWindow;
			}
		}
		public UIXtraPrintingFeaturesWindow UIXtraPrintingFeaturesWindow
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow == null))
				{
					this.mUIXtraPrintingFeaturesWindow = new UIXtraPrintingFeaturesWindow();
				}
				return this.mUIXtraPrintingFeaturesWindow;
			}
		}
		public UIXtraPrintingFeaturesWindow1 UIXtraPrintingFeaturesWindow1
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow1 == null))
				{
					this.mUIXtraPrintingFeaturesWindow1 = new UIXtraPrintingFeaturesWindow1();
				}
				return this.mUIXtraPrintingFeaturesWindow1;
			}
		}
		public UIFindWindow UIFindWindow
		{
			get
			{
				if ((this.mUIFindWindow == null))
				{
					this.mUIFindWindow = new UIFindWindow();
				}
				return this.mUIFindWindow;
			}
		}
		public UIHeaderandFooterWindow UIHeaderandFooterWindow
		{
			get
			{
				if ((this.mUIHeaderandFooterWindow == null))
				{
					this.mUIHeaderandFooterWindow = new UIHeaderandFooterWindow();
				}
				return this.mUIHeaderandFooterWindow;
			}
		}
		public UIFontWindow UIFontWindow
		{
			get
			{
				if ((this.mUIFontWindow == null))
				{
					this.mUIFontWindow = new UIFontWindow();
				}
				return this.mUIFontWindow;
			}
		}
		public UIPageSetupWindow UIPageSetupWindow
		{
			get
			{
				if ((this.mUIPageSetupWindow == null))
				{
					this.mUIPageSetupWindow = new UIPageSetupWindow();
				}
				return this.mUIPageSetupWindow;
			}
		}
		public UIWatermarkWindow UIWatermarkWindow
		{
			get
			{
				if ((this.mUIWatermarkWindow == null))
				{
					this.mUIWatermarkWindow = new UIWatermarkWindow();
				}
				return this.mUIWatermarkWindow;
			}
		}
		public UIPDFExportOptionsWindow UIPDFExportOptionsWindow
		{
			get
			{
				if ((this.mUIPDFExportOptionsWindow == null))
				{
					this.mUIPDFExportOptionsWindow = new UIPDFExportOptionsWindow();
				}
				return this.mUIPDFExportOptionsWindow;
			}
		}
		public UIPasswordSecurityWindow UIPasswordSecurityWindow
		{
			get
			{
				if ((this.mUIPasswordSecurityWindow == null))
				{
					this.mUIPasswordSecurityWindow = new UIPasswordSecurityWindow();
				}
				return this.mUIPasswordSecurityWindow;
			}
		}
		public UIHTMLExportOptionsWindow UIHTMLExportOptionsWindow
		{
			get
			{
				if ((this.mUIHTMLExportOptionsWindow == null))
				{
					this.mUIHTMLExportOptionsWindow = new UIHTMLExportOptionsWindow();
				}
				return this.mUIHTMLExportOptionsWindow;
			}
		}
		public UIRTFExportOptionsWindow UIRTFExportOptionsWindow
		{
			get
			{
				if ((this.mUIRTFExportOptionsWindow == null))
				{
					this.mUIRTFExportOptionsWindow = new UIRTFExportOptionsWindow();
				}
				return this.mUIRTFExportOptionsWindow;
			}
		}
		public UIXLSExportOptionsWindow UIXLSExportOptionsWindow
		{
			get
			{
				if ((this.mUIXLSExportOptionsWindow == null))
				{
					this.mUIXLSExportOptionsWindow = new UIXLSExportOptionsWindow();
				}
				return this.mUIXLSExportOptionsWindow;
			}
		}
		public UICSVExportOptionsWindow UICSVExportOptionsWindow
		{
			get
			{
				if ((this.mUICSVExportOptionsWindow == null))
				{
					this.mUICSVExportOptionsWindow = new UICSVExportOptionsWindow();
				}
				return this.mUICSVExportOptionsWindow;
			}
		}
		public UIImageExportOptionsWindow UIImageExportOptionsWindow
		{
			get
			{
				if ((this.mUIImageExportOptionsWindow == null))
				{
					this.mUIImageExportOptionsWindow = new UIImageExportOptionsWindow();
				}
				return this.mUIImageExportOptionsWindow;
			}
		}
		public UIXtraPrintingFeaturesWindow2 UIXtraPrintingFeaturesWindow2
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow2 == null))
				{
					this.mUIXtraPrintingFeaturesWindow2 = new UIXtraPrintingFeaturesWindow2();
				}
				return this.mUIXtraPrintingFeaturesWindow2;
			}
		}
		public UIPreviewWindow UIPreviewWindow
		{
			get
			{
				if ((this.mUIPreviewWindow == null))
				{
					this.mUIPreviewWindow = new UIPreviewWindow();
				}
				return this.mUIPreviewWindow;
			}
		}
		public UIProgramManagerWindow UIProgramManagerWindow
		{
			get
			{
				if ((this.mUIProgramManagerWindow == null))
				{
					this.mUIProgramManagerWindow = new UIProgramManagerWindow();
				}
				return this.mUIProgramManagerWindow;
			}
		}
		public UIXtraPrintingFeaturesWindow3 UIXtraPrintingFeaturesWindow3
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow3 == null))
				{
					this.mUIXtraPrintingFeaturesWindow3 = new UIXtraPrintingFeaturesWindow3();
				}
				return this.mUIXtraPrintingFeaturesWindow3;
			}
		}
		public UIXtraPrintingFeaturesWindow5 UIXtraPrintingFeaturesWindow5
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow5 == null))
				{
					this.mUIXtraPrintingFeaturesWindow5 = new UIXtraPrintingFeaturesWindow5();
				}
				return this.mUIXtraPrintingFeaturesWindow5;
			}
		}
		public UIXtraPrintingFeaturesWindow6 UIXtraPrintingFeaturesWindow6
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow6 == null))
				{
					this.mUIXtraPrintingFeaturesWindow6 = new UIXtraPrintingFeaturesWindow6();
				}
				return this.mUIXtraPrintingFeaturesWindow6;
			}
		}
		public UIXtraPrintingFeaturesWindow7 UIXtraPrintingFeaturesWindow7
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow7 == null))
				{
					this.mUIXtraPrintingFeaturesWindow7 = new UIXtraPrintingFeaturesWindow7();
				}
				return this.mUIXtraPrintingFeaturesWindow7;
			}
		}
		public UIXtraPrintingFeaturesWindow8 UIXtraPrintingFeaturesWindow8
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow8 == null))
				{
					this.mUIXtraPrintingFeaturesWindow8 = new UIXtraPrintingFeaturesWindow8();
				}
				return this.mUIXtraPrintingFeaturesWindow8;
			}
		}
		public UIXtraPrintingFeaturesWindow9 UIXtraPrintingFeaturesWindow9
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow9 == null))
				{
					this.mUIXtraPrintingFeaturesWindow9 = new UIXtraPrintingFeaturesWindow9();
				}
				return this.mUIXtraPrintingFeaturesWindow9;
			}
		}
		public UIXtraPrintingFeaturesWindow10 UIXtraPrintingFeaturesWindow10
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow10 == null))
				{
					this.mUIXtraPrintingFeaturesWindow10 = new UIXtraPrintingFeaturesWindow10();
				}
				return this.mUIXtraPrintingFeaturesWindow10;
			}
		}
		public UINewDocument1RibbonSiWindow UINewDocument1RibbonSiWindow
		{
			get
			{
				if ((this.mUINewDocument1RibbonSiWindow == null))
				{
					this.mUINewDocument1RibbonSiWindow = new UINewDocument1RibbonSiWindow();
				}
				return this.mUINewDocument1RibbonSiWindow;
			}
		}
		public UIItemWindow31 UIItemWindow3
		{
			get
			{
				if ((this.mUIItemWindow3 == null))
				{
					this.mUIItemWindow3 = new UIItemWindow31();
				}
				return this.mUIItemWindow3;
			}
		}
		public UINewDocument1RibbonSiWindow1 UINewDocument1RibbonSiWindow1
		{
			get
			{
				if ((this.mUINewDocument1RibbonSiWindow1 == null))
				{
					this.mUINewDocument1RibbonSiWindow1 = new UINewDocument1RibbonSiWindow1();
				}
				return this.mUINewDocument1RibbonSiWindow1;
			}
		}
		public UIReplaceWindow UIReplaceWindow
		{
			get
			{
				if ((this.mUIReplaceWindow == null))
				{
					this.mUIReplaceWindow = new UIReplaceWindow();
				}
				return this.mUIReplaceWindow;
			}
		}
		public UIRibbonSimplePadWindow UIRibbonSimplePadWindow
		{
			get
			{
				if ((this.mUIRibbonSimplePadWindow == null))
				{
					this.mUIRibbonSimplePadWindow = new UIRibbonSimplePadWindow();
				}
				return this.mUIRibbonSimplePadWindow;
			}
		}
		public UIDocument1rtfRibbonSiWindow UIDocument1rtfRibbonSiWindow
		{
			get
			{
				if ((this.mUIDocument1rtfRibbonSiWindow == null))
				{
					this.mUIDocument1rtfRibbonSiWindow = new UIDocument1rtfRibbonSiWindow();
				}
				return this.mUIDocument1rtfRibbonSiWindow;
			}
		}
		public UIExportWindow UIExportWindow
		{
			get
			{
				if ((this.mUIExportWindow == null))
				{
					this.mUIExportWindow = new UIExportWindow();
				}
				return this.mUIExportWindow;
			}
		}
		public UIItemWindow41 UIItemWindow4
		{
			get
			{
				if ((this.mUIItemWindow4 == null))
				{
					this.mUIItemWindow4 = new UIItemWindow41();
				}
				return this.mUIItemWindow4;
			}
		}
		public UIRibbonCustomizationFWindow UIRibbonCustomizationFWindow
		{
			get
			{
				if ((this.mUIRibbonCustomizationFWindow == null))
				{
					this.mUIRibbonCustomizationFWindow = new UIRibbonCustomizationFWindow();
				}
				return this.mUIRibbonCustomizationFWindow;
			}
		}
		public UIRenameWindow UIRenameWindow
		{
			get
			{
				if ((this.mUIRenameWindow == null))
				{
					this.mUIRenameWindow = new UIRenameWindow();
				}
				return this.mUIRenameWindow;
			}
		}
		public UITestProject10MicrosoWindow UITestProject10MicrosoWindow
		{
			get
			{
				if ((this.mUITestProject10MicrosoWindow == null))
				{
					this.mUITestProject10MicrosoWindow = new UITestProject10MicrosoWindow();
				}
				return this.mUITestProject10MicrosoWindow;
			}
		}
		public UIItemWindow121 UIItemWindow12
		{
			get
			{
				if ((this.mUIItemWindow12 == null))
				{
					this.mUIItemWindow12 = new UIItemWindow121();
				}
				return this.mUIItemWindow12;
			}
		}
		public UIRTFExportOptionsWindow1 UIRTFExportOptionsWindow1
		{
			get
			{
				if ((this.mUIRTFExportOptionsWindow1 == null))
				{
					this.mUIRTFExportOptionsWindow1 = new UIRTFExportOptionsWindow1();
				}
				return this.mUIRTFExportOptionsWindow1;
			}
		}
		public UIXtraPrintingFeaturesWindow11 UIXtraPrintingFeaturesWindow11
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow11 == null))
				{
					this.mUIXtraPrintingFeaturesWindow11 = new UIXtraPrintingFeaturesWindow11();
				}
				return this.mUIXtraPrintingFeaturesWindow11;
			}
		}
		public UIHeaderandFooterWindow1 UIHeaderandFooterWindow1
		{
			get
			{
				if ((this.mUIHeaderandFooterWindow1 == null))
				{
					this.mUIHeaderandFooterWindow1 = new UIHeaderandFooterWindow1();
				}
				return this.mUIHeaderandFooterWindow1;
			}
		}
		public UIXtraGridFeaturesDemoWindow24 UIXtraGridFeaturesDemoWindow24
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow24 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow24 = new UIXtraGridFeaturesDemoWindow24();
				}
				return this.mUIXtraGridFeaturesDemoWindow24;
			}
		}
		public UIPreviewWindow1 UIPreviewWindow1
		{
			get
			{
				if ((this.mUIPreviewWindow1 == null))
				{
					this.mUIPreviewWindow1 = new UIPreviewWindow1();
				}
				return this.mUIPreviewWindow1;
			}
		}
		public UIXtraPrintingFeaturesWindow12 UIXtraPrintingFeaturesWindow12
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow12 == null))
				{
					this.mUIXtraPrintingFeaturesWindow12 = new UIXtraPrintingFeaturesWindow12();
				}
				return this.mUIXtraPrintingFeaturesWindow12;
			}
		}
		public UIHeaderandFooterWindow2 UIHeaderandFooterWindow2
		{
			get
			{
				if ((this.mUIHeaderandFooterWindow2 == null))
				{
					this.mUIHeaderandFooterWindow2 = new UIHeaderandFooterWindow2();
				}
				return this.mUIHeaderandFooterWindow2;
			}
		}
		public UISimplePadCDemoWindow1 UISimplePadCDemoWindow1
		{
			get
			{
				if ((this.mUISimplePadCDemoWindow1 == null))
				{
					this.mUISimplePadCDemoWindow1 = new UISimplePadCDemoWindow1();
				}
				return this.mUISimplePadCDemoWindow1;
			}
		}
		public UIWindowsForms10WindowWindow UIWindowsForms10WindowWindow
		{
			get
			{
				if ((this.mUIWindowsForms10WindowWindow == null))
				{
					this.mUIWindowsForms10WindowWindow = new UIWindowsForms10WindowWindow();
				}
				return this.mUIWindowsForms10WindowWindow;
			}
		}
		public UIApplicationUIWindow1 UIApplicationUIWindow1
		{
			get
			{
				if ((this.mUIApplicationUIWindow1 == null))
				{
					this.mUIApplicationUIWindow1 = new UIApplicationUIWindow1();
				}
				return this.mUIApplicationUIWindow1;
			}
		}
		public UINewDocument1RibbonSiWindow11 UINewDocument1RibbonSiWindow11
		{
			get
			{
				if ((this.mUINewDocument1RibbonSiWindow11 == null))
				{
					this.mUINewDocument1RibbonSiWindow11 = new UINewDocument1RibbonSiWindow11();
				}
				return this.mUINewDocument1RibbonSiWindow11;
			}
		}
		public UIItemWindow51 UIItemWindow5
		{
			get
			{
				if ((this.mUIItemWindow5 == null))
				{
					this.mUIItemWindow5 = new UIItemWindow51();
				}
				return this.mUIItemWindow5;
			}
		}
		public UIXtraPrintingFeaturesWindow13 UIXtraPrintingFeaturesWindow13
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow13 == null))
				{
					this.mUIXtraPrintingFeaturesWindow13 = new UIXtraPrintingFeaturesWindow13();
				}
				return this.mUIXtraPrintingFeaturesWindow13;
			}
		}
		public UIXtraPrintingFeaturesWindow14 UIXtraPrintingFeaturesWindow14
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow14 == null))
				{
					this.mUIXtraPrintingFeaturesWindow14 = new UIXtraPrintingFeaturesWindow14();
				}
				return this.mUIXtraPrintingFeaturesWindow14;
			}
		}
		public UINewDocument1RibbonSiWindow2 UINewDocument1RibbonSiWindow2
		{
			get
			{
				if ((this.mUINewDocument1RibbonSiWindow2 == null))
				{
					this.mUINewDocument1RibbonSiWindow2 = new UINewDocument1RibbonSiWindow2();
				}
				return this.mUINewDocument1RibbonSiWindow2;
			}
		}
		public UIRibbonCustomizationWindow UIRibbonCustomizationWindow
		{
			get
			{
				if ((this.mUIRibbonCustomizationWindow == null))
				{
					this.mUIRibbonCustomizationWindow = new UIRibbonCustomizationWindow();
				}
				return this.mUIRibbonCustomizationWindow;
			}
		}
		public UIRibbonCustomizationWindow1 UIRibbonCustomizationWindow1
		{
			get
			{
				if ((this.mUIRibbonCustomizationWindow1 == null))
				{
					this.mUIRibbonCustomizationWindow1 = new UIRibbonCustomizationWindow1();
				}
				return this.mUIRibbonCustomizationWindow1;
			}
		}
		public UIItemWindow61 UIItemWindow6
		{
			get
			{
				if ((this.mUIItemWindow6 == null))
				{
					this.mUIItemWindow6 = new UIItemWindow61();
				}
				return this.mUIItemWindow6;
			}
		}
		public UIXtraGridFeaturesDemoWindow25 UIXtraGridFeaturesDemoWindow25
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow25 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow25 = new UIXtraGridFeaturesDemoWindow25();
				}
				return this.mUIXtraGridFeaturesDemoWindow25;
			}
		}
		public UIDocument1rtfRibbonSiWindow1 UIDocument1rtfRibbonSiWindow1
		{
			get
			{
				if ((this.mUIDocument1rtfRibbonSiWindow1 == null))
				{
					this.mUIDocument1rtfRibbonSiWindow1 = new UIDocument1rtfRibbonSiWindow1();
				}
				return this.mUIDocument1rtfRibbonSiWindow1;
			}
		}
		public UIXtraGridFeaturesDemoWindow26 UIXtraGridFeaturesDemoWindow26
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow26 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow26 = new UIXtraGridFeaturesDemoWindow26();
				}
				return this.mUIXtraGridFeaturesDemoWindow26;
			}
		}
		public UIXtraGridFeaturesDemoWindow27 UIXtraGridFeaturesDemoWindow27
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow27 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow27 = new UIXtraGridFeaturesDemoWindow27();
				}
				return this.mUIXtraGridFeaturesDemoWindow27;
			}
		}
		public UIXtraGridFeaturesDemoWindow28 UIXtraGridFeaturesDemoWindow28
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow28 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow28 = new UIXtraGridFeaturesDemoWindow28();
				}
				return this.mUIXtraGridFeaturesDemoWindow28;
			}
		}
		public UIStyleFormatConditionWindow1 UIStyleFormatConditionWindow1
		{
			get
			{
				if ((this.mUIStyleFormatConditionWindow1 == null))
				{
					this.mUIStyleFormatConditionWindow1 = new UIStyleFormatConditionWindow1();
				}
				return this.mUIStyleFormatConditionWindow1;
			}
		}
		public UIXtraGridFeaturesDemoWindow29 UIXtraGridFeaturesDemoWindow29
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow29 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow29 = new UIXtraGridFeaturesDemoWindow29();
				}
				return this.mUIXtraGridFeaturesDemoWindow29;
			}
		}
		public UIItemWindow71 UIItemWindow7
		{
			get
			{
				if ((this.mUIItemWindow7 == null))
				{
					this.mUIItemWindow7 = new UIItemWindow71();
				}
				return this.mUIItemWindow7;
			}
		}
		public UIXtraGridFeaturesDemoWindow30 UIXtraGridFeaturesDemoWindow30
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow30 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow30 = new UIXtraGridFeaturesDemoWindow30();
				}
				return this.mUIXtraGridFeaturesDemoWindow30;
			}
		}
		public UIXtraGridFeaturesDemoWindow31 UIXtraGridFeaturesDemoWindow31
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow31 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow31 = new UIXtraGridFeaturesDemoWindow31();
				}
				return this.mUIXtraGridFeaturesDemoWindow31;
			}
		}
		public UIXtraEditorsTutorialsWindow1 UIXtraEditorsTutorialsWindow1
		{
			get
			{
				if ((this.mUIXtraEditorsTutorialsWindow1 == null))
				{
					this.mUIXtraEditorsTutorialsWindow1 = new UIXtraEditorsTutorialsWindow1();
				}
				return this.mUIXtraEditorsTutorialsWindow1;
			}
		}
		public UIXtraPrintingFeaturesWindow15 UIXtraPrintingFeaturesWindow15
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow15 == null))
				{
					this.mUIXtraPrintingFeaturesWindow15 = new UIXtraPrintingFeaturesWindow15();
				}
				return this.mUIXtraPrintingFeaturesWindow15;
			}
		}
		public UIXtraPrintingFeaturesWindow16 UIXtraPrintingFeaturesWindow16
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow16 == null))
				{
					this.mUIXtraPrintingFeaturesWindow16 = new UIXtraPrintingFeaturesWindow16();
				}
				return this.mUIXtraPrintingFeaturesWindow16;
			}
		}
		public UIXtraPrintingFeaturesWindow17 UIXtraPrintingFeaturesWindow17
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow17 == null))
				{
					this.mUIXtraPrintingFeaturesWindow17 = new UIXtraPrintingFeaturesWindow17();
				}
				return this.mUIXtraPrintingFeaturesWindow17;
			}
		}
		public UIXtraGridFeaturesDemoWindow32 UIXtraGridFeaturesDemoWindow32
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow32 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow32 = new UIXtraGridFeaturesDemoWindow32();
				}
				return this.mUIXtraGridFeaturesDemoWindow32;
			}
		}
		public UIXtraGridFeaturesDemoWindow33 UIXtraGridFeaturesDemoWindow33
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow33 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow33 = new UIXtraGridFeaturesDemoWindow33();
				}
				return this.mUIXtraGridFeaturesDemoWindow33;
			}
		}
		public UIItemWindow81 UIItemWindow8
		{
			get
			{
				if ((this.mUIItemWindow8 == null))
				{
					this.mUIItemWindow8 = new UIItemWindow81();
				}
				return this.mUIItemWindow8;
			}
		}
		public UIXtraGridFeaturesDemoWindow34 UIXtraGridFeaturesDemoWindow34
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow34 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow34 = new UIXtraGridFeaturesDemoWindow34();
				}
				return this.mUIXtraGridFeaturesDemoWindow34;
			}
		}
		public UIXtraPrintingFeaturesWindow18 UIXtraPrintingFeaturesWindow18
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow18 == null))
				{
					this.mUIXtraPrintingFeaturesWindow18 = new UIXtraPrintingFeaturesWindow18();
				}
				return this.mUIXtraPrintingFeaturesWindow18;
			}
		}
		public UIXtraGridFeaturesDemoWindow35 UIXtraGridFeaturesDemoWindow35
		{
			get
			{
				if ((this.mUIXtraGridFeaturesDemoWindow35 == null))
				{
					this.mUIXtraGridFeaturesDemoWindow35 = new UIXtraGridFeaturesDemoWindow35();
				}
				return this.mUIXtraGridFeaturesDemoWindow35;
			}
		}
		public UIPageSetupWindow1 UIPageSetupWindow1
		{
			get
			{
				if ((this.mUIPageSetupWindow1 == null))
				{
					this.mUIPageSetupWindow1 = new UIPageSetupWindow1();
				}
				return this.mUIPageSetupWindow1;
			}
		}
		public UITheXtraEditorsSuiteDWindow UITheXtraEditorsSuiteDWindow
		{
			get
			{
				if ((this.mUITheXtraEditorsSuiteDWindow == null))
				{
					this.mUITheXtraEditorsSuiteDWindow = new UITheXtraEditorsSuiteDWindow();
				}
				return this.mUITheXtraEditorsSuiteDWindow;
			}
		}
		public UITheXtraEditorsSuiteDWindow1 UITheXtraEditorsSuiteDWindow1
		{
			get
			{
				if ((this.mUITheXtraEditorsSuiteDWindow1 == null))
				{
					this.mUITheXtraEditorsSuiteDWindow1 = new UITheXtraEditorsSuiteDWindow1();
				}
				return this.mUITheXtraEditorsSuiteDWindow1;
			}
		}
		public UITheXtraEditorsSuiteDWindow2 UITheXtraEditorsSuiteDWindow2
		{
			get
			{
				if ((this.mUITheXtraEditorsSuiteDWindow2 == null))
				{
					this.mUITheXtraEditorsSuiteDWindow2 = new UITheXtraEditorsSuiteDWindow2();
				}
				return this.mUITheXtraEditorsSuiteDWindow2;
			}
		}
		public UIXtraPrintingFeaturesWindow19 UIXtraPrintingFeaturesWindow19
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow19 == null))
				{
					this.mUIXtraPrintingFeaturesWindow19 = new UIXtraPrintingFeaturesWindow19();
				}
				return this.mUIXtraPrintingFeaturesWindow19;
			}
		}
		public UIXtraPrintingFeaturesWindow20 UIXtraPrintingFeaturesWindow20
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow20 == null))
				{
					this.mUIXtraPrintingFeaturesWindow20 = new UIXtraPrintingFeaturesWindow20();
				}
				return this.mUIXtraPrintingFeaturesWindow20;
			}
		}
		public UIPrintOptionsWindow UIPrintOptionsWindow
		{
			get
			{
				if ((this.mUIPrintOptionsWindow == null))
				{
					this.mUIPrintOptionsWindow = new UIPrintOptionsWindow();
				}
				return this.mUIPrintOptionsWindow;
			}
		}
		public UIXtraPrintingFeaturesWindow21 UIXtraPrintingFeaturesWindow21
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow21 == null))
				{
					this.mUIXtraPrintingFeaturesWindow21 = new UIXtraPrintingFeaturesWindow21();
				}
				return this.mUIXtraPrintingFeaturesWindow21;
			}
		}
		public UIXtraPrintingFeaturesWindow22 UIXtraPrintingFeaturesWindow22
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow22 == null))
				{
					this.mUIXtraPrintingFeaturesWindow22 = new UIXtraPrintingFeaturesWindow22();
				}
				return this.mUIXtraPrintingFeaturesWindow22;
			}
		}
		public UIApplicationUILayoutCWindow UIApplicationUILayoutCWindow
		{
			get
			{
				if ((this.mUIApplicationUILayoutCWindow == null))
				{
					this.mUIApplicationUILayoutCWindow = new UIApplicationUILayoutCWindow();
				}
				return this.mUIApplicationUILayoutCWindow;
			}
		}
		public UITheXtraGridSuitebyDeWindow UITheXtraGridSuitebyDeWindow
		{
			get
			{
				if ((this.mUITheXtraGridSuitebyDeWindow == null))
				{
					this.mUITheXtraGridSuitebyDeWindow = new UITheXtraGridSuitebyDeWindow();
				}
				return this.mUITheXtraGridSuitebyDeWindow;
			}
		}
		public UITheXtraGridSuitebyDeWindow1 UITheXtraGridSuitebyDeWindow1
		{
			get
			{
				if ((this.mUITheXtraGridSuitebyDeWindow1 == null))
				{
					this.mUITheXtraGridSuitebyDeWindow1 = new UITheXtraGridSuitebyDeWindow1();
				}
				return this.mUITheXtraGridSuitebyDeWindow1;
			}
		}
		public UITheXtraEditorsSuiteDWindow3 UITheXtraEditorsSuiteDWindow3
		{
			get
			{
				if ((this.mUITheXtraEditorsSuiteDWindow3 == null))
				{
					this.mUITheXtraEditorsSuiteDWindow3 = new UITheXtraEditorsSuiteDWindow3();
				}
				return this.mUITheXtraEditorsSuiteDWindow3;
			}
		}
		public UIFormatRulesEditorforWindow UIFormatRulesEditorforWindow
		{
			get
			{
				if ((this.mUIFormatRulesEditorforWindow == null))
				{
					this.mUIFormatRulesEditorforWindow = new UIFormatRulesEditorforWindow();
				}
				return this.mUIFormatRulesEditorforWindow;
			}
		}
		public UITheXtraGridSuitebyDeWindow2 UITheXtraGridSuitebyDeWindow2
		{
			get
			{
				if ((this.mUITheXtraGridSuitebyDeWindow2 == null))
				{
					this.mUITheXtraGridSuitebyDeWindow2 = new UITheXtraGridSuitebyDeWindow2();
				}
				return this.mUITheXtraGridSuitebyDeWindow2;
			}
		}
		public UIItemWindow91 UIItemWindow9
		{
			get
			{
				if ((this.mUIItemWindow9 == null))
				{
					this.mUIItemWindow9 = new UIItemWindow91();
				}
				return this.mUIItemWindow9;
			}
		}
		public UIXtraPrintingFeaturesWindow4 UIXtraPrintingFeaturesWindow4
		{
			get
			{
				if ((this.mUIXtraPrintingFeaturesWindow4 == null))
				{
					this.mUIXtraPrintingFeaturesWindow4 = new UIXtraPrintingFeaturesWindow4();
				}
				return this.mUIXtraPrintingFeaturesWindow4;
			}
		}
		public UITheXtraNavBarSuiteDeWindow UITheXtraNavBarSuiteDeWindow
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow = new UITheXtraNavBarSuiteDeWindow();
				}
				return this.mUITheXtraNavBarSuiteDeWindow;
			}
		}
		public UITheXtraNavBarSuiteDeWindow1 UITheXtraNavBarSuiteDeWindow1
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow1 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow1 = new UITheXtraNavBarSuiteDeWindow1();
				}
				return this.mUITheXtraNavBarSuiteDeWindow1;
			}
		}
		public UITheXtraNavBarSuiteDeWindow2 UITheXtraNavBarSuiteDeWindow2
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow2 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow2 = new UITheXtraNavBarSuiteDeWindow2();
				}
				return this.mUITheXtraNavBarSuiteDeWindow2;
			}
		}
		public UITheXtraNavBarSuiteDeWindow3 UITheXtraNavBarSuiteDeWindow3
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow3 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow3 = new UITheXtraNavBarSuiteDeWindow3();
				}
				return this.mUITheXtraNavBarSuiteDeWindow3;
			}
		}
		public UITheXtraNavBarSuiteDeWindow4 UITheXtraNavBarSuiteDeWindow4
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow4 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow4 = new UITheXtraNavBarSuiteDeWindow4();
				}
				return this.mUITheXtraNavBarSuiteDeWindow4;
			}
		}
		public UILinkPropertiesWindow1 UILinkPropertiesWindow1
		{
			get
			{
				if ((this.mUILinkPropertiesWindow1 == null))
				{
					this.mUILinkPropertiesWindow1 = new UILinkPropertiesWindow1();
				}
				return this.mUILinkPropertiesWindow1;
			}
		}
		public UITheXtraNavBarSuiteDeWindow6 UITheXtraNavBarSuiteDeWindow6
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow6 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow6 = new UITheXtraNavBarSuiteDeWindow6();
				}
				return this.mUITheXtraNavBarSuiteDeWindow6;
			}
		}
		public UITheXtraNavBarSuiteDeWindow5 UITheXtraNavBarSuiteDeWindow5
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow5 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow5 = new UITheXtraNavBarSuiteDeWindow5();
				}
				return this.mUITheXtraNavBarSuiteDeWindow5;
			}
		}
		public UITheXtraNavBarSuiteDeWindow7 UITheXtraNavBarSuiteDeWindow7
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow7 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow7 = new UITheXtraNavBarSuiteDeWindow7();
				}
				return this.mUITheXtraNavBarSuiteDeWindow7;
			}
		}
		public UITheXtraNavBarSuiteDeWindow8 UITheXtraNavBarSuiteDeWindow8
		{
			get
			{
				if ((this.mUITheXtraNavBarSuiteDeWindow8 == null))
				{
					this.mUITheXtraNavBarSuiteDeWindow8 = new UITheXtraNavBarSuiteDeWindow8();
				}
				return this.mUITheXtraNavBarSuiteDeWindow8;
			}
		}
		public UIWatermarkWindow1 UIWatermarkWindow1
		{
			get
			{
				if ((this.mUIWatermarkWindow1 == null))
				{
					this.mUIWatermarkWindow1 = new UIWatermarkWindow1();
				}
				return this.mUIWatermarkWindow1;
			}
		}
		public UITheXtraGridSuitebyDeWindow3 UITheXtraGridSuitebyDeWindow3
		{
			get
			{
				if ((this.mUITheXtraGridSuitebyDeWindow3 == null))
				{
					this.mUITheXtraGridSuitebyDeWindow3 = new UITheXtraGridSuitebyDeWindow3();
				}
				return this.mUITheXtraGridSuitebyDeWindow3;
			}
		}
		#endregion
		#region Fields
		private CellSelectionViaPageDownButtonParams mCellSelectionViaPageDownButtonParams;
		private ChangeLookUpEditValueViaTypingParams mChangeLookUpEditValueViaTypingParams;
		private ChangeZoomTrackBarValueViaMouseWheelScrollParams mChangeZoomTrackBarValueViaMouseWheelScrollParams;
		private SwitchOffMemoEditAutoHeightOptionParams mSwitchOffMemoEditAutoHeightOptionParams;
		private SwitchToEditTimeModeParams mSwitchToEditTimeModeParams;
		private AddBarToStandaloneBarDockControlParams mAddBarToStandaloneBarDockControlParams;
		private AdditionNewRowParams mAdditionNewRowParams;
		private AddNewConditionExpressionViaConditionExpressionEditorParams mAddNewConditionExpressionViaConditionExpressionEditorParams;
		private AddNewConditionExpressionViaStyleFormatConditionEditorParams mAddNewConditionExpressionViaStyleFormatConditionEditorParams;
		private AddNewFixedColumnToLeftAndScrollParams mAddNewFixedColumnToLeftAndScrollParams;
		private AddNewFixedColumnToRightAndScrollParams mAddNewFixedColumnToRightAndScrollParams;
		private AddNewRibbonGroupItemViaCustomizationFormParams mAddNewRibbonGroupItemViaCustomizationFormParams;
		private AddNewSomeRibbonGroupViaCustomizationFormParams mAddNewSomeRibbonGroupViaCustomizationFormParams;
		private AddRibbonCommandToNewRibbonCategoryInCustomizationFormParams mAddRibbonCommandToNewRibbonCategoryInCustomizationFormParams;
		private AddRibbonCommandToNewRibbonTabInCustomizationFormParams mAddRibbonCommandToNewRibbonTabInCustomizationFormParams;
		private AddRibbonGroupToQuickAccessToolbarParams mAddRibbonGroupToQuickAccessToolbarParams;
		private AssignFindPanelFilterColumnParams mAssignFindPanelFilterColumnParams;
		private CellSelectionViaKeyboardParams mCellSelectionViaKeyboardParams;
		private CellSelectionViaKeyboardAndHoldingDownCTRLParams mCellSelectionViaKeyboardAndHoldingDownCTRLParams;
		private CellSelectionViaPageUpButtonParams mCellSelectionViaPageUpButtonParams;
		private CellSelectionViaShiftPageDownShortcutParams mCellSelectionViaShiftPageDownShortcutParams;
		private CellSelectionViaShiftPageUpShortcutParams mCellSelectionViaShiftPageUpShortcutParams;
		private CellSelectionViaShiftTabShortcutParams mCellSelectionViaShiftTabShortcutParams;
		private CellSelectionViaTabButtonParams mCellSelectionViaTabButtonParams;
		private ChangeAlertControlPropertiesParams mChangeAlertControlPropertiesParams;
		private ChangeAlertFormLocationParams mChangeAlertFormLocationParams;
		private ChangeAlertFormSizeParams mChangeAlertFormSizeParams;
		private ChangeBarCalcEditValueViaF4KeyAndKeyboardParams mChangeBarCalcEditValueViaF4KeyAndKeyboardParams;
		private ChangeBarCalcEditValueViaKeyboardParams mChangeBarCalcEditValueViaKeyboardParams;
		private ChangeBarCalcEditValueViaMouseParams mChangeBarCalcEditValueViaMouseParams;
		private ChangeBarCalcEditValueViaMouseWheelScrollParams mChangeBarCalcEditValueViaMouseWheelScrollParams;
		private ChangeBarColorEditValueViaKeyboardParams mChangeBarColorEditValueViaKeyboardParams;
		private ChangeBarColorEditValueViaMouseParams mChangeBarColorEditValueViaMouseParams;
		private ChangeBarComboBoxEditValueParams mChangeBarComboBoxEditValueParams;
		private ChangeBarComboBoxValueViaF4KeyAndKeyboardParams mChangeBarComboBoxValueViaF4KeyAndKeyboardParams;
		private ChangeBarComboBoxValueViaKeyboardParams mChangeBarComboBoxValueViaKeyboardParams;
		private ChangeBarComboBoxValueViaMouseWheelScrollParams mChangeBarComboBoxValueViaMouseWheelScrollParams;
		private ChangeBarDateEditValueViaF4KeyAndKeyboardParams mChangeBarDateEditValueViaF4KeyAndKeyboardParams;
		private ChangeBarDateEditValueViaKeyboardParams mChangeBarDateEditValueViaKeyboardParams;
		private ChangeBarDateEditValueViaMouseParams mChangeBarDateEditValueViaMouseParams;
		private ChangeBarDateEditValueViaMouseWheelScrollParams mChangeBarDateEditValueViaMouseWheelScrollParams;
		private ChangeBarMemoExEditValueParams mChangeBarMemoExEditValueParams;
		private ChangeBarSpinEditValueViaArrowButtonsParams mChangeBarSpinEditValueViaArrowButtonsParams;
		private ChangeBarSpinEditValueViaMouseWheelScrollParams mChangeBarSpinEditValueViaMouseWheelScrollParams;
		private ChangeBarSpinEditValueViaUpDownKeysParams mChangeBarSpinEditValueViaUpDownKeysParams;
		private ChangeBarTextEditValueParams mChangeBarTextEditValueParams;
		private ChangeBottomMarginForRecalculatedSummariesParams mChangeBottomMarginForRecalculatedSummariesParams;
		private ChangeBottomMarginValueParams mChangeBottomMarginValueParams;
		private ChangeButtonEditValueViaKeyboardParams mChangeButtonEditValueViaKeyboardParams;
		private ChangeCalcEditValueParams mChangeCalcEditValueParams;
		private ChangeCalcEditValueViaKeyboardParams mChangeCalcEditValueViaKeyboardParams;
		private ChangeCalcEditValueViaKeyboardInOpenedDropDownListParams mChangeCalcEditValueViaKeyboardInOpenedDropDownListParams;
		private ChangeCalcEditValueViaMouseParams mChangeCalcEditValueViaMouseParams;
		private ChangeCalcEditValueViaViaMouseWheelScrollParams mChangeCalcEditValueViaViaMouseWheelScrollParams;
		private ChangeCellsValueOnSpreadSheetParams mChangeCellsValueOnSpreadSheetParams;
		private ChangeCellValuesInFixedBandsAndGroupingTabParams mChangeCellValuesInFixedBandsAndGroupingTabParams;
		private ChangeCellValuesInSimpleFixedBandsTabParams mChangeCellValuesInSimpleFixedBandsTabParams;
		private ChangeCellValueToRecalculateSummariesParams mChangeCellValueToRecalculateSummariesParams;
		private ChangeCellValueViaButtonClearParams mChangeCellValueViaButtonClearParams;
		private ChangeCheckedComboBoxEditValueViaButtonSelectAllParams mChangeCheckedComboBoxEditValueViaButtonSelectAllParams;
		private ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams;
		private ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams mChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams;
		private ChangeCheckedComboBoxEditValueViaKeyboardParams mChangeCheckedComboBoxEditValueViaKeyboardParams;
		private ChangeCheckedComboBoxEditValueViaMouseParams mChangeCheckedComboBoxEditValueViaMouseParams;
		private ChangeCheckEditValueViaKeyboardParams mChangeCheckEditValueViaKeyboardParams;
		private ChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams mChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams;
		private ChangeColorEditValueInTabCustomViaKeyboardParams mChangeColorEditValueInTabCustomViaKeyboardParams;
		private ChangeColorEditValueInTabCustomViaMouseParams mChangeColorEditValueInTabCustomViaMouseParams;
		private ChangeColorEditValueInTabSystemViaKeyboardParams mChangeColorEditValueInTabSystemViaKeyboardParams;
		private ChangeColorEditValueInTabSystemViaMouseParams mChangeColorEditValueInTabSystemViaMouseParams;
		private ChangeColorEditValueInTabWebViaKeyboardParams mChangeColorEditValueInTabWebViaKeyboardParams;
		private ChangeColorEditValueInTabWebViaMouseParams mChangeColorEditValueInTabWebViaMouseParams;
		private ChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams mChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams;
		private ChangeComboBoxEditValueParams mChangeComboBoxEditValueParams;
		private ChangeComboBoxEditValueViaF4KeyAndKeyboardParams mChangeComboBoxEditValueViaF4KeyAndKeyboardParams;
		private ChangeComboBoxEditValueViaKeyboardParams mChangeComboBoxEditValueViaKeyboardParams;
		private ChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams mChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams;
		private ChangeComboBoxEditValueViaMouseParams mChangeComboBoxEditValueViaMouseParams;
		private ChangeComboBoxEditValueViaMouseWheelScrollParams mChangeComboBoxEditValueViaMouseWheelScrollParams;
		private ChangeCustomFreightParams mChangeCustomFreightParams;
		private ChangeDateEditValueInVistaTimeModeParams mChangeDateEditValueInVistaTimeModeParams;
		private ChangeDateEditValueViaF4KeyAndKeyboardParams mChangeDateEditValueViaF4KeyAndKeyboardParams;
		private ChangeDateEditValueViaKeyboardParams mChangeDateEditValueViaKeyboardParams;
		private ChangeDateEditValueViaKeyboardInOpenedDropDownListParams mChangeDateEditValueViaKeyboardInOpenedDropDownListParams;
		private ChangeDateEditValueViaMouseParams mChangeDateEditValueViaMouseParams;
		private ChangeDayTimeDateTimeEditValueParams mChangeDayTimeDateTimeEditValueParams;
		private ChangeFormMaxCountParams mChangeFormMaxCountParams;
		private ChangeFullDateAndTimeEditValueParams mChangeFullDateAndTimeEditValueParams;
		private ChangeFullDateTimeEditValueParams mChangeFullDateTimeEditValueParams;
		private ChangeGridLookUpEditorValueViaButtonLastParams mChangeGridLookUpEditorValueViaButtonLastParams;
		private ChangeGridLookUpEditorValueViaKeyboardParams mChangeGridLookUpEditorValueViaKeyboardParams;
		private ChangeGridLookUpEditorValueViaMouseParams mChangeGridLookUpEditorValueViaMouseParams;
		private ChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams mChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams;
		private ChangeImageComboBoxEditValueViaKeyboardParams mChangeImageComboBoxEditValueViaKeyboardParams;
		private ChangeImageComboBoxEditValueViaMouseParams mChangeImageComboBoxEditValueViaMouseParams;
		private ChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams mChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams;
		private ChangeImageComboBoxEditValueViaMouseWheelScrollParams mChangeImageComboBoxEditValueViaMouseWheelScrollParams;
		private ChangeInPlaceGridLookUpEditorValueViaKeyboardParams mChangeInPlaceGridLookUpEditorValueViaKeyboardParams;
		private ChangeInPlaceGridLookUpEditorValueViaMouseParams mChangeInPlaceGridLookUpEditorValueViaMouseParams;
		private ChangeLeftMarginValueParams mChangeLeftMarginValueParams;
		private ChangeLoanAmountValueAndClickButtonCalculateParams mChangeLoanAmountValueAndClickButtonCalculateParams;
		private ChangeLookUpEditValueViaF4KeyAndKeyboardParams mChangeLookUpEditValueViaF4KeyAndKeyboardParams;
		private ChangeLookUpEditValueViaKeyboardParams mChangeLookUpEditValueViaKeyboardParams;
		private ChangeLookUpEditValueViaMouseParams mChangeLookUpEditValueViaMouseParams;
		private ChangeLookUpEditValueViaMouseWheelScrollParams mChangeLookUpEditValueViaMouseWheelScrollParams;
		private ChangeMemoExEditSizeParams mChangeMemoExEditSizeParams;
		private ChangeMemoExEditValueParams mChangeMemoExEditValueParams;
		private ChangeMemoExEditValueViaCancelButtonParams mChangeMemoExEditValueViaCancelButtonParams;
		private ChangeMemoExEditValueViaF4KeyAndKeyboardParams mChangeMemoExEditValueViaF4KeyAndKeyboardParams;
		private ChangeMemoExEditValueViaOkButtonParams mChangeMemoExEditValueViaOkButtonParams;
		private ChangeMonthAndDayDateTimeEditValueParams mChangeMonthAndDayDateTimeEditValueParams;
		private ChangeMRUEditValueViaAddingToDropDownListParams mChangeMRUEditValueViaAddingToDropDownListParams;
		private ChangeMRUEditValueViaDeletingFromDropDownListParams mChangeMRUEditValueViaDeletingFromDropDownListParams;
		private ChangeNavBarItemCaptionParams mChangeNavBarItemCaptionParams;
		private ChangeNavBarLinkItemAndItemCaptionParams mChangeNavBarLinkItemAndItemCaptionParams;
		private ChangeNumberOfRecentDocumentsViaBackstageViewControlParams mChangeNumberOfRecentDocumentsViaBackstageViewControlParams;
		private ChangeNumericMaskBoxEditValuesParams mChangeNumericMaskBoxEditValuesParams;
		private ChangePickImageEditValueViaKeyboardParams mChangePickImageEditValueViaKeyboardParams;
		private ChangePickImageEditValueViaMouseParams mChangePickImageEditValueViaMouseParams;
		private ChangePopupContainerEditSizeParams mChangePopupContainerEditSizeParams;
		private ChangePopupContainerEditValueAndClickCloseButtonParams mChangePopupContainerEditValueAndClickCloseButtonParams;
		private ChangePopupContainerEditValueViaF4KeyAndKeyboardParams mChangePopupContainerEditValueViaF4KeyAndKeyboardParams;
		private ChangePopupContainerEditValueViaKeyboardParams mChangePopupContainerEditValueViaKeyboardParams;
		private ChangePopupContainerEditValueViaMouseParams mChangePopupContainerEditValueViaMouseParams;
		private ChangePrintingSettingsViaPageSetupDialogParams mChangePrintingSettingsViaPageSetupDialogParams;
		private ChangeProgressBarValueViaButtonMinusParams mChangeProgressBarValueViaButtonMinusParams;
		private ChangeProgressBarValueViaButtonPlusParams mChangeProgressBarValueViaButtonPlusParams;
		private ChangeRangeTrackBarValueViaMouseParams mChangeRangeTrackBarValueViaMouseParams;
		private ChangeRegExMaskBoxEditValuesParams mChangeRegExMaskBoxEditValuesParams;
		private ChangeRegularMaskBoxEditValuesParams mChangeRegularMaskBoxEditValuesParams;
		private ChangeRFCDateTimeEditValueParams mChangeRFCDateTimeEditValueParams;
		private ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams mChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams;
		private ChangeRightMarginValueParams mChangeRightMarginValueParams;
		private ChangeShortTimeDateTimeEditValueParams mChangeShortTimeDateTimeEditValueParams;
		private ChangeSimpleMaskBoxEditValuesParams mChangeSimpleMaskBoxEditValuesParams;
		private ChangeSpinBoxEditValueViaTypingParams mChangeSpinBoxEditValueViaTypingParams;
		private ChangeSpinEditValueViaArrowButtonsParams mChangeSpinEditValueViaArrowButtonsParams;
		private ChangeSpinEditValueViaKeyboardParams mChangeSpinEditValueViaKeyboardParams;
		private ChangeSpinEditValueViaMouseWheelScrollParams mChangeSpinEditValueViaMouseWheelScrollParams;
		private ChangeSplitterPositionOnHorizontalSplitPresentationTabParams mChangeSplitterPositionOnHorizontalSplitPresentationTabParams;
		private ChangeSplitterPositionOnVerticalSplitPresentationTabParams mChangeSplitterPositionOnVerticalSplitPresentationTabParams;
		private ChangeStatusBarInfoViaChangingLeftMarginValueParams mChangeStatusBarInfoViaChangingLeftMarginValueParams;
		private ChangeTimeEditValueViaArrowButtonsParams mChangeTimeEditValueViaArrowButtonsParams;
		private ChangeTimeEditValueViaKeyboardParams mChangeTimeEditValueViaKeyboardParams;
		private ChangeTimeEditValueViaMouseWheelScrollParams mChangeTimeEditValueViaMouseWheelScrollParams;
		private ChangeTopMarginForRecalculatedSummariesParams mChangeTopMarginForRecalculatedSummariesParams;
		private ChangeTopMarginValueParams mChangeTopMarginValueParams;
		private ChangeTrackBarValueViaKeyboardParams mChangeTrackBarValueViaKeyboardParams;
		private ChangeTrackBarValueViaMouseParams mChangeTrackBarValueViaMouseParams;
		private ChangeTrackBarValueViaMouseWheelScrollParams mChangeTrackBarValueViaMouseWheelScrollParams;
		private ChangeUniversalSortableDateTimeEditValueParams mChangeUniversalSortableDateTimeEditValueParams;
		private ChangeVScrollbarValueParams mChangeVScrollbarValueParams;
		private ChangeZoomTrackBarValueViaLeftRightButtonsParams mChangeZoomTrackBarValueViaLeftRightButtonsParams;
		private ChangeZoomTrackBarValueViaMouseParams mChangeZoomTrackBarValueViaMouseParams;
		private ChangeZoomTrackBarValueViaUpDownKeysParams mChangeZoomTrackBarValueViaUpDownKeysParams;
		private CheckActionsMemoAfterClickImageHeaderButtonExpectedValues mCheckActionsMemoAfterClickImageHeaderButtonExpectedValues;
		private CheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues mCheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues;
		private CheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues mCheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues;
		private CheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues mCheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues;
		private CheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues mCheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues;
		private CheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues mCheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues;
		private CheckAddedConditionExpressionExpectedValues mCheckAddedConditionExpressionExpectedValues;
		private CheckAddedFooterBricksTextExpectedValues mCheckAddedFooterBricksTextExpectedValues;
		private CheckAddedHeaderBricksTextExpectedValues mCheckAddedHeaderBricksTextExpectedValues;
		private CheckAddedRowExpectedValues mCheckAddedRowExpectedValues;
		private CheckAddedSummaryExpectedValues mCheckAddedSummaryExpectedValues;
		private CheckAscendingSortBySummaryExpectedValues mCheckAscendingSortBySummaryExpectedValues;
		private CheckBarCalcEditValueExpectedValues mCheckBarCalcEditValueExpectedValues;
		private CheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues mCheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues;
		private CheckBarComboBoxEditValueExpectedValues mCheckBarComboBoxEditValueExpectedValues;
		private CheckBarDateEditValueExpectedValues mCheckBarDateEditValueExpectedValues;
		private CheckBarMemoExEditValueExpectedValues mCheckBarMemoExEditValueExpectedValues;
		private CheckBarTextEditValueExpectedValues mCheckBarTextEditValueExpectedValues;
		private CheckButtonEditValueExpectedValues mCheckButtonEditValueExpectedValues;
		private CheckCalcEditValueExpectedValues mCheckCalcEditValueExpectedValues;
		private CheckCalcEditValueChangedViaMouseWheelScrollExpectedValues mCheckCalcEditValueChangedViaMouseWheelScrollExpectedValues;
		private CheckChangedBottomMarginValueExpectedValues mCheckChangedBottomMarginValueExpectedValues;
		private CheckChangedGridLookUpEditorValueExpectedValues mCheckChangedGridLookUpEditorValueExpectedValues;
		private CheckChangedGridLookUpEditorValueViaButtonLastExpectedValues mCheckChangedGridLookUpEditorValueViaButtonLastExpectedValues;
		private CheckChangedGridLookUpEditorValueViaButtonNextExpectedValues mCheckChangedGridLookUpEditorValueViaButtonNextExpectedValues;
		private CheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues mCheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues;
		private CheckChangedInPlaceGridLookUpEditorValueExpectedValues mCheckChangedInPlaceGridLookUpEditorValueExpectedValues;
		private CheckChangedInPlaceSearchLookUpEditorValueExpectedValues mCheckChangedInPlaceSearchLookUpEditorValueExpectedValues;
		private CheckChangedLeftMarginValueExpectedValues mCheckChangedLeftMarginValueExpectedValues;
		private CheckChangedListViewTypeViaCheckingBrickTextExpectedValues mCheckChangedListViewTypeViaCheckingBrickTextExpectedValues;
		private CheckChangedNumericMaskBoxEditValuesExpectedValues mCheckChangedNumericMaskBoxEditValuesExpectedValues;
		private CheckChangedProgressBarValueViaButtonMinusExpectedValues mCheckChangedProgressBarValueViaButtonMinusExpectedValues;
		private CheckChangedProgressBarValueViaButtonPlusExpectedValues mCheckChangedProgressBarValueViaButtonPlusExpectedValues;
		private CheckChangedRibbonGallerySelectedItemExpectedValues mCheckChangedRibbonGallerySelectedItemExpectedValues;
		private CheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues mCheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues;
		private CheckChangedRightMarginValueExpectedValues mCheckChangedRightMarginValueExpectedValues;
		private CheckChangedSearchLookUpEditorValueExpectedValues mCheckChangedSearchLookUpEditorValueExpectedValues;
		private CheckChangedSummaryExpectedValues mCheckChangedSummaryExpectedValues;
		private CheckChangedTopMarginValueExpectedValues mCheckChangedTopMarginValueExpectedValues;
		private CheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues mCheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues;
		private CheckChangedViaKeyboardCheckEditValueExpectedValues mCheckChangedViaKeyboardCheckEditValueExpectedValues;
		private CheckChangedViaMouseCheckEditValueExpectedValues mCheckChangedViaMouseCheckEditValueExpectedValues;
		private CheckCheckedComboBoxEditValueExpectedValues mCheckCheckedComboBoxEditValueExpectedValues;
		private CheckCheckedStateTrueExpectedValues mCheckCheckedStateTrueExpectedValues;
		private CheckClearedCellValueExpectedValues mCheckClearedCellValueExpectedValues;
		private CheckClearedDateEditValueExpectedValues mCheckClearedDateEditValueExpectedValues;
		private CheckClearedFilterExpectedValues mCheckClearedFilterExpectedValues;
		private CheckClearedSummaryItemExpectedValues mCheckClearedSummaryItemExpectedValues;
		private CheckColorEditValueExpectedValues mCheckColorEditValueExpectedValues;
		private CheckColorEditValueInTabCustomExpectedValues mCheckColorEditValueInTabCustomExpectedValues;
		private CheckColorEditValueInTabSystemExpectedValues mCheckColorEditValueInTabSystemExpectedValues;
		private CheckColorEditValueInTabWebExpectedValues mCheckColorEditValueInTabWebExpectedValues;
		private CheckComboBoxEditSelectedIndexExpectedValues mCheckComboBoxEditSelectedIndexExpectedValues;
		private CheckComboBoxEditValueExpectedValues mCheckComboBoxEditValueExpectedValues;
		private CheckConservationOfQuantityPagesExpectedValues mCheckConservationOfQuantityPagesExpectedValues;
		private CheckCreatedYearCalendarExpectedValues mCheckCreatedYearCalendarExpectedValues;
		private CheckCustomizedAlertFormCaptionExpectedValues mCheckCustomizedAlertFormCaptionExpectedValues;
		private CheckCustomizedCSVSpecificExportOptionsExpectedValues mCheckCustomizedCSVSpecificExportOptionsExpectedValues;
		private CheckCustomizedHTMLSpecificExportOptionsExpectedValues mCheckCustomizedHTMLSpecificExportOptionsExpectedValues;
		private CheckCustomizedImageSpecificExportOptionsExpectedValues mCheckCustomizedImageSpecificExportOptionsExpectedValues;
		private CheckCustomizedPasswordSecurityOptionsExpectedValues mCheckCustomizedPasswordSecurityOptionsExpectedValues;
		private CheckCustomizedPDFSpecificExportOptionsExpectedValues mCheckCustomizedPDFSpecificExportOptionsExpectedValues;
		private CheckCustomizedRibbonPrintSettingsExpectedValues mCheckCustomizedRibbonPrintSettingsExpectedValues;
		private CheckCustomizedRTFSpecificExportOptionsExpectedValues mCheckCustomizedRTFSpecificExportOptionsExpectedValues;
		private CheckCustomizedXLSSpecificExportOptionsExpectedValues mCheckCustomizedXLSSpecificExportOptionsExpectedValues;
		private CheckCustomSumAfterChangingCustomFreightExpectedValues mCheckCustomSumAfterChangingCustomFreightExpectedValues;
		private CheckDateEditValueChangedViaKeyboardExpectedValues mCheckDateEditValueChangedViaKeyboardExpectedValues;
		private CheckDateEditValueChangedViaMouseExpectedValues mCheckDateEditValueChangedViaMouseExpectedValues;
		private CheckDateEditValueInVistaTimeModeExpectedValues mCheckDateEditValueInVistaTimeModeExpectedValues;
		private CheckDayTimeDateTimeEditValueExpectedValues mCheckDayTimeDateTimeEditValueExpectedValues;
		private CheckDeletedBarLinkContainerPasteLinkExpectedValues mCheckDeletedBarLinkContainerPasteLinkExpectedValues;
		private CheckDeletedConditionExpressionExpectedValues mCheckDeletedConditionExpressionExpectedValues;
		private CheckDescendingSortBySummaryExpectedValues mCheckDescendingSortBySummaryExpectedValues;
		private CheckExpandedGroupRowExpectedValues mCheckExpandedGroupRowExpectedValues;
		private CheckExpandedMasterRowExpectedValues mCheckExpandedMasterRowExpectedValues;
		private CheckFilterConditionExpectedValues mCheckFilterConditionExpectedValues;
		private CheckFilterDisplayBugsExpectedValues mCheckFilterDisplayBugsExpectedValues;
		private CheckFilterDisplayNonBugsExpectedValues mCheckFilterDisplayNonBugsExpectedValues;
		private CheckFilteredDataExpectedValues mCheckFilteredDataExpectedValues;
		private CheckFilteringResultAfterApplyingFilterExpectedValues mCheckFilteringResultAfterApplyingFilterExpectedValues;
		private CheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues mCheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues;
		private CheckFilteringResultAfterCleaningFilterExpectedValues mCheckFilteringResultAfterCleaningFilterExpectedValues;
		private CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues mCheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues;
		private CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues mCheckFilterMadeViaFilterControlInPropertiesTabExpectedValues;
		private CheckFilterMadeViaFilterDropdownListExpectedValues mCheckFilterMadeViaFilterDropdownListExpectedValues;
		private CheckFooterBrickSettingsExpectedValues mCheckFooterBrickSettingsExpectedValues;
		private CheckFullCollapsedGroupRowExpectedValues mCheckFullCollapsedGroupRowExpectedValues;
		private CheckFullDateAndTimeEditValueExpectedValues mCheckFullDateAndTimeEditValueExpectedValues;
		private CheckFullDateTimeEditValueExpectedValues mCheckFullDateTimeEditValueExpectedValues;
		private CheckFullExpandedGroupRowExpectedValues mCheckFullExpandedGroupRowExpectedValues;
		private CheckGroupedDataExpectedValues mCheckGroupedDataExpectedValues;
		private CheckGroupedDataByCategoryExpectedValues mCheckGroupedDataByCategoryExpectedValues;
		private CheckGroupedDataByCustomIntervalExpectedValues mCheckGroupedDataByCustomIntervalExpectedValues;
		private CheckGroupedDataByDateRangeDataExpectedValues mCheckGroupedDataByDateRangeDataExpectedValues;
		private CheckGroupedDataByMonthDataExpectedValues mCheckGroupedDataByMonthDataExpectedValues;
		private CheckGroupedDataByYearDataExpectedValues mCheckGroupedDataByYearDataExpectedValues;
		private CheckGroupedDataWithMultipleValuesGroupingExpectedValues mCheckGroupedDataWithMultipleValuesGroupingExpectedValues;
		private CheckGroupedMasterDetailDataExpectedValues mCheckGroupedMasterDetailDataExpectedValues;
		private CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues mCheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues;
		private CheckGroupIndexAfterGroupedDataExpectedValues mCheckGroupIndexAfterGroupedDataExpectedValues;
		private CheckGroupIndexAfterUngroupedDataExpectedValues mCheckGroupIndexAfterUngroupedDataExpectedValues;
		private CheckHeaderBrickSettingsExpectedValues mCheckHeaderBrickSettingsExpectedValues;
		private CheckHiddenToolbarExpectedValues mCheckHiddenToolbarExpectedValues;
		private CheckImageComboBoxEditSelectedIndexExpectedValues mCheckImageComboBoxEditSelectedIndexExpectedValues;
		private CheckImageComboBoxEditValueExpectedValues mCheckImageComboBoxEditValueExpectedValues;
		private CheckInvertedSelectedCheckedListBoxValuesExpectedValues mCheckInvertedSelectedCheckedListBoxValuesExpectedValues;
		private CheckInvokedCustomizationFormExpectedValues mCheckInvokedCustomizationFormExpectedValues;
		private CheckLogAfterClickDataNavigatorAppendButtonExpectedValues mCheckLogAfterClickDataNavigatorAppendButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues mCheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorEndEditButtonExpectedValues mCheckLogAfterClickDataNavigatorEndEditButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorFirstButtonExpectedValues mCheckLogAfterClickDataNavigatorFirstButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorLastButtonExpectedValues mCheckLogAfterClickDataNavigatorLastButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorLockButtonExpectedValues mCheckLogAfterClickDataNavigatorLockButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorNextButtonExpectedValues mCheckLogAfterClickDataNavigatorNextButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorNextPageButtonExpectedValues mCheckLogAfterClickDataNavigatorNextPageButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorPreviousButtonExpectedValues mCheckLogAfterClickDataNavigatorPreviousButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues mCheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorRemoveButtonExpectedValues mCheckLogAfterClickDataNavigatorRemoveButtonExpectedValues;
		private CheckLogAfterClickDataNavigatorSearchButtonExpectedValues mCheckLogAfterClickDataNavigatorSearchButtonExpectedValues;
		private CheckLogAfterClickDropDownButtonExpectedValues mCheckLogAfterClickDropDownButtonExpectedValues;
		private CheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues mCheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues;
		private CheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues mCheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues;
		private CheckLookUpEditValueExpectedValues mCheckLookUpEditValueExpectedValues;
		private CheckMemoEditValueExpectedValues mCheckMemoEditValueExpectedValues;
		private CheckMonthAndDayDateTimeEditValueExpectedValues mCheckMonthAndDayDateTimeEditValueExpectedValues;
		private CheckMRUEditValueAfterAddingExpectedValues mCheckMRUEditValueAfterAddingExpectedValues;
		private CheckMRUEditValueAfterDeletingExpectedValues mCheckMRUEditValueAfterDeletingExpectedValues;
		private CheckMRUEditValueAfterSelectionExpectedValues mCheckMRUEditValueAfterSelectionExpectedValues;
		private CheckMRUEditValueAfterTypingExpectedValues mCheckMRUEditValueAfterTypingExpectedValues;
		private CheckMultiExtendedSelectionInListBoxExpectedValues mCheckMultiExtendedSelectionInListBoxExpectedValues;
		private CheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues mCheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues;
		private CheckMultiSimpleSelectionInListBoxExpectedValues mCheckMultiSimpleSelectionInListBoxExpectedValues;
		private CheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues mCheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues;
		private CheckPickImageEditValueExpectedValues mCheckPickImageEditValueExpectedValues;
		private CheckPopupContainerEditSizeExpectedValues mCheckPopupContainerEditSizeExpectedValues;
		private CheckQuicklyAccessToRecentDocumentsParams mCheckQuicklyAccessToRecentDocumentsParams;
		private CheckRangeTrackBarValueExpectedValues mCheckRangeTrackBarValueExpectedValues;
		private CheckRecalculatedSummariesValueExpectedValues mCheckRecalculatedSummariesValueExpectedValues;
		private CheckRecalculatedTotalRowAndColumnCellsExpectedValues mCheckRecalculatedTotalRowAndColumnCellsExpectedValues;
		private CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues mCheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues;
		private CheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues mCheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues;
		private CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues mCheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues;
		private CheckRegExMaskBoxEditValuesExpectedValues mCheckRegExMaskBoxEditValuesExpectedValues;
		private CheckRegularMaskBoxEditValuesExpectedValues mCheckRegularMaskBoxEditValuesExpectedValues;
		private CheckRemovedSortingExpectedValues mCheckRemovedSortingExpectedValues;
		private CheckReorderedColumnsExpectedValues mCheckReorderedColumnsExpectedValues;
		private CheckRFCDateTimeEditValueExpectedValues mCheckRFCDateTimeEditValueExpectedValues;
		private CheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues mCheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues;
		private CheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues mCheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues;
		private CheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues mCheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues;
		private CheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues mCheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues;
		private CheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues mCheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues;
		private CheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues mCheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues;
		private CheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues mCheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues;
		private CheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues mCheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues;
		private CheckRibbonRichEditTextForAssertionReplacingExpectedValues mCheckRibbonRichEditTextForAssertionReplacingExpectedValues;
		private CheckSelectedCellsViaCtrlAShortcutExpectedValues mCheckSelectedCellsViaCtrlAShortcutExpectedValues;
		private CheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues mCheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues;
		private CheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues mCheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues;
		private CheckSelectedCellsViaPageDownButtonExpectedValues mCheckSelectedCellsViaPageDownButtonExpectedValues;
		private CheckSelectedCellsViaPageUpButtonExpectedValues mCheckSelectedCellsViaPageUpButtonExpectedValues;
		private CheckSelectedCellsViaShiftPageDownShortcutExpectedValues mCheckSelectedCellsViaShiftPageDownShortcutExpectedValues;
		private CheckSelectedCellsViaShiftPageUpShortcutExpectedValues mCheckSelectedCellsViaShiftPageUpShortcutExpectedValues;
		private CheckSelectedCellsViaShiftTabShortcutExpectedValues mCheckSelectedCellsViaShiftTabShortcutExpectedValues;
		private CheckSelectedCellsViaTabButtonExpectedValues mCheckSelectedCellsViaTabButtonExpectedValues;
		private CheckSelectedCheckedComboBoxEditValuesExpectedValues mCheckSelectedCheckedComboBoxEditValuesExpectedValues;
		private CheckSelectedCheckedListBoxValueExpectedValues mCheckSelectedCheckedListBoxValueExpectedValues;
		private CheckSelectedListBoxValueExpectedValues mCheckSelectedListBoxValueExpectedValues;
		private CheckSelectedMemoEditTextExpectedValues mCheckSelectedMemoEditTextExpectedValues;
		private CheckSelectedRowsViaMouseExpectedValues mCheckSelectedRowsViaMouseExpectedValues;
		private CheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues mCheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues;
		private CheckSelectedStateTrueExpectedValues mCheckSelectedStateTrueExpectedValues;
		private CheckSelectedTextEditTextExpectedValues mCheckSelectedTextEditTextExpectedValues;
		private CheckShortTimeDateTimeEditValueExpectedValues mCheckShortTimeDateTimeEditValueExpectedValues;
		private CheckShowedAlertFormCaptionExpectedValues mCheckShowedAlertFormCaptionExpectedValues;
		private CheckSimpleFilteredDataExpectedValues mCheckSimpleFilteredDataExpectedValues;
		private CheckSimpleMaskBoxEditValuesExpectedValues mCheckSimpleMaskBoxEditValuesExpectedValues;
		private CheckSimplePadTextExpectedValues mCheckSimplePadTextExpectedValues;
		private CheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues mCheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues;
		private CheckSortedDataByPriceAverageAscendingExpectedValues mCheckSortedDataByPriceAverageAscendingExpectedValues;
		private CheckSpinBoxEditValueExpectedValues mCheckSpinBoxEditValueExpectedValues;
		private CheckSpinEditValueExpectedValues mCheckSpinEditValueExpectedValues;
		private CheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues mCheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues;
		private CheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues mCheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues;
		private CheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues mCheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues;
		private CheckStatusBarInfoAfterChangingMarginExpectedValues mCheckStatusBarInfoAfterChangingMarginExpectedValues;
		private CheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues mCheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues;
		private CheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues mCheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues;
		private CheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues;
		private CheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues mCheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues;
		private CheckStatusBarInfoBeforeChangingMarginExpectedValues mCheckStatusBarInfoBeforeChangingMarginExpectedValues;
		private CheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues mCheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues;
		private CheckSumDiscountAmountExpectedValues mCheckSumDiscountAmountExpectedValues;
		private CheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues mCheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues;
		private CheckSumTotalExpectedValues mCheckSumTotalExpectedValues;
		private CheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues mCheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues;
		private CheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues mCheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues;
		private CheckTextEditValueExpectedValues mCheckTextEditValueExpectedValues;
		private CheckTimeEditValueExpectedValues mCheckTimeEditValueExpectedValues;
		private CheckTrackBarValueExpectedValues mCheckTrackBarValueExpectedValues;
		private CheckUngroupedDataExpectedValues mCheckUngroupedDataExpectedValues;
		private CheckUngroupedMasterDetailDataExpectedValues mCheckUngroupedMasterDetailDataExpectedValues;
		private CheckUniversalSortableDateTimeEditValueExpectedValues mCheckUniversalSortableDateTimeEditValueExpectedValues;
		private CheckViaKeyboardParams mCheckViaKeyboardParams;
		private CheckViaMouseParams mCheckViaMouseParams;
		private CheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues mCheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues;
		private CheckVisibleIndexOfHiddenBandExpectedValues mCheckVisibleIndexOfHiddenBandExpectedValues;
		private CheckWatermarkOptionsExpectedValues mCheckWatermarkOptionsExpectedValues;
		private CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues;
		private CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues mCheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues;
		private CheckZoomTrackBarValueExpectedValues mCheckZoomTrackBarValueExpectedValues;
		private ChoiceMenuItemWithSubmenuParams mChoiceMenuItemWithSubmenuParams;
		private ClearDateEditValueViaButtonClearParams mClearDateEditValueViaButtonClearParams;
		private ClearFilterViaButtonEscParams mClearFilterViaButtonEscParams;
		private ClearFilterViaClickColumnHeaderParams mClearFilterViaClickColumnHeaderParams;
		private ClickAddedHeaderBricksParams mClickAddedHeaderBricksParams;
		private ClickAddedToQuickAccessToolbarRibbonGroupParams mClickAddedToQuickAccessToolbarRibbonGroupParams;
		private ClickCopyRibbonItemViaMouseParams mClickCopyRibbonItemViaMouseParams;
		private ClickDisplayedRibbonTabParams mClickDisplayedRibbonTabParams;
		private ClickDownArrowKeyForExpandMainMenuDropdownListParams mClickDownArrowKeyForExpandMainMenuDropdownListParams;
		private ClickEditMenuCopyItemParams mClickEditMenuCopyItemParams;
		private ClickEditMenuPasteItemParams mClickEditMenuPasteItemParams;
		private ClickEditMenuUndoItemParams mClickEditMenuUndoItemParams;
		private ClickEnterKeyForExpandMainMenuDropdownListParams mClickEnterKeyForExpandMainMenuDropdownListParams;
		private ClickEnterOnRibbonRichEditParams mClickEnterOnRibbonRichEditParams;
		private ClickEscKeyForCollapseMainMenuDropdownListParams mClickEscKeyForCollapseMainMenuDropdownListParams;
		private ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams mClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams;
		private ClickRibbonItemForAssertionSwitchingBetweenTabsParams mClickRibbonItemForAssertionSwitchingBetweenTabsParams;
		private ClickRibbonItemOfContextualTabParams mClickRibbonItemOfContextualTabParams;
		private CreateComplexFilterViaCustomAutoFilterParams mCreateComplexFilterViaCustomAutoFilterParams;
		private CreateExpressionsViaContextMenuParams mCreateExpressionsViaContextMenuParams;
		private CreateExpressionsViaShowExpressionsButtonParams mCreateExpressionsViaShowExpressionsButtonParams;
		private CreateFilterConditionViaAutoFilterRowParams mCreateFilterConditionViaAutoFilterRowParams;
		private CreateFilterDisplayBugsParams mCreateFilterDisplayBugsParams;
		private CreateFilterDisplayNonBugsParams mCreateFilterDisplayNonBugsParams;
		private CreateFilterViaFilterControlInCustomFilterControlBindingTabParams mCreateFilterViaFilterControlInCustomFilterControlBindingTabParams;
		private CreateFilterViaFilterControlInPropertiesTabParams mCreateFilterViaFilterControlInPropertiesTabParams;
		private CreateFilterViaFilterDropdownListParams mCreateFilterViaFilterDropdownListParams;
		private CreateFilterViaFilterEditorParams mCreateFilterViaFilterEditorParams;
		private CreateFilterViaFindPanelParams mCreateFilterViaFindPanelParams;
		private CreateNewDocumentViaClickRibbonItemNewParams mCreateNewDocumentViaClickRibbonItemNewParams;
		private CreatePrintPreviewYearCalendarParams mCreatePrintPreviewYearCalendarParams;
		private CreateSimpleFilterViaClickColumnHeaderParams mCreateSimpleFilterViaClickColumnHeaderParams;
		private CreateWaterMarkAndCustomizeOptionsParams mCreateWaterMarkAndCustomizeOptionsParams;
		private CreateWaterMarkViaChoosingValueInDropDownListParams mCreateWaterMarkViaChoosingValueInDropDownListParams;
		private CustomizeCSVSpecificExportOptionsParams mCustomizeCSVSpecificExportOptionsParams;
		private CustomizeHTMLSpecificExportOptionsParams mCustomizeHTMLSpecificExportOptionsParams;
		private CustomizeImageSpecificExportOptionsParams mCustomizeImageSpecificExportOptionsParams;
		private CustomizeLinksInBarLinkContainerParams mCustomizeLinksInBarLinkContainerParams;
		private CustomizePDFPasswordSecurityOptionsParams mCustomizePDFPasswordSecurityOptionsParams;
		private CustomizePDFSpecificExportOptionsParams mCustomizePDFSpecificExportOptionsParams;
		private CustomizePrintSettingsViaRibbonApplicationPrintItemParams mCustomizePrintSettingsViaRibbonApplicationPrintItemParams;
		private CustomizeRTFSpecificExportOptionsParams mCustomizeRTFSpecificExportOptionsParams;
		private CustomizeXLSSpecificExportOptionsParams mCustomizeXLSSpecificExportOptionsParams;
		private DeleteConditionExpressionParams mDeleteConditionExpressionParams;
		private DisplayBarCommandViaCustomizationFormParams mDisplayBarCommandViaCustomizationFormParams;
		private DisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams mDisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams;
		private DisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams mDisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams;
		private DisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams mDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams;
		private DisplayHiddenFindPanelViaCtrlFShortcutParams mDisplayHiddenFindPanelViaCtrlFShortcutParams;
		private DisplayRibbonTabViaCustomizationFormItemParams mDisplayRibbonTabViaCustomizationFormItemParams;
		private DisplayToolbarViaCustomizationFormParams mDisplayToolbarViaCustomizationFormParams;
		private ExpandMasterRowViaCtrlPlusShortcutParams mExpandMasterRowViaCtrlPlusShortcutParams;
		private ExpandRibbonViaCtrlF1ShortcutParams mExpandRibbonViaCtrlF1ShortcutParams;
		private FindAndSelectionResultViaKeyboardParams mFindAndSelectionResultViaKeyboardParams;
		private FindAndSelectionResultViaKeyboardOnInPlaceTabParams mFindAndSelectionResultViaKeyboardOnInPlaceTabParams;
		private FindAndSelectionResultViaMouseParams mFindAndSelectionResultViaMouseParams;
		private FindAndSelectionResultViaMouseOnInPlaceTabParams mFindAndSelectionResultViaMouseOnInPlaceTabParams;
		private GroupDataAndChangeGroupOrderParams mGroupDataAndChangeGroupOrderParams;
		private GroupDataViaDraggingColumnHeaderParams mGroupDataViaDraggingColumnHeaderParams;
		private GroupMasterDetailDataParams mGroupMasterDetailDataParams;
		private GroupMasterDetailDataOnJoinedGroupPanelParams mGroupMasterDetailDataOnJoinedGroupPanelParams;
		private HideBandViaDraggingBandHeaderParams mHideBandViaDraggingBandHeaderParams;
		private HideBandViaDraggingBandHeaderToCustomizationFormParams mHideBandViaDraggingBandHeaderToCustomizationFormParams;
		private HideColumnViaDraggingColumnHeaderParams mHideColumnViaDraggingColumnHeaderParams;
		private HideColumnViaDraggingColumnHeaderOnCustomizationFormParams mHideColumnViaDraggingColumnHeaderOnCustomizationFormParams;
		private HideRibbonTabViaCustomizationFormParams mHideRibbonTabViaCustomizationFormParams;
		private HideToolbarViaCustomizationFormParams mHideToolbarViaCustomizationFormParams;
		private InvokeCollapsedRibbonCommandViaMouseParams mInvokeCollapsedRibbonCommandViaMouseParams;
		private InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams mInvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams;
		private InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams mInvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams;
		private InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams mInvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams;
		private InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams mInvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams;
		private InvokeRibbonPasteCommandViaShortcutParams mInvokeRibbonPasteCommandViaShortcutParams;
		private InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams mInvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams;
		private InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams mInvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams;
		private InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams mInvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams;
		private MakeColumnNonFixedAndScrollParams mMakeColumnNonFixedAndScrollParams;
		private MakeFooterBrickFontSettingsParams mMakeFooterBrickFontSettingsParams;
		private MakePictureEditAutoHeightOptionSwitchOnParams mMakePictureEditAutoHeightOptionSwitchOnParams;
		private MinimizeRibbonViaCtrlF1ShortcutParams mMinimizeRibbonViaCtrlF1ShortcutParams;
		private MoveDockedBarToFormBottomParams mMoveDockedBarToFormBottomParams;
		private MoveDockedBarToNewPositionParams mMoveDockedBarToNewPositionParams;
		private MoveFocusToAnotherBarItemViaArrowKeysParams mMoveFocusToAnotherBarItemViaArrowKeysParams;
		private MoveFocusToAnotherBarViaCtrlTabShortcutParams mMoveFocusToAnotherBarViaCtrlTabShortcutParams;
		private MoveFocusToAnotherMainMenuItemViaArrowKeysParams mMoveFocusToAnotherMainMenuItemViaArrowKeysParams;
		private MoveFocusToBarCommandViaUnderscoredLetterParams mMoveFocusToBarCommandViaUnderscoredLetterParams;
		private MoveFocusToNextBarCommandViaTabKeyParams mMoveFocusToNextBarCommandViaTabKeyParams;
		private MoveFocusToNextMainMenuItemViaTabKeyParams mMoveFocusToNextMainMenuItemViaTabKeyParams;
		private MoveFocusToPreviousCommandViaShiftTabShortcutParams mMoveFocusToPreviousCommandViaShiftTabShortcutParams;
		private MoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams mMoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams;
		private MoveFocusToSubmenuViaRightArrowKeyParams mMoveFocusToSubmenuViaRightArrowKeyParams;
		private MoveNavBarOverflowPanelSplitterDownParams mMoveNavBarOverflowPanelSplitterDownParams;
		private MoveNavBarOverflowPanelSplitterUpParams mMoveNavBarOverflowPanelSplitterUpParams;
		private MultiExtendedSelectionInListBoxViaKeyboardParams mMultiExtendedSelectionInListBoxViaKeyboardParams;
		private MultiSimpleSelectionInListBoxViaKeyboardParams mMultiSimpleSelectionInListBoxViaKeyboardParams;
		private MultiSimpleSelectionInListBoxViaMouseParams mMultiSimpleSelectionInListBoxViaMouseParams;
		private PressSimplePadMenuShortcutParams mPressSimplePadMenuShortcutParams;
		private PressUnderscoredLetterForExpandMainMenuDropdownListParams mPressUnderscoredLetterForExpandMainMenuDropdownListParams;
		private RenameRibbonCategoryViaCustomizationFormParams mRenameRibbonCategoryViaCustomizationFormParams;
		private RenameRibbonGroupViaCustomizationFormParams mRenameRibbonGroupViaCustomizationFormParams;
		private RenameRibbonTabViaCustomizationFormParams mRenameRibbonTabViaCustomizationFormParams;
		private ReorderBandsViaDraggingOnAdvancedBandedGridViewParams mReorderBandsViaDraggingOnAdvancedBandedGridViewParams;
		private ReorderBandsViaDraggingOnBandedGridViewParams mReorderBandsViaDraggingOnBandedGridViewParams;
		private ReorderColumnsViaDraggingParams mReorderColumnsViaDraggingParams;
		private ReplaceInRibbonRichEditViaClickRibbonItemParams mReplaceInRibbonRichEditViaClickRibbonItemParams;
		private ReplaceInRibbonRichEditViaCtrlHShortcutParams mReplaceInRibbonRichEditViaCtrlHShortcutParams;
		private ResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams mResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams;
		private ResizeBandViaDraggingRightEdgeOnBandedGridViewParams mResizeBandViaDraggingRightEdgeOnBandedGridViewParams;
		private ResizeColumnViaDraggingRightEdgeParams mResizeColumnViaDraggingRightEdgeParams;
		private ResizeFixedBandParams mResizeFixedBandParams;
		private RestoreDefaultToolbarLayoutViaCustomizationFormParams mRestoreDefaultToolbarLayoutViaCustomizationFormParams;
		private ScrollingInFixedBandsAndGroupingTabViaKeyboardParams mScrollingInFixedBandsAndGroupingTabViaKeyboardParams;
		private ScrollingInFixedBandsAndGroupingTabViaMouseParams mScrollingInFixedBandsAndGroupingTabViaMouseParams;
		private ScrollingInSimpleFixedBandsTabViaKeyboardParams mScrollingInSimpleFixedBandsTabViaKeyboardParams;
		private ScrollingInSimpleFixedBandsTabViaMouseParams mScrollingInSimpleFixedBandsTabViaMouseParams;
		private ScrollPrintPreviewViaHScrollBarParams mScrollPrintPreviewViaHScrollBarParams;
		private ScrollPrintPreviewViaVScrollBarParams mScrollPrintPreviewViaVScrollBarParams;
		private ScrollTableLayoutToEndParams mScrollTableLayoutToEndParams;
		private ScrollTableLayoutToTopParams mScrollTableLayoutToTopParams;
		private SelectAllCellsParams mSelectAllCellsParams;
		private SelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams mSelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams;
		private SelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams mSelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams;
		private SelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams mSelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams;
		private SelectCheckedListBoxValuesViaKeyboardParams mSelectCheckedListBoxValuesViaKeyboardParams;
		private SelectCheckedListBoxValuesViaMouseParams mSelectCheckedListBoxValuesViaMouseParams;
		private SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams mSelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams;
		private SelectFromMRUEditDropDownListViaKeyboardParams mSelectFromMRUEditDropDownListViaKeyboardParams;
		private SelectFromMRUEditDropDownListViaMouseParams mSelectFromMRUEditDropDownListViaMouseParams;
		private SelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams mSelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams;
		private SelectListBoxValueViaKeyboardParams mSelectListBoxValueViaKeyboardParams;
		private SelectListBoxValueViaMouseParams mSelectListBoxValueViaMouseParams;
		private SelectRadioItemViaKeyboardParams mSelectRadioItemViaKeyboardParams;
		private SelectRadioItemViaMouseParams mSelectRadioItemViaMouseParams;
		private SelectRadioItemViaMouseWheelScrollParams mSelectRadioItemViaMouseWheelScrollParams;
		private SelectTextInMemoEditViaKeyboardParams mSelectTextInMemoEditViaKeyboardParams;
		private SelectTextInMemoEditViaMouseParams mSelectTextInMemoEditViaMouseParams;
		private SelectTextInTextEditViaKeyboardParams mSelectTextInTextEditViaKeyboardParams;
		private SelectTextInTextEditViaMouseParams mSelectTextInTextEditViaMouseParams;
		private SortingDataByPriceAverageAscendingParams mSortingDataByPriceAverageAscendingParams;
		private SwitchDropDownControlToPopupControlContrainerParams mSwitchDropDownControlToPopupControlContrainerParams;
		private SwitchFindModeToFindClickParams mSwitchFindModeToFindClickParams;
		private SwitchFocusToMainMenuParams mSwitchFocusToMainMenuParams;
		private SwitchGroupingModeToCustomIntervalParams mSwitchGroupingModeToCustomIntervalParams;
		private SwitchGroupingModeToDateMonthParams mSwitchGroupingModeToDateMonthParams;
		private SwitchGroupingModeToDateRangeParams mSwitchGroupingModeToDateRangeParams;
		private SwitchGroupingModeToDateYearParams mSwitchGroupingModeToDateYearParams;
		private SwitchGroupingModeToGroupByCategoryParams mSwitchGroupingModeToGroupByCategoryParams;
		private SwitchMultiSelectModeToRowSelectParams mSwitchMultiSelectModeToRowSelectParams;
		private SwitchOffAutoRowHeightOptionParams mSwitchOffAutoRowHeightOptionParams;
		private SwitchOnDisplaySummaryOptionParams mSwitchOnDisplaySummaryOptionParams;
		private SwitchToBandedGridViewParams mSwitchToBandedGridViewParams;
		private SwitchToBarLinkContainerItemDemoModuleParams mSwitchToBarLinkContainerItemDemoModuleParams;
		private SwitchToCheckHeaderButtonTypeParams mSwitchToCheckHeaderButtonTypeParams;
		private SwitchToEditorItemsDemoModuleParams mSwitchToEditorItemsDemoModuleParams;
		private SwitchToGlyphsHeaderButtonTypeParams mSwitchToGlyphsHeaderButtonTypeParams;
		private SwitchToGridViewParams mSwitchToGridViewParams;
		private SwitchToImageHeaderButtonTypeParams mSwitchToImageHeaderButtonTypeParams;
		private SwitchToJoinedGroupPanelParams mSwitchToJoinedGroupPanelParams;
		private SwitchToMultiExtendedSelectionModeParams mSwitchToMultiExtendedSelectionModeParams;
		private SwitchToMultiSimpleSelectionModeParams mSwitchToMultiSimpleSelectionModeParams;
		private SwitchToStandaloneBarDockControlDemoModuleParams mSwitchToStandaloneBarDockControlDemoModuleParams;
		private TryClickNewRightFixedColumnParams mTryClickNewRightFixedColumnParams;
		private TypeInMemoEditParams mTypeInMemoEditParams;
		private TypeInMRUEditParams mTypeInMRUEditParams;
		private TypeInNewRibbonRichTextBoxParams mTypeInNewRibbonRichTextBoxParams;
		private TypeInRecentDocumentRichTextBoxParams mTypeInRecentDocumentRichTextBoxParams;
		private TypeInRibbonRichTextBoxParams mTypeInRibbonRichTextBoxParams;
		private TypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams mTypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams;
		private TypeInSimplePadDemoParams mTypeInSimplePadDemoParams;
		private TypeInTextEditParams mTypeInTextEditParams;
		private TypingTextInCellParams mTypingTextInCellParams;
		private UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams mUndoMultiExtendedSelectionListBoxValuesViaKeyboardParams;
		private UndoMultiExtendedSelectionListBoxValuesViaMouseParams mUndoMultiExtendedSelectionListBoxValuesViaMouseParams;
		private UndoMultiSimpleSelectionListBoxValuesViaKeyboardParams mUndoMultiSimpleSelectionListBoxValuesViaKeyboardParams;
		private UndoSelectionListBoxValuesViaMouseParams mUndoSelectionListBoxValuesViaMouseParams;
		private UngroupDataViaDraggingColumnHeaderParams mUngroupDataViaDraggingColumnHeaderParams;
		private UseRibbonGroupCaptionButtonForCopyPasteParams mUseRibbonGroupCaptionButtonForCopyPasteParams;
		private CheckSelectedCellsViaMouseExpectedValues mCheckSelectedCellsViaMouseExpectedValues;
		private CheckSelectedCellsViaKeyboardExpectedValues mCheckSelectedCellsViaKeyboardExpectedValues;
		private SwitchOffMemoEditAutoHeightParams mSwitchOffMemoEditAutoHeightParams;
		private BricksSelectionViaMouseAndCopyViaCtrlCShortcutParams mBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams;
		private CheckBricksSelectedStateExpectedValues mCheckBricksSelectedStateExpectedValues;
		private SelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams mSelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams;
		private CheckAddedNavBarGroupExpectedValues mCheckAddedNavBarGroupExpectedValues;
		private CheckDeletedNavBarGroupExpectedValues mCheckDeletedNavBarGroupExpectedValues;
		private CheckAddedNavBarItemLinkExpectedValues mCheckAddedNavBarItemLinkExpectedValues;
		private CheckDeletedNavBarItemLinkExpectedValues mCheckDeletedNavBarItemLinkExpectedValues;
		private CheckObtainedNavBarHitInfoExpectedValues mCheckObtainedNavBarHitInfoExpectedValues;
		private CheckChangedNavBarItemCaptionExpectedValues mCheckChangedNavBarItemCaptionExpectedValues;
		private CheckChangedNavBarLinkItemAndItemCaptionExpectedValues mCheckChangedNavBarLinkItemAndItemCaptionExpectedValues;
		private CheckDeletedViaContextMenuNavBarLinkExpectedValues mCheckDeletedViaContextMenuNavBarLinkExpectedValues;
		private CheckAddedViaContextMenuNavBarGroupExpectedValues mCheckAddedViaContextMenuNavBarGroupExpectedValues;
		private CheckRemovedNavBarGroupExpectedValues mCheckRemovedNavBarGroupExpectedValues;
		private CheckDraggedNavBarLinkToItemListExpectedValues mCheckDraggedNavBarLinkToItemListExpectedValues;
		private CheckDraggedItemToNavBarExpectedValues mCheckDraggedItemToNavBarExpectedValues;
		private CheckDraggedNavBarLinkToRecycleBinExpectedValues mCheckDraggedNavBarLinkToRecycleBinExpectedValues;
		private CheckCollapsedNavBarGroupExpectedValues mCheckCollapsedNavBarGroupExpectedValues;
		private CheckExpandedNavBarGroupExpectedValues mCheckExpandedNavBarGroupExpectedValues;
		private ChangeNavBarIntervalsParams mChangeNavBarIntervalsParams;
		private CheckCalendarButtonRemovedExpectedValues mCheckCalendarButtonRemovedExpectedValues;
		private CheckCalendarButtonAddedExpectedValues mCheckCalendarButtonAddedExpectedValues;
		private CheckFolderListButtonInvisibleExpectedValues mCheckFolderListButtonInvisibleExpectedValues;
		private CheckFolderListButtonVisibleExpectedValues mCheckFolderListButtonVisibleExpectedValues;
		private CheckNotesButtonInvisibleExpectedValues mCheckNotesButtonInvisibleExpectedValues;
		private CheckNotesButtonVisibleExpectedValues mCheckNotesButtonVisibleExpectedValues;
		private CheckAddedViaContextMenuNavBarLinkExpectedValues mCheckAddedViaContextMenuNavBarLinkExpectedValues;
		private CheckPopupContainerEditValueExpectedValues mCheckPopupContainerEditValueExpectedValues;
		private CheckPopupContainerEditValueWasNotChangedExpectedValues mCheckPopupContainerEditValueWasNotChangedExpectedValues;
		private CheckMemoExEditValueExpectedValues mCheckMemoExEditValueExpectedValues;
		private CheckMemoExEditSizeExpectedValues mCheckMemoExEditSizeExpectedValues;
		private ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams mChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams;
		private CheckBricksAfterChangingDataViaPreviousButtonExpectedValues mCheckBricksAfterChangingDataViaPreviousButtonExpectedValues;
		private ChangeDataForChangingPrintPreviewAfterUseLastButtonParams mChangeDataForChangingPrintPreviewAfterUseLastButtonParams;
		private CheckBricksAfterChangingDataViaLastButtonExpectedValues mCheckBricksAfterChangingDataViaLastButtonExpectedValues;
		private ChangeDataForChangingPrintPreviewAfterUseNextButtonParams mChangeDataForChangingPrintPreviewAfterUseNextButtonParams;
		private CheckBricksAfterChangingDataViaNextButtonExpectedValues mCheckBricksAfterChangingDataViaNextButtonExpectedValues;
		private ChangeGroupsDemoModuleDataForChangingPrintPreviewParams mChangeGroupsDemoModuleDataForChangingPrintPreviewParams;
		private ClearPrintPreviewAllRecordsCheckBoxParams mClearPrintPreviewAllRecordsCheckBoxParams;
		private CheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues mCheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues;
		private MakeHeaderBrickSettingsParams mMakeHeaderBrickSettingsParams;
		private MakeFooterBrickSettingsParams mMakeFooterBrickSettingsParams;
		private CheckChangedTableBrickTextExpectedValues mCheckChangedTableBrickTextExpectedValues;
		private CheckSwitchToNextPageViaStatusBarInfoExpectedValues mCheckSwitchToNextPageViaStatusBarInfoExpectedValues;
		private CheckSwitchToLastPageViaStatusBarInfoExpectedValues mCheckSwitchToLastPageViaStatusBarInfoExpectedValues;
		private CheckSwitchToFirstPageViaStatusBarInfoExpectedValues mCheckSwitchToFirstPageViaStatusBarInfoExpectedValues;
		private CheckZoomValueAfterZoomInExpectedValues mCheckZoomValueAfterZoomInExpectedValues;
		private ChangePrintPreviewZoomBarValueViaTypingParams mChangePrintPreviewZoomBarValueViaTypingParams;
		private CheckZoomBarValueAfterZoomOutExpectedValues mCheckZoomBarValueAfterZoomOutExpectedValues;
		private CheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues mCheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues;
		private CheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues mCheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues;
		private SelectLargeIconViewTypeInListViewDemoModuleParams mSelectLargeIconViewTypeInListViewDemoModuleParams;
		private SelectSmallIconViewTypeInListViewDemoModuleParams mSelectSmallIconViewTypeInListViewDemoModuleParams;
		private SelectListViewTypeInListViewDemoModuleParams mSelectListViewTypeInListViewDemoModuleParams;
		private CheckBricksAfterChangingTableDemoModuleDataExpectedValues mCheckBricksAfterChangingTableDemoModuleDataExpectedValues;
		private ChangeTableDemoModuleDataForChangingPrintPreviewParams mChangeTableDemoModuleDataForChangingPrintPreviewParams;
		private CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues mCheckBricksAfterChangingGroupsDemoModuleDataExpectedValues;
		private CheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues mCheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues;
		private PageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams mPageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams;
		private CheckSwitchToLandscapePrintPreviewOrientationExpectedValues mCheckSwitchToLandscapePrintPreviewOrientationExpectedValues;
		private CheckPostponedFormCountExpectedValues mCheckPostponedFormCountExpectedValues;
		private CheckChangedHiddenStateOfColumnExpectedValues mCheckChangedHiddenStateOfColumnExpectedValues;
		private CheckDeletedSummaryExpectedValues mCheckDeletedSummaryExpectedValues;
		private CheckRibbonItemAddedToQuickAccessToolbarExpectedValues mCheckRibbonItemAddedToQuickAccessToolbarExpectedValues;
		private CheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues mCheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues;
		private CheckComplexFilteredDataExpectedValues mCheckComplexFilteredDataExpectedValues;
		private ChangeRichTextBoxValueForChangingPrintPreviewParams mChangeRichTextBoxValueForChangingPrintPreviewParams;
		private CheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues mCheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues;
		private SearchInPrintPreviewViaSearchBarParams mSearchInPrintPreviewViaSearchBarParams;
		private SearchBrickViaCtrlFShortcutParams mSearchBrickViaCtrlFShortcutParams;
		private TextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams mTextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams;
		private CheckCustomizedWatermarkOptionsExpectedValues mCheckCustomizedWatermarkOptionsExpectedValues;
		private ChangePrintPreviewScaleBySpecifyingPercentageBoxParams mChangePrintPreviewScaleBySpecifyingPercentageBoxParams;
		private ChangePrintPreviewScaleViaFitToPagesBoxParams mChangePrintPreviewScaleViaFitToPagesBoxParams;
		private ShowFooterSummaryParams mShowFooterSummaryParams;
		private SwitchToGroupFooterSummaryOptionParams mSwitchToGroupFooterSummaryOptionParams;
		private DisableAlignInGroupRowParams mDisableAlignInGroupRowParams;
		private CheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues mCheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues;
		private CheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues mCheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues;
		private CheckColumnHeaderAfterHidingColumnExpectedValues mCheckColumnHeaderAfterHidingColumnExpectedValues;
		private CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues mCheckReorderedBandsOnAdvancedBandedGridViewExpectedValues;
		private CheckReorderedBandsOnBandedGridViewExpectedValues mCheckReorderedBandsOnBandedGridViewExpectedValues;
		private UIXtraEditorsTutorialsWindow mUIXtraEditorsTutorialsWindow;
		private UIXtraGridFeaturesDemoWindow mUIXtraGridFeaturesDemoWindow;
		private UIItemWindow mUIItemWindow;
		private UIXtraGridFeaturesDemoWindow1 mUIXtraGridFeaturesDemoWindow1;
		private UIItemWindow12 mUIItemWindow1;
		private UIFilterEditorWindow mUIFilterEditorWindow;
		private UIXtraGridFeaturesDemoWindow3 mUIXtraGridFeaturesDemoWindow3;
		private UIXtraGridFeaturesDemoWindow2 mUIXtraGridFeaturesDemoWindow2;
		private UIXtraGridFeaturesDemoWindow4 mUIXtraGridFeaturesDemoWindow4;
		private UIXtraGridFeaturesDemoWindow5 mUIXtraGridFeaturesDemoWindow5;
		private UICustomizationWindow mUICustomizationWindow;
		private UISelectedCellsWindow mUISelectedCellsWindow;
		private UIXtraGridFeaturesDemoWindow6 mUIXtraGridFeaturesDemoWindow6;
		private UISelectedRowsWindow mUISelectedRowsWindow;
		private UIXtraGridFeaturesDemoWindow7 mUIXtraGridFeaturesDemoWindow7;
		private UIXtraGridFeaturesDemoWindow8 mUIXtraGridFeaturesDemoWindow8;
		private UIПереводчикGoogleWindWindow mUIПереводчикGoogleWindWindow;
		private UIXtraGridFeaturesDemoWindow9 mUIXtraGridFeaturesDemoWindow9;
		private UIXtraGridFeaturesDemoWindow10 mUIXtraGridFeaturesDemoWindow10;
		private UIXtraGridFeaturesDemoWindow11 mUIXtraGridFeaturesDemoWindow11;
		private UIXtraGridFeaturesDemoWindow12 mUIXtraGridFeaturesDemoWindow12;
		private UIXtraGridFeaturesDemoWindow13 mUIXtraGridFeaturesDemoWindow13;
		private UIXtraGridFeaturesDemoWindow14 mUIXtraGridFeaturesDemoWindow14;
		private UIXtraGridFeaturesDemoWindow15 mUIXtraGridFeaturesDemoWindow15;
		private UIXtraGridFeaturesDemoWindow16 mUIXtraGridFeaturesDemoWindow16;
		private UIXtraGridFeaturesDemoWindow17 mUIXtraGridFeaturesDemoWindow17;
		private UIXtraGridFeaturesDemoWindow18 mUIXtraGridFeaturesDemoWindow18;
		private UIXtraGridFeaturesDemoWindow19 mUIXtraGridFeaturesDemoWindow19;
		private UIXtraGridFeaturesDemoWindow20 mUIXtraGridFeaturesDemoWindow20;
		private UIXtraGridFeaturesDemoWindow21 mUIXtraGridFeaturesDemoWindow21;
		private UIExpressioneditorWindow mUIExpressioneditorWindow;
		private UIXtraGridFeaturesDemoWindow22 mUIXtraGridFeaturesDemoWindow22;
		private UIXtraGridFeaturesDemoWindow23 mUIXtraGridFeaturesDemoWindow23;
		private UIConditionexpressioneWindow mUIConditionexpressioneWindow;
		private UIStyleFormatConditionWindow mUIStyleFormatConditionWindow;
		private UILinkPropertiesWindow mUILinkPropertiesWindow;
		private UIItemWindow111 mUIItemWindow11;
		private UISimplePadCDemoWindow mUISimplePadCDemoWindow;
		private UICustomizeWindow mUICustomizeWindow;
		private UISimplePadQuestionWindow mUISimplePadQuestionWindow;
		private UIApplicationUIWindow mUIApplicationUIWindow;
		private UIItemWindow2 mUIItemWindow2;
		private UIButtonClickWindow1 mUIButtonClickWindow;
		private UIXtraPrintingFeaturesWindow mUIXtraPrintingFeaturesWindow;
		private UIXtraPrintingFeaturesWindow1 mUIXtraPrintingFeaturesWindow1;
		private UIFindWindow mUIFindWindow;
		private UIHeaderandFooterWindow mUIHeaderandFooterWindow;
		private UIFontWindow mUIFontWindow;
		private UIPageSetupWindow mUIPageSetupWindow;
		private UIWatermarkWindow mUIWatermarkWindow;
		private UIPDFExportOptionsWindow mUIPDFExportOptionsWindow;
		private UIPasswordSecurityWindow mUIPasswordSecurityWindow;
		private UIHTMLExportOptionsWindow mUIHTMLExportOptionsWindow;
		private UIRTFExportOptionsWindow mUIRTFExportOptionsWindow;
		private UIXLSExportOptionsWindow mUIXLSExportOptionsWindow;
		private UICSVExportOptionsWindow mUICSVExportOptionsWindow;
		private UIImageExportOptionsWindow mUIImageExportOptionsWindow;
		private UIXtraPrintingFeaturesWindow2 mUIXtraPrintingFeaturesWindow2;
		private UIPreviewWindow mUIPreviewWindow;
		private UIProgramManagerWindow mUIProgramManagerWindow;
		private UIXtraPrintingFeaturesWindow3 mUIXtraPrintingFeaturesWindow3;
		private UIXtraPrintingFeaturesWindow5 mUIXtraPrintingFeaturesWindow5;
		private UIXtraPrintingFeaturesWindow6 mUIXtraPrintingFeaturesWindow6;
		private UIXtraPrintingFeaturesWindow7 mUIXtraPrintingFeaturesWindow7;
		private UIXtraPrintingFeaturesWindow8 mUIXtraPrintingFeaturesWindow8;
		private UIXtraPrintingFeaturesWindow9 mUIXtraPrintingFeaturesWindow9;
		private UIXtraPrintingFeaturesWindow10 mUIXtraPrintingFeaturesWindow10;
		private UINewDocument1RibbonSiWindow mUINewDocument1RibbonSiWindow;
		private UIItemWindow31 mUIItemWindow3;
		private UINewDocument1RibbonSiWindow1 mUINewDocument1RibbonSiWindow1;
		private UIReplaceWindow mUIReplaceWindow;
		private UIRibbonSimplePadWindow mUIRibbonSimplePadWindow;
		private UIDocument1rtfRibbonSiWindow mUIDocument1rtfRibbonSiWindow;
		private UIExportWindow mUIExportWindow;
		private UIItemWindow41 mUIItemWindow4;
		private UIRibbonCustomizationFWindow mUIRibbonCustomizationFWindow;
		private UIRenameWindow mUIRenameWindow;
		private UITestProject10MicrosoWindow mUITestProject10MicrosoWindow;
		private UIItemWindow121 mUIItemWindow12;
		private UIRTFExportOptionsWindow1 mUIRTFExportOptionsWindow1;
		private UIXtraPrintingFeaturesWindow11 mUIXtraPrintingFeaturesWindow11;
		private UIHeaderandFooterWindow1 mUIHeaderandFooterWindow1;
		private UIXtraGridFeaturesDemoWindow24 mUIXtraGridFeaturesDemoWindow24;
		private UIPreviewWindow1 mUIPreviewWindow1;
		private UIXtraPrintingFeaturesWindow12 mUIXtraPrintingFeaturesWindow12;
		private UIHeaderandFooterWindow2 mUIHeaderandFooterWindow2;
		private UISimplePadCDemoWindow1 mUISimplePadCDemoWindow1;
		private UIWindowsForms10WindowWindow mUIWindowsForms10WindowWindow;
		private UIApplicationUIWindow1 mUIApplicationUIWindow1;
		private UINewDocument1RibbonSiWindow11 mUINewDocument1RibbonSiWindow11;
		private UIItemWindow51 mUIItemWindow5;
		private UIXtraPrintingFeaturesWindow13 mUIXtraPrintingFeaturesWindow13;
		private UIXtraPrintingFeaturesWindow14 mUIXtraPrintingFeaturesWindow14;
		private UINewDocument1RibbonSiWindow2 mUINewDocument1RibbonSiWindow2;
		private UIRibbonCustomizationWindow mUIRibbonCustomizationWindow;
		private UIRibbonCustomizationWindow1 mUIRibbonCustomizationWindow1;
		private UIItemWindow61 mUIItemWindow6;
		private UIXtraGridFeaturesDemoWindow25 mUIXtraGridFeaturesDemoWindow25;
		private UIDocument1rtfRibbonSiWindow1 mUIDocument1rtfRibbonSiWindow1;
		private UIXtraGridFeaturesDemoWindow26 mUIXtraGridFeaturesDemoWindow26;
		private UIXtraGridFeaturesDemoWindow27 mUIXtraGridFeaturesDemoWindow27;
		private UIXtraGridFeaturesDemoWindow28 mUIXtraGridFeaturesDemoWindow28;
		private UIStyleFormatConditionWindow1 mUIStyleFormatConditionWindow1;
		private UIXtraGridFeaturesDemoWindow29 mUIXtraGridFeaturesDemoWindow29;
		private UIItemWindow71 mUIItemWindow7;
		private UIXtraGridFeaturesDemoWindow30 mUIXtraGridFeaturesDemoWindow30;
		private UIXtraGridFeaturesDemoWindow31 mUIXtraGridFeaturesDemoWindow31;
		private UIXtraEditorsTutorialsWindow1 mUIXtraEditorsTutorialsWindow1;
		private UIXtraPrintingFeaturesWindow15 mUIXtraPrintingFeaturesWindow15;
		private UIXtraPrintingFeaturesWindow16 mUIXtraPrintingFeaturesWindow16;
		private UIXtraPrintingFeaturesWindow17 mUIXtraPrintingFeaturesWindow17;
		private UIXtraGridFeaturesDemoWindow32 mUIXtraGridFeaturesDemoWindow32;
		private UIXtraGridFeaturesDemoWindow33 mUIXtraGridFeaturesDemoWindow33;
		private UIItemWindow81 mUIItemWindow8;
		private UIXtraGridFeaturesDemoWindow34 mUIXtraGridFeaturesDemoWindow34;
		private UIXtraPrintingFeaturesWindow18 mUIXtraPrintingFeaturesWindow18;
		private UIXtraGridFeaturesDemoWindow35 mUIXtraGridFeaturesDemoWindow35;
		private UIPageSetupWindow1 mUIPageSetupWindow1;
		private UITheXtraEditorsSuiteDWindow mUITheXtraEditorsSuiteDWindow;
		private UITheXtraEditorsSuiteDWindow1 mUITheXtraEditorsSuiteDWindow1;
		private UITheXtraEditorsSuiteDWindow2 mUITheXtraEditorsSuiteDWindow2;
		private UIXtraPrintingFeaturesWindow19 mUIXtraPrintingFeaturesWindow19;
		private UIXtraPrintingFeaturesWindow20 mUIXtraPrintingFeaturesWindow20;
		private UIPrintOptionsWindow mUIPrintOptionsWindow;
		private UIXtraPrintingFeaturesWindow21 mUIXtraPrintingFeaturesWindow21;
		private UIXtraPrintingFeaturesWindow22 mUIXtraPrintingFeaturesWindow22;
		private UIApplicationUILayoutCWindow mUIApplicationUILayoutCWindow;
		private UITheXtraGridSuitebyDeWindow mUITheXtraGridSuitebyDeWindow;
		private UITheXtraGridSuitebyDeWindow1 mUITheXtraGridSuitebyDeWindow1;
		private UITheXtraEditorsSuiteDWindow3 mUITheXtraEditorsSuiteDWindow3;
		private UIFormatRulesEditorforWindow mUIFormatRulesEditorforWindow;
		private UITheXtraGridSuitebyDeWindow2 mUITheXtraGridSuitebyDeWindow2;
		private UIItemWindow91 mUIItemWindow9;
		private UIXtraPrintingFeaturesWindow4 mUIXtraPrintingFeaturesWindow4;
		private UITheXtraNavBarSuiteDeWindow mUITheXtraNavBarSuiteDeWindow;
		private UITheXtraNavBarSuiteDeWindow1 mUITheXtraNavBarSuiteDeWindow1;
		private UITheXtraNavBarSuiteDeWindow2 mUITheXtraNavBarSuiteDeWindow2;
		private UITheXtraNavBarSuiteDeWindow3 mUITheXtraNavBarSuiteDeWindow3;
		private UITheXtraNavBarSuiteDeWindow4 mUITheXtraNavBarSuiteDeWindow4;
		private UILinkPropertiesWindow1 mUILinkPropertiesWindow1;
		private UITheXtraNavBarSuiteDeWindow6 mUITheXtraNavBarSuiteDeWindow6;
		private UITheXtraNavBarSuiteDeWindow5 mUITheXtraNavBarSuiteDeWindow5;
		private UITheXtraNavBarSuiteDeWindow7 mUITheXtraNavBarSuiteDeWindow7;
		private UITheXtraNavBarSuiteDeWindow8 mUITheXtraNavBarSuiteDeWindow8;
		private UIWatermarkWindow1 mUIWatermarkWindow1;
		private UITheXtraGridSuitebyDeWindow3 mUITheXtraGridSuitebyDeWindow3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaPageDownButtonParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]1[Column]colCity";
		public string UIGridControl1TableSendKeys = "{PageDown}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeLookUpEditValueViaTypingParams
	{
		#region Fields
		public string UILookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UILookUpEdit1PopupEditValueAsString = "14 [AutoSearchText]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeZoomTrackBarValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UIZoomTrackBarControl1TrackBarValueAsString = "8";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchOffMemoEditAutoHeightOptionParams
	{
		#region Fields
		public bool UICheMemoCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToEditTimeModeParams
	{
		#region Fields
		public string UIIcbShowVistaClockComboBoxValueTypeName = "DevExpress.Utils.DefaultBoolean";
		public string UIIcbShowVistaClockComboBoxValueAsString = "True";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddBarToStandaloneBarDockControlParams
	{
		#region Fields
		public string UIFontMenuBarDockInfoAsString = "[DockStyle]Standalone[Row]1[Column]0[Offset]127[StandaloneBarDockControlName]stan" +
			"daloneBarDockControl1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AdditionNewRowParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]-2147483647[Column]gridColumn1";
		public string UITextEditEdit1ValueAsString = "1";
		public string UIGridControl1TableFocusedCellAsString1 = "[View]gridView1[Row]-2147483647[Column]gridColumn2";
		public string UILookUpEditPopupEditValueTypeName = "System.Int32";
		public string UILookUpEditPopupEditValueAsString = "52";
		public string UIGridControl1TableFocusedCellAsString2 = "[View]gridView1[Row]-2147483647[Column]gridColumn3";
		public string UICalcEditPopupEditValueAsString = "765 [SelectionStart]0[SelectionLength]3";
		public string UIGridControl1TableFocusedCellAsString3 = "[View]gridView1[Row]-2147483647[Column]gridColumn4";
		public string UISpinEditEditValueAsString = "100";
		public string UIGridControl1TableFocusedCellAsString4 = "[View]gridView1[Row]-2147483647[Column]gridColumn5";
		public string UITextEditEdit11SendKeys = "{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddNewConditionExpressionViaConditionExpressionEditorParams
	{
		#region Fields
		public string UIAddBarBaseButtonItemPerformClick = "PerformClick";
		public string UIExpressionEditEditValueAsString = "[Quantity]";
		public string UIExpressionEditEditValueAsString1 = "[Quantity] >= 10";
		public string UIExpressionEditEditValueAsString2 = "[Quantity] >= 10 And [Quantity]";
		public string UIExpressionEditEditValueAsString3 = "[Quantity] >= 10 And [Quantity] <= 20";
		public string UIExpressionEditEditValueAsString4 = "[Quantity] >= 10 And [Quantity] <= 20 Or [Discount] [SelectionStart]50";
		public string UIExpressionEditEditSendKeys = "{Right}";
		public string UIExpressionEditEditValueAsString5 = "[Quantity] >= 10 And [Quantity] <= 20 Or [Discount] > 5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddNewConditionExpressionViaStyleFormatConditionEditorParams
	{
		#region Fields
		public string UIIcbConditionComboBoxValueTypeName = "DevExpress.XtraEditors.FormatCondition";
		public string UIIcbConditionComboBoxValueAsString = "NotBetween";
		public string UITextEditEditValueAsString = "10";
		public string UITextEditEdit1ValueAsString = "40";
		public bool UICeRowCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddNewFixedColumnToLeftAndScrollParams
	{
		#region Fields
		public string UIHCrkScrollBarScrollBarControlValueAsString = "541";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddNewFixedColumnToRightAndScrollParams
	{
		#region Fields
		public string UIHCrkScrollBarScrollBarControlValueAsString = "543";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddNewRibbonGroupItemViaCustomizationFormParams
	{
		#region Fields
		public string UICbeCommandsComboBoxValueTypeName = "DevExpress.XtraBars.Ribbon.AllCommandsLeftPaneOption";
		public string UICbeCommandsComboBoxValueAsString = "All Commands [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddNewSomeRibbonGroupViaCustomizationFormParams
	{
		#region Fields
		public bool UIHomeCheckBoxTreeItemChecked = false;
		public bool UIHomeCheckBoxTreeItemChecked1 = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddRibbonCommandToNewRibbonCategoryInCustomizationFormParams
	{
		#region Fields
		public string UICbeCommandsComboBoxValueTypeName = "DevExpress.XtraBars.Ribbon.AllCommandsLeftPaneOption";
		public string UICbeCommandsComboBoxValueAsString = "All Commands [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddRibbonCommandToNewRibbonTabInCustomizationFormParams
	{
		#region Fields
		public string UICbeCommandsComboBoxValueTypeName = "DevExpress.XtraBars.Ribbon.AllCommandsLeftPaneOption";
		public string UICbeCommandsComboBoxValueAsString = "All Commands [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AddRibbonGroupToQuickAccessToolbarParams
	{
		#region Fields
		public string UIAddtoQuickAccessToolMenuBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class AssignFindPanelFilterColumnParams
	{
		#region Fields
		public string UICbFindFilterColumnsComboBoxValueAsString = "CompanyName;ContactTitle";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaKeyboardParams
	{
		#region Fields
		public string UIGridControl1TableSendKeys = "{Down}";
		public string UIGridControl1TableSendKeys1 = "{Down}";
		public string UIGridControl1TableSendKeys2 = "{Down}";
		public string UIGridControl1TableSendKeys3 = "{Right}";
		public string UIGridControl1TableSendKeys4 = "{Right}";
		public string UIGridControl1TableSendKeys5 = "{Right}";
		public string UIGridControl1TableSendKeys6 = "{Down}";
		public string UIGridControl1TableSendKeys7 = "{Down}";
		public string UIGridControl1TableSendKeys8 = "{Down}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaKeyboardAndHoldingDownCTRLParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]1[Column]colCountry";
		public string UIGridControl1TableSendKeys = "{Right}";
		public string UIGridControl1TableSendKeys1 = "{Right}";
		public string UIGridControl1TableSendKeys2 = "{Down}";
		public string UIGridControl1TableSendKeys3 = "{Down}";
		public string UIGridControl1TableSendKeys4 = "{Down}";
		public string UIGridControl1TableSendKeys5 = "{Down}";
		public string UIGridControl1TableSendKeys6 = "{Left}";
		public string UIGridControl1TableSendKeys7 = "{Left}";
		public string UIGridControl1TableSendKeys8 = "{Left}";
		public string UIGridControl1TableSendKeys9 = "{Right}";
		public string UIGridControl1TableSendKeys10 = "{Left}";
		public string UIGridControl1TableSendKeys11 = "{Right}";
		public string UIGridControl1TableSendKeys12 = "{Down}";
		public string UIGridControl1TableSendKeys13 = "{Down}";
		public string UIGridControl1TableSendKeys14 = "{Down}";
		public string UIGridControl1TableSendKeys15 = "{Down}";
		public string UIGridControl1TableSendKeys16 = "{Left}";
		public string UIGridControl1TableSendKeys17 = "{Right}";
		public string UIGridControl1TableSendKeys18 = "{Down}";
		public string UIGridControl1TableSendKeys19 = "{Right}";
		public string UIGridControl1TableSendKeys20 = "{Up}";
		public string UIGridControl1TableSendKeys21 = "{Up}";
		public string UIGridControl1TableSendKeys22 = "{Down}";
		public string UIGridControl1TableSendKeys23 = "{Down}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaPageUpButtonParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]3[Column]colCity";
		public string UIGridControl1TableSendKeys = "{PageUp}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaShiftPageDownShortcutParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]0[Column]colCountry";
		public string UIGridControl1TableSendKeys = "{PageDown}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaShiftPageUpShortcutParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]16[Column]colCountry";
		public string UIGridControl1TableSendKeys = "{PageUp}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaShiftTabShortcutParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]2[Column]colPostalCode";
		public string UIGridControl1TableSendKeys = "{Tab}";
		public string UIGridControl1TableSendKeys1 = "{Tab}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CellSelectionViaTabButtonParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]2[Column]colCountry";
		public string UIGridControl1TableSendKeys = "{Tab}{Tab}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeAlertControlPropertiesParams
	{
		#region Fields
		public string UIIcbFormLocationComboBoxValueTypeName = "DevExpress.XtraBars.Alerter.AlertFormLocation";
		public string UIIcbFormLocationComboBoxValueAsString = "TopRight";
		public string UICcbeButtonsCheckedComboBoxCheckedIndicesAsString = "0";
		public string UIIcbImageComboBoxValueTypeName = "System.Int32";
		public string UIIcbImageComboBoxValueAsString = "1";
		public string UITxtCaptionEditValueAsString = "Test";
		public string UITxtTextEditValueAsString = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeAlertFormLocationParams
	{
		#region Fields
		public string UIIcbFormLocationComboBoxValueTypeName = "DevExpress.XtraBars.Alerter.AlertFormLocation";
		public string UIIcbFormLocationComboBoxValueAsString = "TopLeft";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeAlertFormSizeParams
	{
		#region Fields
		public string UICeWidthEditValueAsString = "100";
		public string UICeHeightEditValueAsString = "50";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarCalcEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UICalcEditPopupEditValueAsString = "5.36 [SelectionStart]0[SelectionLength]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarCalcEditValueViaKeyboardParams
	{
		#region Fields
		public string UICalcEditPopupEditValueAsString = "5.36";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarCalcEditValueViaMouseParams
	{
		#region Fields
		public string UICalcEditPopupEditValueAsString = "5.36 [SelectionStart]0[SelectionLength]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarCalcEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UICalcEditPopupEditValueAsString = "1115.5 [SelectionStart]3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarColorEditValueViaKeyboardParams
	{
		#region Fields
		public string UIColorEditColorEditValueAsString = "255, 128, 0";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarColorEditValueViaMouseParams
	{
		#region Fields
		public string UIColorEditColorEdit1ValueAsString = "255, 128, 0";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarComboBoxEditValueParams
	{
		#region Fields
		public string UIComboBoxComboBoxValueAsString = "Button Edit:  BarItem [SelectionStart]0[SelectionLength]21";
		public string UIComboBoxComboBoxValueAsString1 = "Pick Image: BarItem";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarComboBoxValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIComboBoxComboBoxValueAsString = "Pick Image: BarItem";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarComboBoxValueViaKeyboardParams
	{
		#region Fields
		public string UIComboBoxComboBoxValueAsString = "Pick Image: BarItem";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarComboBoxValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UIComboBoxComboBoxValueAsString = "Pick Image: BarItem [SelectionStart]0[SelectionLength]19";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarDateEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIDateEditDateTimePickerValueAsString = "2012-06-14";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarDateEditValueViaKeyboardParams
	{
		#region Fields
		public string UIDateEditDateTimePickerValueAsString = "2012-06-14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarDateEditValueViaMouseParams
	{
		#region Fields
		public string UIDateEditDateTimePickerValueAsString = "2012-06-14";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarDateEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UIDateEditDateTimePickerValueAsString = "2012-06-14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarMemoExEditValueParams
	{
		#region Fields
		public string UIMemoEditEditValueAsString = "Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarSpinEditValueViaArrowButtonsParams
	{
		#region Fields
		public string UISpinEditEditValueAsString = "10.5 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarSpinEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UISpinEditEditValueAsString = "10.5 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarSpinEditValueViaUpDownKeysParams
	{
		#region Fields
		public string UISpinEditEditValueAsString = "10.5 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBarTextEditValueParams
	{
		#region Fields
		public string UITextEditEditValueAsString = "Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBottomMarginForRecalculatedSummariesParams
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlBottomMargin = 324;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeBottomMarginValueParams
	{
		#region Fields
		public string UIVScrollBarScrollBarControlValueAsString = "921";
		public int UIDocumentViewerPrintViewControlBottomMargin = 20;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeButtonEditValueViaKeyboardParams
	{
		#region Fields
		public string UIButtonEditEditValueAsString = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCalcEditValueParams
	{
		#region Fields
		public string UICalcEditPopupEditValueAsString = "5.36 [SelectionStart]0[SelectionLength]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCalcEditValueViaKeyboardParams
	{
		#region Fields
		public string UICalcEditSampleEditValueAsString = "5 [SelectionStart]0[SelectionLength]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCalcEditValueViaKeyboardInOpenedDropDownListParams
	{
		#region Fields
		public string UICalcEditSamplePopupEditValueAsString = "5 [SelectionStart]0[SelectionLength]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCalcEditValueViaMouseParams
	{
		#region Fields
		public string UICalcEditSampleEditValueAsString = "5 [SelectionStart]0[SelectionLength]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCalcEditValueViaViaMouseWheelScrollParams
	{
		#region Fields
		public string UICalcEditSamplePopupEditValueAsString = "82.2 [SelectionStart]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCellsValueOnSpreadSheetParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]4[Column]ColumnHandle4";
		public string UISpinEditEditValueAsString = "5";
		public string UIGridControl1TableFocusedCellAsString1 = "[View]gridView1[Row]4[Column]ColumnHandle2";
		public string UISpinEditEdit2ValueAsString = "5";
		public string UIGridControl1TableFocusedCellAsString2 = "[View]gridView1[Row]6[Column]ColumnHandle3";
		public string UISpinEditEdit1ValueAsString = "5";
		public string UIGridControl1TableFocusedCellAsString3 = "[View]gridView1[Row]8[Column]ColumnHandle3";
		public string UISpinEditEdit3ValueAsString = "5";
		public string UIGridControl1TableFocusedCellAsString4 = "[View]gridView1[Row]6[Column]ColumnHandle5";
		public string UIItemCell1ValueTypeName = "";
		public string UIItemCell2ActiveEditorValue = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCellValuesInFixedBandsAndGroupingTabParams
	{
		#region Fields
		public string UIGridControl2TableFocusedCellAsString = "[View]bandedGridView2[Row]7[Column]colJanuary";
		public string UISpinEditEdit12ValueAsString = "100000 [SelectionStart]7";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCellValuesInSimpleFixedBandsTabParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]bandedGridView1[Row]8[Column]grColumnYear1992";
		public string UISpinEditEdit9ValueAsString = "100000";
		public string UIGridControl1TableFocusedCellAsString1 = "[View]bandedGridView1[Row]9[Column]grColumnYear1992";
		public string UIItem615182CellValueTypeName = "System.Decimal";
		public string UIItem615182CellActiveEditorValue = "615182";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCellValueToRecalculateSummariesParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]2[Column]colQuantity";
		public string UISpinEditEditValueAsString = "5000";
		public string UIGridControl1TableFocusedCellAsString1 = "[View]gridView1[Row]3[Column]colDiscount";
		public string UIItem000CellValueTypeName = "System.Single";
		public string UIItem000CellActiveEditorValue = "0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCellValueViaButtonClearParams
	{
		#region Fields
		public string UISearchLookUpEditPopupEdit5ValueAsString = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCheckedComboBoxEditValueViaButtonSelectAllParams
	{
		#region Fields
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UICheckedComboBoxEditSCheckedComboBoxSendKeys = "{F4}";
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString = "2 3 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCheckedComboBoxEditValueViaF4KeyAndKeyboardAndClickEscapeButtonParams
	{
		#region Fields
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString = "2 3 4";
		public string UICheckedComboBoxEditSCheckedComboBoxSendKeys = "{Down}";
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString1 = "2 3 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCheckedComboBoxEditValueViaKeyboardParams
	{
		#region Fields
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString = "2 3 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCheckedComboBoxEditValueViaMouseParams
	{
		#region Fields
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString = "2 3 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCheckEditValueViaKeyboardParams
	{
		#region Fields
		public bool UICheckEditCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColorEditValueInCustomTabViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "255, 0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColorEditValueInTabCustomViaKeyboardParams
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "255, 0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColorEditValueInTabCustomViaMouseParams
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "255, 0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColorEditValueInTabSystemViaKeyboardParams
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "Control";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColorEditValueInTabSystemViaMouseParams
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "Control";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColorEditValueInTabWebViaKeyboardParams
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "Silver";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColorEditValueInTabWebViaMouseParams
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "Silver";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeColumnAndCreateExpressionsViaShowExpressionsButtonParams
	{
		#region Fields
		public int UIImageComboBoxEdit1ComboBoxSelectedIndex = 1;
		public string UIMemoEditEditValueAsString = "[Unit Price] * [Quantity] - [Total]+[Discount]";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeComboBoxEditValueParams
	{
		#region Fields
		public string UIComboBoxComboBoxValueAsString = "Date Edit: BarItem";
		public string UICustom2MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeComboBoxEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIComboBoxEditSampleComboBoxValueAsString = "Angola [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeComboBoxEditValueViaKeyboardParams
	{
		#region Fields
		public string UIComboBoxEditSampleComboBoxValueAsString = "Angola [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeComboBoxEditValueViaKeyboardInOpenedDropDownListParams
	{
		#region Fields
		public string UIComboBoxEditSampleComboBoxValueAsString = "Angola [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeComboBoxEditValueViaMouseParams
	{
		#region Fields
		public string UIComboBoxEditSampleComboBoxValueAsString = "Angola [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeComboBoxEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UIComboBoxEditSampleComboBoxValueAsString = "Angola [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeCustomFreightParams
	{
		#region Fields
		public string UINumCustomEditValueAsString = "50 [SelectionStart]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDateEditValueInVistaTimeModeParams
	{
		#region Fields
		public string UIDateEditSampleDateTimeEditValueAsString = "11/22/2012 12:58:56 [SelectionStart]0[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDateEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIDateEditSampleDateTimeEditValueAsString = "2011-11-17 [SelectionStart]0[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDateEditValueViaKeyboardParams
	{
		#region Fields
		public string UIDateEditSampleDateTimeEditValueAsString = "2011-11-17 [SelectionStart]3[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDateEditValueViaKeyboardInOpenedDropDownListParams
	{
		#region Fields
		public string UIDateEditSampleDateTimePickerValueAsString = "2011-11-17 [SelectionStart]0[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDateEditValueViaMouseParams
	{
		#region Fields
		public string UIDateEditSampleDateTimePickerValueAsString = "2010-06-17 [SelectionStart]0[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDayTimeDateTimeEditValueParams
	{
		#region Fields
		public string UITeDateTime8EditValueTypeName = "System.DateTime";
		public string UITeDateTime8EditValueAsString = "06/18/2012 16:10:42 [SelectionStart]0[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeFormMaxCountParams
	{
		#region Fields
		public string UISeFormMaxCountEditValueAsString = "1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeFullDateAndTimeEditValueParams
	{
		#region Fields
		public string UITeDateTime2EditValueTypeName = "System.DateTime";
		public string UITeDateTime2EditValueAsString = "06/08/2012 17:55:25 [SelectionStart]13[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeFullDateTimeEditValueParams
	{
		#region Fields
		public string UITeDateTime1EditValueTypeName = "System.DateTime";
		public string UITeDateTime1EditValueAsString = "06/08/2012 12:12:12 [SelectionStart]16[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeGridLookUpEditorValueViaButtonLastParams
	{
		#region Fields
		public string UIGridLookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UIGridLookUpEdit1PopupEditValueAsString = "11";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeGridLookUpEditorValueViaKeyboardParams
	{
		#region Fields
		public string UIGridLookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UIGridLookUpEdit1PopupEditValueAsString = "52";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeGridLookUpEditorValueViaMouseParams
	{
		#region Fields
		public string UIGridLookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UIGridLookUpEdit1PopupEditValueAsString = "52";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeImageComboBoxEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIImageComboBoxEditSamComboBoxValueAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeImageComboBoxEditValueViaKeyboardParams
	{
		#region Fields
		public string UIImageComboBoxEditSamComboBoxValueAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeImageComboBoxEditValueViaMouseParams
	{
		#region Fields
		public string UIImageComboBoxEditSamComboBoxValueTypeName = "System.Int32";
		public string UIImageComboBoxEditSamComboBoxValueAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeImageComboBoxEditValueViaMouseInOpenedDropDownListParams
	{
		#region Fields
		public string UIImageComboBoxEditSamComboBoxValueAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeImageComboBoxEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UIImageComboBoxEditSamComboBoxValueAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeInPlaceGridLookUpEditorValueViaKeyboardParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]12[Column]colCustomerID";
		public string UIGridLookUpEditPopupEditValueTypeName = "System.String";
		public string UIGridLookUpEditPopupEditValueAsString = "THEBI";
		public string UIGridLookUpEditPopupEditSendKeys = "{Right}";
		public string UIGridLookUpEditPopupEdit1ValueTypeName = "System.Int32";
		public string UIGridLookUpEditPopupEdit1ValueAsString = "9";
		public string UIGridLookUpEditPopupEdit1SendKeys = "{Right}";
		public string UIDateEditDateTimePickerValueAsString = "1994-06-15";
		public string UIDateEditDateTimePickerSendKeys = "{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeInPlaceGridLookUpEditorValueViaMouseParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]12[Column]colCustomerID";
		public string UIGridLookUpEditPopupEditValueTypeName = "System.String";
		public string UIGridLookUpEditPopupEditValueAsString = "THEBI";
		public string UIGridControl1TableFocusedCellAsString1 = "[View]gridView1[Row]12[Column]colEmployeeID";
		public string UIGridLookUpEditPopupEdit1ValueTypeName = "System.Int32";
		public string UIGridLookUpEditPopupEdit1ValueAsString = "9";
		public string UIGridControl1TableFocusedCellAsString2 = "[View]gridView1[Row]12[Column]colOrderDate";
		public string UIDateEditDateTimePickerValueAsString = "1994-06-15 [SelectionStart]0[SelectionLength]10";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeLeftMarginValueParams
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlLeftMargin = 178;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeLoanAmountValueAndClickButtonCalculateParams
	{
		#region Fields
		public string UIEditLoanAmountEditValueAsString = "500000 [SelectionStart]7";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeLookUpEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UILookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UILookUpEdit1PopupEditValueAsString = "14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeLookUpEditValueViaKeyboardParams
	{
		#region Fields
		public string UILookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UILookUpEdit1PopupEditValueAsString = "14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeLookUpEditValueViaMouseParams
	{
		#region Fields
		public string UILookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UILookUpEdit1PopupEditValueAsString = "14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeLookUpEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UILookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UILookUpEdit1PopupEditValueAsString = "14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMemoExEditSizeParams
	{
		#region Fields
		public string UIMemoExEditSamplePopupEditPopupSizeAsString = "325, 269";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMemoExEditValueParams
	{
		#region Fields
		public string UIMemoEditEditValueAsString = "No more hassles or limits when it comes to using editors within a toolbar. XtraBa" +
			"rs works in concert with our XtraEditors Library allowing you to use all our fie" +
			"ld editors (from date controls to combo boxes) directly within your toolbars.\r\nt" +
			"est";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMemoExEditValueViaCancelButtonParams
	{
		#region Fields
		public string UIMemoEditEditValueAsString = "test test111";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMemoExEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIMemoExEditSamplePopupEditValueAsString = @"This control allows end users to edit memo data within the dropdown window. This control is the best choice when you need to save form space or when you want to provide convenient memo editing in container controls like the XtraGrid. The MemoExEdit control combines the features found in the MemoEdit control and the BLOBEditor. [SelectionStart]0";
		public string UIMemoEditEditValueAsString = @"This control allows end users to edit memo data within the dropdown window. This control is the best choice when you need to save form space or when you want to provide convenient memo editing in container controls like the XtraGrid. The MemoExEdit control combines the features found in the MemoEdit control and the BLOBEditor.
Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMemoExEditValueViaOkButtonParams
	{
		#region Fields
		public string UIMemoEditEditValueAsString = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMonthAndDayDateTimeEditValueParams
	{
		#region Fields
		public string UITeDateTime5EditValueTypeName = "System.DateTime";
		public string UITeDateTime5EditValueAsString = "02/18/2012 11:08:08 [SelectionStart]3[SelectionLength]8";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMRUEditValueViaAddingToDropDownListParams
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "test";
		public string UIMruEditSampleMRUEditSendKeys = "{Enter}";
		public string UIMruEditSampleMRUEditMRUItemsAsString = "[MRUItem]test[MRUItem]www.devexpress.com[MRUItem]www.devexpress.com/ClientCenter/" +
			"Downloads/#Trials[MRUItem]www.devexpress.com/ClientCenter/Purchase/";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeMRUEditValueViaDeletingFromDropDownListParams
	{
		#region Fields
		public string UIMruEditSampleMRUEditMRUItemsAsString = "[MRUItem]www.devexpress.com/ClientCenter/Downloads/#Trials[MRUItem]www.devexpress" +
			".com/ClientCenter/Purchase/";
		public string UIMruEditSampleMRUEditValueAsString = "www.devexpress.com";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeNavBarItemCaptionParams
	{
		#region Fields
		public string UITxtCaptionEditValueAsString = "Outbox test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeNavBarLinkItemAndItemCaptionParams
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "Calendar [SelectionStart]0";
		public string UITxtCaptionEditValueAsString = "Calendar 2013";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeNumberOfRecentDocumentsViaBackstageViewControlParams
	{
		#region Fields
		public bool UICheckEdit1CheckBoxChecked = true;
		public string UISpinEdit1EditValueAsString = "7 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeNumericMaskBoxEditValuesParams
	{
		#region Fields
		public string UITeNumeric1EditValueTypeName = "System.Decimal";
		public string UITeNumeric1EditValueAsString = "500 [SelectionStart]4";
		public string UITeNumeric2EditValueTypeName = "System.Decimal";
		public string UITeNumeric2EditValueAsString = "183456.8 [SelectionStart]2";
		public string UITeNumeric3EditValueTypeName = "System.Decimal";
		public string UITeNumeric3EditValueAsString = "-200.01 [SelectionStart]3";
		public string UITeNumeric4EditValueTypeName = "System.Decimal";
		public string UITeNumeric4EditValueAsString = "2000 [SelectionStart]5";
		public string UITeNumeric5EditValueTypeName = "System.Decimal";
		public string UITeNumeric5EditValueAsString = "123556.8 [SelectionStart]5";
		public string UITeNumeric6EditValueTypeName = "System.Int32";
		public string UITeNumeric6EditValueAsString = "12145 [SelectionStart]6";
		public string UITeNumeric7EditValueTypeName = "System.Single";
		public string UITeNumeric7EditValueAsString = "1.278 [SelectionStart]2";
		public string UITextEdit10EditValueTypeName = "System.Single";
		public string UITextEdit10EditValueAsString = "5.88 [SelectionStart]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePickImageEditValueViaKeyboardParams
	{
		#region Fields
		public string UIPickImageComboBoxValueTypeName = "System.Drawing.ContentAlignment";
		public string UIPickImageComboBoxValueAsString = "MiddleRight";
		public string UICustom3MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePickImageEditValueViaMouseParams
	{
		#region Fields
		public string UIPickImageComboBoxValueTypeName = "System.Drawing.ContentAlignment";
		public string UIPickImageComboBoxValueAsString = "MiddleRight";
		public string UICustom3MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePopupContainerEditSizeParams
	{
		#region Fields
		public string UIPopupContainerEditSaEditPopupSizeAsString = "482, 324";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePopupContainerEditValueAndClickCloseButtonParams
	{
		#region Fields
		public string UIClbStyleCheckedListBoxCheckedIndicesAsString = "0 2 1";
		public string UISeSizeEditValueAsString = "6 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePopupContainerEditValueViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIPopupContainerEditSaPopupEditValueAsString = "Tahoma, 8.25, Bold [SelectionStart]0";
		public string UIPopupContainerEditSaPopupEditSendKeys = "{F4}";
		public string UIIlbFontListSendKeys = "{Tab}";
		public string UIClbStyleCheckedListBoxCheckedIndicesAsString = "0";
		public string UISeSizeEditValueAsString = "10.25 [SelectionStart]0[SelectionLength]5";
		public string UIIlbFontListSendKeys1 = "{Tab}";
		public string UIClbStyleCheckedListBoxCheckedIndicesAsString1 = "0 1 2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePopupContainerEditValueViaKeyboardParams
	{
		#region Fields
		public string UIIlbFontListSendKeys = "{Tab}";
		public string UIClbStyleCheckedListBoxCheckedIndicesAsString = "0";
		public string UISeSizeEditValueAsString = "10.25 [SelectionStart]0[SelectionLength]5";
		public string UIIlbFontListSendKeys1 = "{Tab}";
		public string UIClbStyleCheckedListBoxCheckedIndicesAsString1 = "0 1 2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePopupContainerEditValueViaMouseParams
	{
		#region Fields
		public string UIClbStyleCheckedListBoxCheckedIndicesAsString = "1 3";
		public string UISeSizeEditValueAsString = "9.25 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePrintingSettingsViaPageSetupDialogParams
	{
		#region Fields
		public string UICbPaperSizeComboBoxValueAsString = "Letter [SelectionStart]0";
		public bool UIRbOrientationLandscaCheckBoxChecked = true;
		public string UITxtMarginsLeftEditValueAsString = "2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeProgressBarValueViaButtonMinusParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]9[Column]gridColumn3";
		public string UIRow9ColumngridColumnProgressBarSendKeys = "{Subtract}{Subtract}{Subtract}{Subtract}{Subtract}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeProgressBarValueViaButtonPlusParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]9[Column]gridColumn2";
		public string UIProgressBarControlProgressBarSendKeys = "{Add}{Add}{Add}{Add}{Add}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeRangeTrackBarValueViaMouseParams
	{
		#region Fields
		public string UIRangeTrackBarControlRangeTrackBarValueAsString = "1 7";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeRegExMaskBoxEditValuesParams
	{
		#region Fields
		public string UITextEdit1EditValueAsString = "12:12:12";
		public string UITextEdit2EditValueAsString = "555-55-55";
		public string UITextEdit3EditValueAsString = "12/12/12";
		public string UITextEdit6EditValueAsString = "12:12:12 AM [SelectionStart]9[SelectionLength]2";
		public string UITextEdit5EditValueAsString = "12:12";
		public string UITextEdit4EditValueAsString = "145-14-5145";
		public string UITextEdit9EditValueAsString = "30000";
		public string UITextEdit8EditValueAsString = "12345";
		public string UITextEdit7EditValueAsString = "file://123.a/";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeRegularMaskBoxEditValuesParams
	{
		#region Fields
		public string UITeRegular1EditValueAsString = "(960)555-55-55";
		public string UITeRegular1_1EditValueAsString = "(555)125-12-35";
		public string UITeRegular2EditValueAsString = "12/12/12 [SelectionStart]7[SelectionLength]1";
		public string UITeRegular3EditValueAsString = "12:12:12 AM [SelectionStart]9[SelectionLength]1";
		public string UITeRegular4EditValueAsString = "12:12";
		public string UITeRegular5EditValueAsString = "12345";
		public string UITeRegular6EditValueAsString = "123-45-6789";
		public string UITeRegular7EditValueAsString = "12345-6654";
		public string UITeRegular8EditValueAsString = "12121";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeRFCDateTimeEditValueParams
	{
		#region Fields
		public string UITeDateTime3EditValueTypeName = "System.DateTime";
		public string UITeDateTime3EditValueAsString = "06/13/2018 15:05:08 [SelectionStart]23[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeRibbonGalleryItemViaShortcutRibbonGalleryDropDownButtonParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{LMenu}";
		public string UIRibbonControl1RibbonSendKeys = "gc";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeRightMarginValueParams
	{
		#region Fields
		public string UIHScrollBarScrollBarControlValueAsString = "201";
		public int UIDocumentViewerPrintViewControlRightMargin = 492;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeShortTimeDateTimeEditValueParams
	{
		#region Fields
		public string UITeDateTime7EditValueTypeName = "System.DateTime";
		public string UITeDateTime7EditValueAsString = "06/08/2012 04:15:00 [SelectionStart]3[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeSimpleMaskBoxEditValuesParams
	{
		#region Fields
		public string UITeSimple1EditValueAsString = "(960)555-55-55";
		public string UITeSimple2EditValueAsString = "12/12/12";
		public string UITeSimple3EditValueAsString = "12:12:12 AM";
		public string UITeSimple4EditValueAsString = "12:12";
		public string UITeSimple5EditValueAsString = "12345";
		public string UITeSimple6EditValueAsString = "123-45-6789";
		public string UITeSimple7EditValueAsString = "12346-654 [SelectionStart]9[SelectionLength]1";
		public string UITeSimple8EditValueAsString = "12354";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeSpinBoxEditValueViaTypingParams
	{
		#region Fields
		public string UISpinEditEditValueAsString = "10.5 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeSpinEditValueViaArrowButtonsParams
	{
		#region Fields
		public string UISpinEditSample1EditValueAsString = "30 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeSpinEditValueViaKeyboardParams
	{
		#region Fields
		public string UISpinEditSample1EditValueAsString = "30 [SelectionStart]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeSpinEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UISpinEditSample1EditValueAsString = "30 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeSplitterPositionOnHorizontalSplitPresentationTabParams
	{
		#region Fields
		public int UIGridSplitContainer2SplitContainerControlSplitterPosition = 422;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeSplitterPositionOnVerticalSplitPresentationTabParams
	{
		#region Fields
		public int UIGridSplitContainer1SplitContainerControlSplitterPosition = 385;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeStatusBarInfoViaChangingLeftMarginValueParams
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlLeftMargin = 100;
		public int UIDocumentViewerPrintViewControlLeftMargin1 = 325;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTimeEditValueViaArrowButtonsParams
	{
		#region Fields
		public string UITimeEditSampleDateTimePickerValueAsString = "12:57:33 [SelectionStart]6[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTimeEditValueViaKeyboardParams
	{
		#region Fields
		public string UITimeEditSampleDateTimePickerValueAsString = "12:57:33 [SelectionStart]6[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTimeEditValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UITimeEditSampleDateTimePickerValueAsString = "12:57:33 [SelectionStart]6[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTopMarginForRecalculatedSummariesParams
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlTopMargin = 176;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTopMarginValueParams
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlTopMargin = 149;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTrackBarValueViaKeyboardParams
	{
		#region Fields
		public string UITrackBarControl1TrackBarValueAsString = "0";
		public string UITrackBarControl1TrackBarSendKeys = "{Right}{Right}{Right}{Right}{Right}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTrackBarValueViaMouseParams
	{
		#region Fields
		public string UITrackBarControl1TrackBarValueAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTrackBarValueViaMouseWheelScrollParams
	{
		#region Fields
		public string UITrackBarControl1TrackBarValueAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeUniversalSortableDateTimeEditValueParams
	{
		#region Fields
		public string UITeDateTime4EditValueTypeName = "System.DateTime";
		public string UITeDateTime4EditValueAsString = "04/09/2009 19:08:11 [SelectionStart]14[SelectionLength]2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeVScrollbarValueParams
	{
		#region Fields
		public string UIVScrollBarScrollBarControlValueAsString = "470";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeZoomTrackBarValueViaLeftRightButtonsParams
	{
		#region Fields
		public string UIZoomTrackBarControl1TrackBarValueAsString = "5";
		public string UIZoomTrackBarControl1TrackBarSendKeys = "{Left}{Left}{Right}{Right}{Right}{Right}{Right}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeZoomTrackBarValueViaMouseParams
	{
		#region Fields
		public string UIZoomTrackBarControl1TrackBarValueAsString = "8";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeZoomTrackBarValueViaUpDownKeysParams
	{
		#region Fields
		public string UIZoomTrackBarControl1TrackBarValueAsString = "5";
		public string UIZoomTrackBarControl1TrackBarSendKeys = "{Up}{Up}{Down}{Down}{Down}{Down}{Down}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckActionsMemoAfterClickImageHeaderButtonExpectedValues
	{
		#region Fields
		public string UIMeActionsEditValueAsString = "Image\tClick\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckActionsMemoAfterClickSimpleHeaderButtonExpectedValues
	{
		#region Fields
		public string UIMeActionsEditValueAsString = "Push button\tClick\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckActionsMemoForCheckGlyphsHeaderButtonCheckedStateExpectedValues
	{
		#region Fields
		public string UIMeActionsEditValueAsString = "Glyphs\tChecked\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckActionsMemoForCheckGlyphsHeaderButtonUncheckedStateExpectedValues
	{
		#region Fields
		public string UIMeActionsEditValueAsString = "Glyphs\tUnchecked\r\nGlyphs\tChecked\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckActionsMemoForCheckHeaderButtonCheckedStateExpectedValues
	{
		#region Fields
		public string UIMeActionsEditValueAsString = "Check Button\tChecked\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckActionsMemoForCheckHeaderButtonUncheckedStateExpectedValues
	{
		#region Fields
		public string UIMeActionsEditValueAsString = "Check Button\tUnchecked\r\nCheck Button\tChecked\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedConditionExpressionExpectedValues
	{
		#region Fields
		public string UIQuantity10AndQuantitListItemText = "[Quantity] >= 10 And [Quantity] <= 20 Or [Discount] > 5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedFooterBricksTextExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices100PrintControlBrickText = "1";
		public string UIPage0BrickIndices110PrintControlBrickText = "Here is footer";
		public string UIPage0BrickIndices120PrintControlBrickText = "test";
		public string UIPage0BrickIndices121PrintControlBrickText = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedHeaderBricksTextExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices100PrintControlBrickText = "1";
		public string UIPage0BrickIndices110PrintControlBrickText = "1 of 1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedRowExpectedValues
	{
		#region Fields
		public string UIItem1CellValueAsString = "1";
		public string UIFiloMixCellValueAsString = "52";
		public string UIItem76500CellValueAsString = "765";
		public string UIItem100CellValueAsString = "100";
		public string UIItem000CellValueAsString = "0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedSummaryExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCell2ValueAsString = "2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAscendingSortBySummaryExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRow1RowHandle = -11;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBarCalcEditValueExpectedValues
	{
		#region Fields
		public string UICalcEditBarEditItemValueAsString = "5.36";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBarCalcEditValueChangedViaMouseWheelScrollExpectedValues
	{
		#region Fields
		public string UICalcEditBarEditItemValueAsString = "1115.5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBarComboBoxEditValueExpectedValues
	{
		#region Fields
		public string UIComboBoxBarEditItemValueAsString = "Pick Image: BarItem";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBarDateEditValueExpectedValues
	{
		#region Fields
		public string UIDateEditBarEditItemValueAsString = "06/14/2012";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBarMemoExEditValueExpectedValues
	{
		#region Fields
		public string UIMemoExEditBarEditItemValueAsString = "Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBarTextEditValueExpectedValues
	{
		#region Fields
		public string UITextEditBarEditItemValueAsString = "Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckButtonEditValueExpectedValues
	{
		#region Fields
		public string UIButtonEditBarEditItemValueAsString = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCalcEditValueExpectedValues
	{
		#region Fields
		public string UICalcEditSampleEditValueAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCalcEditValueChangedViaMouseWheelScrollExpectedValues
	{
		#region Fields
		public string UICalcEditSamplePopupEditValueAsString = "82.2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedBottomMarginValueExpectedValues
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlBottomMargin = 20;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedGridLookUpEditorValueExpectedValues
	{
		#region Fields
		public string UIGridLookUpEdit1PopupEditValueAsString = "52";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedGridLookUpEditorValueViaButtonLastExpectedValues
	{
		#region Fields
		public string UIGridLookUpEdit1PopupEditValueAsString = "77";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedGridLookUpEditorValueViaButtonNextExpectedValues
	{
		#region Fields
		public string UIGridLookUpEdit1PopupEditValueAsString = "14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedGridLookUpEditorValueViaButtonPreviousExpectedValues
	{
		#region Fields
		public string UIGridLookUpEdit1PopupEditValueAsString = "42";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedInPlaceGridLookUpEditorValueExpectedValues
	{
		#region Fields
		public string UITheBigCheeseCellValueAsString = "THEBI";
		public string UIAnneDodsworthCellValueAsString = "9";
		public string UIDateEditDateTimePickerValueAsString = "1994-06-15";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedInPlaceSearchLookUpEditorValueExpectedValues
	{
		#region Fields
		public string UIAntonioMorenoTaqueríCellValueAsString = "ANTON";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedLeftMarginValueExpectedValues
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlLeftMargin = 178;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedListViewTypeViaCheckingBrickTextExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices09PrintControlBrickText = "Finland";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedNumericMaskBoxEditValuesExpectedValues
	{
		#region Fields
		public string UITeNumeric1EditValueAsString = "500";
		public string UITeNumeric2EditValueAsString = "183456.8";
		public string UITeNumeric3EditValueAsString = "-200.01";
		public string UITeNumeric4EditValueAsString = "2000";
		public string UITeNumeric5EditValueAsString = "123556.8";
		public string UITeNumeric6EditValueAsString = "12145";
		public string UITeNumeric7EditValueAsString = "1.278";
		public string UITextEdit10EditValueAsString = "5.88";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedProgressBarValueViaButtonMinusExpectedValues
	{
		#region Fields
		public string UIItem85CellValueAsString = "85";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedProgressBarValueViaButtonPlusExpectedValues
	{
		#region Fields
		public string UIProgressBarControlProgressBarText = "75";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedRibbonGallerySelectedItemExpectedValues
	{
		#region Fields
		public string UIMainGalleryItemGroupSelectedItemsAsString = "DarkOrange";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedRibbonGallerySelectedItemViaClickRibbonGalleryItemExpectedValues
	{
		#region Fields
		public string UISkinsRibbonGallerySelectedItemsAsString = "Visual Studio 2010";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedRightMarginValueExpectedValues
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlRightMargin = 492;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedSearchLookUpEditorValueExpectedValues
	{
		#region Fields
		public string UISearchLookUpEdit1PopupEditValueAsString = "74";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedSummaryExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "2.5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedTopMarginValueExpectedValues
	{
		#region Fields
		public int UIDocumentViewerPrintViewControlTopMargin = 149;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedViaF4KeyAndKeyboardMemoExEditValueExpectedValues
	{
		#region Fields
		public string UIMemoExEditSamplePopupEditValueAsString = @"This control allows end users to edit memo data within the dropdown window. This control is the best choice when you need to save form space or when you want to provide convenient memo editing in container controls like the XtraGrid. The MemoExEdit control combines the features found in the MemoEdit control and the BLOBEditor.
Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedViaKeyboardCheckEditValueExpectedValues
	{
		#region Fields
		public string UICheckEditBarEditItemValueAsString = "True";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedViaMouseCheckEditValueExpectedValues
	{
		#region Fields
		public string UICheckEditBarEditItemValueAsString = "False";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCheckedComboBoxEditValueExpectedValues
	{
		#region Fields
		public string UICheckedComboBoxEditSCheckedComboBoxValueAsString = "Ellipse, Triangle, Square";
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString = "2 3 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCheckedStateTrueExpectedValues
	{
		#region Fields
		public string UICheckEditSampleCheckBoxCheckStateAsString = "Checked";
		public bool UICheckEditSampleCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckClearedCellValueExpectedValues
	{
		#region Fields
		public string UIEditValueisnullCellValueAsString = null;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckClearedDateEditValueExpectedValues
	{
		#region Fields
		public string UIDateEditSampleDateTimeEditValueAsString = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckClearedFilterExpectedValues
	{
		#region Fields
		public string UIGridColumn5ColumnHeaderFilterString = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckClearedSummaryItemExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCell1ValueAsString = null;
		public string UIGridControlFooterCelGridFooterCell1RowIndex = "0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckColorEditValueExpectedValues
	{
		#region Fields
		public string UIColorEditBarEditItemValueAsString = "255, 128, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckColorEditValueInTabCustomExpectedValues
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "255, 0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckColorEditValueInTabSystemExpectedValues
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "Control";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckColorEditValueInTabWebExpectedValues
	{
		#region Fields
		public string UIColorEditSampleColorEditValueAsString = "Silver";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckComboBoxEditSelectedIndexExpectedValues
	{
		#region Fields
		public int UIComboBoxEditSampleComboBoxSelectedIndex = 5;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckComboBoxEditValueExpectedValues
	{
		#region Fields
		public string UIComboBoxEditSampleComboBoxValueAsString = "Angola";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckConservationOfQuantityPagesExpectedValues
	{
		#region Fields
		public string UIPage1of1BarItemText = "Page 1 of 1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCreatedYearCalendarExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices00PrintControlBrickText = "2014";
		public string UIMonthYearBarEditItemValueAsString = "2014-06-11";
		public string UIPreviewModeBarEditItemValueAsString = "Year Preview";
		public string UIOrientationBarEditItemValueAsString = "Portrait";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedAlertFormCaptionExpectedValues
	{
		#region Fields
		public string UIAlertCaptionTextText = "Test";
		public string UIAlertTextTextText = "test";
		public string UIOpenButtonText = "Open";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedCSVSpecificExportOptionsExpectedValues
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "utf-8";
		public string UIComboBoxEditComboBox1ValueAsString = "Value";
		public string UIComboBoxEditComboBox2ValueAsString = ",";
		public bool UIQuotestringswithsepaCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedHTMLSpecificExportOptionsExpectedValues
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "Single file page-by-page";
		public string UIComboBoxEditComboBox1ValueAsString = "1";
		public string UIColorEditColorEditValueAsString = "Gray";
		public string UISpinEditEditValueAsString = "3";
		public string UIComboBoxEditComboBox2ValueAsString = "Test";
		public string UIComboBoxEditComboBox3ValueAsString = "Unicode (UTF-8)";
		public bool UIRemovecarriagereturnCheckBoxChecked = true;
		public bool UIEmbedimagesinHTMLCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedImageSpecificExportOptionsExpectedValues
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "JPEG";
		public string UISpinEditEditValueAsString = "100";
		public string UIComboBoxEditComboBox1ValueAsString = "Different files";
		public string UIComboBoxEditComboBox2ValueAsString = "1-100";
		public string UIColorEditColorEditValueAsString = "White";
		public string UISpinEditEdit1ValueAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedPasswordSecurityOptionsExpectedValues
	{
		#region Fields
		public bool UIChbOpenPasswordCheckBoxChecked = true;
		public string UITeOpenPasswordEditValueAsString = "***";
		public bool UIChbRestrictCheckBoxChecked = true;
		public string UITePermissionsPassworEditValueAsString = "***";
		public string UILkpPrintingAllowedPopupEditValueAsString = "HighResolution";
		public string UILkpChangesAllowedPopupEditValueAsString = "InsertingDeletingRotating";
		public bool UIChbEnableCopingCheckBoxChecked = true;
		public bool UIChbEnableScreenReadeCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedPDFSpecificExportOptionsExpectedValues
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "1";
		public string UIComboBoxEditComboBox1ValueAsString = "Tahoma";
		public bool UIConvertImagestoJpegCheckBoxChecked = false;
		public string UIComboBoxEditComboBox2ValueAsString = "Medium";
		public bool UICompressedCheckBoxChecked = false;
		public bool UIShowprintdialogonopeCheckBoxChecked = true;
		public string UIDropDownEditPopupEditValueAsString = "(none)";
		public string UIComboBoxEditComboBox3ValueAsString = "My application";
		public string UIComboBoxEditComboBox4ValueAsString = "author";
		public string UIComboBoxEditComboBox5ValueAsString = "keywords";
		public string UIComboBoxEditComboBox6ValueAsString = "subject";
		public string UIComboBoxEditComboBox7ValueAsString = "title";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedRibbonPrintSettingsExpectedValues
	{
		#region Fields
		public string UICopySpinEditEditValueAsString = "5";
		public string UIDdbPrinterButtonText = "Fax";
		public string UIDdbDuplexButtonText = "Manually Print on Both Sides";
		public string UIDdbCollateButtonText = "Uncollated";
		public string UIDdbOrientationButtonText = "Landscape Orientation";
		public string UIDdbMarginsButtonText = "Wide";
		public string UIDdbPaperSizeButtonText = "A3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedRTFSpecificExportOptionsExpectedValues
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "Single file page-by-page";
		public string UIComboBoxEditComboBox1ValueAsString = "1";
		public bool UIExportwatermarksCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedXLSSpecificExportOptionsExpectedValues
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "Different files";
		public string UIComboBoxEditComboBox1ValueAsString = "1-10,11";
		public string UIComboBoxEditComboBox2ValueAsString = "test";
		public string UIComboBoxEditComboBox3ValueAsString = "Text";
		public bool UIShowgridlinesCheckBoxChecked = true;
		public bool UIExporthyperlinksCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomSumAfterChangingCustomFreightExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "56023.37";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDateEditValueChangedViaKeyboardExpectedValues
	{
		#region Fields
		public string UIDateEditSampleDateTimePickerValueAsString = "2011-11-17";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDateEditValueChangedViaMouseExpectedValues
	{
		#region Fields
		public string UIDateEditSampleDateTimePickerValueAsString = "2010-06-17";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDateEditValueInVistaTimeModeExpectedValues
	{
		#region Fields
		public string UIDateEditSampleDateTimeEditValueAsString = "11/22/2012";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDayTimeDateTimeEditValueExpectedValues
	{
		#region Fields
		public string UITeDateTime8EditValueAsString = "06/18/2012 16:10:42";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDeletedBarLinkContainerPasteLinkExpectedValues
	{
		#region Fields
		public bool UIPasteCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDeletedConditionExpressionExpectedValues
	{
		#region Fields
		public int UITotal50AndDiscount0ListItemIndex = 2;
		public string UITotal50AndDiscount0ListItemText = "[Total] < 50 And [Discount] != 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDescendingSortBySummaryExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRowRowHandle = -8;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckExpandedGroupRowExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRow8RowHandle = -7;
		public int UIGridControlGroupRowGroupRow9RowHandle = -8;
		public int UIFoliesgourmandesCellRowHandle = 10;
		public string UIFoliesgourmandesCellValueAsString = "Folies gourmandes";
		public int UIRicardoAdocicadosCellRowHandle = 11;
		public string UIRicardoAdocicadosCellValueAsString = "Ricardo Adocicados";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckExpandedMasterRowExpectedValues
	{
		#region Fields
		public string UIGridControlGroupRowGroupRow14ValueAsString = "3";
		public int UIGridControlGroupRowGroupRow14RowHandle = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilterConditionExpectedValues
	{
		#region Fields
		public string UIColPriorityColumnHeaderFilterString = "[Priority] = 2";
		public string UIColTypeColumnHeaderFilterString = "";
		public string UIGridControlFilterPanTextFilterString = "[Priority] = 2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilterDisplayBugsExpectedValues
	{
		#region Fields
		public string UIColTypeColumnHeaderFilterString = "[Type] = True";
		public string UIColPriorityColumnHeaderFilterString = "[Priority] = 2";
		public string UIGridControlFilterPanTextFilterString = "[Priority] = 2 And [Type] = True";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilterDisplayNonBugsExpectedValues
	{
		#region Fields
		public string UIColTypeColumnHeaderFilterString = "[Type] = False";
		public string UIColPriorityColumnHeaderFilterString = "[Priority] = 2";
		public string UIGridControlFilterPanTextFilterString = "[Priority] = 2 And [Type] = False";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilteredDataExpectedValues
	{
		#region Fields
		public string UIGridColumn2ColumnHeaderFilterString = "[ProductID] = 40 Or [ProductID] = 65";
		public string UIGridColumn4ColumnHeaderFilterString = "[Quantity] > 10s";
		public string UIGridControlFilterPanTextFilterString = "([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) And ([UnitPrice] Betwe" +
			"en(20.0m, 30.0m) Or [Discount] >= 0.05f) And [Quantity] > 10s And ([ProductID] =" +
			" 40 Or [ProductID] = 65)";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilteringResultAfterApplyingFilterExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "31";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilteringResultAfterApplyingFilterViaAssigningFilterColumnExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "23";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilteringResultAfterCleaningFilterExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "91";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilterMadeViaFilterControlInCustomFilterControlBindingTabExpectedValues
	{
		#region Fields
		public string UIGridControlFilterPanTextFilterString = "[Implemented] >= 29 And [Suspended] = True";
		public string UIGridColumnSuspendedColumnHeaderFilterString = "[Suspended] = True";
		public string UIGridColumnImplementeColumnHeaderFilterString = "[Implemented] >= 29";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilterMadeViaFilterControlInPropertiesTabExpectedValues
	{
		#region Fields
		public string UIGridControlFilterPanTextFilterString = "[ProductID] Between(\'Alice Munton\', \'Iqura\') And [Discount] >= 0.05 And [Quantity" +
			"] In (5s, 10s, 15s)";
		public string UIGridColumnProductColumnHeaderFilterString = "[ProductID] Between(\'Alice Munton\', \'Iqura\')";
		public string UIGridColumnQuantityColumnHeaderFilterString = "[Quantity] In (5s, 10s, 15s)";
		public string UIGridColumnDiscountColumnHeaderFilterString = "[Discount] >= 0.05";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFilterMadeViaFilterDropdownListExpectedValues
	{
		#region Fields
		public string UIColPriorityColumnHeaderFilterString = "[Priority] = 1 Or [Priority] = 2";
		public string UIColStatusColumnHeaderFilterString = "[Status] = 3 Or [Status] = 4";
		public string UIGridControlFilterPanTextFilterString = "[FixedDate] Is Not Null And ([Status] = 3 Or [Status] = 4) And ([Priority] = 1 Or" +
			" [Priority] = 2)";
		public string UIGridControlFooterCelGridFooterCellValueAsString = "10";
		public string UIGridControlFooterCelGridFooterCell1ValueAsString = "2004-07-11";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFooterBrickSettingsExpectedValues
	{
		#region Fields
		public string UITbFoot1EditValueAsString = "[Pages #]";
		public string UITbFoot2EditValueAsString = "Here is footer";
		public string UITbFoot3EditValueAsString = "test\r\ntest";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFullCollapsedGroupRowExpectedValues
	{
		#region Fields
		public string UIGridControlGroupRowGroupRow10ValueAsString = "Owner/Marketing Assistant";
		public int UIGridControlGroupRowGroupRow10RowHandle = -30;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFullDateAndTimeEditValueExpectedValues
	{
		#region Fields
		public string UITeDateTime2EditValueAsString = "06/08/2012 17:55:25";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFullDateTimeEditValueExpectedValues
	{
		#region Fields
		public string UITeDateTime1EditValueAsString = "06/08/2012 12:12:12";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFullExpandedGroupRowExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRow2RowHandle = -2;
		public int UIFISSAFabricaInterSalCellRowHandle = 0;
		public string UIFISSAFabricaInterSalCellValueAsString = "FISSA Fabrica Inter. Salchichas S.A.";
		public int UIQUICKStopCellRowHandle = 1;
		public string UIQUICKStopCellValueAsString = "QUICK-Stop";
		public int UIRomeroytomilloCellRowHandle = 2;
		public string UIRomeroytomilloCellValueAsString = "Romero y tomillo";
		public int UIGridControlGroupRowGroupRow12RowHandle = -1;
		public string UIGridControlGroupRowGroupRow12ValueAsString = "3";
		public int UIGridControlGroupRowGroupRow13RowHandle = -2;
		public string UIGridControlGroupRowGroupRow13ValueAsString = "1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedDataExpectedValues
	{
		#region Fields
		public string UIGridControlGroupRowGroupRowValueAsString = "17";
		public string UIGridControlGroupRowGroupRow1ValueAsString = "0";
		public string UIGridControlGroupRowGroupRow2ValueAsString = "0.05";
		public string UIGridControlGroupRowGroupRow3ValueAsString = "0.1";
		public string UIGridControlGroupRowGroupRow4ValueAsString = "0.2";
		public string UIGridControlGroupRowGroupRow5ValueAsString = "0.25";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedDataByCategoryExpectedValues
	{
		#region Fields
		public string UIGridControlGroupRowGroupRow6ValueAsString = "4";
		public int UIGridControlGroupRowGroupRow6RowHandle = -4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedDataByCustomIntervalExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRow5RowHandle = -5;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedDataByDateRangeDataExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRow3RowHandle = -7;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedDataByMonthDataExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRow2RowHandle = -6;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedDataByYearDataExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRow4RowHandle = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedDataWithMultipleValuesGroupingExpectedValues
	{
		#region Fields
		public int UIColCategoryColumnHeaderGroupIndex = 0;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedMasterDetailDataExpectedValues
	{
		#region Fields
		public string UIGridControlGroupRowGroupRow1ValueAsString = "Argentina";
		public int UIGridControlGroupRowGroupRow1RowHandle = -1;
		public int UIGridControlGroupRowGroupRow2RowHandle = -2;
		public int UIGridControlGroupRowGroupRow3RowHandle = -3;
		public string UIGridControlGroupRowGroupRow3ValueAsString = "Sales Agent";
		public int UIGridControlGroupRowGroupRow4RowHandle = -4;
		public string UIGridControlGroupRowGroupRow4ValueAsString = "Cactus Comidas para llevar";
		public int UIGridControlGroupRowGroupRow5RowHandle = -5;
		public string UIGridControlGroupRowGroupRow5ValueAsString = "Océano Atlántico Ltda.";
		public int UIGridControlGroupRowGroupRow6RowHandle = -6;
		public string UIGridControlGroupRowGroupRow6ValueAsString = "Sales Representative";
		public int UIGridControlGroupRowGroupRow7RowHandle = -7;
		public string UIGridControlGroupRowGroupRow7ValueAsString = "Rancho grande";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupedMasterDetailDataOnJoinedGroupPanelExpectedValues
	{
		#region Fields
		public int UIColCompanyNameColumnHeader1VisibleIndex = 0;
		public int UIColCompanyNameColumnHeader1SortIndex = -1;
		public int UIColCompanyNameColumnHeader1GroupIndex = 0;
		public int UIColContactTitleColumnHeaderVisibleIndex = -1;
		public int UIColContactTitleColumnHeaderSortIndex = -1;
		public int UIColContactTitleColumnHeaderGroupIndex = 1;
		public int UIColRegionColumnHeader1VisibleIndex = 1;
		public int UIColRegionColumnHeader1GroupIndex = -1;
		public int UIColRegionColumnHeader1SortIndex = 0;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupIndexAfterGroupedDataExpectedValues
	{
		#region Fields
		public int UIGridColumn2ColumnHeader1GroupIndex = 0;
		public int UIGridColumn5ColumnHeader1GroupIndex = 1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckGroupIndexAfterUngroupedDataExpectedValues
	{
		#region Fields
		public int UIGridColumn2ColumnHeaderGroupIndex = -1;
		public int UIGridColumn5ColumnHeaderGroupIndex = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckHeaderBrickSettingsExpectedValues
	{
		#region Fields
		public string UITbHead1EditValueAsString = "[Page #]";
		public string UITbHead2EditValueAsString = "[Page # of Pages #]";
		public string UITbHead3EditValueAsString = "[Date Printed]\r\n[Time Printed]";
		public bool UIBarCheckItemLink1BarBaseButtonItemChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckHiddenToolbarExpectedValues
	{
		#region Fields
		public bool UIFormatCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckImageComboBoxEditSelectedIndexExpectedValues
	{
		#region Fields
		public int UIImageComboBoxEditSamComboBoxSelectedIndex = 3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckImageComboBoxEditValueExpectedValues
	{
		#region Fields
		public string UIImageComboBoxEditSamComboBoxValueAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckInvertedSelectedCheckedListBoxValuesExpectedValues
	{
		#region Fields
		public string UICheckedListBoxControCheckedListBoxCheckedIndicesAsString = "4 8 16 23 27 28 41 52";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckInvokedCustomizationFormExpectedValues
	{
		#region Fields
		public string UIBtCloseButtonText = "Close";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorAppendButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: Append\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorCancelEditButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: CancelEdit\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorEndEditButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: EndEdit\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorFirstButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: First\r\nButtonClick: Last\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorLastButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: Last\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorLockButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: Custom - Lock\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorNextButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: Next\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorNextPageButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: NextPage\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorPreviousButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: Prev\r\nButtonClick: Last\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorPreviousPageButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: PrevPage\r\nButtonClick: Last\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorRemoveButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: Remove\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDataNavigatorSearchButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ButtonClick: Custom - Search\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterClickDropDownButtonExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "Click: DevExpress.XtraEditors.DropDownButton\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterOpeningDropDownButtonPopupControlContainerExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ShowDropDownControl:  [DevExpress.XtraBars.PopupControlContainer]\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLogAfterOpeningDropDownButtonPopupMenuExpectedValues
	{
		#region Fields
		public string UIMeFiringEventsEditValueAsString = "ShowDropDownControl: popupMenu1 [DevExpress.XtraBars.PopupMenu]\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckLookUpEditValueExpectedValues
	{
		#region Fields
		public string UILookUpEdit1PopupEditValueAsString = "14";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMemoEditValueExpectedValues
	{
		#region Fields
		public string UIMemoEditSampleEditValueAsString = "Check\r\nCheck\r\nCheck";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMonthAndDayDateTimeEditValueExpectedValues
	{
		#region Fields
		public string UITeDateTime5EditValueAsString = "02/18/2012 11:08:08";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMRUEditValueAfterAddingExpectedValues
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "test";
		public int UIMruEditSampleMRUEditSelectedIndex = 0;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMRUEditValueAfterDeletingExpectedValues
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "www.devexpress.com";
		public int UIMruEditSampleMRUEditSelectedIndex = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMRUEditValueAfterSelectionExpectedValues
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "www.devexpress.com/ClientCenter/Downloads/#Trials";
		public int UIMruEditSampleMRUEditSelectedIndex = 1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMRUEditValueAfterTypingExpectedValues
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "test";
		public int UIMruEditSampleMRUEditSelectedIndex = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMultiExtendedSelectionInListBoxExpectedValues
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "5 6 7 8 9 10";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMultiExtendedSelectionInListBoxAfterUndoSelectionExpectedValues
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "5 6 7 8";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMultiSimpleSelectionInListBoxExpectedValues
	{
		#region Fields
		public bool UIUnitedStatesimageusListItemSelected = true;
		public int UIUnitedStatesimageusListItemIndex = 0;
		public bool UIAngolaListItemSelected = true;
		public int UIAngolaListItemIndex = 5;
		public bool UIAustraliaListItemSelected = true;
		public int UIAustraliaListItemIndex = 12;
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0 5 12";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMultiSimpleSelectionInListBoxAfterUndoSelectionExpectedValues
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0 5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckPickImageEditValueExpectedValues
	{
		#region Fields
		public string UIPickImageBarEditItemValueAsString = "MiddleRight";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckPopupContainerEditSizeExpectedValues
	{
		#region Fields
		public string UIPopupContainerFormWindowSize = "482, 324";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckQuicklyAccessToRecentDocumentsParams
	{
		#region Fields
		public bool UICheckEdit1CheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRangeTrackBarValueExpectedValues
	{
		#region Fields
		public int UIRangeTrackBarControlRangeTrackBarValueMaximum = 7;
		public int UIRangeTrackBarControlRangeTrackBarValueMinimum = 1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRecalculatedSummariesValueExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCell1ValueAsString = "5490";
		public string UIGridControlFooterCelGridFooterCell4ValueAsString = "88764.6";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRecalculatedTotalRowAndColumnCellsExpectedValues
	{
		#region Fields
		public string UIItem10CellValueAsString = "10";
		public string UIItem5CellValueAsString = "5";
		public string UIItem5Cell1ValueAsString = "5";
		public string UIGridControlFooterCelGridFooterCell3ValueAsString = "20";
		public string UIGridControlFooterCelGridFooterCell2ValueAsString = "5";
		public string UIGridControlFooterCelGridFooterCell1ValueAsString = "10";
		public string UIGridControlFooterCelGridFooterCellValueAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRecalculatedValuesInFixedBandsAndGroupingTabExpectedValues
	{
		#region Fields
		public string UIGridControlRowFooterRowFooterCellValueAsString = "100174.6";
		public string UIItem10029800CellValueAsString = "100298";
		public string UIItem835817CellValueAsString = "8358.166666666666666666666667";
		public string UIGridControlFooterCelGridFooterCellValueAsString = "100753.90000000001";
		public string UIGridControlFooterCelGridFooterCell1ValueAsString = "109512.38";
		public string UIGridControlFooterCelGridFooterCell2ValueAsString = "253.50087962962962962962962964";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRecalculatedValuesInSimpleFixedBandsTabExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "5599974";
		public string UIItem2792353CellValueAsString = "2792353";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRecalculatedValuesOnVerticalSplitPresentationTabExpectedValues
	{
		#region Fields
		public string UIItem499465CellValueAsString = "499465.47";
		public string UIItem0CellValueAsString = "0";
		public string UIItem287828CellValueAsString = "2878.2799999999997";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRegExMaskBoxEditValuesExpectedValues
	{
		#region Fields
		public string UITextEdit1EditValueAsString = "12:12:12";
		public string UITextEdit2EditValueAsString = "555-55-55";
		public string UITextEdit3EditValueAsString = "12/12/12";
		public string UITextEdit6EditValueAsString = "12:12:12 AM";
		public string UITextEdit5EditValueAsString = "12:12";
		public string UITextEdit4EditValueAsString = "145-14-5145";
		public string UITextEdit9EditValueAsString = "30000";
		public string UITextEdit8EditValueAsString = "12345";
		public string UITextEdit7EditValueAsString = "file://123.a/";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRegularMaskBoxEditValuesExpectedValues
	{
		#region Fields
		public string UITeRegular1EditValueAsString = "(960)555-55-55";
		public string UITeRegular1_1EditValueAsString = "(555)125-12-35";
		public string UITeRegular2EditValueAsString = "12/12/12";
		public string UITeRegular3EditValueAsString = "12:12:12 AM";
		public string UITeRegular4EditValueAsString = "12:12";
		public string UITeRegular5EditValueAsString = "12345";
		public string UITeRegular6EditValueAsString = "123-45-6789";
		public string UITeRegular7EditValueAsString = "12345-6654";
		public string UITeRegular8EditValueAsString = "12121";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRemovedSortingExpectedValues
	{
		#region Fields
		public string UIVCrkScrollBarScrollBarControlValueAsString = "0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckReorderedColumnsExpectedValues
	{
		#region Fields
		public int UIGridColumn3ColumnHeaderVisibleIndex = 1;
		public string UIGridColumn3ColumnHeaderColumnName = "gridColumn3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRFCDateTimeEditValueExpectedValues
	{
		#region Fields
		public string UITeDateTime3EditValueAsString = "06/13/2018 15:05:08";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonGallerySelectedItemAfterUsingGalleryDropButtonKeyTipsExpectedValues
	{
		#region Fields
		public string UIMainGalleryItemGroupSelectedItemsAsString = "Olive";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonGallerySelectedItemAfterUsingGalleryDropDownButtonKeyTipsExpectedValues
	{
		#region Fields
		public string UIMainGalleryItemGroupSelectedItemsAsString = "PeachPuff";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonGroupLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues
	{
		#region Fields
		public string UIRibbonToolbarPopupItRibbonItemLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonItemLocationForAssertionRemovingFromQuickAccessToolbarExpectedValues
	{
		#region Fields
		public string UIReplaceRibbonItemLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonRichEditTextForAssertionApplicationCloseCommandsExpectedValues
	{
		#region Fields
		public string UIRichTextBox1EditText = "Ribbon\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonRichEditTextForAssertionApplicationRecentDocumentsCommandsExpectedValues
	{
		#region Fields
		public string UIRichTextBox1EditText = "test\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonRichEditTextForAssertionInvokingRibbonCommandsExpectedValues
	{
		#region Fields
		public string UIRichTextBox1EditText = "testtest\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonRichEditTextForAssertionMiniToolbarCutItemExpectedValues
	{
		#region Fields
		public string UIRichTextBox1EditText = "\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonRichEditTextForAssertionReplacingExpectedValues
	{
		#region Fields
		public string UIRichTextBox1EditText = "Ribbon\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaCtrlAShortcutExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = "Row: #0\r\n    Alfreds Futterkiste\r\n    Germany\r\n    Berlin\r\n    12209\r\n    Obere S" +
			"tr. 57\r\n    030-0074321\r\n    030-0076545\r\nRow: #1\r\n    Ana Trujillo Emparedados " +
			"y helados\r\n    Mexico\r\n    México D.F.\r\n    05021\r\n    Avda. de la Constitución " +
			"2222\r\n    (5) 555-4729\r\n    (5) 555-3745\r\nRow: #2\r\n    Antonio Moreno Taquería\r\n" +
			"    Mexico\r\n    México D.F.\r\n    05023\r\n    Mataderos  2312\r\n    (5) 555-3932\r\n " +
			"   \r\nRow: #3\r\n    Around the Horn\r\n    UK\r\n    London\r\n    WA1 1DP\r\n    120 Hano" +
			"ver Sq.\r\n    (171) 555-7788\r\n    (171) 555-6750\r\nRow: #4\r\n    Berglunds snabbköp" +
			"\r\n    Sweden\r\n    Luleå\r\n    S-958 22\r\n    Berguvsvägen  8\r\n    0921-12 34 65\r\n " +
			"   0921-12 34 67\r\nRow: #5\r\n    Blauer See Delikatessen\r\n    Germany\r\n    Mannhei" +
			"m\r\n    68306\r\n    Forsterstr. 57\r\n    0621-08460\r\n    0621-08924\r\nRow: #6\r\n    B" +
			"londel père et fils\r\n    France\r\n    Strasbourg\r\n    67000\r\n    24, place Kléber" +
			"\r\n    88.60.15.31\r\n    88.60.15.32\r\nRow: #7\r\n    Bólido Comidas preparadas\r\n    " +
			"Spain\r\n    Madrid\r\n    28023\r\n    C/ Araquil, 67\r\n    (91) 555 22 82\r\n    (91) 5" +
			"55 91 99\r\nRow: #8\r\n    Bon app\'\r\n    France\r\n    Marseille\r\n    13008\r\n    12, r" +
			"ue des Bouchers\r\n    91.24.45.40\r\n    91.24.45.41\r\nRow: #9\r\n    Bottom-Dollar Ma" +
			"rkets\r\n    Canada\r\n    Tsawwassen\r\n    T2F 8M4\r\n    23 Tsawassen Blvd.\r\n    (604" +
			") 555-4729\r\n    (604) 555-3745\r\nRow: #10\r\n    B\'s Beverages\r\n    UK\r\n    London\r" +
			"\n    EC2 5NT\r\n    Fauntleroy Circus\r\n    (171) 555-1212\r\n    \r\nRow: #11\r\n    Cac" +
			"tus Comidas para llevar\r\n    Argentina\r\n    Buenos Aires\r\n    1010\r\n    Cerrito " +
			"333\r\n    (1) 135-5555\r\n    (1) 135-4892\r\nRow: #12\r\n    Centro comercial Moctezum" +
			"a\r\n    Mexico\r\n    México D.F.\r\n    05022\r\n    Sierras de Granada 9993\r\n    (5) " +
			"555-3392\r\n    (5) 555-7293\r\nRow: #13\r\n    Chop-suey Chinese\r\n    Switzerland\r\n  " +
			"  Bern\r\n    3012\r\n    Hauptstr. 29\r\n    0452-076545\r\n    \r\nRow: #14\r\n    Comérci" +
			"o Mineiro\r\n    Brazil\r\n    São Paulo\r\n    05432-043\r\n    Av. dos Lusíadas, 23\r\n " +
			"   (11) 555-7647\r\n    \r\nRow: #15\r\n    Consolidated Holdings\r\n    UK\r\n    London\r" +
			"\n    WX1 6LT\r\n    Berkeley Gardens\r\n12  Brewery \r\n    (171) 555-2282\r\n    (171) " +
			"555-9199\r\nRow: #16\r\n    Drachenblut Delikatessen\r\n    Germany\r\n    Aachen\r\n    5" +
			"2066\r\n    Walserweg 21\r\n    0241-039123\r\n    0241-059428\r\nRow: #17\r\n    Du monde" +
			" entier\r\n    France\r\n    Nantes\r\n    44000\r\n    67, rue des Cinquante Otages\r\n  " +
			"  40.67.88.88\r\n    40.67.89.89\r\nRow: #18\r\n    Eastern Connection\r\n    UK\r\n    Lo" +
			"ndon\r\n    WX3 6FW\r\n    35 King George\r\n    (171) 555-0297\r\n    (171) 555-3373\r\nR" +
			"ow: #19\r\n    Ernst Handel\r\n    Austria\r\n    Graz\r\n    8010\r\n    Kirchgasse 6\r\n  " +
			"  7675-3425\r\n    7675-3426\r\nRow: #20\r\n    Familia Arquibaldo\r\n    Brazil\r\n    Sã" +
			"o Paulo\r\n    05442-030\r\n    Rua Orós, 92\r\n    (11) 555-9857\r\n    \r\nRow: #21\r\n   " +
			" FISSA Fabrica Inter. Salchichas S.A.\r\n    Spain\r\n    Madrid\r\n    28034\r\n    C/ " +
			"Moralzarzal, 86\r\n    (91) 555 94 44\r\n    (91) 555 55 93\r\nRow: #22\r\n    Folies go" +
			"urmandes\r\n    France\r\n    Lille\r\n    59000\r\n    184, chaussée de Tournai\r\n    20" +
			".16.10.16\r\n    20.16.10.17\r\nRow: #23\r\n    Folk och fä HB\r\n    Sweden\r\n    Bräcke" +
			"\r\n    S-844 67\r\n    Åkergatan 24\r\n    0695-34 67 21\r\n    \r\nRow: #24\r\n    Franken" +
			"versand\r\n    Germany\r\n    München\r\n    80805\r\n    Berliner Platz 43\r\n    089-087" +
			"7310\r\n    089-0877451\r\nRow: #25\r\n    France restauration\r\n    France\r\n    Nantes" +
			"\r\n    44000\r\n    54, rue Royale\r\n    40.32.21.21\r\n    40.32.21.20\r\nRow: #26\r\n   " +
			" Franchi S.p.A.\r\n    Italy\r\n    Torino\r\n    10100\r\n    Via Monte Bianco 34\r\n    " +
			"011-4988260\r\n    011-4988261\r\nRow: #27\r\n    Furia Bacalhau e Frutos do Mar\r\n    " +
			"Portugal\r\n    Lisboa\r\n    1675\r\n    Jardim das rosas n. 32\r\n    (1) 354-2534\r\n  " +
			"  (1) 354-2535\r\nRow: #28\r\n    Galería del gastrónomo\r\n    Spain\r\n    Barcelona\r\n" +
			"    08022\r\n    Rambla de Cataluña, 23\r\n    (93) 203 4560\r\n    (93) 203 4561\r\nRow" +
			": #29\r\n    Godos Cocina Típica\r\n    Spain\r\n    Sevilla\r\n    41101\r\n    C/ Romero" +
			", 33\r\n    (95) 555 82 82\r\n    \r\nRow: #30\r\n    Gourmet Lanchonetes\r\n    Brazil\r\n " +
			"   Campinas\r\n    04876-786\r\n    Av. Brasil, 442\r\n    (11) 555-9482\r\n    \r\nRow: #" +
			"31\r\n    Great Lakes Food Market\r\n    USA\r\n    Eugene\r\n    97403\r\n    2732 Baker " +
			"Blvd.\r\n    (503) 555-7555\r\n    \r\nRow: #32\r\n    GROSELLA-Restaurante\r\n    Venezue" +
			"la\r\n    Caracas\r\n    1081\r\n    5ª Ave. Los Palos Grandes\r\n    (2) 283-2951\r\n    " +
			"(2) 283-3397\r\nRow: #33\r\n    Hanari Carnes\r\n    Brazil\r\n    Rio de Janeiro\r\n    0" +
			"5454-876\r\n    Rua do Paço, 67\r\n    (21) 555-0091\r\n    (21) 555-8765\r\nRow: #34\r\n " +
			"   HILARIÓN-Abastos\r\n    Venezuela\r\n    San Cristóbal\r\n    5022\r\n    Carrera 22 " +
			"con Ave. Carlos Soublette #8-35\r\n    (5) 555-1340\r\n    (5) 555-1948\r\nRow: #35\r\n " +
			"   Hungry Coyote Import Store\r\n    USA\r\n    Elgin\r\n    97827\r\n    City Center Pl" +
			"aza\r\n516 Main St.\r\n    (503) 555-6874\r\n    (503) 555-2376\r\nRow: #36\r\n    Hungry " +
			"Owl All-Night Grocers\r\n    Ireland\r\n    Cork\r\n    \r\n    8 Johnstown Road\r\n    29" +
			"67 542\r\n    2967 3333\r\nRow: #37\r\n    Island Trading\r\n    UK\r\n    Cowes\r\n    PO31" +
			" 7PJ\r\n    Garden House\r\nCrowther Way\r\n    (198) 555-8888\r\n    \r\nRow: #38\r\n    Kö" +
			"niglich Essen\r\n    Germany\r\n    Brandenburg\r\n    14776\r\n    Maubelstr. 90\r\n    0" +
			"555-09876\r\n    \r\nRow: #39\r\n    La corne d\'abondance\r\n    France\r\n    Versailles\r" +
			"\n    78000\r\n    67, avenue de l\'Europe\r\n    30.59.84.10\r\n    30.59.85.11\r\nRow: #" +
			"40\r\n    La maison d\'Asie\r\n    France\r\n    Toulouse\r\n    31000\r\n    1 rue Alsace-" +
			"Lorraine\r\n    61.77.61.10\r\n    61.77.61.11\r\nRow: #41\r\n    Laughing Bacchus Wine " +
			"Cellars\r\n    Canada\r\n    Vancouver\r\n    V3F 2K1\r\n    1900 Oak St.\r\n    (604) 555" +
			"-3392\r\n    (604) 555-7293\r\nRow: #42\r\n    Lazy K Kountry Store\r\n    USA\r\n    Wall" +
			"a Walla\r\n    99362\r\n    12 Orchestra Terrace\r\n    (509) 555-7969\r\n    (509) 555-" +
			"6221\r\nRow: #43\r\n    Lehmanns Marktstand\r\n    Germany\r\n    Frankfurt a.M. \r\n    6" +
			"0528\r\n    Magazinweg 7\r\n    069-0245984\r\n    069-0245874\r\nRow: #44\r\n    Let\'s St" +
			"op N Shop\r\n    USA\r\n    San Francisco\r\n    94117\r\n    87 Polk St.\r\nSuite 5\r\n    " +
			"(415) 555-5938\r\n    \r\nRow: #45\r\n    LILA-Supermercado\r\n    Venezuela\r\n    Barqui" +
			"simeto\r\n    3508\r\n    Carrera 52 con Ave. Bolívar #65-98 Llano Largo\r\n    (9) 33" +
			"1-6954\r\n    (9) 331-7256\r\nRow: #46\r\n    LINO-Delicateses\r\n    Venezuela\r\n    I. " +
			"de Margarita\r\n    4980\r\n    Ave. 5 de Mayo Porlamar\r\n    (8) 34-56-12\r\n    (8) 3" +
			"4-93-93\r\nRow: #47\r\n    Lonesome Pine Restaurant\r\n    USA\r\n    Portland\r\n    9721" +
			"9\r\n    89 Chiaroscuro Rd.\r\n    (503) 555-9573\r\n    (503) 555-9646\r\nRow: #48\r\n   " +
			" Magazzini Alimentari Riuniti\r\n    Italy\r\n    Bergamo\r\n    24100\r\n    Via Ludovi" +
			"co il Moro 22\r\n    035-640230\r\n    035-640231\r\nRow: #49\r\n    Maison Dewey\r\n    B" +
			"elgium\r\n    Bruxelles\r\n    B-1180\r\n    Rue Joseph-Bens 532\r\n    (02) 201 24 67\r\n" +
			"    (02) 201 24 68\r\nRow: #50\r\n    Mère Paillarde\r\n    Canada\r\n    Montréal\r\n    " +
			"H1J 1C3\r\n    43 rue St. Laurent\r\n    (514) 555-8054\r\n    (514) 555-8055\r\nRow: #5" +
			"1\r\n    Morgenstern Gesundkost\r\n    Germany\r\n    Leipzig\r\n    04179\r\n    Heerstr." +
			" 22\r\n    0342-023176\r\n    \r\nRow: #52\r\n    North/South\r\n    UK\r\n    London\r\n    S" +
			"W7 1RZ\r\n    South House\r\n300 Queensbridge\r\n    (171) 555-7733\r\n    (171) 555-253" +
			"0\r\nRow: #53\r\n    Océano Atlántico Ltda.\r\n    Argentina\r\n    Buenos Aires\r\n    10" +
			"10\r\n    Ing. Gustavo Moncada 8585\r\nPiso 20-A\r\n    (1) 135-5333\r\n    (1) 135-5535" +
			"\r\nRow: #54\r\n    Old World Delicatessen\r\n    USA\r\n    Anchorage\r\n    99508\r\n    2" +
			"743 Bering St.\r\n    (907) 555-7584\r\n    (907) 555-2880\r\nRow: #55\r\n    Ottilies K" +
			"äseladen\r\n    Germany\r\n    Köln\r\n    50739\r\n    Mehrheimerstr. 369\r\n    0221-064" +
			"4327\r\n    0221-0765721\r\nRow: #56\r\n    Paris spécialités\r\n    France\r\n    Paris\r\n" +
			"    75012\r\n    265, boulevard Charonne\r\n    (1) 42.34.22.66\r\n    (1) 42.34.22.77" +
			"\r\nRow: #57\r\n    Pericles Comidas clásicas\r\n    Mexico\r\n    México D.F.\r\n    0503" +
			"3\r\n    Calle Dr. Jorge Cash 321\r\n    (5) 552-3745\r\n    (5) 545-3745\r\nRow: #58\r\n " +
			"   Piccolo und mehr\r\n    Austria\r\n    Salzburg\r\n    5020\r\n    Geislweg 14\r\n    6" +
			"562-9722\r\n    6562-9723\r\nRow: #59\r\n    Princesa Isabel Vinhos\r\n    Portugal\r\n   " +
			" Lisboa\r\n    1756\r\n    Estrada da saúde n. 58\r\n    (1) 356-5634\r\n    \r\nRow: #60\r" +
			"\n    Que Delícia\r\n    Brazil\r\n    Rio de Janeiro\r\n    02389-673\r\n    Rua da Pani" +
			"ficadora, 12\r\n    (21) 555-4252\r\n    (21) 555-4545\r\nRow: #61\r\n    Queen Cozinha\r" +
			"\n    Brazil\r\n    São Paulo\r\n    05487-020\r\n    Alameda dos Canàrios, 891\r\n    (1" +
			"1) 555-1189\r\n    \r\nRow: #62\r\n    QUICK-Stop\r\n    Germany\r\n    Cunewalde\r\n    013" +
			"07\r\n    Taucherstraße 10\r\n    0372-035188\r\n    \r\nRow: #63\r\n    Rancho grande\r\n  " +
			"  Argentina\r\n    Buenos Aires\r\n    1010\r\n    Av. del Libertador 900\r\n    (1) 123" +
			"-5555\r\n    (1) 123-5556\r\nRow: #64\r\n    Rattlesnake Canyon Grocery\r\n    USA\r\n    " +
			"Albuquerque\r\n    87110\r\n    2817 Milton Dr.\r\n    (505) 555-5939\r\n    (505) 555-3" +
			"620\r\nRow: #65\r\n    Reggiani Caseifici\r\n    Italy\r\n    Reggio Emilia\r\n    42100\r\n" +
			"    Strada Provinciale 124\r\n    0522-556721\r\n    0522-556722\r\nRow: #66\r\n    Rica" +
			"rdo Adocicados\r\n    Brazil\r\n    Rio de Janeiro\r\n    02389-890\r\n    Av. Copacaban" +
			"a, 267\r\n    (21) 555-3412\r\n    \r\nRow: #67\r\n    Richter Supermarkt\r\n    Switzerla" +
			"nd\r\n    Genève\r\n    1203\r\n    Grenzacherweg 237\r\n    0897-034214\r\n    \r\nRow: #68" +
			"\r\n    Romero y tomillo\r\n    Spain\r\n    Madrid\r\n    28001\r\n    Gran Vía, 1\r\n    (" +
			"91) 745 6200\r\n    (91) 745 6210\r\nRow: #69\r\n    Santé Gourmet\r\n    Norway\r\n    St" +
			"avern\r\n    4110\r\n    Erling Skakkes gate 78\r\n    07-98 92 35\r\n    07-98 92 47\r\nR" +
			"ow: #70\r\n    Save-a-lot Markets\r\n    USA\r\n    Boise\r\n    83720\r\n    187 Suffolk " +
			"Ln.\r\n    (208) 555-8097\r\n    \r\nRow: #71\r\n    Seven Seas Imports\r\n    UK\r\n    Lon" +
			"don\r\n    OX15 4NB\r\n    90 Wadhurst Rd.\r\n    (171) 555-1717\r\n    (171) 555-5646\r\n" +
			"Row: #72\r\n    Simons bistro\r\n    Denmark\r\n    København\r\n    1734\r\n    Vinbæltet" +
			" 34\r\n    31 12 34 56\r\n    31 13 35 57\r\nRow: #73\r\n    Spécialités du monde\r\n    F" +
			"rance\r\n    Paris\r\n    75016\r\n    25, rue Lauriston\r\n    (1) 47.55.60.10\r\n    (1)" +
			" 47.55.60.20\r\nRow: #74\r\n    Split Rail Beer & Ale\r\n    USA\r\n    Lander\r\n    8252" +
			"0\r\n    P.O. Box 555\r\n    (307) 555-4680\r\n    (307) 555-6525\r\nRow: #75\r\n    Suprê" +
			"mes délices\r\n    Belgium\r\n    Charleroi\r\n    B-6000\r\n    Boulevard Tirou, 255\r\n " +
			"   (071) 23 67 22 20\r\n    (071) 23 67 22 21\r\nRow: #76\r\n    The Big Cheese\r\n    U" +
			"SA\r\n    Portland\r\n    97201\r\n    89 Jefferson Way\r\nSuite 2\r\n    (503) 555-3612\r\n" +
			"    \r\nRow: #77\r\n    The Cracker Box\r\n    USA\r\n    Butte\r\n    59801\r\n    55 Grizz" +
			"ly Peak Rd.\r\n    (406) 555-5834\r\n    (406) 555-8083\r\nRow: #78\r\n    Toms Speziali" +
			"täten\r\n    Germany\r\n    Münster\r\n    44087\r\n    Luisenstr. 48\r\n    0251-031259\r\n" +
			"    0251-035695\r\nRow: #79\r\n    Tortuga Restaurante\r\n    Mexico\r\n    México D.F.\r" +
			"\n    05033\r\n    Avda. Azteca 123\r\n    (5) 555-2933\r\n    \r\nRow: #80\r\n    Tradição" +
			" Hipermercados\r\n    Brazil\r\n    São Paulo\r\n    05634-030\r\n    Av. Inês de Castro" +
			", 414\r\n    (11) 555-2167\r\n    (11) 555-2168\r\nRow: #81\r\n    Trail\'s Head Gourmet " +
			"Provisioners\r\n    USA\r\n    Kirkland\r\n    98034\r\n    722 DaVinci Blvd.\r\n    (206)" +
			" 555-8257\r\n    (206) 555-2174\r\nRow: #82\r\n    Vaffeljernet\r\n    Denmark\r\n    Århu" +
			"s\r\n    8200\r\n    Smagsløget 45\r\n    86 21 32 43\r\n    86 22 33 44\r\nRow: #83\r\n    " +
			"Victuailles en stock\r\n    France\r\n    Lyon\r\n    69004\r\n    2, rue du Commerce\r\n " +
			"   78.32.54.86\r\n    78.32.54.87\r\nRow: #84\r\n    Vins et alcools Chevalier\r\n    Fr" +
			"ance\r\n    Reims\r\n    51100\r\n    59 rue de l\'Abbaye\r\n    26.47.15.10\r\n    26.47.1" +
			"5.11\r\nRow: #85\r\n    Die Wandernde Kuh\r\n    Germany\r\n    Stuttgart\r\n    70563\r\n  " +
			"  Adenauerallee 900\r\n    0711-020361\r\n    0711-035428\r\nRow: #86\r\n    Wartian Her" +
			"kku\r\n    Finland\r\n    Oulu\r\n    90110\r\n    Torikatu 38\r\n    981-443655\r\n    981-" +
			"443655\r\nRow: #87\r\n    Wellington Importadora\r\n    Brazil\r\n    Resende\r\n    08737" +
			"-363\r\n    Rua do Mercado, 12\r\n    (14) 555-8122\r\n    \r\nRow: #88\r\n    White Clove" +
			"r Markets\r\n    USA\r\n    Seattle\r\n    98128\r\n    305 - 14th Ave. S.\r\nSuite 3B\r\n  " +
			"  (206) 555-4112\r\n    (206) 555-4115\r\nRow: #89\r\n    Wilman Kala\r\n    Finland\r\n  " +
			"  Helsinki\r\n    21240\r\n    Keskuskatu 45\r\n    90-224 8858\r\n    90-224 8858\r\nRow:" +
			" #90\r\n    Wolski  Zajazd\r\n    Poland\r\n    Warszawa\r\n    01-012\r\n    ul. Filtrowa" +
			" 68\r\n    (26) 642-7012\r\n    (26) 642-7012";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaKeyboardAndHoldingDownCTRLExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = @"Row: #1
    Mexico
    México D.F.
    05021
Row: #2
    Mexico
    México D.F.
    05023
Row: #3
    UK
    London
    WA1 1DP
Row: #5
    Germany
    Mannheim
Row: #6
    France
    Strasbourg
Row: #7
    Spain
    Madrid
Row: #8
    France
    Marseille
Row: #9
    Canada
    Tsawwassen
Row: #10
    UK
    London";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaMouseAndHoldingDownCTRLExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = @"Row: #2
    Mexico
    México D.F.
    05023
Row: #3
    UK
    London
    WA1 1DP
Row: #4
    Sweden
    Luleå
    S-958 22
Row: #5
    Germany
    Mannheim
    68306
Row: #6
    France
    Strasbourg
    67000
Row: #8
    Bon app'
    France
Row: #9
    Bottom-Dollar Markets
    Canada
Row: #10
    B's Beverages
    UK
Row: #11
    Cactus Comidas para llevar
    Argentina";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaPageDownButtonExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = "Row: #16\r\n    Aachen";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaPageUpButtonExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = "Row: #0\r\n    Berlin";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaShiftPageDownShortcutExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = @"Row: #0
    Germany
Row: #1
    Mexico
Row: #2
    Mexico
Row: #3
    UK
Row: #4
    Sweden
Row: #5
    Germany
Row: #6
    France
Row: #7
    Spain
Row: #8
    France
Row: #9
    Canada
Row: #10
    UK
Row: #11
    Argentina
Row: #12
    Mexico
Row: #13
    Switzerland
Row: #14
    Brazil
Row: #15
    UK
Row: #16
    Germany";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaShiftPageUpShortcutExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = @"Row: #0
    Germany
Row: #1
    Mexico
Row: #2
    Mexico
Row: #3
    UK
Row: #4
    Sweden
Row: #5
    Germany
Row: #6
    France
Row: #7
    Spain
Row: #8
    France
Row: #9
    Canada
Row: #10
    UK
Row: #11
    Argentina
Row: #12
    Mexico
Row: #13
    Switzerland
Row: #14
    Brazil
Row: #15
    UK
Row: #16
    Germany";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaShiftTabShortcutExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = "Row: #2\r\n    Mexico";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaTabButtonExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = "Row: #2\r\n    05023";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCheckedComboBoxEditValuesExpectedValues
	{
		#region Fields
		public string UICheckedComboBoxEditSCheckedComboBoxValueAsString = "";
		public string UICheckedComboBoxEditSCheckedComboBoxCheckedIndicesAsString = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCheckedListBoxValueExpectedValues
	{
		#region Fields
		public string UICheckedListBoxControCheckedListBoxCheckedIndicesAsString = "5 6 7 9 10 11 12 13 14 15 17 18 19 20 21 22 24 25 26 29 30 31 32 33 34 35 36 37 3" +
			"8 39 40 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 " +
			"67 68 69 70 71 72 73 74 75 76 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedListBoxValueExpectedValues
	{
		#region Fields
		public bool UIAngolaListItemSelected = true;
		public int UIAngolaListItemIndex = 5;
		public string UIListBoxControlSampleListSelectedIndicesAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedMemoEditTextExpectedValues
	{
		#region Fields
		public int UIMemoEditSampleEditSelectionStart = 0;
		public int UIMemoEditSampleEditSelectionLength = 179;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedRowsViaMouseExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = @"Company Name: Antonio Moreno Taquería (#2)
Company Name: Around the Horn (#3)
Company Name: Berglunds snabbköp (#4)
Company Name: Blauer See Delikatessen (#5)
Company Name: Blondel père et fils (#6)
Company Name: Bólido Comidas preparadas (#7)
Company Name: Bon app' (#8)
Company Name: Bottom-Dollar Markets (#9)
Company Name: B's Beverages (#10)";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedRowsViaMouseAndHoldingDownCTRLExpectedValues
	{
		#region Fields
		public string UIItemEditSelectionText = @"Company Name: Ana Trujillo Emparedados y helados (#1)
Company Name: Antonio Moreno Taquería (#2)
Company Name: Around the Horn (#3)
Company Name: Berglunds snabbköp (#4)
Company Name: Bólido Comidas preparadas (#7)
Company Name: Bon app' (#8)
Company Name: Bottom-Dollar Markets (#9)";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedStateTrueExpectedValues
	{
		#region Fields
		public int UIRadioGroupSampleRadioGroupSelectedIndex = 2;
		public bool UIRadioGroupItemRadioButtonSelected = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedTextEditTextExpectedValues
	{
		#region Fields
		public int UITextEditSampleEditSelectionStart = 7;
		public int UITextEditSampleEditSelectionLength = 4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckShortTimeDateTimeEditValueExpectedValues
	{
		#region Fields
		public string UITeDateTime7EditValueAsString = "04:15";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckShowedAlertFormCaptionExpectedValues
	{
		#region Fields
		public string UIAlertCaptionTextText = "Andrew Miller";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSimpleFilteredDataExpectedValues
	{
		#region Fields
		public string UIGridColumn5ColumnHeaderFilterString = "[Discount] = 0.05f";
		public string UIGridControlFilterPanCustomFilterString = "[Discount] = 0.05f";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSimpleMaskBoxEditValuesExpectedValues
	{
		#region Fields
		public string UITeSimple1EditValueAsString = "(960)555-55-55";
		public string UITeSimple2EditValueAsString = "12/12/12";
		public string UITeSimple3EditValueAsString = "12:12:12 AM";
		public string UITeSimple4EditValueAsString = "12:12";
		public string UITeSimple5EditValueAsString = "12345";
		public string UITeSimple6EditValueAsString = "123-45-6789";
		public string UITeSimple7EditValueAsString = "12346-654";
		public string UITeSimple8EditValueAsString = "12354";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSimplePadTextExpectedValues
	{
		#region Fields
		public string UIRtPadEditText = "\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSizeCellAfterSwitchOnPictureEditAutoHeightOptionExpectedValues
	{
		#region Fields
		public string UIEducationincludesaBACellSize = "264, 168";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSortedDataByPriceAverageAscendingExpectedValues
	{
		#region Fields
		public int UIGridControlGroupRowGroupRowRowHandle = -8;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSpinBoxEditValueExpectedValues
	{
		#region Fields
		public string UISpinEditBarEditItemValueAsString = "10.5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSpinEditValueExpectedValues
	{
		#region Fields
		public string UISpinEditSample1EditValueAsString = "30";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSplitterPositionAfterClickingOnButtonRemoveSplitExpectedValues
	{
		#region Fields
		public int UIGridSplitContainer2SplitContainerControlSplitterPosition = 320;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSplitterPositionOnHorizontalSplitPresentationTabExpectedValues
	{
		#region Fields
		public int UIGridSplitContainer2SplitContainerControlSplitterPosition = 422;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSplitterPositionOnVerticalSplitPresentationTabExpectedValues
	{
		#region Fields
		public int UIGridSplitContainer1SplitContainerControlSplitterPosition = 385;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoAfterChangingMarginExpectedValues
	{
		#region Fields
		public string UIPage1of6BarItemText = "Page 1 of 6";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoAfterClickApplicationCloseItemExpectedValues
	{
		#region Fields
		public string UILine0Position0BarItemText = "   Line: 0  Position: 0   ";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoAfterClickRibbonCommandNewDocumentExpectedValues
	{
		#region Fields
		public string UILine1Position1BarItemText = "   Line: 1  Position: 1   ";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoAfterTypingInRibbonRichTextBoxExpectedValues
	{
		#region Fields
		public string UILine3Position23BarItemText = "   Line: 3  Position: 23   ";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoAfterTypingInRibbonRichTextBoxAndChangeCursorPositionExpectedValues
	{
		#region Fields
		public string UILine2Position16BarItemText = "   Line: 2  Position: 16   ";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoBeforeChangingMarginExpectedValues
	{
		#region Fields
		public string UIPage1of4BarItemText = "Page 1 of 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoBeforeTypingInRibbonRichTextBoxExpectedValues
	{
		#region Fields
		public string UILine1Position1BarItemText = "   Line: 1  Position: 1   ";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSumDiscountAmountExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "88786.590991559474891";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSummaryAfterSwitchingOnDisplaySummaryOptionExpectedValues
	{
		#region Fields
		public string UIGridControlRowFooterRowFooterCellValueAsString = "15";
		public string UIGridControlRowFooterRowFooterCell2ValueAsString = "3525.6";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSumTotalExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = "588563.74328716935140";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSwitchToContinuousDisplayModeViaStatusBarInfoExpectedValues
	{
		#region Fields
		public string UIPage7of46BarItemText = "Page 7 of 46";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSwitchToFacingDisplayModeViaStatusBarInfoExpectedValues
	{
		#region Fields
		public string UIPage4of46BarItemText = "Page 4 of 46";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckTextEditValueExpectedValues
	{
		#region Fields
		public string UITextEditSampleEditValueAsString = "Sample Text Check";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckTimeEditValueExpectedValues
	{
		#region Fields
		public string UITimeEditSampleDateTimePickerValueAsString = "12:57:33";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckTrackBarValueExpectedValues
	{
		#region Fields
		public string UITrackBarControl1TrackBarValueAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckUngroupedDataExpectedValues
	{
		#region Fields
		public int UIGridColumn2ColumnHeaderGroupIndex = -1;
		public int UIGridColumn5ColumnHeaderGroupIndex = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckUngroupedMasterDetailDataExpectedValues
	{
		#region Fields
		public string UIGridControlGroupRowGroupRowValueAsString = "Accounting Manager";
		public int UIGridControlGroupRowGroupRowRowHandle = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckUniversalSortableDateTimeEditValueExpectedValues
	{
		#region Fields
		public string UITeDateTime4EditValueAsString = "04/09/2009 19:08:11";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckViaKeyboardParams
	{
		#region Fields
		public string UIXtraTabControl1TabListSendKeys = "{Tab}";
		public bool UICheckEditSampleCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckViaMouseParams
	{
		#region Fields
		public bool UICheckEditSampleCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckVisibleIndexOfBandAfterDisplayHiddenBandExpectedValues
	{
		#region Fields
		public int UIGridBand6GridBandVisibleIndex = 1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckVisibleIndexOfHiddenBandExpectedValues
	{
		#region Fields
		public int UIGridBand2GridBandVisibleIndex = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckWatermarkOptionsExpectedValues
	{
		#region Fields
		public string UICmbWatermarkTextComboBoxValueAsString = "DRAFT";
		public string UILkpTextDirectionPopupEditValueAsString = "ForwardDiagonal";
		public string UICeWatermarkColorColorEditValueAsString = "Red";
		public string UICmbWatermarkFontSizeComboBoxValueAsString = "36";
		public string UITeTransparentValueEditValueAsString = "50";
		public bool UIRadioGroupItemRadioButtonSelected = true;
		public bool UIRbAllCheckBoxChecked = true;
		public bool UIChbBoldCheckBoxChecked = false;
		public bool UIChbItalicCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaClickPlusButtonExpectedValues
	{
		#region Fields
		public string UIZoomBarEditItemValueAsString = "122%";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckZoomBarValueAfterZoomInByStatusBarZoomBarViaMouseExpectedValues
	{
		#region Fields
		public string UIZoomBarEditItemValueAsString = "51%";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckZoomTrackBarValueExpectedValues
	{
		#region Fields
		public string UIZoomTrackBarControl1TrackBarValueAsString = "8";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChoiceMenuItemWithSubmenuParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Down}{Down}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClearDateEditValueViaButtonClearParams
	{
		#region Fields
		public string UIDateEditSampleDateTimeEditValueAsString = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClearFilterViaButtonEscParams
	{
		#region Fields
		public string UITeFindMRUEditSendKeys = "{Escape}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClearFilterViaClickColumnHeaderParams
	{
		#region Fields
		public string UIGridControl1TableFilterString = "[View]gridView1[FilterString]";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickAddedHeaderBricksParams
	{
		#region Fields
		public string UIHScrollBarScrollBarControlValueAsString = "201";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickAddedToQuickAccessToolbarRibbonGroupParams
	{
		#region Fields
		public string UIRibbonToolbarPopupItRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickCopyRibbonItemViaMouseParams
	{
		#region Fields
		public string UICopyRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickDisplayedRibbonTabParams
	{
		#region Fields
		public string UIBoldRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickDownArrowKeyForExpandMainMenuDropdownListParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Down}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickEditMenuCopyItemParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "A";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickEditMenuPasteItemParams
	{
		#region Fields
		public string UIPasteMenuBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickEditMenuUndoItemParams
	{
		#region Fields
		public string UIUndoMenuBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickEnterKeyForExpandMainMenuDropdownListParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickEnterOnRibbonRichEditParams
	{
		#region Fields
		public string UIRichTextBox1EditText = "test\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickEscKeyForCollapseMainMenuDropdownListParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Escape}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickQuickAccessToolbarItemViaRightPointingDoubleArrowButtonParams
	{
		#region Fields
		public string UICustomizeToolbarRibbonBaseButtonItemPerformClick = "PerformClick";
		public string UIPasteRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickRibbonItemForAssertionSwitchingBetweenTabsParams
	{
		#region Fields
		public string UIPasteRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClickRibbonItemOfContextualTabParams
	{
		#region Fields
		public string UICutRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateComplexFilterViaCustomAutoFilterParams
	{
		#region Fields
		public string UIGridColumn3ColumnHeaderOpenCustomFilterWindow = "OpenCustomFilterWindow";
		public string UIComboBoxEditComboBoxValueAsString = "Is greater than [SelectionStart]0";
		public string UIValueEditor1PopupEditValueAsString = "14 [SelectionStart]3";
		public string UIComboBoxEditComboBoxValueAsString1 = "Is less than [SelectionStart]0";
		public string UIValueEditor2PopupEditValueAsString = "20 [SelectionStart]3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateExpressionsViaContextMenuParams
	{
		#region Fields
		public string UIMemoEditEditValueAsString = "[Unit Price] * [Quantity] - [Total]+[Discount] [SelectionStart]45";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateExpressionsViaShowExpressionsButtonParams
	{
		#region Fields
		public string UIMemoEditEditValueAsString = "[Unit Price] * [Quantity] * (0.5 - [Discount]) [SelectionStart]32";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterConditionViaAutoFilterRowParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]-2147483646[Column]colPriority";
		public string UIImageComboBoxEditComboBoxValueTypeName = "System.Int32";
		public string UIImageComboBoxEditComboBoxValueAsString = "2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterDisplayBugsParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]-2147483646[Column]colType";
		public string UICheckedCellValueTypeName = "System.Boolean";
		public string UICheckedCellActiveEditorValue = "True";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterDisplayNonBugsParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]-2147483646[Column]colType";
		public string UICheckedCellValueTypeName = "System.Boolean";
		public string UICheckedCellActiveEditorValue = "False";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterViaFilterControlInCustomFilterControlBindingTabParams
	{
		#region Fields
		public string UIFilterControl2FilterControlFilterString = "[Implemented] >= 50 And [Suspended] = False";
		public string UITrackBarControlTrackBarValueAsString = "29";
		public string UIFilterControl2FilterControlFilterString1 = "[Implemented] >= 29 And [Suspended] = False";
		public string UIImageComboBoxEditComboBoxValueTypeName = "System.Boolean";
		public string UIImageComboBoxEditComboBoxValueAsString = "True";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterViaFilterControlInPropertiesTabParams
	{
		#region Fields
		public string UIFilterControl1FilterControlFilterString = "[ProductID] Between(\'Alice Munton\', \'Iqura\') And [Discount] >= 0.05 And [Discount" +
			"] = ?";
		public string UIFilterControl1FilterControlFilterString1 = "[ProductID] Between(\'Alice Munton\', \'Iqura\') And [Discount] >= 0.05 And [Quantity" +
			"] = ?";
		public string UIFilterControl1FilterControlFilterString2 = "[ProductID] Between(\'Alice Munton\', \'Iqura\') And [Discount] >= 0.05 And [Quantity" +
			"] In (?)";
		public string UISpinEditEditValueAsString = "5";
		public string UIFilterControl1FilterControlFilterString3 = "[ProductID] Between(\'Alice Munton\', \'Iqura\') And [Discount] >= 0.05 And [Quantity" +
			"] In (5s, ?)";
		public string UISpinEditEdit1ValueAsString = "10";
		public string UIFilterControl1FilterControlFilterString4 = "[ProductID] Between(\'Alice Munton\', \'Iqura\') And [Discount] >= 0.05 And [Quantity" +
			"] In (5s, 10s, ?)";
		public string UISpinEditEdit2ValueAsString = "15";
		public string UIFilterControl1FilterControlFilterString5 = "[ProductID] Between(\'Alice Munton\', \'Iqura\') And [Discount] >= 0.05 And [Quantity" +
			"] In (5s, 10s, 15s)";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterViaFilterDropdownListParams
	{
		#region Fields
		public string UIGridControl1TableFilterString = "[View]gridView1[FilterString][FixedDate] Is Not Null And [Status] In (2, 3, 4)";
		public string UIGridControl1TableFilterString1 = "[View]gridView1[FilterString][FixedDate] Is Not Null And [Status] In (2, 3, 4)";
		public string UIGridControl1TableFilterString2 = "[View]gridView1[FilterString][FixedDate] Is Not Null And [Status] In (2, 3, 4) An" +
			"d ([Priority] = 1 Or [Priority] = 2)";
		public string UIGridControl1TableFilterString3 = "[View]gridView1[FilterString][FixedDate] Is Not Null And [Status] In (2, 3, 4) An" +
			"d ([Priority] = 1 Or [Priority] = 2)";
		public string UIGridControl1TableFilterString4 = "[View]gridView1[FilterString][FixedDate] Is Not Null And ([Status] = 3 Or [Status" +
			"] = 4) And ([Priority] = 1 Or [Priority] = 2)";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterViaFilterEditorParams
	{
		#region Fields
		public string UIGridFilterControlFilterControlFilterString = "[UnitPrice] = ?";
		public string UIGridFilterControlFilterControlFilterString1 = "[Quantity] = ?";
		public string UIGridFilterControlFilterControlFilterString2 = "[Quantity] > ?";
		public string UISpinEditEditValueAsString = "10 [SelectionStart]0";
		public string UIGridFilterControlFilterControlFilterString3 = "[Quantity] > 10s";
		public string UIGridFilterControlFilterControlFilterString4 = "[Quantity] > 10s And [UnitPrice] = ?";
		public string UIGridFilterControlFilterControlFilterString5 = "[Quantity] > 10s And ([UnitPrice] = ? Or [UnitPrice] = ?)";
		public string UIGridFilterControlFilterControlFilterString6 = "[Quantity] > 10s And ([UnitPrice] Between(?, ?) Or [UnitPrice] = ?)";
		public string UICalcEditPopupEditValueAsString = "10 [SelectionStart]2";
		public string UIGridFilterControlFilterControlFilterString7 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, ?) Or [UnitPrice] = ?)";
		public string UICalcEditPopupEdit1ValueAsString = "20 [SelectionStart]2";
		public string UICalcEditPopupEdit1SendKeys = "{NumPad0}";
		public string UIGridFilterControlFilterControlFilterString8 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [UnitPrice] = ?)";
		public string UIGridFilterControlFilterControlFilterString9 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] = ?)";
		public string UIGridFilterControlFilterControlFilterString10 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= ?)";
		public string UITextEditEditValueTypeName = "System.Decimal";
		public string UITextEditEditValueAsString = "0.05 [SelectionStart]1";
		public string UIGridFilterControlFilterControlFilterString11 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f)";
		public string UIGridFilterControlFilterControlFilterString12 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd [UnitPrice] = ?";
		public string UIGridFilterControlFilterControlFilterString13 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] = ? Or [UnitPrice] = ?)";
		public string UIGridFilterControlFilterControlFilterString14 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(?, ?) Or [UnitPrice] = ?)";
		public string UICalcEditPopupEdit2ValueAsString = "20 [SelectionStart]0[SelectionLength]2";
		public string UIGridFilterControlFilterControlFilterString15 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, ?) Or [UnitPrice] = ?)";
		public string UICalcEditPopupEdit3ValueAsString = "30 [SelectionStart]0[SelectionLength]2";
		public string UIGridFilterControlFilterControlFilterString16 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [UnitPrice] = ?)";
		public string UIGridFilterControlFilterControlFilterString17 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] = ?)";
		public string UIGridFilterControlFilterControlFilterString18 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] >= ?)";
		public string UITextEditEdit1ValueTypeName = "System.Decimal";
		public string UITextEditEdit1ValueAsString = "0.05 [SelectionStart]1";
		public string UIGridFilterControlFilterControlFilterString19 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] >= 0.05f)";
		public string UIGridFilterControlFilterControlFilterString20 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] >= 0.05f) And [UnitPrice] = " +
			"?";
		public string UIGridFilterControlFilterControlFilterString21 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] >= 0.05f) And ([UnitPrice] =" +
			" ? Or [UnitPrice] = ?)";
		public string UIGridFilterControlFilterControlFilterString22 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] >= 0.05f) And ([ProductID] =" +
			" ? Or [UnitPrice] = ?)";
		public string UILookUpEditPopupEditValueTypeName = "System.Int32";
		public string UILookUpEditPopupEditValueAsString = "40";
		public string UIGridFilterControlFilterControlFilterString23 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] >= 0.05f) And ([ProductID] =" +
			" 40 Or [UnitPrice] = ?)";
		public string UIGridFilterControlFilterControlFilterString24 = "[Quantity] > 10s And ([UnitPrice] Between(10.0m, 20.0m) Or [Discount] <= 0.05f) A" +
			"nd ([UnitPrice] Between(20.0m, 30.0m) Or [Discount] >= 0.05f) And ([ProductID] =" +
			" 40 Or [ProductID] = ?)";
		public string UILookUpEditPopupEdit1ValueTypeName = "System.Int32";
		public string UILookUpEditPopupEdit1ValueAsString = "65";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateFilterViaFindPanelParams
	{
		#region Fields
		public string UITeFindMRUEditValueAsString = "Co";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateNewDocumentViaClickRibbonItemNewParams
	{
		#region Fields
		public string UINewRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreatePrintPreviewYearCalendarParams
	{
		#region Fields
		public string UIMonthYearDateTimePickerValueAsString = "2014-06-11";
		public string UIMonthYearDateTimePickerValueAsString1 = "2014-06-11";
		public string UICustom1MenuBarCloseActiveEditor = "CloseActiveEditor";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateSimpleFilterViaClickColumnHeaderParams
	{
		#region Fields
		public string UIGridControl1TableFilterString = "[View]gridView1[FilterString][Discount] = 0.05f";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateWaterMarkAndCustomizeOptionsParams
	{
		#region Fields
		public string UICmbWatermarkTextComboBoxValueAsString = "Test";
		public string UILkpTextDirectionLookUpEditValueTypeName = "DevExpress.XtraPrinting.Drawing.DirectionMode";
		public string UILkpTextDirectionLookUpEditValueAsString = "Vertical";
		public string UICmbWatermarkFontSizeComboBoxValueAsString = "40 [SelectionStart]0";
		public string UITrBarTextTransparencTrackBarValueAsString = "85";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CreateWaterMarkViaChoosingValueInDropDownListParams
	{
		#region Fields
		public string UICmbWatermarkTextComboBoxValueAsString = "DRAFT [SelectionStart]0[SelectionLength]5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizeCSVSpecificExportOptionsParams
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "utf-8 [SelectionStart]0";
		public string UIComboBoxEditComboBox1ValueAsString = "Value [SelectionStart]0";
		public string UIComboBoxEditComboBox2ValueAsString = ",";
		public bool UIQuotestringswithsepaCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizeHTMLSpecificExportOptionsParams
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "Single file page-by-page [SelectionStart]0";
		public string UIComboBoxEditComboBox1ValueAsString = "1";
		public string UIColorEditColorEditValueAsString = "Gray";
		public string UISpinEditEditValueAsString = "3 [SelectionStart]0";
		public string UIComboBoxEditComboBox2ValueAsString = "Test";
		public string UIComboBoxEditComboBox3ValueAsString = "Unicode (UTF-8) [SelectionStart]0";
		public bool UIRemovecarriagereturnCheckBoxChecked = true;
		public bool UIEmbedimagesinHTMLCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizeImageSpecificExportOptionsParams
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "JPEG [SelectionStart]0";
		public string UISpinEditEditValueAsString = "100 [SelectionStart]0";
		public string UIComboBoxEditComboBox1ValueAsString = "Different files [SelectionStart]0";
		public string UIComboBoxEditComboBox2ValueAsString = "1-100";
		public string UIColorEditColorEditValueAsString = "White";
		public string UISpinEditEdit1ValueAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizeLinksInBarLinkContainerParams
	{
		#region Fields
		public string UICheckedListBox1CheckedListBoxCheckedIndicesAsString = "0 3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizePDFPasswordSecurityOptionsParams
	{
		#region Fields
		public bool UIChbOpenPasswordCheckBoxChecked = true;
		public string UITeOpenPasswordEditValueAsString = "***";
		public bool UIChbRestrictCheckBoxChecked = true;
		public string UITePermissionsPassworEditValueAsString = "***";
		public string UILkpPrintingAllowedPopupEditValueTypeName = "DevExpress.XtraPrinting.PrintingPermissions";
		public string UILkpPrintingAllowedPopupEditValueAsString = "HighResolution";
		public string UILkpChangesAllowedPopupEditValueTypeName = "DevExpress.XtraPrinting.ChangingPermissions";
		public string UILkpChangesAllowedPopupEditValueAsString = "InsertingDeletingRotating";
		public bool UIChbEnableCopingCheckBoxChecked = true;
		public bool UIChbEnableScreenReadeCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizePDFSpecificExportOptionsParams
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "1";
		public string UIComboBoxEditComboBox1ValueAsString = "Tahoma";
		public bool UIConvertImagestoJpegCheckBoxChecked = false;
		public string UIComboBoxEditComboBox2ValueAsString = "Medium [SelectionStart]0";
		public bool UICompressedCheckBoxChecked = false;
		public bool UIShowprintdialogonopeCheckBoxChecked = true;
		public string UIComboBoxEditComboBox3ValueAsString = "My application";
		public string UIComboBoxEditComboBox4ValueAsString = "author";
		public string UIComboBoxEditComboBox5ValueAsString = "keywords";
		public string UIComboBoxEditComboBox6ValueAsString = "subject";
		public string UIComboBoxEditComboBox7ValueAsString = "title";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizePrintSettingsViaRibbonApplicationPrintItemParams
	{
		#region Fields
		public string UICopySpinEditEditValueAsString = "5 [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizeRTFSpecificExportOptionsParams
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "Single file page-by-page [SelectionStart]0";
		public string UIComboBoxEditComboBox1ValueAsString = "1";
		public bool UIExportwatermarksCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CustomizeXLSSpecificExportOptionsParams
	{
		#region Fields
		public string UIComboBoxEditComboBoxValueAsString = "Different files [SelectionStart]0";
		public string UIComboBoxEditComboBox1ValueAsString = "1-10,11";
		public string UIComboBoxEditComboBox2ValueAsString = "test";
		public string UIComboBoxEditComboBox3ValueAsString = "Text [SelectionStart]0";
		public bool UIShowgridlinesCheckBoxChecked = true;
		public bool UIExporthyperlinksCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DeleteConditionExpressionParams
	{
		#region Fields
		public string UIFormatItemListListSelectedIndicesAsString = "2";
		public string UIRemoveBarBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisplayBarCommandViaCustomizationFormParams
	{
		#region Fields
		public string UIListBoxControlListSelectedIndicesAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisplayHiddenBandViaDoubleClickBandHeaderInCustomizationFormParams
	{
		#region Fields
		public string UIGridControl1TableBandPositionAsString = "[View]advBandedGridView1[BandName]gridBand6[ParentBand][VisibleIndex]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisplayHiddenBandViaDraggingBandHeaderFromCustomizationFormParams
	{
		#region Fields
		public string UIGridControl1TableBandPositionAsString = "[View]advBandedGridView1[BandName]gridBand6[ParentBand][VisibleIndex]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormParams
	{
		#region Fields
		public string UIGridControl1TableColumnPositionAsString = "[View]gridView1[Column]gcID[VisibleIndex]11[GroupIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisplayHiddenFindPanelViaCtrlFShortcutParams
	{
		#region Fields
		public string UIGridControl1TableSendKeys = "F";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisplayRibbonTabViaCustomizationFormItemParams
	{
		#region Fields
		public bool UISelectionCheckBoxTreeItemChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisplayToolbarViaCustomizationFormParams
	{
		#region Fields
		public string UIToolBarsListCheckedListBoxCheckedIndicesAsString = "1 2 3 4 5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ExpandMasterRowViaCtrlPlusShortcutParams
	{
		#region Fields
		public string UIGridControl2TableFocusedCellAsString = "[View]gridView1[Row]1[Column]colCompanyName";
		public string UIGridControl2TableSendKeys = "{Add}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ExpandRibbonViaCtrlF1ShortcutParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{F1}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class FindAndSelectionResultViaKeyboardParams
	{
		#region Fields
		public string UISearchLookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UISearchLookUpEdit1PopupEditValueAsString = "74";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class FindAndSelectionResultViaKeyboardOnInPlaceTabParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]5[Column]colCustomerID";
		public string UISearchLookUpEditPopupEdit2ValueTypeName = "System.String";
		public string UISearchLookUpEditPopupEdit2ValueAsString = "ANTON";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class FindAndSelectionResultViaMouseParams
	{
		#region Fields
		public string UISearchLookUpEdit1PopupEditValueTypeName = "System.Int32";
		public string UISearchLookUpEdit1PopupEditValueAsString = "74";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class FindAndSelectionResultViaMouseOnInPlaceTabParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]5[Column]colCustomerID";
		public string UISearchLookUpEditPopupEdit2ValueTypeName = "System.String";
		public string UISearchLookUpEditPopupEdit3ValueAsString = "ANTON";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class GroupDataAndChangeGroupOrderParams
	{
		#region Fields
		public string UIGridColumn5ColumnHeaderColumnPositionAsString = "[VisibleIndex]4[GroupIndex]0";
		public string UIGridColumn2ColumnHeaderColumnPositionAsString = "[VisibleIndex]1[GroupIndex]1";
		public string UIGridColumn2ColumnHeader1ColumnPositionAsString = "[VisibleIndex]1[GroupIndex]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class GroupDataViaDraggingColumnHeaderParams
	{
		#region Fields
		public string UIGridColumn2ColumnHeaderColumnPositionAsString = "[VisibleIndex]1[GroupIndex]0";
		public string UIGridColumn5ColumnHeaderColumnPositionAsString = "[VisibleIndex]3[GroupIndex]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class GroupMasterDetailDataParams
	{
		#region Fields
		public string UIColCountryColumnHeaderColumnPositionAsString = "[VisibleIndex]2[GroupIndex]0";
		public string UIColRegionColumnHeaderColumnPositionAsString = "[VisibleIndex]-1[GroupIndex]1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class GroupMasterDetailDataOnJoinedGroupPanelParams
	{
		#region Fields
		public string UIColCompanyNameColumnHeaderColumnPositionAsString = "[VisibleIndex]0[GroupIndex]0";
		public string UIColRegionColumnHeaderColumnPositionAsString = "[VisibleIndex]1[GroupIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class HideBandViaDraggingBandHeaderParams
	{
		#region Fields
		public string UIGridBand2GridBandBandPositionAsString = "[ParentBand][VisibleIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class HideBandViaDraggingBandHeaderToCustomizationFormParams
	{
		#region Fields
		public string UIGridBand2GridBandBandPositionAsString = "[ParentBand][VisibleIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class HideColumnViaDraggingColumnHeaderParams
	{
		#region Fields
		public string UIGcModificationColumnHeaderColumnPositionAsString = "[VisibleIndex]-1[GroupIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class HideColumnViaDraggingColumnHeaderOnCustomizationFormParams
	{
		#region Fields
		public string UIGcModificationColumnHeaderColumnPositionAsString = "[VisibleIndex]-1[GroupIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class HideRibbonTabViaCustomizationFormParams
	{
		#region Fields
		public bool UIHomeCheckBoxTreeItemChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class HideToolbarViaCustomizationFormParams
	{
		#region Fields
		public string UIToolBarsListCheckedListBoxCheckedIndicesAsString = "1 3 4 5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeCollapsedRibbonCommandViaMouseParams
	{
		#region Fields
		public string UIPasteRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonCopyCommandViaUsingAltAndEscKeysAndKeyTipsParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{LMenu}";
		public string UIRibbonControl1RibbonSendKeys = "h{Escape}alco";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonCopyCommandViaUsingAltKeyAndKeyTipsParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{LMenu}";
		public string UIRibbonControl1Ribbon1SendKeys = "hco";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonCopyCommandViaUsingF10KeyAndKeyTipsParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{F10}";
		public string UIRibbonControl1Ribbon1SendKeys = "hco";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonGalleryItemsViaShortcutRibbonGalleryDropButtonParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{LMenu}";
		public string UIRibbonControl1Ribbon1SendKeys = "gft";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonPasteCommandViaShortcutParams
	{
		#region Fields
		public string UIRibbonControl1RibbonSendKeys = "{Right}";
		public string UIRibbonControl1RibbonSendKeys1 = "V";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonPasteCommandViaUsingAltAndEscKeysAndKeyTipsParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{LMenu}";
		public string UIRibbonControl1RibbonSendKeys = "h{Escape}alpa";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonPasteCommandViaUsingAltKeyAndKeyTipsParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{LMenu}";
		public string UIRibbonControl1Ribbon1SendKeys = "hpapa";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class InvokeRibbonPasteCommandViaUsingF10KeyAndKeyTipsParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{F10}";
		public string UIRibbonControl1Ribbon1SendKeys = "hpapa";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MakeColumnNonFixedAndScrollParams
	{
		#region Fields
		public string UIHCrkScrollBarScrollBarControlValueAsString = "136";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MakeFooterBrickFontSettingsParams
	{
		#region Fields
		public string UIFontComboBoxEditableItem = "Tahoma";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MakePictureEditAutoHeightOptionSwitchOnParams
	{
		#region Fields
		public bool UIChePictureCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MinimizeRibbonViaCtrlF1ShortcutParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "{F1}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveDockedBarToFormBottomParams
	{
		#region Fields
		public string UIPaintStyleMenuBarDockInfoAsString = "[DockStyle]Bottom[Row]1[Column]0[Offset]320";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveDockedBarToNewPositionParams
	{
		#region Fields
		public string UIPaintStyleMenuBarDockInfoAsString = "[DockStyle]Top[Row]2[Column]0[Offset]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToAnotherBarItemViaArrowKeysParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Right}{Right}{Right}{Right}";
		public string UIStandardMenuBarSendKeys = "{Right}{Right}";
		public string UIRtPadEditText = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToAnotherBarViaCtrlTabShortcutParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{LMenu}";
		public string UIRtPadEditSendKeys1 = "{Tab}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToAnotherMainMenuItemViaArrowKeysParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{LMenu}";
		public string UIRtPadEditSendKeys1 = "{Left}{Right}{Right}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToBarCommandViaUnderscoredLetterParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "Fc";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToNextBarCommandViaTabKeyParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Tab}{Tab}{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToNextMainMenuItemViaTabKeyParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{LMenu}";
		public string UIRtPadEditSendKeys1 = "{Tab}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToPreviousCommandViaShiftTabShortcutParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{LMenu}";
		public string UIRtPadEditSendKeys1 = "{Tab}";
		public string UIRtPadEditSendKeys2 = "{Tab}";
		public string UIRtPadEditSendKeys3 = "{Tab}";
		public string UIRtPadEditSendKeys4 = "{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToPreviousMainMenuItemViaShiftTabShortcutParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Tab}";
		public string UIRtPadEditSendKeys1 = "{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveFocusToSubmenuViaRightArrowKeyParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{Right}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveNavBarOverflowPanelSplitterDownParams
	{
		#region Fields
		public int UINavBarControl1NavBarNavigationPaneMaxVisibleGroups = 4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MoveNavBarOverflowPanelSplitterUpParams
	{
		#region Fields
		public int UINavBarControl1NavBarNavigationPaneMaxVisibleGroups = 6;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MultiExtendedSelectionInListBoxViaKeyboardParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0";
		public string UIListBoxControlSampleListSendKeys = "{Down}{Down}{Down}{Down}{Down}";
		public string UIListBoxControlSampleListSendKeys1 = "{Down}";
		public string UIListBoxControlSampleListSendKeys2 = "{Down}";
		public string UIListBoxControlSampleListSendKeys3 = "{Down}";
		public string UIListBoxControlSampleListSendKeys4 = "{Down}";
		public string UIListBoxControlSampleListSendKeys5 = "{Down}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MultiSimpleSelectionInListBoxViaKeyboardParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0";
		public string UIListBoxControlSampleListSendKeys = "{Down}{Down}{Down}{Down}{Down}{Down}{Down}{Up}{Up}{Space}{Down}{Down}{Down}{Down}" +
			"{Down}{Down}{Down}{Space}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MultiSimpleSelectionInListBoxViaMouseParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0 5 12";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class PressSimplePadMenuShortcutParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "F";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class PressUnderscoredLetterForExpandMainMenuDropdownListParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "F";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class RenameRibbonCategoryViaCustomizationFormParams
	{
		#region Fields
		public string UITextEditEditValueAsString = "Test Category [SelectionStart]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class RenameRibbonGroupViaCustomizationFormParams
	{
		#region Fields
		public string UITextEditEditValueAsString = "Test Group [SelectionStart]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class RenameRibbonTabViaCustomizationFormParams
	{
		#region Fields
		public string UITextEditEditValueAsString = "Test Tab [SelectionStart]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ReorderBandsViaDraggingOnAdvancedBandedGridViewParams
	{
		#region Fields
		public string UIGbImageGridBandBandPositionAsString = "[ParentBand][VisibleIndex]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ReorderBandsViaDraggingOnBandedGridViewParams
	{
		#region Fields
		public string UIGridBand4GridBandBandPositionAsString = "[ParentBand][VisibleIndex]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ReorderColumnsViaDraggingParams
	{
		#region Fields
		public string UIGridColumn3ColumnHeaderColumnPositionAsString = "[VisibleIndex]1[GroupIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ReplaceInRibbonRichEditViaClickRibbonItemParams
	{
		#region Fields
		public string UITxtFindEditValueAsString = "test";
		public string UITxtFindEditSendKeys = "{Tab}";
		public string UITxtReplaceEditValueAsString = "Ribbon";
		public bool UICheckEditCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ReplaceInRibbonRichEditViaCtrlHShortcutParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "H";
		public string UITextEditEditValueAsString = "test";
		public string UITextEditEditSendKeys = "{Tab}";
		public string UITextEditEdit1ValueAsString = "Ribbon";
		public bool UIPropertyReadingErrorCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ResizeBandViaDraggingRightEdgeOnAdvancedBandedGridViewParams
	{
		#region Fields
		public string UIGridControl1TableBandWidthAsString = "[View]advBandedGridView1[BandName]gbMain[Width]123";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ResizeBandViaDraggingRightEdgeOnBandedGridViewParams
	{
		#region Fields
		public string UIGridControl1TableBandWidthAsString = "[View]bandedGridView1[BandName]gridBand5[Width]200";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ResizeColumnViaDraggingRightEdgeParams
	{
		#region Fields
		public string UIGridControl1TableColumnWidthAsString = "[View]gridView1[Column]gridColumn2[Width]376";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ResizeFixedBandParams
	{
		#region Fields
		public string UIGridControl1TableBandWidthAsString = "[View]bandedGridView1[BandName]gbManufacture[Width]277";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class RestoreDefaultToolbarLayoutViaCustomizationFormParams
	{
		#region Fields
		public string UICheckedListBoxControCheckedListBoxSelectedIndicesAsString = "2";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollingInFixedBandsAndGroupingTabViaKeyboardParams
	{
		#region Fields
		public string UIGridControl2TableFocusedCellAsString = "[View]bandedGridView2[Row]0[Column]colJanuary";
		public string UISpinEditEditValueAsString = "10";
		public string UISpinEditEditSendKeys = "{Right}";
		public string UISpinEditEdit1SendKeys = "{Right}";
		public string UISpinEditEdit2SendKeys = "{Right}";
		public string UISpinEditEdit3SendKeys = "{Right}";
		public string UISpinEditEdit4SendKeys = "{Right}";
		public string UISpinEditEdit5SendKeys = "{Right}";
		public string UISpinEditEdit6SendKeys = "{Right}";
		public string UISpinEditEdit7SendKeys = "{Right}";
		public string UISpinEditEdit8SendKeys = "{Right}";
		public string UISpinEditEdit9SendKeys = "{Right}";
		public string UISpinEditEdit10SendKeys = "{Right}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollingInFixedBandsAndGroupingTabViaMouseParams
	{
		#region Fields
		public string UIHCrkScrollBarScrollBarControlValueAsString = "697";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollingInSimpleFixedBandsTabViaKeyboardParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]bandedGridView1[Row]0[Column]grColumnYear1992";
		public string UISpinEditEditValueAsString = "132155";
		public string UISpinEditEditSendKeys = "{Right}";
		public string UISpinEditEdit1SendKeys = "{Right}";
		public string UISpinEditEdit2SendKeys = "{Right}";
		public string UISpinEditEdit3SendKeys = "{Right}";
		public string UISpinEditEdit4SendKeys = "{Right}";
		public string UISpinEditEdit5SendKeys = "{Right}";
		public string UISpinEditEdit6SendKeys = "{Right}";
		public string UISpinEditEdit7SendKeys = "{Right}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollingInSimpleFixedBandsTabViaMouseParams
	{
		#region Fields
		public string UIHCrkScrollBarScrollBarControlValueAsString = "574";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollPrintPreviewViaHScrollBarParams
	{
		#region Fields
		public string UIHScrollBarScrollBarControlValueAsString = "499";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollPrintPreviewViaVScrollBarParams
	{
		#region Fields
		public string UIVScrollBarScrollBarControlValueAsString = "417";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollTableLayoutToEndParams
	{
		#region Fields
		public string UIVCrkScrollBarScrollBarControlValueAsString = "2134";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ScrollTableLayoutToTopParams
	{
		#region Fields
		public string UIVCrkScrollBarScrollBarControlValueAsString = "0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectAllCellsParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]8[Column]colCountry";
		public string UIGridControl1TableSendKeys = "A";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectAndCutRibbonRichEditTextViaAddedRibbonCategoryItemParams
	{
		#region Fields
		public string UICutRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectAndCutRibbonRichEditTextViaAddedRibbonGroupItemParams
	{
		#region Fields
		public string UICutRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectAndCutRibbonRichEditTextViaAddedRibbonTabItemParams
	{
		#region Fields
		public string UICutRibbonBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectCheckedListBoxValuesViaKeyboardParams
	{
		#region Fields
		public string UICheckedListBoxControCheckedListBoxCheckedIndicesAsString = "5 6 7 9 10 11 12 13 14 15 17 18 19 20 21 22 24 25 26 29 30 31 32 33 34 35 36 37 3" +
			"8 39 40 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 " +
			"67 68 69 70 71 72 73 74 75 76 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectCheckedListBoxValuesViaMouseParams
	{
		#region Fields
		public string UICheckedListBoxControCheckedListBoxCheckedIndicesAsString = "5 6 7 9 10 11 12 13 14 15 17 18 19 20 21 22 24 25 26 29 30 31 32 33 34 35 36 37 3" +
			"8 39 40 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 " +
			"67 68 69 70 71 72 73 74 75 76 4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectFromMRUEditDropDownListViaF4KeyAndKeyboardParams
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "www.devexpress.com/ClientCenter/Downloads/#Trials [SelectionStart]0[SelectionLeng" +
			"th]49";
		public string UIMruEditSampleMRUEditSendKeys = "{Enter}";
		public string UIMruEditSampleMRUEditMRUItemsAsString = "[MRUItem]www.devexpress.com[MRUItem]www.devexpress.com/ClientCenter/Downloads/#Tr" +
			"ials[MRUItem]www.devexpress.com/ClientCenter/Purchase/";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectFromMRUEditDropDownListViaKeyboardParams
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "www.devexpress.com/ClientCenter/Downloads/#Trials [SelectionStart]0[SelectionLeng" +
			"th]49";
		public string UIMruEditSampleMRUEditSendKeys = "{Enter}";
		public string UIMruEditSampleMRUEditMRUItemsAsString = "[MRUItem]www.devexpress.com[MRUItem]www.devexpress.com/ClientCenter/Downloads/#Tr" +
			"ials[MRUItem]www.devexpress.com/ClientCenter/Purchase/";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectFromMRUEditDropDownListViaMouseParams
	{
		#region Fields
		public string UIMruEditSampleMRUEditMRUItemsAsString = "[MRUItem]www.devexpress.com[MRUItem]www.devexpress.com/ClientCenter/Downloads/#Tr" +
			"ials[MRUItem]www.devexpress.com/ClientCenter/Purchase/";
		public string UIMruEditSampleMRUEditValueAsString = "www.devexpress.com/ClientCenter/Downloads/#Trials [SelectionStart]0[SelectionLeng" +
			"th]49";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectionRibbonRichEditTextViaMouseAndCopyViaCtrlCShortcutParams
	{
		#region Fields
		public string UIRichTextBox1EditSendKeys = "A";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectListBoxValueViaKeyboardParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0";
		public string UIListBoxControlSampleListSendKeys = "{Down}{Down}{Down}{Down}{Down}{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectListBoxValueViaMouseParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectRadioItemViaKeyboardParams
	{
		#region Fields
		public int UIRadioGroupSampleRadioGroupSelectedIndex = 0;
		public string UIRadioGroupSampleRadioGroupSendKeys = "{Down}{Down}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectRadioItemViaMouseParams
	{
		#region Fields
		public int UIRadioGroupSampleRadioGroupSelectedIndex = 2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectRadioItemViaMouseWheelScrollParams
	{
		#region Fields
		public int UIRadioGroupSampleRadioGroupSelectedIndex = 0;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectTextInMemoEditViaKeyboardParams
	{
		#region Fields
		public string UIMemoEditSampleEditValueAsString = @"MemoEdit is a multi-line text editor. In addition to the advanced text input features derived from the TextEdit control, it offers numerous options for multi-line text management.

- Optional ENTER and TAB key processing.
- Customizable visibility for vertical and horizontal scrollbars.
- Optional text word-wrapping.
- Specifying height in text lines (if used within a container control such as the XtraGrid, XtraTreeList, and XtraVerticalGrid). [SelectionStart]0[SelectionLength]179";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectTextInMemoEditViaMouseParams
	{
		#region Fields
		public string UIMemoEditSampleEditValueAsString = @"MemoEdit is a multi-line text editor. In addition to the advanced text input features derived from the TextEdit control, it offers numerous options for multi-line text management.

- Optional ENTER and TAB key processing.
- Customizable visibility for vertical and horizontal scrollbars.
- Optional text word-wrapping.
- Specifying height in text lines (if used within a container control such as the XtraGrid, XtraTreeList, and XtraVerticalGrid). [SelectionStart]0[SelectionLength]179";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectTextInTextEditViaKeyboardParams
	{
		#region Fields
		public string UITextEditSampleEditValueAsString = "Sample Text [SelectionStart]7[SelectionLength]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectTextInTextEditViaMouseParams
	{
		#region Fields
		public string UITextEditSampleEditValueAsString = "Sample Text [SelectionStart]7[SelectionLength]4";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SortingDataByPriceAverageAscendingParams
	{
		#region Fields
		public string UICbeSortingComboBoxValueAsString = "Price: Average Ascending [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchDropDownControlToPopupControlContrainerParams
	{
		#region Fields
		public string UIIcbDropDownControlComboBoxValueTypeName = "System.Int32";
		public string UIIcbDropDownControlComboBoxValueAsString = "1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchFindModeToFindClickParams
	{
		#region Fields
		public string UIIcbFindModeComboBoxValueTypeName = "DevExpress.XtraEditors.FindMode";
		public string UIIcbFindModeComboBoxValueAsString = "FindClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchFocusToMainMenuParams
	{
		#region Fields
		public string UIRtPadEditSendKeys = "{LMenu}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchGroupingModeToCustomIntervalParams
	{
		#region Fields
		public string UICbeIntervalComboBoxValueAsString = "Custom Interval [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchGroupingModeToDateMonthParams
	{
		#region Fields
		public string UICbeIntervalComboBoxValueAsString = "Date: Month [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchGroupingModeToDateRangeParams
	{
		#region Fields
		public string UICbeIntervalComboBoxValueAsString = "Date: Range [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchGroupingModeToDateYearParams
	{
		#region Fields
		public string UICbeIntervalComboBoxValueAsString = "Date: Year [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchGroupingModeToGroupByCategoryParams
	{
		#region Fields
		public string UICbeIntervalComboBoxValueAsString = "Group by Category (images in group rows) [SelectionStart]0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchMultiSelectModeToRowSelectParams
	{
		#region Fields
		public string UIIcbSelectModeComboBoxValueTypeName = "DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode";
		public string UIIcbSelectModeComboBoxValueAsString = "RowSelect";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchOffAutoRowHeightOptionParams
	{
		#region Fields
		public bool UICheAutoHeightCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchOnDisplaySummaryOptionParams
	{
		#region Fields
		public bool UIChDisplaySummaryCheckButtonChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToBandedGridViewParams
	{
		#region Fields
		public bool UIChBandedCheckButtonChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToBarLinkContainerItemDemoModuleParams
	{
		#region Fields
		public string UIListBoxControl1ListSelectedIndicesAsString = "5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToCheckHeaderButtonTypeParams
	{
		#region Fields
		public int UIRgTemplatesButtonRadioGroupSelectedIndex = 1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToEditorItemsDemoModuleParams
	{
		#region Fields
		public string UIListBoxControl1ListSelectedIndicesAsString = "13";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToGlyphsHeaderButtonTypeParams
	{
		#region Fields
		public int UIRgTemplatesButtonRadioGroupSelectedIndex = 3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToGridViewParams
	{
		#region Fields
		public bool UIChGridCheckButtonChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToImageHeaderButtonTypeParams
	{
		#region Fields
		public int UIRgTemplatesButtonRadioGroupSelectedIndex = 2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToJoinedGroupPanelParams
	{
		#region Fields
		public bool UIChJoinedCheckButtonChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToMultiExtendedSelectionModeParams
	{
		#region Fields
		public string UIIcbSelectionModeComboBoxValueTypeName = "System.Windows.Forms.SelectionMode";
		public string UIIcbSelectionModeComboBoxValueAsString = "MultiExtended";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToMultiSimpleSelectionModeParams
	{
		#region Fields
		public string UIIcbSelectionModeComboBoxValueTypeName = "System.Windows.Forms.SelectionMode";
		public string UIIcbSelectionModeComboBoxValueAsString = "MultiSimple";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToStandaloneBarDockControlDemoModuleParams
	{
		#region Fields
		public string UIListBoxControl1ListSelectedIndicesAsString = "23";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TryClickNewRightFixedColumnParams
	{
		#region Fields
		public string UIColCountryColumnHeaderColumnPositionAsString = "[VisibleIndex]8[GroupIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInMemoEditParams
	{
		#region Fields
		public string UIMemoEditSampleEditValueAsString = "Check\r\nCheck\r\nCheck";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInMRUEditParams
	{
		#region Fields
		public string UIMruEditSampleMRUEditValueAsString = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInNewRibbonRichTextBoxParams
	{
		#region Fields
		public string UIRichTextBox1EditText = "Ribbon";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInRecentDocumentRichTextBoxParams
	{
		#region Fields
		public string UIRichTextBox1EditText = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInRibbonRichTextBoxParams
	{
		#region Fields
		public string UIRichTextBox1EditText = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInRibbonRichTextBoxForAssertChangingStatusBarInfoParams
	{
		#region Fields
		public string UIRichTextBox1EditText = "Ribbon\r\nSimple pad\r\ntest";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInSimplePadDemoParams
	{
		#region Fields
		public string UIRtPadEditText = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypeInTextEditParams
	{
		#region Fields
		public string UITextEditSampleEditValueAsString = "Sample Text Check";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TypingTextInCellParams
	{
		#region Fields
		public string UIGridControl1TableFocusedCellAsString = "[View]gridView1[Row]0[Column]colNotes";
		public string UIMemoEditEditValueAsString = "Education includes a BA in psychology from Colorado State University in 1970.  Sh" +
			"e also completed \"The Art of the Cold Call.\"  Nancy is a member of Toastmasters " +
			"International.\r\ntest\r\ntest\r\ntest";
		public string UIGridControl1TableFocusedCellAsString1 = "[View]gridView1[Row]1[Column]colNotes";
		public string UIAndrewreceivedhisBTSCellActiveEditorValue = @"Andrew received his BTS commercial in 1974 and a Ph.D. in international marketing from the University of Dallas in 1981.  He is fluent in French and Italian and reads German.  He joined the company as a sales representative, was promoted to sales manager in January 1992 and to vice president of sales in March 1993.  Andrew is a member of the Sales Management Roundtable, the Seattle Chamber of Commerce, and the Pacific Rim Importers Association.";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UndoMultiExtendedSelectionListBoxValuesViaKeyboardParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0";
		public string UIListBoxControlSampleListSendKeys = "{Down}{Down}{Down}{Down}{Down}";
		public string UIListBoxControlSampleListSendKeys1 = "{Down}";
		public string UIListBoxControlSampleListSendKeys2 = "{Down}";
		public string UIListBoxControlSampleListSendKeys3 = "{Down}";
		public string UIListBoxControlSampleListSendKeys4 = "{Down}";
		public string UIListBoxControlSampleListSendKeys5 = "{Down}";
		public string UIListBoxControlSampleListSendKeys6 = "{Down}";
		public string UIListBoxControlSampleListSendKeys7 = "{Down}";
		public string UIListBoxControlSampleListSendKeys8 = "{Down}";
		public string UIListBoxControlSampleListSendKeys9 = "{Up}";
		public string UIListBoxControlSampleListSendKeys10 = "{Up}";
		public string UIListBoxControlSampleListSendKeys11 = "{Up}";
		public string UIListBoxControlSampleListSendKeys12 = "{Up}";
		public string UIListBoxControlSampleListSendKeys13 = "{Up}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UndoMultiExtendedSelectionListBoxValuesViaMouseParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "5 6 7 8";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UndoMultiSimpleSelectionListBoxValuesViaKeyboardParams
	{
		#region Fields
		public string UIHScrollBarScrollBarControlValueAsString = "0";
		public string UIListBoxControlSampleListSendKeys = "{Space}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UndoSelectionListBoxValuesViaMouseParams
	{
		#region Fields
		public string UIListBoxControlSampleListSelectedIndicesAsString = "0 5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UngroupDataViaDraggingColumnHeaderParams
	{
		#region Fields
		public string UIGridColumn2ColumnHeader1ColumnPositionAsString = "[VisibleIndex]1[GroupIndex]-1";
		public string UIGridColumn5ColumnHeader1ColumnPositionAsString = "[VisibleIndex]4[GroupIndex]-1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UseRibbonGroupCaptionButtonForCopyPasteParams
	{
		#region Fields
		public string UICopyMenuBaseButtonItemPerformClick = "PerformClick";
		public string UIPasteMenuBaseButtonItemPerformClick = "PerformClick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaMouseExpectedValues
	{
		#region Fields
		public string UIItemEditText = @"Row: #1
    Ana Trujillo Emparedados y helados
    Mexico
    México D.F.
    05021
    Avda. de la Constitución 2222
Row: #2
    Antonio Moreno Taquería
    Mexico
    México D.F.
    05023
    Mataderos  2312
Row: #3
    Around the Horn
    UK
    London
    WA1 1DP
    120 Hanover Sq.
Row: #4
    Berglunds snabbköp
    Sweden
    Luleå
    S-958 22
    Berguvsvägen  8
Row: #5
    Blauer See Delikatessen
    Germany
    Mannheim
    68306
    Forsterstr. 57
Row: #6
    Blondel père et fils
    France
    Strasbourg
    67000
    24, place Kléber";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSelectedCellsViaKeyboardExpectedValues
	{
		#region Fields
		public string UIItemEditText = @"Row: #12
    Centro comercial Moctezuma
    Mexico
Row: #13
    Chop-suey Chinese
    Switzerland
Row: #14
    Comércio Mineiro
    Brazil
Row: #15
    Consolidated Holdings
    UK
    WX1 6LT
Row: #16
    52066
Row: #17
    44000
Row: #18
    WX3 6FW";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchOffMemoEditAutoHeightParams
	{
		#region Fields
		public bool UICheMemoCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class BricksSelectionViaMouseAndCopyViaCtrlCShortcutParams
	{
		#region Fields
		public string UIVScrollBarScrollBarControlValueAsString = "88";
		public string UIDocumentViewerPrintViewControlSendKeys = "C";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBricksSelectedStateExpectedValues
	{
		#region Fields
		public bool UIPage0BrickIndices06PrintControlBrickSelected = true;
		public bool UIPage0BrickIndices07PrintControlBrickSelected = true;
		public bool UIPage0BrickIndices010PrintControlBrickSelected = true;
		public bool UIPage0BrickIndices011PrintControlBrickSelected = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectionDifferentTypeBricksViaMouseAndCopyViaCtrlCShortcutParams
	{
		#region Fields
		public string UIDocumentViewerPrintViewControlSendKeys = "C";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedNavBarGroupExpectedValues
	{
		#region Fields
		public bool UIGroup3NavBarGroupExists = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDeletedNavBarGroupExpectedValues
	{
		#region Fields
		public bool UIGroup4NavBarGroupExists = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedNavBarItemLinkExpectedValues
	{
		#region Fields
		public bool UIItem0NavBarLinkExists = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDeletedNavBarItemLinkExpectedValues
	{
		#region Fields
		public bool UIItem0NavBarLinkExists = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckObtainedNavBarHitInfoExpectedValues
	{
		#region Fields
		public string UILbClickEditText = "Group (Local)\r\nItem (Report)";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedNavBarItemCaptionExpectedValues
	{
		#region Fields
		public string UIOutboxtestNavBarLinkText = "Outbox test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedNavBarLinkItemAndItemCaptionExpectedValues
	{
		#region Fields
		public string UICalendar2013NavBarLinkText = "Calendar 2013";
		public string UICalendar2013NavBarLinkText1 = "Calendar 2013";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDeletedViaContextMenuNavBarLinkExpectedValues
	{
		#region Fields
		public bool UIInboxNavBarLinkExists = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedViaContextMenuNavBarGroupExpectedValues
	{
		#region Fields
		public bool UIElementNavBarGroupExists = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRemovedNavBarGroupExpectedValues
	{
		#region Fields
		public bool UIDeletedNavBarGroupExists = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDraggedNavBarLinkToItemListExpectedValues
	{
		#region Fields
		public bool UILabelListItemExists = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDraggedItemToNavBarExpectedValues
	{
		#region Fields
		public bool UITreeListNavBarLinkExists = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDraggedNavBarLinkToRecycleBinExpectedValues
	{
		#region Fields
		public bool UILabelNavBarLinkExists = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCollapsedNavBarGroupExpectedValues
	{
		#region Fields
		public bool UIDisksNavBarGroupExpanded = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckExpandedNavBarGroupExpectedValues
	{
		#region Fields
		public bool UIDisksNavBarGroupExpanded = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeNavBarIntervalsParams
	{
		#region Fields
		public string UITrackBar1TrackBarValueAsString = "40";
		public string UITrackBar1TrackBarValueAsString1 = "30";
		public string UITrackBar1TrackBarValueAsString2 = "30";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCalendarButtonRemovedExpectedValues
	{
		#region Fields
		public string UICalendarNavBarGroupLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCalendarButtonAddedExpectedValues
	{
		#region Fields
		public string UICalendarNavBarGroupLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFolderListButtonInvisibleExpectedValues
	{
		#region Fields
		public string UIFolderListNavBarGroupLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckFolderListButtonVisibleExpectedValues
	{
		#region Fields
		public string UIFolderListNavBarGroupLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckNotesButtonInvisibleExpectedValues
	{
		#region Fields
		public string UINotesNavBarGroupLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckNotesButtonVisibleExpectedValues
	{
		#region Fields
		public string UINotesNavBarGroupLocation = "0, 0";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedViaContextMenuNavBarLinkExpectedValues
	{
		#region Fields
		public bool UIInboxNavBarLinkExists = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckPopupContainerEditValueExpectedValues
	{
		#region Fields
		public string UIPopupContainerEditSaPopupEditValueAsString = "Tahoma, 9.25, Italic, Underline";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckPopupContainerEditValueWasNotChangedExpectedValues
	{
		#region Fields
		public string UIPopupContainerEditSaPopupEditValueAsString = "Tahoma, 8.25, Bold";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMemoExEditValueExpectedValues
	{
		#region Fields
		public string UIMemoExEditSamplePopupEditValueAsString = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckMemoExEditSizeExpectedValues
	{
		#region Fields
		public string UIMemoExPopupFormWindowSize = "325, 269";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDataForChangingPrintPreviewAfterUsePreviousButtonParams
	{
		#region Fields
		public string UITxtSpeciesNoEditValueAsString = "111";
		public string UITxtLengthEditValueAsString = "200";
		public string UITxtCategoryEditValueAsString = "Printing";
		public string UITxtCommonNameEditValueAsString = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBricksAfterChangingDataViaPreviousButtonExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices03PrintControlBrickText = "111";
		public string UIPage0BrickIndices05PrintControlBrickText = "200";
		public string UIPage0BrickIndices07PrintControlBrickText = "Printing";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDataForChangingPrintPreviewAfterUseLastButtonParams
	{
		#region Fields
		public string UITxtSpeciesNoEditValueAsString = "123";
		public string UITxtLengthEditValueAsString = "15";
		public string UITxtLengthEditSendKeys = "{Tab}";
		public string UITxtCategoryEditValueAsString = "print preview";
		public string UITxtLengthEditSendKeys1 = "{Tab}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBricksAfterChangingDataViaLastButtonExpectedValues
	{
		#region Fields
		public string UIPage4BrickIndices048PrintControlBrickText = "123";
		public string UIPage4BrickIndices050PrintControlBrickText = "15";
		public string UIPage4BrickIndices052PrintControlBrickText = "print preview";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeDataForChangingPrintPreviewAfterUseNextButtonParams
	{
		#region Fields
		public string UITxtSpeciesNoEditValueAsString = "800";
		public string UITxtLengthEditValueAsString = "555";
		public string UITxtCategoryEditValueAsString = "printing";
		public string UITxtCategoryEditSendKeys = "{Tab}";
		public string UITxtCommonNameEditValueAsString = "TEST Blue Angelfish [SelectionStart]5";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBricksAfterChangingDataViaNextButtonExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices078PrintControlBrickText = "800";
		public string UIPage0BrickIndices080PrintControlBrickText = "555";
		public string UIPage0BrickIndices082PrintControlBrickClassName = "PrintControlBrick";
		public string UIPage0BrickIndices084PrintControlBrickClassName = "PrintControlBrick";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeGroupsDemoModuleDataForChangingPrintPreviewParams
	{
		#region Fields
		public string UITxtSpeciesNoEditValueAsString = "123";
		public string UITxtSpeciesNoEditSendKeys = "{Tab}";
		public string UITxtLengthEditValueAsString = "555";
		public string UITxtLengthEditSendKeys = "{Tab}";
		public string UITxtCategoryEditValueAsString = "coded ui test";
		public string UITxtCategoryEditSendKeys = "{Tab}";
		public string UITxtCommonNameEditValueAsString = "printing";
		public string UITxtCategoryEditValueAsString1 = "coded ui test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ClearPrintPreviewAllRecordsCheckBoxParams
	{
		#region Fields
		public bool UIChAllRecordsCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarInfoForAssertionSwitchingOffAllRecordsViewModeExpectedValues
	{
		#region Fields
		public string UIPage1of1BarItemText = "Page 1 of 1";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MakeHeaderBrickSettingsParams
	{
		#region Fields
		public string UITbHead2EditValueAsString = "";
		public string UITbHead3EditValueAsString = "";
		public string UITbHead3EditValueAsString1 = "[Date Printed]\r\n";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class MakeFooterBrickSettingsParams
	{
		#region Fields
		public bool UIFooterCheckEditCheckBoxChecked = true;
		public string UITbFoot2EditValueAsString = "Here is footer";
		public string UITbFoot3EditValueAsString = "test\r\ntest";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedTableBrickTextExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices00PrintControlBrickText = "Order Details";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSwitchToNextPageViaStatusBarInfoExpectedValues
	{
		#region Fields
		public string UIPage3of46BarItemText = "Page 3 of 46";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSwitchToLastPageViaStatusBarInfoExpectedValues
	{
		#region Fields
		public string UIPage3of46BarItemText = "Page 46 of 46";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSwitchToFirstPageViaStatusBarInfoExpectedValues
	{
		#region Fields
		public string UIPage3of46BarItemText = "Page 1 of 46";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckZoomValueAfterZoomInExpectedValues
	{
		#region Fields
		public string UIItem150BarItemText = "150%";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePrintPreviewZoomBarValueViaTypingParams
	{
		#region Fields
		public string UIBarEditItemLink0EditValueAsString = "150% [SelectionStart]2";
		public string UIBarEditItemLink0EditSendKeys = "{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckZoomBarValueAfterZoomOutExpectedValues
	{
		#region Fields
		public string UIItem150BarItemText = "80%";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarZoomBarValueAfterChangingViaMouseExpectedValues
	{
		#region Fields
		public string UIItem150BarItemText = "95%";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckStatusBarZoomBarValueAfterChangingViaPlusButtonExpectedValues
	{
		#region Fields
		public string UIItem150BarItemText = "122%";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectLargeIconViewTypeInListViewDemoModuleParams
	{
		#region Fields
		public int UIViewRadioGroupRadioGroupSelectedIndex = 0;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectSmallIconViewTypeInListViewDemoModuleParams
	{
		#region Fields
		public int UIViewRadioGroupRadioGroupSelectedIndex = 2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SelectListViewTypeInListViewDemoModuleParams
	{
		#region Fields
		public int UIViewRadioGroupRadioGroupSelectedIndex = 3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBricksAfterChangingTableDemoModuleDataExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices025PrintControlBrickText = "555";
		public string UIPage0BrickIndices028PrintControlBrickText = "111";
		public string UIPage0BrickIndices021PrintControlBrickText = "test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeTableDemoModuleDataForChangingPrintPreviewParams
	{
		#region Fields
		public string UITxtSpeciesNoEditValueAsString = "555";
		public string UITxtLengthEditValueAsString = "111";
		public string UITxtCategoryEditValueAsString = "test";
		public string UITxtCommonNameEditValueAsString = "printing";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckBricksAfterChangingGroupsDemoModuleDataExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices011PrintControlBrickText = "Category : coded ui test";
		public string UIPage0BrickIndices011PrintControlBrick1Text = "123";
		public string UIPage0BrickIndices011PrintControlBrick2Text = "555";
		public string UIPage0BrickIndices011PrintControlBrick3Text = "printing";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckShowedDetailReportInMasterDetailDemoModuleViaCheckingBrickTextExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices201PrintControlBrickText = "Maria Anders Orders";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class PageInfoBrickSelectionViaMouseAndCopyViaCtrlCShortcutParams
	{
		#region Fields
		public string UIDocumentViewerPrintViewControlSendKeys = "C";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckSwitchToLandscapePrintPreviewOrientationExpectedValues
	{
		#region Fields
		public bool UILandscapeRibbonBaseButtonItemChecked = true;
		public bool UIPortraitRibbonBaseButtonItemChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckPostponedFormCountExpectedValues
	{
		#region Fields
		public string UISePostponedFormCountEditValueAsString = "3";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedHiddenStateOfColumnExpectedValues
	{
		#region Fields
		public int UIColTrademark2ColumnHeaderVisibleIndex = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckDeletedSummaryExpectedValues
	{
		#region Fields
		public string UIGridControlFooterCelGridFooterCellValueAsString = null;
		public string UIGridControlFooterCelGridFooterCellText = "";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckRibbonItemAddedToQuickAccessToolbarExpectedValues
	{
		#region Fields
		public bool UIIExitRibbonBaseButtonItemExists = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckAddedConditionExpressionOnSimpleConditionsTabExpectedValues
	{
		#region Fields
		public string UINotBetween1040ListItemText = "NotBetween 10, 40";
		public bool UINotBetween1040ListItemSelected = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckComplexFilteredDataExpectedValues
	{
		#region Fields
		public string UIGridColumn3ColumnHeaderFilterString = "[UnitPrice] > 14.0m And [UnitPrice] < 20.0m";
		public string UIGridControlFilterPanCustomFilterString = "[UnitPrice] > 14.0m And [UnitPrice] < 20.0m";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangeRichTextBoxValueForChangingPrintPreviewParams
	{
		#region Fields
		public string UIItemEditText = "Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckChangedRichTextBoxValueViaCheckingBrickTextExpectedValues
	{
		#region Fields
		public string UIPage0BrickIndices00PrintControlBrickText = "Test";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SearchInPrintPreviewViaSearchBarParams
	{
		#region Fields
		public string UITextEditEditValueAsString = "seafood";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SearchBrickViaCtrlFShortcutParams
	{
		#region Fields
		public string UIDocumentViewerPrintViewControlSendKeys = "F";
		public string UITextEditEditValueAsString = "seafood";
		public string UITextEditEditSendKeys = "{Enter}";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class TextBricksSelectionViaMouseAndCopyViaCtrlCShortcutParams
	{
		#region Fields
		public string UIPreviewControlCustomSendKeys = "C";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckCustomizedWatermarkOptionsExpectedValues
	{
		#region Fields
		public string UICmbWatermarkTextComboBoxValueAsString = "Test";
		public string UILkpTextDirectionLookUpEditValueAsString = "Vertical";
		public string UICmbWatermarkFontSizeComboBoxValueAsString = "40";
		public string UITrBarTextTransparencTrackBarValueAsString = "85";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePrintPreviewScaleBySpecifyingPercentageBoxParams
	{
		#region Fields
		public string UISpinScalePercentEditValueAsString = "120";
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ChangePrintPreviewScaleViaFitToPagesBoxParams
	{
		#region Fields
		public bool UIRadioFitToPageWidthCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class ShowFooterSummaryParams
	{
		#region Fields
		public bool UIChShowFooterCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class SwitchToGroupFooterSummaryOptionParams
	{
		#region Fields
		public bool UIChDisplaySummaryCheckBoxChecked = true;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class DisableAlignInGroupRowParams
	{
		#region Fields
		public bool UIChAlignSummaryCheckBoxChecked = false;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckColumnHeaderAfterDisplayHiddenColumnViaCustomizationFormContextMenuExpectedValues
	{
		#region Fields
		public int UIGcIDColumnHeaderVisibleIndex = 19;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckColumnHeaderAfterDisplayHiddenColumnViaDraggingColumnHeaderFromCustomizationFormExpectedValues
	{
		#region Fields
		public int UIGcIDColumnHeaderVisibleIndex = 11;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckColumnHeaderAfterHidingColumnExpectedValues
	{
		#region Fields
		public int UIGcModificationColumnHeaderVisibleIndex = -1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckReorderedBandsOnAdvancedBandedGridViewExpectedValues
	{
		#region Fields
		public int UIGbImageGridBandVisibleIndex = 0;
		public int UIGbMainGridBandVisibleIndex = 1;
		public int UIGbPerfomanceGridBandVisibleIndex = 2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class CheckReorderedBandsOnBandedGridViewExpectedValues
	{
		#region Fields
		public int UIGridBand4GridBandVisibleIndex = 0;
		public int UIGridBand1GridBandVisibleIndex = 1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraEditorsTutorialsWindow : WinWindow
	{
		public UIXtraEditorsTutorialsWindow()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "The XtraEditors Suite Demo (C# code)", PropertyExpressionOperator.Contains));
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UITutorialNamesPane UITutorialNamesPane
		{
			get
			{
				if ((this.mUITutorialNamesPane == null))
				{
					this.mUITutorialNamesPane = new UITutorialNamesPane(this);
				}
				return this.mUITutorialNamesPane;
			}
		}
		public UIPcMainClient UIPcMainClient
		{
			get
			{
				if ((this.mUIPcMainClient == null))
				{
					this.mUIPcMainClient = new UIPcMainClient(this);
				}
				return this.mUIPcMainClient;
			}
		}
		public UIXtraTabPage5TabPage UIXtraTabPage5TabPage
		{
			get
			{
				if ((this.mUIXtraTabPage5TabPage == null))
				{
					this.mUIXtraTabPage5TabPage = new UIXtraTabPage5TabPage(this);
				}
				return this.mUIXtraTabPage5TabPage;
			}
		}
		#endregion
		#region Fields
		private UITutorialNamesPane mUITutorialNamesPane;
		private UIPcMainClient mUIPcMainClient;
		private UIXtraTabPage5TabPage mUIXtraTabPage5TabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITutorialNamesPane : WinPane
	{
		public UITutorialNamesPane(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "gcNavigations";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UITvNavigationWindow UITvNavigationWindow
		{
			get
			{
				if ((this.mUITvNavigationWindow == null))
				{
					this.mUITvNavigationWindow = new UITvNavigationWindow(this);
				}
				return this.mUITvNavigationWindow;
			}
		}
		#endregion
		#region Fields
		private UITvNavigationWindow mUITvNavigationWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITvNavigationWindow : WinWindow
	{
		public UITvNavigationWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SysTreeView32", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UITvNavigationTree UITvNavigationTree
		{
			get
			{
				if ((this.mUITvNavigationTree == null))
				{
					this.mUITvNavigationTree = new UITvNavigationTree(this);
				}
				return this.mUITvNavigationTree;
			}
		}
		#endregion
		#region Fields
		private UITvNavigationTree mUITvNavigationTree;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITvNavigationTree : WinTree
	{
		public UITvNavigationTree(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UINotextboxTreeItem UINotextboxTreeItem
		{
			get
			{
				if ((this.mUINotextboxTreeItem == null))
				{
					this.mUINotextboxTreeItem = new UINotextboxTreeItem(this);
				}
				return this.mUINotextboxTreeItem;
			}
		}
		public UITextBoxEditorsTreeItem UITextBoxEditorsTreeItem
		{
			get
			{
				if ((this.mUITextBoxEditorsTreeItem == null))
				{
					this.mUITextBoxEditorsTreeItem = new UITextBoxEditorsTreeItem(this);
				}
				return this.mUITextBoxEditorsTreeItem;
			}
		}
		public UISpinEditorsTreeItem UISpinEditorsTreeItem
		{
			get
			{
				if ((this.mUISpinEditorsTreeItem == null))
				{
					this.mUISpinEditorsTreeItem = new UISpinEditorsTreeItem(this);
				}
				return this.mUISpinEditorsTreeItem;
			}
		}
		public UIPopupEditorsTreeItem UIPopupEditorsTreeItem
		{
			get
			{
				if ((this.mUIPopupEditorsTreeItem == null))
				{
					this.mUIPopupEditorsTreeItem = new UIPopupEditorsTreeItem(this);
				}
				return this.mUIPopupEditorsTreeItem;
			}
		}
		public UIControlsTreeItem UIControlsTreeItem
		{
			get
			{
				if ((this.mUIControlsTreeItem == null))
				{
					this.mUIControlsTreeItem = new UIControlsTreeItem(this);
				}
				return this.mUIControlsTreeItem;
			}
		}
		#endregion
		#region Fields
		private UINotextboxTreeItem mUINotextboxTreeItem;
		private UITextBoxEditorsTreeItem mUITextBoxEditorsTreeItem;
		private UISpinEditorsTreeItem mUISpinEditorsTreeItem;
		private UIPopupEditorsTreeItem mUIPopupEditorsTreeItem;
		private UIControlsTreeItem mUIControlsTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINotextboxTreeItem : WinTreeItem
	{
		public UINotextboxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "No text box", PropertyExpressionOperator.Contains));
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public WinTreeItem UICheckEditupdatedTreeItem
		{
			get
			{
				if ((this.mUICheckEditupdatedTreeItem == null))
				{
					this.mUICheckEditupdatedTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUICheckEditupdatedTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "CheckEdit", PropertyExpressionOperator.Contains));
					this.mUICheckEditupdatedTreeItem.SearchProperties["Value"] = "1";
					this.mUICheckEditupdatedTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUICheckEditupdatedTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUICheckEditupdatedTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICheckEditupdatedTreeItem;
			}
		}
		public WinTreeItem UIRadioGroupTreeItem
		{
			get
			{
				if ((this.mUIRadioGroupTreeItem == null))
				{
					this.mUIRadioGroupTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIRadioGroupTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "RadioGroup", PropertyExpressionOperator.Contains));
					this.mUIRadioGroupTreeItem.SearchProperties["Value"] = "1";
					this.mUIRadioGroupTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIRadioGroupTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIRadioGroupTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIRadioGroupTreeItem;
			}
		}
		public WinTreeItem UITrackBarTreeItem
		{
			get
			{
				if ((this.mUITrackBarTreeItem == null))
				{
					this.mUITrackBarTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUITrackBarTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "TrackBar", PropertyExpressionOperator.Contains));
					this.mUITrackBarTreeItem.SearchProperties["Value"] = "1";
					this.mUITrackBarTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUITrackBarTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUITrackBarTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITrackBarTreeItem;
			}
		}
		public WinTreeItem UIRangeTrackBarTreeItem
		{
			get
			{
				if ((this.mUIRangeTrackBarTreeItem == null))
				{
					this.mUIRangeTrackBarTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIRangeTrackBarTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "RangeTrackBar", PropertyExpressionOperator.Contains));
					this.mUIRangeTrackBarTreeItem.SearchProperties["Value"] = "1";
					this.mUIRangeTrackBarTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIRangeTrackBarTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIRangeTrackBarTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIRangeTrackBarTreeItem;
			}
		}
		public WinTreeItem UIZoomTrackBarTreeItem
		{
			get
			{
				if ((this.mUIZoomTrackBarTreeItem == null))
				{
					this.mUIZoomTrackBarTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIZoomTrackBarTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "ZoomTrackBar", PropertyExpressionOperator.Contains));
					this.mUIZoomTrackBarTreeItem.SearchProperties["Value"] = "1";
					this.mUIZoomTrackBarTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIZoomTrackBarTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIZoomTrackBarTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIZoomTrackBarTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUICheckEditupdatedTreeItem;
		private WinTreeItem mUIRadioGroupTreeItem;
		private WinTreeItem mUITrackBarTreeItem;
		private WinTreeItem mUIRangeTrackBarTreeItem;
		private WinTreeItem mUIZoomTrackBarTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITextBoxEditorsTreeItem : WinTreeItem
	{
		public UITextBoxEditorsTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Text Box Editors", PropertyExpressionOperator.Contains));
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public WinTreeItem UITextEditTreeItem
		{
			get
			{
				if ((this.mUITextEditTreeItem == null))
				{
					this.mUITextEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUITextEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "TextEdit", PropertyExpressionOperator.Contains));
					this.mUITextEditTreeItem.SearchProperties["Value"] = "1";
					this.mUITextEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUITextEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUITextEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEditTreeItem;
			}
		}
		public WinTreeItem UIMemoEditTreeItem
		{
			get
			{
				if ((this.mUIMemoEditTreeItem == null))
				{
					this.mUIMemoEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIMemoEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "MemoEdit", PropertyExpressionOperator.Contains));
					this.mUIMemoEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIMemoEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIMemoEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIMemoEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMemoEditTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUITextEditTreeItem;
		private WinTreeItem mUIMemoEditTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISpinEditorsTreeItem : WinTreeItem
	{
		public UISpinEditorsTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Spin Editors", PropertyExpressionOperator.Contains));
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public WinTreeItem UISpinEditTreeItem
		{
			get
			{
				if ((this.mUISpinEditTreeItem == null))
				{
					this.mUISpinEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUISpinEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "SpinEdit", PropertyExpressionOperator.Contains));
					this.mUISpinEditTreeItem.SearchProperties["Value"] = "1";
					this.mUISpinEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUISpinEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUISpinEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditTreeItem;
			}
		}
		public WinTreeItem UITimeEditTreeItem
		{
			get
			{
				if ((this.mUITimeEditTreeItem == null))
				{
					this.mUITimeEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUITimeEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "TimeEdit", PropertyExpressionOperator.Contains));
					this.mUITimeEditTreeItem.SearchProperties["Value"] = "1";
					this.mUITimeEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUITimeEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUITimeEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITimeEditTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUISpinEditTreeItem;
		private WinTreeItem mUITimeEditTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupEditorsTreeItem : WinTreeItem
	{
		public UIPopupEditorsTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Popup Editors", PropertyExpressionOperator.Contains));
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public WinTreeItem UICalcEditTreeItem
		{
			get
			{
				if ((this.mUICalcEditTreeItem == null))
				{
					this.mUICalcEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUICalcEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "CalcEdit", PropertyExpressionOperator.Contains));
					this.mUICalcEditTreeItem.SearchProperties["Value"] = "1";
					this.mUICalcEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUICalcEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUICalcEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICalcEditTreeItem;
			}
		}
		public WinTreeItem UIColorEditTreeItem
		{
			get
			{
				if ((this.mUIColorEditTreeItem == null))
				{
					this.mUIColorEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIColorEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "ColorEdit", PropertyExpressionOperator.Contains));
					this.mUIColorEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIColorEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIColorEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIColorEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIColorEditTreeItem;
			}
		}
		public WinTreeItem UIComboBoxEditupdatedTreeItem
		{
			get
			{
				if ((this.mUIComboBoxEditupdatedTreeItem == null))
				{
					this.mUIComboBoxEditupdatedTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIComboBoxEditupdatedTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "ComboBoxEdit", PropertyExpressionOperator.Contains));
					this.mUIComboBoxEditupdatedTreeItem.SearchProperties["Value"] = "1";
					this.mUIComboBoxEditupdatedTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIComboBoxEditupdatedTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIComboBoxEditupdatedTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIComboBoxEditupdatedTreeItem;
			}
		}
		public WinTreeItem UIDateEditTreeItem
		{
			get
			{
				if ((this.mUIDateEditTreeItem == null))
				{
					this.mUIDateEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIDateEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "DateEdit", PropertyExpressionOperator.Contains));
					this.mUIDateEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIDateEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIDateEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIDateEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDateEditTreeItem;
			}
		}
		public WinTreeItem UILookUpEditTreeItem
		{
			get
			{
				if ((this.mUILookUpEditTreeItem == null))
				{
					this.mUILookUpEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUILookUpEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "LookUpEdit", PropertyExpressionOperator.Contains));
					this.mUILookUpEditTreeItem.SearchProperties["Value"] = "1";
					this.mUILookUpEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUILookUpEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUILookUpEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUILookUpEditTreeItem;
			}
		}
		public WinTreeItem UIMemoExEditTreeItem
		{
			get
			{
				if ((this.mUIMemoExEditTreeItem == null))
				{
					this.mUIMemoExEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIMemoExEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "MemoExEdit", PropertyExpressionOperator.Contains));
					this.mUIMemoExEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIMemoExEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIMemoExEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIMemoExEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMemoExEditTreeItem;
			}
		}
		public WinTreeItem UIMRUEditTreeItem
		{
			get
			{
				if ((this.mUIMRUEditTreeItem == null))
				{
					this.mUIMRUEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIMRUEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "MRUEdit", PropertyExpressionOperator.Contains));
					this.mUIMRUEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIMRUEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIMRUEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIMRUEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMRUEditTreeItem;
			}
		}
		public WinTreeItem UIImageComboBoxEditTreeItem
		{
			get
			{
				if ((this.mUIImageComboBoxEditTreeItem == null))
				{
					this.mUIImageComboBoxEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIImageComboBoxEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "ImageComboBoxEdit", PropertyExpressionOperator.Contains));
					this.mUIImageComboBoxEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIImageComboBoxEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIImageComboBoxEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIImageComboBoxEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIImageComboBoxEditTreeItem;
			}
		}
		public WinTreeItem UIPopupContainerEditTreeItem
		{
			get
			{
				if ((this.mUIPopupContainerEditTreeItem == null))
				{
					this.mUIPopupContainerEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIPopupContainerEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "PopupContainerEdit", PropertyExpressionOperator.Contains));
					this.mUIPopupContainerEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIPopupContainerEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIPopupContainerEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIPopupContainerEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIPopupContainerEditTreeItem;
			}
		}
		public WinTreeItem UIFontEditTreeItem
		{
			get
			{
				if ((this.mUIFontEditTreeItem == null))
				{
					this.mUIFontEditTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIFontEditTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "FontEdit", PropertyExpressionOperator.Contains));
					this.mUIFontEditTreeItem.SearchProperties["Value"] = "1";
					this.mUIFontEditTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIFontEditTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIFontEditTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIFontEditTreeItem;
			}
		}
		public WinTreeItem UICheckedComboBoxTreeItem
		{
			get
			{
				if ((this.mUICheckedComboBoxTreeItem == null))
				{
					this.mUICheckedComboBoxTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUICheckedComboBoxTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "CheckedComboBox", PropertyExpressionOperator.Contains));
					this.mUICheckedComboBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUICheckedComboBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUICheckedComboBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUICheckedComboBoxTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICheckedComboBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUICalcEditTreeItem;
		private WinTreeItem mUIColorEditTreeItem;
		private WinTreeItem mUIComboBoxEditupdatedTreeItem;
		private WinTreeItem mUIDateEditTreeItem;
		private WinTreeItem mUILookUpEditTreeItem;
		private WinTreeItem mUIMemoExEditTreeItem;
		private WinTreeItem mUIMRUEditTreeItem;
		private WinTreeItem mUIImageComboBoxEditTreeItem;
		private WinTreeItem mUIPopupContainerEditTreeItem;
		private WinTreeItem mUIFontEditTreeItem;
		private WinTreeItem mUICheckedComboBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlsTreeItem : WinTreeItem
	{
		public UIControlsTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Controls", PropertyExpressionOperator.Contains));
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public WinTreeItem UIDropDownButtonTreeItem
		{
			get
			{
				if ((this.mUIDropDownButtonTreeItem == null))
				{
					this.mUIDropDownButtonTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIDropDownButtonTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "DropDown Button", PropertyExpressionOperator.Contains));
					this.mUIDropDownButtonTreeItem.SearchProperties["Value"] = "1";
					this.mUIDropDownButtonTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIDropDownButtonTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIDropDownButtonTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDropDownButtonTreeItem;
			}
		}
		public WinTreeItem UIDataNavigatorTreeItem
		{
			get
			{
				if ((this.mUIDataNavigatorTreeItem == null))
				{
					this.mUIDataNavigatorTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIDataNavigatorTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "DataNavigator", PropertyExpressionOperator.Contains));
					this.mUIDataNavigatorTreeItem.SearchProperties["Value"] = "1";
					this.mUIDataNavigatorTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIDataNavigatorTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIDataNavigatorTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDataNavigatorTreeItem;
			}
		}
		public WinTreeItem UIListBoxesTreeItem
		{
			get
			{
				if ((this.mUIListBoxesTreeItem == null))
				{
					this.mUIListBoxesTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIListBoxesTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "ListBoxes", PropertyExpressionOperator.Contains));
					this.mUIListBoxesTreeItem.SearchProperties["Value"] = "1";
					this.mUIListBoxesTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIListBoxesTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIListBoxesTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIListBoxesTreeItem;
			}
		}
		public WinTreeItem UIMaskBoxTreeItem
		{
			get
			{
				if ((this.mUIMaskBoxTreeItem == null))
				{
					this.mUIMaskBoxTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIMaskBoxTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "MaskBox", PropertyExpressionOperator.Contains));
					this.mUIMaskBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUIMaskBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIMaskBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIMaskBoxTreeItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMaskBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUIDropDownButtonTreeItem;
		private WinTreeItem mUIDataNavigatorTreeItem;
		private WinTreeItem mUIListBoxesTreeItem;
		private WinTreeItem mUIMaskBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPcMainClient : DXTestControl
	{
		public UIPcMainClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient : DXTestControl
	{
		public UIGcContainerClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIModuleCheckEditCustom UIModuleCheckEditCustom
		{
			get
			{
				if ((this.mUIModuleCheckEditCustom == null))
				{
					this.mUIModuleCheckEditCustom = new UIModuleCheckEditCustom(this);
				}
				return this.mUIModuleCheckEditCustom;
			}
		}
		public UIModuleRadioGroupCustom UIModuleRadioGroupCustom
		{
			get
			{
				if ((this.mUIModuleRadioGroupCustom == null))
				{
					this.mUIModuleRadioGroupCustom = new UIModuleRadioGroupCustom(this);
				}
				return this.mUIModuleRadioGroupCustom;
			}
		}
		public UIModuleTrackBarCustom UIModuleTrackBarCustom
		{
			get
			{
				if ((this.mUIModuleTrackBarCustom == null))
				{
					this.mUIModuleTrackBarCustom = new UIModuleTrackBarCustom(this);
				}
				return this.mUIModuleTrackBarCustom;
			}
		}
		public UIModuleRangeTrackBarCustom UIModuleRangeTrackBarCustom
		{
			get
			{
				if ((this.mUIModuleRangeTrackBarCustom == null))
				{
					this.mUIModuleRangeTrackBarCustom = new UIModuleRangeTrackBarCustom(this);
				}
				return this.mUIModuleRangeTrackBarCustom;
			}
		}
		public UIModuleZoomTrackBarCustom UIModuleZoomTrackBarCustom
		{
			get
			{
				if ((this.mUIModuleZoomTrackBarCustom == null))
				{
					this.mUIModuleZoomTrackBarCustom = new UIModuleZoomTrackBarCustom(this);
				}
				return this.mUIModuleZoomTrackBarCustom;
			}
		}
		public UIModuleTextEditCustom UIModuleTextEditCustom
		{
			get
			{
				if ((this.mUIModuleTextEditCustom == null))
				{
					this.mUIModuleTextEditCustom = new UIModuleTextEditCustom(this);
				}
				return this.mUIModuleTextEditCustom;
			}
		}
		public UIModuleMemoEditCustom UIModuleMemoEditCustom
		{
			get
			{
				if ((this.mUIModuleMemoEditCustom == null))
				{
					this.mUIModuleMemoEditCustom = new UIModuleMemoEditCustom(this);
				}
				return this.mUIModuleMemoEditCustom;
			}
		}
		public UIModuleSpinEditCustom UIModuleSpinEditCustom
		{
			get
			{
				if ((this.mUIModuleSpinEditCustom == null))
				{
					this.mUIModuleSpinEditCustom = new UIModuleSpinEditCustom(this);
				}
				return this.mUIModuleSpinEditCustom;
			}
		}
		public UIModuleTimeEditCustom UIModuleTimeEditCustom
		{
			get
			{
				if ((this.mUIModuleTimeEditCustom == null))
				{
					this.mUIModuleTimeEditCustom = new UIModuleTimeEditCustom(this);
				}
				return this.mUIModuleTimeEditCustom;
			}
		}
		public UIModuleCalcEditCustom UIModuleCalcEditCustom
		{
			get
			{
				if ((this.mUIModuleCalcEditCustom == null))
				{
					this.mUIModuleCalcEditCustom = new UIModuleCalcEditCustom(this);
				}
				return this.mUIModuleCalcEditCustom;
			}
		}
		public UIModuleColorEditCustom UIModuleColorEditCustom
		{
			get
			{
				if ((this.mUIModuleColorEditCustom == null))
				{
					this.mUIModuleColorEditCustom = new UIModuleColorEditCustom(this);
				}
				return this.mUIModuleColorEditCustom;
			}
		}
		public UIModuleComboBoxEditCustom UIModuleComboBoxEditCustom
		{
			get
			{
				if ((this.mUIModuleComboBoxEditCustom == null))
				{
					this.mUIModuleComboBoxEditCustom = new UIModuleComboBoxEditCustom(this);
				}
				return this.mUIModuleComboBoxEditCustom;
			}
		}
		public UIModuleMemoExEditCustom UIModuleMemoExEditCustom
		{
			get
			{
				if ((this.mUIModuleMemoExEditCustom == null))
				{
					this.mUIModuleMemoExEditCustom = new UIModuleMemoExEditCustom(this);
				}
				return this.mUIModuleMemoExEditCustom;
			}
		}
		public UIModuleDateEditCustom UIModuleDateEditCustom
		{
			get
			{
				if ((this.mUIModuleDateEditCustom == null))
				{
					this.mUIModuleDateEditCustom = new UIModuleDateEditCustom(this);
				}
				return this.mUIModuleDateEditCustom;
			}
		}
		public UIModuleImageComboBoxECustom UIModuleImageComboBoxECustom
		{
			get
			{
				if ((this.mUIModuleImageComboBoxECustom == null))
				{
					this.mUIModuleImageComboBoxECustom = new UIModuleImageComboBoxECustom(this);
				}
				return this.mUIModuleImageComboBoxECustom;
			}
		}
		public UIModulePopupContainerCustom UIModulePopupContainerCustom
		{
			get
			{
				if ((this.mUIModulePopupContainerCustom == null))
				{
					this.mUIModulePopupContainerCustom = new UIModulePopupContainerCustom(this);
				}
				return this.mUIModulePopupContainerCustom;
			}
		}
		public UIModuleFontEditCustom UIModuleFontEditCustom
		{
			get
			{
				if ((this.mUIModuleFontEditCustom == null))
				{
					this.mUIModuleFontEditCustom = new UIModuleFontEditCustom(this);
				}
				return this.mUIModuleFontEditCustom;
			}
		}
		public UIModuleCheckedComboBoCustom UIModuleCheckedComboBoCustom
		{
			get
			{
				if ((this.mUIModuleCheckedComboBoCustom == null))
				{
					this.mUIModuleCheckedComboBoCustom = new UIModuleCheckedComboBoCustom(this);
				}
				return this.mUIModuleCheckedComboBoCustom;
			}
		}
		public UIModuleLookUpEditCustom UIModuleLookUpEditCustom
		{
			get
			{
				if ((this.mUIModuleLookUpEditCustom == null))
				{
					this.mUIModuleLookUpEditCustom = new UIModuleLookUpEditCustom(this);
				}
				return this.mUIModuleLookUpEditCustom;
			}
		}
		public UIModuleMRUEditCustom UIModuleMRUEditCustom
		{
			get
			{
				if ((this.mUIModuleMRUEditCustom == null))
				{
					this.mUIModuleMRUEditCustom = new UIModuleMRUEditCustom(this);
				}
				return this.mUIModuleMRUEditCustom;
			}
		}
		#endregion
		#region Fields
		private UIModuleCheckEditCustom mUIModuleCheckEditCustom;
		private UIModuleRadioGroupCustom mUIModuleRadioGroupCustom;
		private UIModuleTrackBarCustom mUIModuleTrackBarCustom;
		private UIModuleRangeTrackBarCustom mUIModuleRangeTrackBarCustom;
		private UIModuleZoomTrackBarCustom mUIModuleZoomTrackBarCustom;
		private UIModuleTextEditCustom mUIModuleTextEditCustom;
		private UIModuleMemoEditCustom mUIModuleMemoEditCustom;
		private UIModuleSpinEditCustom mUIModuleSpinEditCustom;
		private UIModuleTimeEditCustom mUIModuleTimeEditCustom;
		private UIModuleCalcEditCustom mUIModuleCalcEditCustom;
		private UIModuleColorEditCustom mUIModuleColorEditCustom;
		private UIModuleComboBoxEditCustom mUIModuleComboBoxEditCustom;
		private UIModuleMemoExEditCustom mUIModuleMemoExEditCustom;
		private UIModuleDateEditCustom mUIModuleDateEditCustom;
		private UIModuleImageComboBoxECustom mUIModuleImageComboBoxECustom;
		private UIModulePopupContainerCustom mUIModulePopupContainerCustom;
		private UIModuleFontEditCustom mUIModuleFontEditCustom;
		private UIModuleCheckedComboBoCustom mUIModuleCheckedComboBoCustom;
		private UIModuleLookUpEditCustom mUIModuleLookUpEditCustom;
		private UIModuleMRUEditCustom mUIModuleMRUEditCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleCheckEditCustom : DXTestControl
	{
		public UIModuleCheckEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleCheckEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleCheckEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList : DXTestControl
	{
		public UIXtraTabControl1TabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client : DXTestControl
	{
		public UIXtraTabPage1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcSampleCheckBoxClient UIGcSampleCheckBoxClient
		{
			get
			{
				if ((this.mUIGcSampleCheckBoxClient == null))
				{
					this.mUIGcSampleCheckBoxClient = new UIGcSampleCheckBoxClient(this);
				}
				return this.mUIGcSampleCheckBoxClient;
			}
		}
		#endregion
		#region Fields
		private UIGcSampleCheckBoxClient mUIGcSampleCheckBoxClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcSampleCheckBoxClient : DXTestControl
	{
		public UIGcSampleCheckBoxClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSampleCheckBox";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXCheckBox UICheckEditSampleCheckBox
		{
			get
			{
				if ((this.mUICheckEditSampleCheckBox == null))
				{
					this.mUICheckEditSampleCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEditSampleCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkEditSample";
					this.mUICheckEditSampleCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEditSampleCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICheckEditSampleCheckBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICheckEditSampleCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUICheckEditSampleCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleRadioGroupCustom : DXTestControl
	{
		public UIModuleRadioGroupCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleRadioGroup";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleRadioGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList1 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList1(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList1 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList1 : DXTestControl
	{
		public UIXtraTabControl1TabList1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client1 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client1(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client1 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client1 : DXTestControl
	{
		public UIXtraTabPage1Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client : DXTestControl
	{
		public UIPanelControl1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIRadioGroupSampleRadioGroup UIRadioGroupSampleRadioGroup
		{
			get
			{
				if ((this.mUIRadioGroupSampleRadioGroup == null))
				{
					this.mUIRadioGroupSampleRadioGroup = new UIRadioGroupSampleRadioGroup(this);
				}
				return this.mUIRadioGroupSampleRadioGroup;
			}
		}
		#endregion
		#region Fields
		private UIRadioGroupSampleRadioGroup mUIRadioGroupSampleRadioGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRadioGroupSampleRadioGroup : DXRadioGroup
	{
		public UIRadioGroupSampleRadioGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "radioGroupSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXRadioButton UIRadioGroupItemRadioButton
		{
			get
			{
				if ((this.mUIRadioGroupItemRadioButton == null))
				{
					this.mUIRadioGroupItemRadioButton = new DXRadioButton(this);
					#region Search Criteria
					this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.Name] = "radioGroupSampleItem[2]";
					this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroupItem";
					this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRadioGroupItemRadioButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIRadioGroupItemRadioButton;
			}
		}
		#endregion
		#region Fields
		private DXRadioButton mUIRadioGroupItemRadioButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleTrackBarCustom : DXTestControl
	{
		public UIModuleTrackBarCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleTrackBar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleTrackBar";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList2 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList2(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList2 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList2 : DXTestControl
	{
		public UIXtraTabControl1TabList2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client2 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client2(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client2 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client2 : DXTestControl
	{
		public UIXtraTabPage1Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGroupControl3Client UIGroupControl3Client
		{
			get
			{
				if ((this.mUIGroupControl3Client == null))
				{
					this.mUIGroupControl3Client = new UIGroupControl3Client(this);
				}
				return this.mUIGroupControl3Client;
			}
		}
		#endregion
		#region Fields
		private UIGroupControl3Client mUIGroupControl3Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl3Client : DXTestControl
	{
		public UIGroupControl3Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTrackBar UITrackBarControl1TrackBar
		{
			get
			{
				if ((this.mUITrackBarControl1TrackBar == null))
				{
					this.mUITrackBarControl1TrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUITrackBarControl1TrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "trackBarControl1";
					this.mUITrackBarControl1TrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TrackBarControl";
					this.mUITrackBarControl1TrackBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITrackBarControl1TrackBar.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITrackBarControl1TrackBar;
			}
		}
		#endregion
		#region Fields
		private DXTrackBar mUITrackBarControl1TrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleRangeTrackBarCustom : DXTestControl
	{
		public UIModuleRangeTrackBarCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleRangeTrackBar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleRangeTrackBar";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList3 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList3(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList3 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList3 : DXTestControl
	{
		public UIXtraTabControl1TabList3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client3 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client3(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client3 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client3 : DXTestControl
	{
		public UIXtraTabPage1Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGroupControl3Client1 UIGroupControl3Client
		{
			get
			{
				if ((this.mUIGroupControl3Client == null))
				{
					this.mUIGroupControl3Client = new UIGroupControl3Client1(this);
				}
				return this.mUIGroupControl3Client;
			}
		}
		#endregion
		#region Fields
		private UIGroupControl3Client1 mUIGroupControl3Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl3Client1 : DXTestControl
	{
		public UIGroupControl3Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXRangeTrackBar UIRangeTrackBarControlRangeTrackBar
		{
			get
			{
				if ((this.mUIRangeTrackBarControlRangeTrackBar == null))
				{
					this.mUIRangeTrackBarControlRangeTrackBar = new DXRangeTrackBar(this);
					#region Search Criteria
					this.mUIRangeTrackBarControlRangeTrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "rangeTrackBarControl1";
					this.mUIRangeTrackBarControlRangeTrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RangeTrackBarControl";
					this.mUIRangeTrackBarControlRangeTrackBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRangeTrackBarControlRangeTrackBar.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIRangeTrackBarControlRangeTrackBar;
			}
		}
		#endregion
		#region Fields
		private DXRangeTrackBar mUIRangeTrackBarControlRangeTrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleZoomTrackBarCustom : DXTestControl
	{
		public UIModuleZoomTrackBarCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleZoomTrackBar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleZoomTrackBar";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList4 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList4(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList4 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList4 : DXTestControl
	{
		public UIXtraTabControl1TabList4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client4 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client4(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client4 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client4 : DXTestControl
	{
		public UIXtraTabPage1Client4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGroupControl3Client2 UIGroupControl3Client
		{
			get
			{
				if ((this.mUIGroupControl3Client == null))
				{
					this.mUIGroupControl3Client = new UIGroupControl3Client2(this);
				}
				return this.mUIGroupControl3Client;
			}
		}
		#endregion
		#region Fields
		private UIGroupControl3Client2 mUIGroupControl3Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl3Client2 : DXTestControl
	{
		public UIGroupControl3Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIZoomTrackBarControl1TrackBar UIZoomTrackBarControl1TrackBar
		{
			get
			{
				if ((this.mUIZoomTrackBarControl1TrackBar == null))
				{
					this.mUIZoomTrackBarControl1TrackBar = new UIZoomTrackBarControl1TrackBar(this);
				}
				return this.mUIZoomTrackBarControl1TrackBar;
			}
		}
		#endregion
		#region Fields
		private UIZoomTrackBarControl1TrackBar mUIZoomTrackBarControl1TrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIZoomTrackBarControl1TrackBar : DXTrackBar
	{
		public UIZoomTrackBarControl1TrackBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "zoomTrackBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ZoomTrackBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButtonButton
		{
			get
			{
				if ((this.mUIEditorButtonButton == null))
				{
					this.mUIEditorButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "zoomTrackBarControl1ZoomIn";
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditorButtonButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIEditorButtonButton;
			}
		}
		public DXButton UIEditorButtonButton1
		{
			get
			{
				if ((this.mUIEditorButtonButton1 == null))
				{
					this.mUIEditorButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "zoomTrackBarControl1ZoomOut";
					this.mUIEditorButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditorButtonButton1.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIEditorButtonButton1;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButtonButton;
		private DXButton mUIEditorButtonButton1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleTextEditCustom : DXTestControl
	{
		public UIModuleTextEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleTextEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleTextEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UITabctrlTextEditTabList UITabctrlTextEditTabList
		{
			get
			{
				if ((this.mUITabctrlTextEditTabList == null))
				{
					this.mUITabctrlTextEditTabList = new UITabctrlTextEditTabList(this);
				}
				return this.mUITabctrlTextEditTabList;
			}
		}
		#endregion
		#region Fields
		private UITabctrlTextEditTabList mUITabctrlTextEditTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabctrlTextEditTabList : DXTestControl
	{
		public UITabctrlTextEditTabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabctrlTextEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UITabpgGeneralClient UITabpgGeneralClient
		{
			get
			{
				if ((this.mUITabpgGeneralClient == null))
				{
					this.mUITabpgGeneralClient = new UITabpgGeneralClient(this);
				}
				return this.mUITabpgGeneralClient;
			}
		}
		#endregion
		#region Fields
		private UITabpgGeneralClient mUITabpgGeneralClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabpgGeneralClient : DXTestControl
	{
		public UITabpgGeneralClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabpgGeneral";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client1 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client1(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client1 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client1 : DXTestControl
	{
		public UIPanelControl1Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditSampleEdit
		{
			get
			{
				if ((this.mUITextEditSampleEdit == null))
				{
					this.mUITextEditSampleEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEditSample";
					this.mUITextEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditSampleEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEditSampleEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditSampleEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleMemoEditCustom : DXTestControl
	{
		public UIModuleMemoEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleMemoEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleMemoEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList5 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList5(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList5 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList5 : DXTestControl
	{
		public UIXtraTabControl1TabList5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client5 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client5(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client5 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client5 : DXTestControl
	{
		public UIXtraTabPage1Client5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client2 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client2(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client2 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client2 : DXTestControl
	{
		public UIPanelControl1Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMemoEditSampleEdit UIMemoEditSampleEdit
		{
			get
			{
				if ((this.mUIMemoEditSampleEdit == null))
				{
					this.mUIMemoEditSampleEdit = new UIMemoEditSampleEdit(this);
				}
				return this.mUIMemoEditSampleEdit;
			}
		}
		#endregion
		#region Fields
		private UIMemoEditSampleEdit mUIMemoEditSampleEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoEditSampleEdit : DXTextEdit
	{
		public UIMemoEditSampleEdit(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "memoEditSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXScrollBar UIVScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVScrollBarScrollBarControl == null))
				{
					this.mUIVScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "memoEditSampleVScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIVScrollBarScrollBarControl.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIVScrollBarScrollBarControl;
			}
		}
		#endregion
		#region Fields
		private DXScrollBar mUIVScrollBarScrollBarControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleSpinEditCustom : DXTestControl
	{
		public UIModuleSpinEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleSpinEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleSpinEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList6 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList6(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList6 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList6 : DXTestControl
	{
		public UIXtraTabControl1TabList6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client6 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client6(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client6 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client6 : DXTestControl
	{
		public UIXtraTabPage1Client6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcSampleClient UIGcSampleClient
		{
			get
			{
				if ((this.mUIGcSampleClient == null))
				{
					this.mUIGcSampleClient = new UIGcSampleClient(this);
				}
				return this.mUIGcSampleClient;
			}
		}
		#endregion
		#region Fields
		private UIGcSampleClient mUIGcSampleClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcSampleClient : DXTestControl
	{
		public UIGcSampleClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditSample1Edit
		{
			get
			{
				if ((this.mUISpinEditSample1Edit == null))
				{
					this.mUISpinEditSample1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditSample1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "spinEditSample1";
					this.mUISpinEditSample1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditSample1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditSample1Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditSample1Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditSample1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleTimeEditCustom : DXTestControl
	{
		public UIModuleTimeEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleTimeEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleTimeEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList7 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList7(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList7 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList7 : DXTestControl
	{
		public UIXtraTabControl1TabList7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client7 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client7(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client7 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client7 : DXTestControl
	{
		public UIXtraTabPage1Client7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client3 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client3(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client3 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client3 : DXTestControl
	{
		public UIPanelControl1Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXDateTimePicker UITimeEditSampleDateTimePicker
		{
			get
			{
				if ((this.mUITimeEditSampleDateTimePicker == null))
				{
					this.mUITimeEditSampleDateTimePicker = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUITimeEditSampleDateTimePicker.SearchProperties[DXTestControl.PropertyNames.Name] = "timeEditSample";
					this.mUITimeEditSampleDateTimePicker.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TimeEdit";
					this.mUITimeEditSampleDateTimePicker.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITimeEditSampleDateTimePicker.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITimeEditSampleDateTimePicker;
			}
		}
		#endregion
		#region Fields
		private DXDateTimePicker mUITimeEditSampleDateTimePicker;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleCalcEditCustom : DXTestControl
	{
		public UIModuleCalcEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleCalcEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleCalcEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList8 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList8(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList8 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList8 : DXTestControl
	{
		public UIXtraTabControl1TabList8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client8 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client8(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client8 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client8 : DXTestControl
	{
		public UIXtraTabPage1Client8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client4 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client4(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client4 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client4 : DXTestControl
	{
		public UIPanelControl1Client4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UICalcEditSampleEdit
		{
			get
			{
				if ((this.mUICalcEditSampleEdit == null))
				{
					this.mUICalcEditSampleEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUICalcEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "calcEditSample";
					this.mUICalcEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICalcEditSampleEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICalcEditSampleEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUICalcEditSampleEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleColorEditCustom : DXTestControl
	{
		public UIModuleColorEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleColorEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleColorEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList9 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList9(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList9 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList9 : DXTestControl
	{
		public UIXtraTabControl1TabList9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client9 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client9(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client9 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client9 : DXTestControl
	{
		public UIXtraTabPage1Client9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIPanelControl1Client5 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client5(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client5 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client5 : DXTestControl
	{
		public UIPanelControl1Client5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXColorEdit UIColorEditSampleColorEdit
		{
			get
			{
				if ((this.mUIColorEditSampleColorEdit == null))
				{
					this.mUIColorEditSampleColorEdit = new DXColorEdit(this);
					#region Search Criteria
					this.mUIColorEditSampleColorEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "colorEditSample";
					this.mUIColorEditSampleColorEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorEdit";
					this.mUIColorEditSampleColorEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIColorEditSampleColorEdit;
			}
		}
		#endregion
		#region Fields
		private DXColorEdit mUIColorEditSampleColorEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleComboBoxEditCustom : DXTestControl
	{
		public UIModuleComboBoxEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList10 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList10(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList10 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList10 : DXTestControl
	{
		public UIXtraTabControl1TabList10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client10 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client10(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client10 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client10 : DXTestControl
	{
		public UIXtraTabPage1Client10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIPanelControl1Client6 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client6(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client6 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client6 : DXTestControl
	{
		public UIPanelControl1Client6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditSampleComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditSampleComboBox == null))
				{
					this.mUIComboBoxEditSampleComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "comboBoxEditSample";
					this.mUIComboBoxEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIComboBoxEditSampleComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditSampleComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleMemoExEditCustom : DXTestControl
	{
		public UIModuleMemoExEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleMemoExEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleMemoExEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList11 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList11(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList11 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList11 : DXTestControl
	{
		public UIXtraTabControl1TabList11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client11 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client11(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client11 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client11 : DXTestControl
	{
		public UIXtraTabPage1Client11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client7 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client7(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client7 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client7 : DXTestControl
	{
		public UIPanelControl1Client7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMemoExEditSampleEdit UIMemoExEditSampleEdit
		{
			get
			{
				if ((this.mUIMemoExEditSampleEdit == null))
				{
					this.mUIMemoExEditSampleEdit = new UIMemoExEditSampleEdit(this);
				}
				return this.mUIMemoExEditSampleEdit;
			}
		}
		#endregion
		#region Fields
		private UIMemoExEditSampleEdit mUIMemoExEditSampleEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExEditSampleEdit : DXTextEdit
	{
		public UIMemoExEditSampleEdit(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButton0Button
		{
			get
			{
				if ((this.mUIEditorButton0Button == null))
				{
					this.mUIEditorButton0Button = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSampleButton[0]";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditorButton0Button.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIEditorButton0Button;
			}
		}
		public UIMemoExPopupFormWindow UIMemoExPopupFormWindow
		{
			get
			{
				if ((this.mUIMemoExPopupFormWindow == null))
				{
					this.mUIMemoExPopupFormWindow = new UIMemoExPopupFormWindow(this);
				}
				return this.mUIMemoExPopupFormWindow;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButton0Button;
		private UIMemoExPopupFormWindow mUIMemoExPopupFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExPopupFormWindow : DXWindow
	{
		public UIMemoExPopupFormWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExPopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormMemoEdit[0]";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXButton UISimpleButtonButton1
		{
			get
			{
				if ((this.mUISimpleButtonButton1 == null))
				{
					this.mUISimpleButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormSimpleButton[1]";
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISimpleButtonButton1;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUISimpleButtonButton;
		private DXButton mUISimpleButtonButton1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleDateEditCustom : DXTestControl
	{
		public UIModuleDateEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleDateEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleDateEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList12 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList12(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList12 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList12 : DXTestControl
	{
		public UIXtraTabControl1TabList12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client12 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client12(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client12 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client12 : DXTestControl
	{
		public UIXtraTabPage1Client12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIPanelControl1Client8 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client8(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGroupControl1Client UIGroupControl1Client
		{
			get
			{
				if ((this.mUIGroupControl1Client == null))
				{
					this.mUIGroupControl1Client = new UIGroupControl1Client(this);
				}
				return this.mUIGroupControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client8 mUIPanelControl1Client;
		private UIGroupControl1Client mUIGroupControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client8 : DXTestControl
	{
		public UIPanelControl1Client8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXDateTimePicker UIDateEditSampleDateTimePicker
		{
			get
			{
				if ((this.mUIDateEditSampleDateTimePicker == null))
				{
					this.mUIDateEditSampleDateTimePicker = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUIDateEditSampleDateTimePicker.SearchProperties[DXTestControl.PropertyNames.Name] = "dateEditSample";
					this.mUIDateEditSampleDateTimePicker.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
					this.mUIDateEditSampleDateTimePicker.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIDateEditSampleDateTimePicker;
			}
		}
		#endregion
		#region Fields
		private DXDateTimePicker mUIDateEditSampleDateTimePicker;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl1Client : DXTestControl
	{
		public UIGroupControl1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbShowVistaClockComboBox
		{
			get
			{
				if ((this.mUIIcbShowVistaClockComboBox == null))
				{
					this.mUIIcbShowVistaClockComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbShowVistaClockComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbShowVistaClock";
					this.mUIIcbShowVistaClockComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbShowVistaClockComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIIcbShowVistaClockComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbShowVistaClockComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleImageComboBoxECustom : DXTestControl
	{
		public UIModuleImageComboBoxECustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleImageComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleImageComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList13 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList13(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList13 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList13 : DXTestControl
	{
		public UIXtraTabControl1TabList13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client13 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client13(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client13 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client13 : DXTestControl
	{
		public UIXtraTabPage1Client13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIPanelControl1Client9 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client9(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client9 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client9 : DXTestControl
	{
		public UIPanelControl1Client9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UIImageComboBoxEditSamComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEditSamComboBox == null))
				{
					this.mUIImageComboBoxEditSamComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEditSamComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "imageComboBoxEditSample";
					this.mUIImageComboBoxEditSamComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEditSamComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIImageComboBoxEditSamComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIImageComboBoxEditSamComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModulePopupContainerCustom : DXTestControl
	{
		public UIModulePopupContainerCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModulePopupContainerEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModulePopupContainerEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList14 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList14(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList14 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList14 : DXTestControl
	{
		public UIXtraTabControl1TabList14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client14 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client14(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client14 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client14 : DXTestControl
	{
		public UIXtraTabPage1Client14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client10 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client10(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client10 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client10 : DXTestControl
	{
		public UIPanelControl1Client10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPopupContainerEditSaEdit UIPopupContainerEditSaEdit
		{
			get
			{
				if ((this.mUIPopupContainerEditSaEdit == null))
				{
					this.mUIPopupContainerEditSaEdit = new UIPopupContainerEditSaEdit(this);
				}
				return this.mUIPopupContainerEditSaEdit;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerEditSaEdit mUIPopupContainerEditSaEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerEditSaEdit : DXTextEdit
	{
		public UIPopupContainerEditSaEdit(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButton0Button
		{
			get
			{
				if ((this.mUIEditorButton0Button == null))
				{
					this.mUIEditorButton0Button = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSampleButton[0]";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditorButton0Button.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIEditorButton0Button;
			}
		}
		public UIPopupContainerFormWindow UIPopupContainerFormWindow
		{
			get
			{
				if ((this.mUIPopupContainerFormWindow == null))
				{
					this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow(this);
				}
				return this.mUIPopupContainerFormWindow;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButton0Button;
		private UIPopupContainerFormWindow mUIPopupContainerFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerFormWindow : DXWindow
	{
		public UIPopupContainerFormWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSamplePopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPopupContainerControClient UIPopupContainerControClient
		{
			get
			{
				if ((this.mUIPopupContainerControClient == null))
				{
					this.mUIPopupContainerControClient = new UIPopupContainerControClient(this);
				}
				return this.mUIPopupContainerControClient;
			}
		}
		public DXButton UICloseButtonButton
		{
			get
			{
				if ((this.mUICloseButtonButton == null))
				{
					this.mUICloseButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSamplePopupFormCloseButton[0]";
					this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CloseButton";
					this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICloseButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerControClient mUIPopupContainerControClient;
		private DXButton mUICloseButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerControClient : DXTestControl
	{
		public UIPopupContainerControClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerControlSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		public UISplitGroupPanelClient1 UISplitGroupPanelClient1
		{
			get
			{
				if ((this.mUISplitGroupPanelClient1 == null))
				{
					this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient1(this);
				}
				return this.mUISplitGroupPanelClient1;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient mUISplitGroupPanelClient;
		private UISplitGroupPanelClient1 mUISplitGroupPanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient : DXTestControl
	{
		public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIIlbFontList UIIlbFontList
		{
			get
			{
				if ((this.mUIIlbFontList == null))
				{
					this.mUIIlbFontList = new UIIlbFontList(this);
				}
				return this.mUIIlbFontList;
			}
		}
		#endregion
		#region Fields
		private UIIlbFontList mUIIlbFontList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIIlbFontList : DXListBox
	{
		public UIIlbFontList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ilbFont";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageListBoxControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXScrollBar UIVScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVScrollBarScrollBarControl == null))
				{
					this.mUIVScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "ilbFontVScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIVScrollBarScrollBarControl;
			}
		}
		#endregion
		#region Fields
		private DXScrollBar mUIVScrollBarScrollBarControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient1 : DXTestControl
	{
		public UISplitGroupPanelClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXCheckedListBox UIClbStyleCheckedListBox
		{
			get
			{
				if ((this.mUIClbStyleCheckedListBox == null))
				{
					this.mUIClbStyleCheckedListBox = new DXCheckedListBox(this);
					#region Search Criteria
					this.mUIClbStyleCheckedListBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbStyle";
					this.mUIClbStyleCheckedListBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxControl";
					this.mUIClbStyleCheckedListBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIClbStyleCheckedListBox;
			}
		}
		public DXTextEdit UISeSizeEdit
		{
			get
			{
				if ((this.mUISeSizeEdit == null))
				{
					this.mUISeSizeEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISeSizeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "seSize";
					this.mUISeSizeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISeSizeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISeSizeEdit;
			}
		}
		#endregion
		#region Fields
		private DXCheckedListBox mUIClbStyleCheckedListBox;
		private DXTextEdit mUISeSizeEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleFontEditCustom : DXTestControl
	{
		public UIModuleFontEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleFontEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleFontEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList15 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList15(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList15 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList15 : DXTestControl
	{
		public UIXtraTabControl1TabList15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client15 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client15(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client15 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client15 : DXTestControl
	{
		public UIXtraTabPage1Client15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client11 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client11(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client11 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client11 : DXTestControl
	{
		public UIPanelControl1Client11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXComboBox UIFontEditSampleComboBox
		{
			get
			{
				if ((this.mUIFontEditSampleComboBox == null))
				{
					this.mUIFontEditSampleComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIFontEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "fontEditSample";
					this.mUIFontEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FontEdit";
					this.mUIFontEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFontEditSampleComboBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIFontEditSampleComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIFontEditSampleComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleCheckedComboBoCustom : DXTestControl
	{
		public UIModuleCheckedComboBoCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleCheckedComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleCheckedComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList16 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList16(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList16 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList16 : DXTestControl
	{
		public UIXtraTabControl1TabList16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client16 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client16(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client16 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client16 : DXTestControl
	{
		public UIXtraTabPage1Client16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client12 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client12(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client12 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client12 : DXTestControl
	{
		public UIPanelControl1Client12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXCheckedComboBox UICheckedComboBoxEditSCheckedComboBox
		{
			get
			{
				if ((this.mUICheckedComboBoxEditSCheckedComboBox == null))
				{
					this.mUICheckedComboBoxEditSCheckedComboBox = new DXCheckedComboBox(this);
					#region Search Criteria
					this.mUICheckedComboBoxEditSCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkedComboBoxEditSample";
					this.mUICheckedComboBoxEditSCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedComboBoxEdit";
					this.mUICheckedComboBoxEditSCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICheckedComboBoxEditSCheckedComboBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICheckedComboBoxEditSCheckedComboBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckedComboBox mUICheckedComboBoxEditSCheckedComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleLookUpEditCustom : DXTestControl
	{
		public UIModuleLookUpEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleLookUpEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleLookUpEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList17 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList17(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList17 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList17 : DXTestControl
	{
		public UIXtraTabControl1TabList17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client17 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client17(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client17 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client17 : DXTestControl
	{
		public UIXtraTabPage1Client17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client13 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client13(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client13 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client13 : DXTestControl
	{
		public UIPanelControl1Client13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXPopupEdit UILookUpEdit1PopupEdit
		{
			get
			{
				if ((this.mUILookUpEdit1PopupEdit == null))
				{
					this.mUILookUpEdit1PopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lookUpEdit1";
					this.mUILookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILookUpEdit1PopupEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUILookUpEdit1PopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUILookUpEdit1PopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleMRUEditCustom : DXTestControl
	{
		public UIModuleMRUEditCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleMRUEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleMRUEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList18 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList18(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList18 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList18 : DXTestControl
	{
		public UIXtraTabControl1TabList18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client18 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client18(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client18 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client18 : DXTestControl
	{
		public UIXtraTabPage1Client18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client14 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client14(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client14 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client14 : DXTestControl
	{
		public UIPanelControl1Client14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMRUEdit UIMruEditSampleMRUEdit
		{
			get
			{
				if ((this.mUIMruEditSampleMRUEdit == null))
				{
					this.mUIMruEditSampleMRUEdit = new DXMRUEdit(this);
					#region Search Criteria
					this.mUIMruEditSampleMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "mruEditSample";
					this.mUIMruEditSampleMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MRUEdit";
					this.mUIMruEditSampleMRUEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMruEditSampleMRUEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMruEditSampleMRUEdit;
			}
		}
		#endregion
		#region Fields
		private DXMRUEdit mUIMruEditSampleMRUEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage5TabPage : WinTabPage
	{
		public UIXtraTabPage5TabPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinTabPage.PropertyNames.Name] = "xtraTabPage5";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIListBoxPropertiesWindow UIListBoxPropertiesWindow
		{
			get
			{
				if ((this.mUIListBoxPropertiesWindow == null))
				{
					this.mUIListBoxPropertiesWindow = new UIListBoxPropertiesWindow(this);
				}
				return this.mUIListBoxPropertiesWindow;
			}
		}
		#endregion
		#region Fields
		private UIListBoxPropertiesWindow mUIListBoxPropertiesWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListBoxPropertiesWindow : WinWindow
	{
		public UIListBoxPropertiesWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public WinClient UIListBoxPropertiesClient
		{
			get
			{
				if ((this.mUIListBoxPropertiesClient == null))
				{
					this.mUIListBoxPropertiesClient = new WinClient(this);
					#region Search Criteria
					this.mUIListBoxPropertiesClient.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIListBoxPropertiesClient;
			}
		}
		#endregion
		#region Fields
		private WinClient mUIListBoxPropertiesClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code)";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIGcNavigationsClient UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		public UIPanelControl1Client15 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client15(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIPanelControl1Client17 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client17(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIGcNavigationsClient mUIGcNavigationsClient;
		private UIPanelControl1Client15 mUIPanelControl1Client;
		private UIPanelControl1Client17 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient : DXTestControl
	{
		public UIGcNavigationsClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar : DXTestControl
	{
		public UINavBarControl1NavBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UIHighlightedFeaturesNavBarGroup UIHighlightedFeaturesNavBarGroup
		{
			get
			{
				if ((this.mUIHighlightedFeaturesNavBarGroup == null))
				{
					this.mUIHighlightedFeaturesNavBarGroup = new UIHighlightedFeaturesNavBarGroup(this);
				}
				return this.mUIHighlightedFeaturesNavBarGroup;
			}
		}
		public UILayoutFeaturesNavBarGroup UILayoutFeaturesNavBarGroup
		{
			get
			{
				if ((this.mUILayoutFeaturesNavBarGroup == null))
				{
					this.mUILayoutFeaturesNavBarGroup = new UILayoutFeaturesNavBarGroup(this);
				}
				return this.mUILayoutFeaturesNavBarGroup;
			}
		}
		public UINewUpdatedDemosNavBarGroup UINewUpdatedDemosNavBarGroup
		{
			get
			{
				if ((this.mUINewUpdatedDemosNavBarGroup == null))
				{
					this.mUINewUpdatedDemosNavBarGroup = new UINewUpdatedDemosNavBarGroup(this);
				}
				return this.mUINewUpdatedDemosNavBarGroup;
			}
		}
		public UIEditingNavBarGroup UIEditingNavBarGroup
		{
			get
			{
				if ((this.mUIEditingNavBarGroup == null))
				{
					this.mUIEditingNavBarGroup = new UIEditingNavBarGroup(this);
				}
				return this.mUIEditingNavBarGroup;
			}
		}
		public UIFilteringNavBarGroup UIFilteringNavBarGroup
		{
			get
			{
				if ((this.mUIFilteringNavBarGroup == null))
				{
					this.mUIFilteringNavBarGroup = new UIFilteringNavBarGroup(this);
				}
				return this.mUIFilteringNavBarGroup;
			}
		}
		public UISortingAndGroupingNavBarGroup UISortingAndGroupingNavBarGroup
		{
			get
			{
				if ((this.mUISortingAndGroupingNavBarGroup == null))
				{
					this.mUISortingAndGroupingNavBarGroup = new UISortingAndGroupingNavBarGroup(this);
				}
				return this.mUISortingAndGroupingNavBarGroup;
			}
		}
		public UISummariesNavBarGroup UISummariesNavBarGroup
		{
			get
			{
				if ((this.mUISummariesNavBarGroup == null))
				{
					this.mUISummariesNavBarGroup = new UISummariesNavBarGroup(this);
				}
				return this.mUISummariesNavBarGroup;
			}
		}
		public UIDataBindingNavBarGroup UIDataBindingNavBarGroup
		{
			get
			{
				if ((this.mUIDataBindingNavBarGroup == null))
				{
					this.mUIDataBindingNavBarGroup = new UIDataBindingNavBarGroup(this);
				}
				return this.mUIDataBindingNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIHighlightedFeaturesNavBarGroup mUIHighlightedFeaturesNavBarGroup;
		private UILayoutFeaturesNavBarGroup mUILayoutFeaturesNavBarGroup;
		private UINewUpdatedDemosNavBarGroup mUINewUpdatedDemosNavBarGroup;
		private UIEditingNavBarGroup mUIEditingNavBarGroup;
		private UIFilteringNavBarGroup mUIFilteringNavBarGroup;
		private UISortingAndGroupingNavBarGroup mUISortingAndGroupingNavBarGroup;
		private UISummariesNavBarGroup mUISummariesNavBarGroup;
		private UIDataBindingNavBarGroup mUIDataBindingNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIHighlightedFeaturesNavBarGroup : DXTestControl
	{
		public UIHighlightedFeaturesNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Highlighted Features";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIAlternateViewsNavBarLink
		{
			get
			{
				if ((this.mUIAlternateViewsNavBarLink == null))
				{
					this.mUIAlternateViewsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIAlternateViewsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Banded Views";
					this.mUIAlternateViewsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIAlternateViewsNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAlternateViewsNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIAlternateViewsNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAlternateViewsNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutFeaturesNavBarGroup : DXTestControl
	{
		public UILayoutFeaturesNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UI Customization";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UITableLayoutNavBarLink
		{
			get
			{
				if ((this.mUITableLayoutNavBarLink == null))
				{
					this.mUITableLayoutNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUITableLayoutNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Table Layout";
					this.mUITableLayoutNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUITableLayoutNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITableLayoutNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUITableLayoutNavBarLink;
			}
		}
		public DXTestControl UIFixedBandsNavBarLink
		{
			get
			{
				if ((this.mUIFixedBandsNavBarLink == null))
				{
					this.mUIFixedBandsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIFixedBandsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Fixed Bands";
					this.mUIFixedBandsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIFixedBandsNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFixedBandsNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIFixedBandsNavBarLink;
			}
		}
		public DXTestControl UIFixedColumnsNavBarLink
		{
			get
			{
				if ((this.mUIFixedColumnsNavBarLink == null))
				{
					this.mUIFixedColumnsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIFixedColumnsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Fixed Columns";
					this.mUIFixedColumnsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIFixedColumnsNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFixedColumnsNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIFixedColumnsNavBarLink;
			}
		}
		public DXTestControl UIAutoRowHeightNavBarLink
		{
			get
			{
				if ((this.mUIAutoRowHeightNavBarLink == null))
				{
					this.mUIAutoRowHeightNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIAutoRowHeightNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Auto Row Height";
					this.mUIAutoRowHeightNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIAutoRowHeightNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAutoRowHeightNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIAutoRowHeightNavBarLink;
			}
		}
		public DXTestControl UIColumnCustomizationNavBarLink
		{
			get
			{
				if ((this.mUIColumnCustomizationNavBarLink == null))
				{
					this.mUIColumnCustomizationNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIColumnCustomizationNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Column Customization";
					this.mUIColumnCustomizationNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIColumnCustomizationNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColumnCustomizationNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIColumnCustomizationNavBarLink;
			}
		}
		public DXTestControl UICellSelectionNavBarLink
		{
			get
			{
				if ((this.mUICellSelectionNavBarLink == null))
				{
					this.mUICellSelectionNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICellSelectionNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Cell Selection";
					this.mUICellSelectionNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICellSelectionNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICellSelectionNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUICellSelectionNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUITableLayoutNavBarLink;
		private DXTestControl mUIFixedBandsNavBarLink;
		private DXTestControl mUIFixedColumnsNavBarLink;
		private DXTestControl mUIAutoRowHeightNavBarLink;
		private DXTestControl mUIColumnCustomizationNavBarLink;
		private DXTestControl mUICellSelectionNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewUpdatedDemosNavBarGroup : DXTestControl
	{
		public UINewUpdatedDemosNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "New & Updated Demos";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UISplitPresentationnewNavBarLink
		{
			get
			{
				if ((this.mUISplitPresentationnewNavBarLink == null))
				{
					this.mUISplitPresentationnewNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISplitPresentationnewNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Split Presentation View (new)";
					this.mUISplitPresentationnewNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISplitPresentationnewNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISplitPresentationnewNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUISplitPresentationnewNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUISplitPresentationnewNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditingNavBarGroup : DXTestControl
	{
		public UIEditingNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Editing";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIGridLookUpEditorNavBarLink
		{
			get
			{
				if ((this.mUIGridLookUpEditorNavBarLink == null))
				{
					this.mUIGridLookUpEditorNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridLookUpEditorNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Extended Lookup Editor";
					this.mUIGridLookUpEditorNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIGridLookUpEditorNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridLookUpEditorNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIGridLookUpEditorNavBarLink;
			}
		}
		public DXTestControl UISearchLookUpEditorNavBarLink
		{
			get
			{
				if ((this.mUISearchLookUpEditorNavBarLink == null))
				{
					this.mUISearchLookUpEditorNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISearchLookUpEditorNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Extended Lookup Editor (with search)";
					this.mUISearchLookUpEditorNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISearchLookUpEditorNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISearchLookUpEditorNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUISearchLookUpEditorNavBarLink;
			}
		}
		public DXTestControl UIMultiEditorsIListbouNavBarLink
		{
			get
			{
				if ((this.mUIMultiEditorsIListbouNavBarLink == null))
				{
					this.mUIMultiEditorsIListbouNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMultiEditorsIListbouNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Dynamically Assigned Editors";
					this.mUIMultiEditorsIListbouNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMultiEditorsIListbouNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMultiEditorsIListbouNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIMultiEditorsIListbouNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIGridLookUpEditorNavBarLink;
		private DXTestControl mUISearchLookUpEditorNavBarLink;
		private DXTestControl mUIMultiEditorsIListbouNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilteringNavBarGroup : DXTestControl
	{
		public UIFilteringNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Filtering";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIAutoFilterRowNavBarLink
		{
			get
			{
				if ((this.mUIAutoFilterRowNavBarLink == null))
				{
					this.mUIAutoFilterRowNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIAutoFilterRowNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Auto Filter Row";
					this.mUIAutoFilterRowNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIAutoFilterRowNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAutoFilterRowNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIAutoFilterRowNavBarLink;
			}
		}
		public DXTestControl UIFindPanelNavBarLink
		{
			get
			{
				if ((this.mUIFindPanelNavBarLink == null))
				{
					this.mUIFindPanelNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIFindPanelNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Find Panel";
					this.mUIFindPanelNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIFindPanelNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFindPanelNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIFindPanelNavBarLink;
			}
		}
		public DXTestControl UIDataFilteringNavBarLink
		{
			get
			{
				if ((this.mUIDataFilteringNavBarLink == null))
				{
					this.mUIDataFilteringNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIDataFilteringNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Filtering";
					this.mUIDataFilteringNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIDataFilteringNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDataFilteringNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIDataFilteringNavBarLink;
			}
		}
		public DXTestControl UIFilterControlNavBarLink
		{
			get
			{
				if ((this.mUIFilterControlNavBarLink == null))
				{
					this.mUIFilterControlNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIFilterControlNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Filter Control";
					this.mUIFilterControlNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIFilterControlNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFilterControlNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIFilterControlNavBarLink;
			}
		}
		public DXTestControl UIFormatConditionsNavBarLink
		{
			get
			{
				if ((this.mUIFormatConditionsNavBarLink == null))
				{
					this.mUIFormatConditionsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIFormatConditionsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Conditional Formatting (Cell Values and Expressions)";
					this.mUIFormatConditionsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIFormatConditionsNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFormatConditionsNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIFormatConditionsNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAutoFilterRowNavBarLink;
		private DXTestControl mUIFindPanelNavBarLink;
		private DXTestControl mUIDataFilteringNavBarLink;
		private DXTestControl mUIFilterControlNavBarLink;
		private DXTestControl mUIFormatConditionsNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISortingAndGroupingNavBarGroup : DXTestControl
	{
		public UISortingAndGroupingNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Shaping";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIGroupIntervalNavBarLink
		{
			get
			{
				if ((this.mUIGroupIntervalNavBarLink == null))
				{
					this.mUIGroupIntervalNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIGroupIntervalNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Group Intervals";
					this.mUIGroupIntervalNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIGroupIntervalNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGroupIntervalNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIGroupIntervalNavBarLink;
			}
		}
		public DXTestControl UIMasterDetailGroupingNavBarLink
		{
			get
			{
				if ((this.mUIMasterDetailGroupingNavBarLink == null))
				{
					this.mUIMasterDetailGroupingNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMasterDetailGroupingNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Master-Detail Grouping";
					this.mUIMasterDetailGroupingNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMasterDetailGroupingNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMasterDetailGroupingNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIMasterDetailGroupingNavBarLink;
			}
		}
		public DXTestControl UIMultipleValuesGroupiNavBarLink
		{
			get
			{
				if ((this.mUIMultipleValuesGroupiNavBarLink == null))
				{
					this.mUIMultipleValuesGroupiNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMultipleValuesGroupiNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Grouping against Multiple Values";
					this.mUIMultipleValuesGroupiNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMultipleValuesGroupiNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMultipleValuesGroupiNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIMultipleValuesGroupiNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIGroupIntervalNavBarLink;
		private DXTestControl mUIMasterDetailGroupingNavBarLink;
		private DXTestControl mUIMultipleValuesGroupiNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISummariesNavBarGroup : DXTestControl
	{
		public UISummariesNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Summary Computation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UISortingbySummaryNavBarLink
		{
			get
			{
				if ((this.mUISortingbySummaryNavBarLink == null))
				{
					this.mUISortingbySummaryNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISortingbySummaryNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Sorting by Summary Values";
					this.mUISortingbySummaryNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISortingbySummaryNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISortingbySummaryNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUISortingbySummaryNavBarLink;
			}
		}
		public DXTestControl UIDataSummariesNavBarLink
		{
			get
			{
				if ((this.mUIDataSummariesNavBarLink == null))
				{
					this.mUIDataSummariesNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIDataSummariesNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Summaries and Aggregates";
					this.mUIDataSummariesNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIDataSummariesNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDataSummariesNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIDataSummariesNavBarLink;
			}
		}
		public DXTestControl UICustomSummaryNavBarLink
		{
			get
			{
				if ((this.mUICustomSummaryNavBarLink == null))
				{
					this.mUICustomSummaryNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICustomSummaryNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom Summaries";
					this.mUICustomSummaryNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICustomSummaryNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICustomSummaryNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUICustomSummaryNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUISortingbySummaryNavBarLink;
		private DXTestControl mUIDataSummariesNavBarLink;
		private DXTestControl mUICustomSummaryNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDataBindingNavBarGroup : DXTestControl
	{
		public UIDataBindingNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Binding";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIUnboundExpressionsNavBarLink
		{
			get
			{
				if ((this.mUIUnboundExpressionsNavBarLink == null))
				{
					this.mUIUnboundExpressionsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIUnboundExpressionsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Unbound Expressions";
					this.mUIUnboundExpressionsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIUnboundExpressionsNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIUnboundExpressionsNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIUnboundExpressionsNavBarLink;
			}
		}
		public DXTestControl UISpreadSheetNavBarLink
		{
			get
			{
				if ((this.mUISpreadSheetNavBarLink == null))
				{
					this.mUISpreadSheetNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISpreadSheetNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Spreadsheet";
					this.mUISpreadSheetNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISpreadSheetNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpreadSheetNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUISpreadSheetNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIUnboundExpressionsNavBarLink;
		private DXTestControl mUISpreadSheetNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client15 : DXTestControl
	{
		public UIPanelControl1Client15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIGcContainerClient1 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient1(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient1 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient1 : DXTestControl
	{
		public UIGcContainerClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIViewStylesCustom UIViewStylesCustom
		{
			get
			{
				if ((this.mUIViewStylesCustom == null))
				{
					this.mUIViewStylesCustom = new UIViewStylesCustom(this);
				}
				return this.mUIViewStylesCustom;
			}
		}
		#endregion
		#region Fields
		private UIViewStylesCustom mUIViewStylesCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIViewStylesCustom : DXTestControl
	{
		public UIViewStylesCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewStyles";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewStyles";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client16 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client16(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGridControl1Table UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client16 mUIPanelControl1Client;
		private UIGridControl1Table mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client16 : DXTestControl
	{
		public UIPanelControl1Client16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public DXCheckButton UIChGridCheckButton
		{
			get
			{
				if ((this.mUIChGridCheckButton == null))
				{
					this.mUIChGridCheckButton = new DXCheckButton(this);
					#region Search Criteria
					this.mUIChGridCheckButton.SearchProperties[DXTestControl.PropertyNames.Name] = "chGrid";
					this.mUIChGridCheckButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckButton";
					this.mUIChGridCheckButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChGridCheckButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIChGridCheckButton;
			}
		}
		public DXCheckButton UIChBandedCheckButton
		{
			get
			{
				if ((this.mUIChBandedCheckButton == null))
				{
					this.mUIChBandedCheckButton = new DXCheckButton(this);
					#region Search Criteria
					this.mUIChBandedCheckButton.SearchProperties[DXTestControl.PropertyNames.Name] = "chBanded";
					this.mUIChBandedCheckButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckButton";
					this.mUIChBandedCheckButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChBandedCheckButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIChBandedCheckButton;
			}
		}
		#endregion
		#region Fields
		private DXCheckButton mUIChGridCheckButton;
		private DXCheckButton mUIChBandedCheckButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table : DXGrid
	{
		public UIGridControl1Table(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIColModel2ColumnHeader
		{
			get
			{
				if ((this.mUIColModel2ColumnHeader == null))
				{
					this.mUIColModel2ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColModel2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colModel2";
					this.mUIColModel2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColModel2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColModel2ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIColModel2ColumnHeader;
			}
		}
		public DXColumnHeader UIColTrademark2ColumnHeader
		{
			get
			{
				if ((this.mUIColTrademark2ColumnHeader == null))
				{
					this.mUIColTrademark2ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColTrademark2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colTrademark2";
					this.mUIColTrademark2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColTrademark2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColTrademark2ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIColTrademark2ColumnHeader;
			}
		}
		public UICustomizationFormWindow UICustomizationFormWindow
		{
			get
			{
				if ((this.mUICustomizationFormWindow == null))
				{
					this.mUICustomizationFormWindow = new UICustomizationFormWindow(this);
				}
				return this.mUICustomizationFormWindow;
			}
		}
		public DXColumnHeader UIColIDColumnHeader
		{
			get
			{
				if ((this.mUIColIDColumnHeader == null))
				{
					this.mUIColIDColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColIDColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colID";
					this.mUIColIDColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColIDColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColIDColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIColIDColumnHeader;
			}
		}
		public DXGridBand UIGridBand4GridBand
		{
			get
			{
				if ((this.mUIGridBand4GridBand == null))
				{
					this.mUIGridBand4GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]bandedGridView1[BandName]gridBand4";
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand4GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGridBand4GridBand;
			}
		}
		public DXGridBand UIGridBand5GridBand
		{
			get
			{
				if ((this.mUIGridBand5GridBand == null))
				{
					this.mUIGridBand5GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand5GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]bandedGridView1[BandName]gridBand5";
					this.mUIGridBand5GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand5GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand5GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGridBand5GridBand;
			}
		}
		public DXGridBand UIGridBand2GridBand
		{
			get
			{
				if ((this.mUIGridBand2GridBand == null))
				{
					this.mUIGridBand2GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand2GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gridBand2";
					this.mUIGridBand2GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand2GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand2GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGridBand2GridBand;
			}
		}
		public DXGridBand UIGridBand1GridBand
		{
			get
			{
				if ((this.mUIGridBand1GridBand == null))
				{
					this.mUIGridBand1GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gridBand1";
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand1GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGridBand1GridBand;
			}
		}
		public DXGridBand UIGridBand3GridBand
		{
			get
			{
				if ((this.mUIGridBand3GridBand == null))
				{
					this.mUIGridBand3GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand3GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gridBand3";
					this.mUIGridBand3GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand3GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand3GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGridBand3GridBand;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIColModel2ColumnHeader;
		private DXColumnHeader mUIColTrademark2ColumnHeader;
		private UICustomizationFormWindow mUICustomizationFormWindow;
		private DXColumnHeader mUIColIDColumnHeader;
		private DXGridBand mUIGridBand4GridBand;
		private DXGridBand mUIGridBand5GridBand;
		private DXGridBand mUIGridBand2GridBand;
		private DXGridBand mUIGridBand1GridBand;
		private DXGridBand mUIGridBand3GridBand;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomizationFormWindow : DXWindow
	{
		public UICustomizationFormWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]gridView1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomizationForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIColumnCustomizationLList UIColumnCustomizationLList
		{
			get
			{
				if ((this.mUIColumnCustomizationLList == null))
				{
					this.mUIColumnCustomizationLList = new UIColumnCustomizationLList(this);
				}
				return this.mUIColumnCustomizationLList;
			}
		}
		#endregion
		#region Fields
		private UIColumnCustomizationLList mUIColumnCustomizationLList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIColumnCustomizationLList : DXListBox
	{
		public UIColumnCustomizationLList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]gridView1ColumnCustomizationListBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColumnCustomizationListBox";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public DXListBoxItem UIColumnCustomizationLListItem
		{
			get
			{
				if ((this.mUIColumnCustomizationLListItem == null))
				{
					this.mUIColumnCustomizationLListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIColumnCustomizationLListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ColumnCustomizationListBoxItem[View]gridView1[Column]colID";
					this.mUIColumnCustomizationLListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColumnCustomizationListBoxItem";
					this.mUIColumnCustomizationLListItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColumnCustomizationLListItem.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIColumnCustomizationLListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUIColumnCustomizationLListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client17 : DXTestControl
	{
		public UIPanelControl1Client17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient2 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient2(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient2 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient2 : DXTestControl
	{
		public UIGcContainerClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UIAboutCustom UIAboutCustom
		{
			get
			{
				if ((this.mUIAboutCustom == null))
				{
					this.mUIAboutCustom = new UIAboutCustom(this);
				}
				return this.mUIAboutCustom;
			}
		}
		#endregion
		#region Fields
		private UIAboutCustom mUIAboutCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAboutCustom : DXTestControl
	{
		public UIAboutCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "About";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "About";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom : DXTestControl
	{
		public UILayoutControl1Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
		{
			get
			{
				if ((this.mUILayoutControlGroup1LayoutGroup == null))
				{
					this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
				}
				return this.mUILayoutControlGroup1LayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
	{
		public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControlItem7LayoutControlItem UILayoutControlItem7LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem7LayoutControlItem == null))
				{
					this.mUILayoutControlItem7LayoutControlItem = new UILayoutControlItem7LayoutControlItem(this);
				}
				return this.mUILayoutControlItem7LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem7LayoutControlItem mUILayoutControlItem7LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem7LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem7LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem7";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UIPcRunButtonClient UIPcRunButtonClient
		{
			get
			{
				if ((this.mUIPcRunButtonClient == null))
				{
					this.mUIPcRunButtonClient = new UIPcRunButtonClient(this);
				}
				return this.mUIPcRunButtonClient;
			}
		}
		#endregion
		#region Fields
		private UIPcRunButtonClient mUIPcRunButtonClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPcRunButtonClient : DXTestControl
	{
		public UIPcRunButtonClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcRunButton";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UIOverviewButtonCustom UIOverviewButtonCustom
		{
			get
			{
				if ((this.mUIOverviewButtonCustom == null))
				{
					this.mUIOverviewButtonCustom = new UIOverviewButtonCustom(this);
				}
				return this.mUIOverviewButtonCustom;
			}
		}
		#endregion
		#region Fields
		private UIOverviewButtonCustom mUIOverviewButtonCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIOverviewButtonCustom : DXTestControl
	{
		public UIOverviewButtonCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcRunButtonOverviewButton[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "OverviewButton";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public WinClient UIPcRunButtonClient
		{
			get
			{
				if ((this.mUIPcRunButtonClient == null))
				{
					this.mUIPcRunButtonClient = new WinClient(this);
					#region Search Criteria
					this.mUIPcRunButtonClient.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIPcRunButtonClient;
			}
		}
		#endregion
		#region Fields
		private WinClient mUIPcRunButtonClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow : WinWindow
	{
		public UIItemWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
			this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
			#endregion
		}
		#region Properties
		public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu == null))
				{
					this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
				}
				return this.mUIPopupMenuBarControlMenu;
			}
		}
		public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu1
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu1 == null))
				{
					this.mUIPopupMenuBarControlMenu1 = new UIPopupMenuBarControlMenu1(this);
				}
				return this.mUIPopupMenuBarControlMenu1;
			}
		}
		public UIPopupMenuBarControlMenu2 UIPopupMenuBarControlMenu2
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu2 == null))
				{
					this.mUIPopupMenuBarControlMenu2 = new UIPopupMenuBarControlMenu2(this);
				}
				return this.mUIPopupMenuBarControlMenu2;
			}
		}
		public UIPopupMenuBarControlMenu3 UIPopupMenuBarControlMenu3
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu3 == null))
				{
					this.mUIPopupMenuBarControlMenu3 = new UIPopupMenuBarControlMenu3(this);
				}
				return this.mUIPopupMenuBarControlMenu3;
			}
		}
		public UIPopupMenuBarControlMenu4 UIPopupMenuBarControlMenu4
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu4 == null))
				{
					this.mUIPopupMenuBarControlMenu4 = new UIPopupMenuBarControlMenu4(this);
				}
				return this.mUIPopupMenuBarControlMenu4;
			}
		}
		public UIPopupMenuBarControlMenu5 UIPopupMenuBarControlMenu5
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu5 == null))
				{
					this.mUIPopupMenuBarControlMenu5 = new UIPopupMenuBarControlMenu5(this);
				}
				return this.mUIPopupMenuBarControlMenu5;
			}
		}
		public UIPopupMenuBarControlMenu6 UIPopupMenuBarControlMenu6
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu6 == null))
				{
					this.mUIPopupMenuBarControlMenu6 = new UIPopupMenuBarControlMenu6(this);
				}
				return this.mUIPopupMenuBarControlMenu6;
			}
		}
		public UIPopupMenuBarControlMenu7 UIPopupMenuBarControlMenu7
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu7 == null))
				{
					this.mUIPopupMenuBarControlMenu7 = new UIPopupMenuBarControlMenu7(this);
				}
				return this.mUIPopupMenuBarControlMenu7;
			}
		}
		public UIAlertFormWindow UIAlertFormWindow
		{
			get
			{
				if ((this.mUIAlertFormWindow == null))
				{
					this.mUIAlertFormWindow = new UIAlertFormWindow(this);
				}
				return this.mUIAlertFormWindow;
			}
		}
		public UICustomPopupBarControMenu UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		public UIGalleryDropDownBarCoMenu UIGalleryDropDownBarCoMenu
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu == null))
				{
					this.mUIGalleryDropDownBarCoMenu = new UIGalleryDropDownBarCoMenu(this);
				}
				return this.mUIGalleryDropDownBarCoMenu;
			}
		}
		public UIGalleryDropDownBarCoMenu1 UIGalleryDropDownBarCoMenu1
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu1 == null))
				{
					this.mUIGalleryDropDownBarCoMenu1 = new UIGalleryDropDownBarCoMenu1(this);
				}
				return this.mUIGalleryDropDownBarCoMenu1;
			}
		}
		public UIGalleryDropDownBarCoMenu2 UIGalleryDropDownBarCoMenu2
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu2 == null))
				{
					this.mUIGalleryDropDownBarCoMenu2 = new UIGalleryDropDownBarCoMenu2(this);
				}
				return this.mUIGalleryDropDownBarCoMenu2;
			}
		}
		public UIGalleryDropDownBarCoMenu3 UIGalleryDropDownBarCoMenu3
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu3 == null))
				{
					this.mUIGalleryDropDownBarCoMenu3 = new UIGalleryDropDownBarCoMenu3(this);
				}
				return this.mUIGalleryDropDownBarCoMenu3;
			}
		}
		public UIGalleryDropDownBarCoMenu4 UIGalleryDropDownBarCoMenu4
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu4 == null))
				{
					this.mUIGalleryDropDownBarCoMenu4 = new UIGalleryDropDownBarCoMenu4(this);
				}
				return this.mUIGalleryDropDownBarCoMenu4;
			}
		}
		public UIGalleryDropDownBarCoMenu5 UIGalleryDropDownBarCoMenu5
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu5 == null))
				{
					this.mUIGalleryDropDownBarCoMenu5 = new UIGalleryDropDownBarCoMenu5(this);
				}
				return this.mUIGalleryDropDownBarCoMenu5;
			}
		}
		public UIPopupContainerFormCustom UIPopupContainerFormCustom
		{
			get
			{
				if ((this.mUIPopupContainerFormCustom == null))
				{
					this.mUIPopupContainerFormCustom = new UIPopupContainerFormCustom(this);
				}
				return this.mUIPopupContainerFormCustom;
			}
		}
		public UIItemWindow1 UIItemWindow1
		{
			get
			{
				if ((this.mUIItemWindow1 == null))
				{
					this.mUIItemWindow1 = new UIItemWindow1(this);
				}
				return this.mUIItemWindow1;
			}
		}
		public UIPopupMenuBarControlMenu8 UIPopupMenuBarControlMenu8
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu8 == null))
				{
					this.mUIPopupMenuBarControlMenu8 = new UIPopupMenuBarControlMenu8(this);
				}
				return this.mUIPopupMenuBarControlMenu8;
			}
		}
		public UICustomPopupBarControMenu11 UICustomPopupBarControMenu1
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu1 == null))
				{
					this.mUICustomPopupBarControMenu1 = new UICustomPopupBarControMenu11(this);
				}
				return this.mUICustomPopupBarControMenu1;
			}
		}
		public UIGalleryDropDownBarCoMenu6 UIGalleryDropDownBarCoMenu6
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu6 == null))
				{
					this.mUIGalleryDropDownBarCoMenu6 = new UIGalleryDropDownBarCoMenu6(this);
				}
				return this.mUIGalleryDropDownBarCoMenu6;
			}
		}
		public UIPopupContainerFormCustom1 UIPopupContainerFormCustom1
		{
			get
			{
				if ((this.mUIPopupContainerFormCustom1 == null))
				{
					this.mUIPopupContainerFormCustom1 = new UIPopupContainerFormCustom1(this);
				}
				return this.mUIPopupContainerFormCustom1;
			}
		}
		public UISubMenuBarControlMenu UISubMenuBarControlMenu
		{
			get
			{
				if ((this.mUISubMenuBarControlMenu == null))
				{
					this.mUISubMenuBarControlMenu = new UISubMenuBarControlMenu(this);
				}
				return this.mUISubMenuBarControlMenu;
			}
		}
		public UIMinimizedRibbonPopupCustom UIMinimizedRibbonPopupCustom
		{
			get
			{
				if ((this.mUIMinimizedRibbonPopupCustom == null))
				{
					this.mUIMinimizedRibbonPopupCustom = new UIMinimizedRibbonPopupCustom(this);
				}
				return this.mUIMinimizedRibbonPopupCustom;
			}
		}
		public UIRibbonMinimizedGroupCustom UIRibbonMinimizedGroupCustom
		{
			get
			{
				if ((this.mUIRibbonMinimizedGroupCustom == null))
				{
					this.mUIRibbonMinimizedGroupCustom = new UIRibbonMinimizedGroupCustom(this);
				}
				return this.mUIRibbonMinimizedGroupCustom;
			}
		}
		public UIRibbonQuickToolbarPoCustom UIRibbonQuickToolbarPoCustom
		{
			get
			{
				if ((this.mUIRibbonQuickToolbarPoCustom == null))
				{
					this.mUIRibbonQuickToolbarPoCustom = new UIRibbonQuickToolbarPoCustom(this);
				}
				return this.mUIRibbonQuickToolbarPoCustom;
			}
		}
		public UIBarDockControlCustom UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIBarDockControlCustom1 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom1(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		public UIPcMainClient1 UIPcMainClient
		{
			get
			{
				if ((this.mUIPcMainClient == null))
				{
					this.mUIPcMainClient = new UIPcMainClient1(this);
				}
				return this.mUIPcMainClient;
			}
		}
		public UIPanelControl1Client18 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client18(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIXtraMessageBoxFormWindow UIXtraMessageBoxFormWindow
		{
			get
			{
				if ((this.mUIXtraMessageBoxFormWindow == null))
				{
					this.mUIXtraMessageBoxFormWindow = new UIXtraMessageBoxFormWindow(this);
				}
				return this.mUIXtraMessageBoxFormWindow;
			}
		}
		public UIPopupMenuBarControlMenu11 UIPopupMenuBarControlMenu11
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu11 == null))
				{
					this.mUIPopupMenuBarControlMenu11 = new UIPopupMenuBarControlMenu11(this);
				}
				return this.mUIPopupMenuBarControlMenu11;
			}
		}
		public UIPopupMenuBarControlMenu21 UIPopupMenuBarControlMenu21
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu21 == null))
				{
					this.mUIPopupMenuBarControlMenu21 = new UIPopupMenuBarControlMenu21(this);
				}
				return this.mUIPopupMenuBarControlMenu21;
			}
		}
		public UIPopupMenuBarControlMenu31 UIPopupMenuBarControlMenu31
		{
			get
			{
				if ((this.mUIPopupMenuBarControlMenu31 == null))
				{
					this.mUIPopupMenuBarControlMenu31 = new UIPopupMenuBarControlMenu31(this);
				}
				return this.mUIPopupMenuBarControlMenu31;
			}
		}
		public UIButtonClickWindow UIButtonClickWindow
		{
			get
			{
				if ((this.mUIButtonClickWindow == null))
				{
					this.mUIButtonClickWindow = new UIButtonClickWindow(this);
				}
				return this.mUIButtonClickWindow;
			}
		}
		public UIItemWindow11 UIItemWindow11
		{
			get
			{
				if ((this.mUIItemWindow11 == null))
				{
					this.mUIItemWindow11 = new UIItemWindow11(this);
				}
				return this.mUIItemWindow11;
			}
		}
		public UIPopupContainerBarConMenu1 UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu1(this);
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
		private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu1;
		private UIPopupMenuBarControlMenu2 mUIPopupMenuBarControlMenu2;
		private UIPopupMenuBarControlMenu3 mUIPopupMenuBarControlMenu3;
		private UIPopupMenuBarControlMenu4 mUIPopupMenuBarControlMenu4;
		private UIPopupMenuBarControlMenu5 mUIPopupMenuBarControlMenu5;
		private UIPopupMenuBarControlMenu6 mUIPopupMenuBarControlMenu6;
		private UIPopupMenuBarControlMenu7 mUIPopupMenuBarControlMenu7;
		private UIAlertFormWindow mUIAlertFormWindow;
		private UICustomPopupBarControMenu mUICustomPopupBarControMenu;
		private UIGalleryDropDownBarCoMenu mUIGalleryDropDownBarCoMenu;
		private UIGalleryDropDownBarCoMenu1 mUIGalleryDropDownBarCoMenu1;
		private UIGalleryDropDownBarCoMenu2 mUIGalleryDropDownBarCoMenu2;
		private UIGalleryDropDownBarCoMenu3 mUIGalleryDropDownBarCoMenu3;
		private UIGalleryDropDownBarCoMenu4 mUIGalleryDropDownBarCoMenu4;
		private UIGalleryDropDownBarCoMenu5 mUIGalleryDropDownBarCoMenu5;
		private UIPopupContainerFormCustom mUIPopupContainerFormCustom;
		private UIItemWindow1 mUIItemWindow1;
		private UIPopupMenuBarControlMenu8 mUIPopupMenuBarControlMenu8;
		private UICustomPopupBarControMenu11 mUICustomPopupBarControMenu1;
		private UIGalleryDropDownBarCoMenu6 mUIGalleryDropDownBarCoMenu6;
		private UIPopupContainerFormCustom1 mUIPopupContainerFormCustom1;
		private UISubMenuBarControlMenu mUISubMenuBarControlMenu;
		private UIMinimizedRibbonPopupCustom mUIMinimizedRibbonPopupCustom;
		private UIRibbonMinimizedGroupCustom mUIRibbonMinimizedGroupCustom;
		private UIRibbonQuickToolbarPoCustom mUIRibbonQuickToolbarPoCustom;
		private UIBarDockControlCustom mUIBarDockControlCustom;
		private UIBarDockControlCustom1 mUIBarDockControlCustom1;
		private UIPcMainClient1 mUIPcMainClient;
		private UIPanelControl1Client18 mUIPanelControl1Client;
		private UIXtraMessageBoxFormWindow mUIXtraMessageBoxFormWindow;
		private UIPopupMenuBarControlMenu11 mUIPopupMenuBarControlMenu11;
		private UIPopupMenuBarControlMenu21 mUIPopupMenuBarControlMenu21;
		private UIPopupMenuBarControlMenu31 mUIPopupMenuBarControlMenu31;
		private UIButtonClickWindow mUIButtonClickWindow;
		private UIItemWindow11 mUIItemWindow11;
		private UIPopupContainerBarConMenu1 mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu : DXMenu
	{
		public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIColumnChooserMenuItem
		{
			get
			{
				if ((this.mUIColumnChooserMenuItem == null))
				{
					this.mUIColumnChooserMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIColumnChooserMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Column Chooser";
					this.mUIColumnChooserMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIColumnChooserMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIColumnChooserMenuItem;
			}
		}
		public DXMenuItem UIRemoveThisColumnMenuItem
		{
			get
			{
				if ((this.mUIRemoveThisColumnMenuItem == null))
				{
					this.mUIRemoveThisColumnMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRemoveThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Remove This Column";
					this.mUIRemoveThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIRemoveThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIRemoveThisColumnMenuItem;
			}
		}
		public DXMenuItem UIBestFitMenuItem
		{
			get
			{
				if ((this.mUIBestFitMenuItem == null))
				{
					this.mUIBestFitMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBestFitMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Best Fit";
					this.mUIBestFitMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIBestFitMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIBestFitMenuItem;
			}
		}
		public DXMenuItem UIGroupByThisColumnMenuItem
		{
			get
			{
				if ((this.mUIGroupByThisColumnMenuItem == null))
				{
					this.mUIGroupByThisColumnMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIGroupByThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Group By This Column";
					this.mUIGroupByThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIGroupByThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIGroupByThisColumnMenuItem;
			}
		}
		public DXMenuItem UIUnGroupMenuItem
		{
			get
			{
				if ((this.mUIUnGroupMenuItem == null))
				{
					this.mUIUnGroupMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIUnGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "UnGroup";
					this.mUIUnGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIUnGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIUnGroupMenuItem;
			}
		}
		public DXMenuItem UIClearGroupingMenuItem
		{
			get
			{
				if ((this.mUIClearGroupingMenuItem == null))
				{
					this.mUIClearGroupingMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIClearGroupingMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Clear Grouping";
					this.mUIClearGroupingMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIClearGroupingMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIClearGroupingMenuItem;
			}
		}
		public DXMenuItem UISortAscendingMenuItem
		{
			get
			{
				if ((this.mUISortAscendingMenuItem == null))
				{
					this.mUISortAscendingMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUISortAscendingMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Sort Ascending";
					this.mUISortAscendingMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUISortAscendingMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISortAscendingMenuItem;
			}
		}
		public DXMenuItem UISortDescendingMenuItem
		{
			get
			{
				if ((this.mUISortDescendingMenuItem == null))
				{
					this.mUISortDescendingMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUISortDescendingMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Sort Descending";
					this.mUISortDescendingMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUISortDescendingMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISortDescendingMenuItem;
			}
		}
		public DXMenuItem UIClearFilterMenuItem
		{
			get
			{
				if ((this.mUIClearFilterMenuItem == null))
				{
					this.mUIClearFilterMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIClearFilterMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Clear Filter";
					this.mUIClearFilterMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIClearFilterMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIClearFilterMenuItem;
			}
		}
		public DXMenuItem UIFilterEditorMenuItem
		{
			get
			{
				if ((this.mUIFilterEditorMenuItem == null))
				{
					this.mUIFilterEditorMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIFilterEditorMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Filter Editor...";
					this.mUIFilterEditorMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIFilterEditorMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFilterEditorMenuItem;
			}
		}
		public DXMenuItem UINotFixedMenuItem
		{
			get
			{
				if ((this.mUINotFixedMenuItem == null))
				{
					this.mUINotFixedMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUINotFixedMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Not Fixed";
					this.mUINotFixedMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUINotFixedMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUINotFixedMenuItem;
			}
		}
		public DXMenuItem UIFixedLeftMenuItem
		{
			get
			{
				if ((this.mUIFixedLeftMenuItem == null))
				{
					this.mUIFixedLeftMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIFixedLeftMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Fixed Left";
					this.mUIFixedLeftMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIFixedLeftMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFixedLeftMenuItem;
			}
		}
		public DXMenuItem UIFixedRightMenuItem
		{
			get
			{
				if ((this.mUIFixedRightMenuItem == null))
				{
					this.mUIFixedRightMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIFixedRightMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Fixed Right";
					this.mUIFixedRightMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIFixedRightMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFixedRightMenuItem;
			}
		}
		public UISortbySummaryBarItem UISortbySummaryBarItem
		{
			get
			{
				if ((this.mUISortbySummaryBarItem == null))
				{
					this.mUISortbySummaryBarItem = new UISortbySummaryBarItem(this);
				}
				return this.mUISortbySummaryBarItem;
			}
		}
		public DXMenuItem UIGroupByThisColumnBarItem
		{
			get
			{
				if ((this.mUIGroupByThisColumnBarItem == null))
				{
					this.mUIGroupByThisColumnBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIGroupByThisColumnBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Group By This Column";
					this.mUIGroupByThisColumnBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIGroupByThisColumnBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIGroupByThisColumnBarItem;
			}
		}
		public DXMenuItem UIUnGroupBarItem
		{
			get
			{
				if ((this.mUIUnGroupBarItem == null))
				{
					this.mUIUnGroupBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "UnGroup";
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIUnGroupBarItem;
			}
		}
		public DXMenuItem UIFullCollapseBarItem
		{
			get
			{
				if ((this.mUIFullCollapseBarItem == null))
				{
					this.mUIFullCollapseBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIFullCollapseBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Full Collapse";
					this.mUIFullCollapseBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIFullCollapseBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFullCollapseBarItem;
			}
		}
		public DXMenuItem UIFullExpandBarItem
		{
			get
			{
				if ((this.mUIFullExpandBarItem == null))
				{
					this.mUIFullExpandBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIFullExpandBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Full Expand";
					this.mUIFullExpandBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIFullExpandBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFullExpandBarItem;
			}
		}
		public DXMenuItem UIMinBarItem
		{
			get
			{
				if ((this.mUIMinBarItem == null))
				{
					this.mUIMinBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIMinBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Min";
					this.mUIMinBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIMinBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIMinBarItem;
			}
		}
		public UIAddNewSummaryBarItem UIAddNewSummaryBarItem
		{
			get
			{
				if ((this.mUIAddNewSummaryBarItem == null))
				{
					this.mUIAddNewSummaryBarItem = new UIAddNewSummaryBarItem(this);
				}
				return this.mUIAddNewSummaryBarItem;
			}
		}
		public DXMenuItem UINoneBarItem
		{
			get
			{
				if ((this.mUINoneBarItem == null))
				{
					this.mUINoneBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUINoneBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "None";
					this.mUINoneBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUINoneBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUINoneBarItem;
			}
		}
		public DXMenuItem UIClearSummaryItemsBarItem
		{
			get
			{
				if ((this.mUIClearSummaryItemsBarItem == null))
				{
					this.mUIClearSummaryItemsBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIClearSummaryItemsBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Clear Summary Items";
					this.mUIClearSummaryItemsBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIClearSummaryItemsBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIClearSummaryItemsBarItem;
			}
		}
		public DXMenuItem UIHideGroupByBoxBarItem
		{
			get
			{
				if ((this.mUIHideGroupByBoxBarItem == null))
				{
					this.mUIHideGroupByBoxBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIHideGroupByBoxBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Hide Group By Box";
					this.mUIHideGroupByBoxBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIHideGroupByBoxBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIHideGroupByBoxBarItem;
			}
		}
		public DXMenuItem UIExpressionEditorBarItem
		{
			get
			{
				if ((this.mUIExpressionEditorBarItem == null))
				{
					this.mUIExpressionEditorBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIExpressionEditorBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Expression Editor...";
					this.mUIExpressionEditorBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIExpressionEditorBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIExpressionEditorBarItem;
			}
		}
		public DXMenuItem UIPropertiesMenuItem
		{
			get
			{
				if ((this.mUIPropertiesMenuItem == null))
				{
					this.mUIPropertiesMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPropertiesMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Properties";
					this.mUIPropertiesMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIPropertiesMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIPropertiesMenuItem;
			}
		}
		public DXMenuItem UIDeleteLinkMenuItem
		{
			get
			{
				if ((this.mUIDeleteLinkMenuItem == null))
				{
					this.mUIDeleteLinkMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIDeleteLinkMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Delete Link";
					this.mUIDeleteLinkMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIDeleteLinkMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIDeleteLinkMenuItem;
			}
		}
		public DXMenuItem UIAddNewGroupMenuItem
		{
			get
			{
				if ((this.mUIAddNewGroupMenuItem == null))
				{
					this.mUIAddNewGroupMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIAddNewGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Add New Group";
					this.mUIAddNewGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIAddNewGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAddNewGroupMenuItem;
			}
		}
		public DXMenuItem UIRemoveGroupMenuItem
		{
			get
			{
				if ((this.mUIRemoveGroupMenuItem == null))
				{
					this.mUIRemoveGroupMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRemoveGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Remove Group";
					this.mUIRemoveGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIRemoveGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIRemoveGroupMenuItem;
			}
		}
		public UIAddNewLinkMenuItem UIAddNewLinkMenuItem
		{
			get
			{
				if ((this.mUIAddNewLinkMenuItem == null))
				{
					this.mUIAddNewLinkMenuItem = new UIAddNewLinkMenuItem(this);
				}
				return this.mUIAddNewLinkMenuItem;
			}
		}
		public DXMenuItem UIShowMoreButtonsMenuItem
		{
			get
			{
				if ((this.mUIShowMoreButtonsMenuItem == null))
				{
					this.mUIShowMoreButtonsMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIShowMoreButtonsMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Show &More Buttons";
					this.mUIShowMoreButtonsMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIShowMoreButtonsMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIShowMoreButtonsMenuItem;
			}
		}
		public DXMenuItem UIShowFewerButtonsMenuItem
		{
			get
			{
				if ((this.mUIShowFewerButtonsMenuItem == null))
				{
					this.mUIShowFewerButtonsMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIShowFewerButtonsMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Show &Fewer Buttons";
					this.mUIShowFewerButtonsMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIShowFewerButtonsMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIShowFewerButtonsMenuItem;
			}
		}
		public UIAddorRemoveButtonsMenuItem UIAddorRemoveButtonsMenuItem
		{
			get
			{
				if ((this.mUIAddorRemoveButtonsMenuItem == null))
				{
					this.mUIAddorRemoveButtonsMenuItem = new UIAddorRemoveButtonsMenuItem(this);
				}
				return this.mUIAddorRemoveButtonsMenuItem;
			}
		}
		public DXMenuItem UICustomizeMenuItem
		{
			get
			{
				if ((this.mUICustomizeMenuItem == null))
				{
					this.mUICustomizeMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUICustomizeMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Customize ...";
					this.mUICustomizeMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUICustomizeMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICustomizeMenuItem;
			}
		}
		public DXMenuItem UIFormatMenuItem
		{
			get
			{
				if ((this.mUIFormatMenuItem == null))
				{
					this.mUIFormatMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIFormatMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
					this.mUIFormatMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIFormatMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFormatMenuItem;
			}
		}
		public UIContactMenuItem UIContactMenuItem
		{
			get
			{
				if ((this.mUIContactMenuItem == null))
				{
					this.mUIContactMenuItem = new UIContactMenuItem(this);
				}
				return this.mUIContactMenuItem;
			}
		}
		public DXMenuItem UIAddtoQuickAccessToolMenuItem
		{
			get
			{
				if ((this.mUIAddtoQuickAccessToolMenuItem == null))
				{
					this.mUIAddtoQuickAccessToolMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIAddtoQuickAccessToolMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add to Quick Access Toolbar";
					this.mUIAddtoQuickAccessToolMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIAddtoQuickAccessToolMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAddtoQuickAccessToolMenuItem;
			}
		}
		public DXMenuItem UIRemovefromQuickAccesMenuItem
		{
			get
			{
				if ((this.mUIRemovefromQuickAccesMenuItem == null))
				{
					this.mUIRemovefromQuickAccesMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRemovefromQuickAccesMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Remove from Quick Access Toolbar";
					this.mUIRemovefromQuickAccesMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIRemovefromQuickAccesMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIRemovefromQuickAccesMenuItem;
			}
		}
		public DXMenuBaseButtonItem UIMinimizetheRibbonMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIMinimizetheRibbonMenuBaseButtonItem == null))
				{
					this.mUIMinimizetheRibbonMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIMinimizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Mi&nimize the Ribbon";
					this.mUIMinimizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIMinimizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIMinimizetheRibbonMenuBaseButtonItem;
			}
		}
		public DXMenuItem UIShowQuickAccessToolbMenuItem
		{
			get
			{
				if ((this.mUIShowQuickAccessToolbMenuItem == null))
				{
					this.mUIShowQuickAccessToolbMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIShowQuickAccessToolbMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Show Quick Access Toolbar Below the Ribbon";
					this.mUIShowQuickAccessToolbMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIShowQuickAccessToolbMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIShowQuickAccessToolbMenuItem;
			}
		}
		public DXMenuItem UIShowQuickAccessToolbMenuItem1
		{
			get
			{
				if ((this.mUIShowQuickAccessToolbMenuItem1 == null))
				{
					this.mUIShowQuickAccessToolbMenuItem1 = new DXMenuItem(this);
					#region Search Criteria
					this.mUIShowQuickAccessToolbMenuItem1.SearchProperties[DXTestControl.PropertyNames.Name] = "&Show Quick Access Toolbar Above the Ribbon";
					this.mUIShowQuickAccessToolbMenuItem1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIShowQuickAccessToolbMenuItem1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIShowQuickAccessToolbMenuItem1;
			}
		}
		public DXMenuBaseButtonItem UICopyMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICopyMenuBaseButtonItem == null))
				{
					this.mUICopyMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICopyMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Copy";
					this.mUICopyMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUICopyMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICopyMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UICustomizetheRibbonMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICustomizetheRibbonMenuBaseButtonItem == null))
				{
					this.mUICustomizetheRibbonMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICustomizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Customize the &Ribbon...";
					this.mUICustomizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUICustomizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICustomizetheRibbonMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIAddtoQuickAccessToolMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIAddtoQuickAccessToolMenuBaseButtonItem == null))
				{
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add to Quick Access Toolbar";
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAddtoQuickAccessToolMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIUndoMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIUndoMenuBaseButtonItem == null))
				{
					this.mUIUndoMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIUndoMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Undo";
					this.mUIUndoMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIUndoMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIUndoMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIPasteMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteMenuBaseButtonItem == null))
				{
					this.mUIPasteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIPasteMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIColumnChooserMenuItem;
		private DXMenuItem mUIRemoveThisColumnMenuItem;
		private DXMenuItem mUIBestFitMenuItem;
		private DXMenuItem mUIGroupByThisColumnMenuItem;
		private DXMenuItem mUIUnGroupMenuItem;
		private DXMenuItem mUIClearGroupingMenuItem;
		private DXMenuItem mUISortAscendingMenuItem;
		private DXMenuItem mUISortDescendingMenuItem;
		private DXMenuItem mUIClearFilterMenuItem;
		private DXMenuItem mUIFilterEditorMenuItem;
		private DXMenuItem mUINotFixedMenuItem;
		private DXMenuItem mUIFixedLeftMenuItem;
		private DXMenuItem mUIFixedRightMenuItem;
		private UISortbySummaryBarItem mUISortbySummaryBarItem;
		private DXMenuItem mUIGroupByThisColumnBarItem;
		private DXMenuItem mUIUnGroupBarItem;
		private DXMenuItem mUIFullCollapseBarItem;
		private DXMenuItem mUIFullExpandBarItem;
		private DXMenuItem mUIMinBarItem;
		private UIAddNewSummaryBarItem mUIAddNewSummaryBarItem;
		private DXMenuItem mUINoneBarItem;
		private DXMenuItem mUIClearSummaryItemsBarItem;
		private DXMenuItem mUIHideGroupByBoxBarItem;
		private DXMenuItem mUIExpressionEditorBarItem;
		private DXMenuItem mUIPropertiesMenuItem;
		private DXMenuItem mUIDeleteLinkMenuItem;
		private DXMenuItem mUIAddNewGroupMenuItem;
		private DXMenuItem mUIRemoveGroupMenuItem;
		private UIAddNewLinkMenuItem mUIAddNewLinkMenuItem;
		private DXMenuItem mUIShowMoreButtonsMenuItem;
		private DXMenuItem mUIShowFewerButtonsMenuItem;
		private UIAddorRemoveButtonsMenuItem mUIAddorRemoveButtonsMenuItem;
		private DXMenuItem mUICustomizeMenuItem;
		private DXMenuItem mUIFormatMenuItem;
		private UIContactMenuItem mUIContactMenuItem;
		private DXMenuItem mUIAddtoQuickAccessToolMenuItem;
		private DXMenuItem mUIRemovefromQuickAccesMenuItem;
		private DXMenuBaseButtonItem mUIMinimizetheRibbonMenuBaseButtonItem;
		private DXMenuItem mUIShowQuickAccessToolbMenuItem;
		private DXMenuItem mUIShowQuickAccessToolbMenuItem1;
		private DXMenuBaseButtonItem mUICopyMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUICustomizetheRibbonMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIAddtoQuickAccessToolMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIUndoMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIPasteMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISortbySummaryBarItem : DXMenuItem
	{
		public UISortbySummaryBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sort by Summary";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UICountbyProductNameSoBarItem
		{
			get
			{
				if ((this.mUICountbyProductNameSoBarItem == null))
				{
					this.mUICountbyProductNameSoBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUICountbyProductNameSoBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Count by \'Product Name\' - Sort Ascending";
					this.mUICountbyProductNameSoBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUICountbyProductNameSoBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICountbyProductNameSoBarItem;
			}
		}
		public DXMenuItem UICountbyProductNameSoBarItem1
		{
			get
			{
				if ((this.mUICountbyProductNameSoBarItem1 == null))
				{
					this.mUICountbyProductNameSoBarItem1 = new DXMenuItem(this);
					#region Search Criteria
					this.mUICountbyProductNameSoBarItem1.SearchProperties[DXTestControl.PropertyNames.Name] = "Count by \'Product Name\' - Sort Descending";
					this.mUICountbyProductNameSoBarItem1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUICountbyProductNameSoBarItem1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICountbyProductNameSoBarItem1;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUICountbyProductNameSoBarItem;
		private DXMenuItem mUICountbyProductNameSoBarItem1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddNewSummaryBarItem : DXMenuItem
	{
		public UIAddNewSummaryBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Add New Summary";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIMinBarItem
		{
			get
			{
				if ((this.mUIMinBarItem == null))
				{
					this.mUIMinBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIMinBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Min";
					this.mUIMinBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIMinBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIMinBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIMinBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddNewLinkMenuItem : DXMenuItem
	{
		public UIAddNewLinkMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Add New Link";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIOutboxMenuItem
		{
			get
			{
				if ((this.mUIOutboxMenuItem == null))
				{
					this.mUIOutboxMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIOutboxMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Outbox";
					this.mUIOutboxMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIOutboxMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIOutboxMenuItem;
			}
		}
		public DXMenuItem UITaskMenuItem
		{
			get
			{
				if ((this.mUITaskMenuItem == null))
				{
					this.mUITaskMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUITaskMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Task";
					this.mUITaskMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUITaskMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUITaskMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIOutboxMenuItem;
		private DXMenuItem mUITaskMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddorRemoveButtonsMenuItem : DXMenuItem
	{
		public UIAddorRemoveButtonsMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add or Remove Buttons";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UICalendarMenuItem
		{
			get
			{
				if ((this.mUICalendarMenuItem == null))
				{
					this.mUICalendarMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUICalendarMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Calendar";
					this.mUICalendarMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUICalendarMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICalendarMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUICalendarMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIContactMenuItem : DXMenuItem
	{
		public UIContactMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Contact";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UICustomerMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICustomerMenuBaseButtonItem == null))
				{
					this.mUICustomerMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICustomerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Customer";
					this.mUICustomerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUICustomerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICustomerMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUICustomerMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu1 : DXMenu
	{
		public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIShowThisColumnMenuItem
		{
			get
			{
				if ((this.mUIShowThisColumnMenuItem == null))
				{
					this.mUIShowThisColumnMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIShowThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Show This Column";
					this.mUIShowThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIShowThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIShowThisColumnMenuItem;
			}
		}
		public DXMenuItem UIGroupByThisColumnMenuItem
		{
			get
			{
				if ((this.mUIGroupByThisColumnMenuItem == null))
				{
					this.mUIGroupByThisColumnMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIGroupByThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Group By This Column";
					this.mUIGroupByThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIGroupByThisColumnMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIGroupByThisColumnMenuItem;
			}
		}
		public DXMenuItem UIUnGroupMenuItem
		{
			get
			{
				if ((this.mUIUnGroupMenuItem == null))
				{
					this.mUIUnGroupMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIUnGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "UnGroup";
					this.mUIUnGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIUnGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIUnGroupMenuItem;
			}
		}
		public DXMenuItem UIAddGroupMenuItem
		{
			get
			{
				if ((this.mUIAddGroupMenuItem == null))
				{
					this.mUIAddGroupMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Add Group";
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAddGroupMenuItem;
			}
		}
		public DXMenuItem UIUnGroupBarItem
		{
			get
			{
				if ((this.mUIUnGroupBarItem == null))
				{
					this.mUIUnGroupBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "UnGroup";
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIUnGroupBarItem;
			}
		}
		public DXMenuBaseButtonItem UIPasteMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteMenuBaseButtonItem == null))
				{
					this.mUIPasteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIPasteMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIShowThisColumnMenuItem;
		private DXMenuItem mUIGroupByThisColumnMenuItem;
		private DXMenuItem mUIUnGroupMenuItem;
		private DXMenuItem mUIAddGroupMenuItem;
		private DXMenuItem mUIUnGroupBarItem;
		private DXMenuBaseButtonItem mUIPasteMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu2 : DXMenu
	{
		public UIPopupMenuBarControlMenu2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIAddGroupMenuItem
		{
			get
			{
				if ((this.mUIAddGroupMenuItem == null))
				{
					this.mUIAddGroupMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Add Group";
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAddGroupMenuItem;
			}
		}
		public DXMenuItem UIUnGroupBarItem
		{
			get
			{
				if ((this.mUIUnGroupBarItem == null))
				{
					this.mUIUnGroupBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "UnGroup";
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIUnGroupBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIUnGroupBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIAddGroupMenuItem;
		private DXMenuItem mUIUnGroupBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu3 : DXMenu
	{
		public UIPopupMenuBarControlMenu3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIORMenuItem
		{
			get
			{
				if ((this.mUIORMenuItem == null))
				{
					this.mUIORMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Or";
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIORMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIORMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu4 : DXMenu
	{
		public UIPopupMenuBarControlMenu4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIORMenuItem
		{
			get
			{
				if ((this.mUIORMenuItem == null))
				{
					this.mUIORMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Or";
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIORMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIORMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu5 : DXMenu
	{
		public UIPopupMenuBarControlMenu5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIAddGroupMenuItem
		{
			get
			{
				if ((this.mUIAddGroupMenuItem == null))
				{
					this.mUIAddGroupMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Add Group";
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIAddGroupMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAddGroupMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIAddGroupMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu6 : DXMenu
	{
		public UIPopupMenuBarControlMenu6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIORMenuItem
		{
			get
			{
				if ((this.mUIORMenuItem == null))
				{
					this.mUIORMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Or";
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIORMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIORMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIORMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu7 : DXMenu
	{
		public UIPopupMenuBarControlMenu7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIAddConditionMenuItem
		{
			get
			{
				if ((this.mUIAddConditionMenuItem == null))
				{
					this.mUIAddConditionMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIAddConditionMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Add Condition";
					this.mUIAddConditionMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIAddConditionMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAddConditionMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIAddConditionMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAlertFormWindow : DXWindow
	{
		public UIAlertFormWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
			#endregion
		}
		#region Properties
		public DXTestControl UIAlertCaptionText
		{
			get
			{
				if ((this.mUIAlertCaptionText == null))
				{
					this.mUIAlertCaptionText = new DXTestControl(this);
					#region Search Criteria
					this.mUIAlertCaptionText.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertCaption";
					this.mUIAlertCaptionText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertCaption";
					this.mUIAlertCaptionText.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAlertCaptionText;
			}
		}
		public DXTestControl UIAlertTextText
		{
			get
			{
				if ((this.mUIAlertTextText == null))
				{
					this.mUIAlertTextText = new DXTestControl(this);
					#region Search Criteria
					this.mUIAlertTextText.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertText";
					this.mUIAlertTextText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertText";
					this.mUIAlertTextText.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAlertTextText;
			}
		}
		public DXButton UIOpenButton
		{
			get
			{
				if ((this.mUIOpenButton == null))
				{
					this.mUIOpenButton = new DXButton(this);
					#region Search Criteria
					this.mUIOpenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Open";
					this.mUIOpenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertButton";
					this.mUIOpenButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIOpenButton;
			}
		}
		public DXButton UIAlertPinButtonButton
		{
			get
			{
				if ((this.mUIAlertPinButtonButton == null))
				{
					this.mUIAlertPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIAlertPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertPinButton";
					this.mUIAlertPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertPinButton";
					this.mUIAlertPinButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAlertPinButtonButton;
			}
		}
		public DXButton UIAlertCloseButtonButton
		{
			get
			{
				if ((this.mUIAlertCloseButtonButton == null))
				{
					this.mUIAlertCloseButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIAlertCloseButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertCloseButton";
					this.mUIAlertCloseButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertCloseButton";
					this.mUIAlertCloseButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAlertCloseButtonButton;
			}
		}
		public DXButton UIAlertPopupMenuButtonButton
		{
			get
			{
				if ((this.mUIAlertPopupMenuButtonButton == null))
				{
					this.mUIAlertPopupMenuButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIAlertPopupMenuButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertPopupMenuButton";
					this.mUIAlertPopupMenuButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertPopupMenuButton";
					this.mUIAlertPopupMenuButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIAlertPopupMenuButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAlertCaptionText;
		private DXTestControl mUIAlertTextText;
		private DXButton mUIOpenButton;
		private DXButton mUIAlertPinButtonButton;
		private DXButton mUIAlertCloseButtonButton;
		private DXButton mUIAlertPopupMenuButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu : DXMenu
	{
		public UICustomPopupBarControMenu(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuItem UIPasteMenuItem
		{
			get
			{
				if ((this.mUIPasteMenuItem == null))
				{
					this.mUIPasteMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPasteMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIPasteMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIPasteMenuItem;
			}
		}
		public DXMenuBaseButtonItem UIPasteMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteMenuBaseButtonItem == null))
				{
					this.mUIPasteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIPasteMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPasteMenuItem;
		private DXMenuBaseButtonItem mUIPasteMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu : DXMenu
	{
		public UIGalleryDropDownBarCoMenu(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIFontSizeMenuEditItem
		{
			get
			{
				if ((this.mUIFontSizeMenuEditItem == null))
				{
					this.mUIFontSizeMenuEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIFontSizeMenuEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Font Size";
					this.mUIFontSizeMenuEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuEditItem";
					this.mUIFontSizeMenuEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFontSizeMenuEditItem;
			}
		}
		public DXTextEdit UIFontSizeEdit
		{
			get
			{
				if ((this.mUIFontSizeEdit == null))
				{
					this.mUIFontSizeEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIFontSizeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Font Size";
					this.mUIFontSizeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUIFontSizeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFontSizeEdit;
			}
		}
		public UIItemGalleryItemGroup UIItemGalleryItemGroup
		{
			get
			{
				if ((this.mUIItemGalleryItemGroup == null))
				{
					this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup(this);
				}
				return this.mUIItemGalleryItemGroup;
			}
		}
		public UIWebColorsGalleryItemGroup UIWebColorsGalleryItemGroup
		{
			get
			{
				if ((this.mUIWebColorsGalleryItemGroup == null))
				{
					this.mUIWebColorsGalleryItemGroup = new UIWebColorsGalleryItemGroup(this);
				}
				return this.mUIWebColorsGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIFontSizeMenuEditItem;
		private DXTextEdit mUIFontSizeEdit;
		private UIItemGalleryItemGroup mUIItemGalleryItemGroup;
		private UIWebColorsGalleryItemGroup mUIWebColorsGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemGalleryItemGroup : DXTestControl
	{
		public UIItemGalleryItemGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UIFaxGalleryItem
		{
			get
			{
				if ((this.mUIFaxGalleryItem == null))
				{
					this.mUIFaxGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIFaxGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Fax";
					this.mUIFaxGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIFaxGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIFaxGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIFaxGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIWebColorsGalleryItemGroup : DXTestControl
	{
		public UIWebColorsGalleryItemGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Web Colors";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UIPeachPuffGalleryItem
		{
			get
			{
				if ((this.mUIPeachPuffGalleryItem == null))
				{
					this.mUIPeachPuffGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIPeachPuffGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "PeachPuff";
					this.mUIPeachPuffGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIPeachPuffGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIPeachPuffGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIPeachPuffGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu1 : DXMenu
	{
		public UIGalleryDropDownBarCoMenu1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIItemGalleryItemGroup1 UIItemGalleryItemGroup
		{
			get
			{
				if ((this.mUIItemGalleryItemGroup == null))
				{
					this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup1(this);
				}
				return this.mUIItemGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemGalleryItemGroup1 mUIItemGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemGalleryItemGroup1 : DXTestControl
	{
		public UIItemGalleryItemGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UIManuallyPrintonBothSGalleryItem
		{
			get
			{
				if ((this.mUIManuallyPrintonBothSGalleryItem == null))
				{
					this.mUIManuallyPrintonBothSGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIManuallyPrintonBothSGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Manually Print on Both Sides";
					this.mUIManuallyPrintonBothSGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIManuallyPrintonBothSGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIManuallyPrintonBothSGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIManuallyPrintonBothSGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu2 : DXMenu
	{
		public UIGalleryDropDownBarCoMenu2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIItemGalleryItemGroup2 UIItemGalleryItemGroup
		{
			get
			{
				if ((this.mUIItemGalleryItemGroup == null))
				{
					this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup2(this);
				}
				return this.mUIItemGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemGalleryItemGroup2 mUIItemGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemGalleryItemGroup2 : DXTestControl
	{
		public UIItemGalleryItemGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UIUncollatedGalleryItem
		{
			get
			{
				if ((this.mUIUncollatedGalleryItem == null))
				{
					this.mUIUncollatedGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIUncollatedGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Uncollated";
					this.mUIUncollatedGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIUncollatedGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIUncollatedGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIUncollatedGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu3 : DXMenu
	{
		public UIGalleryDropDownBarCoMenu3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIItemGalleryItemGroup3 UIItemGalleryItemGroup
		{
			get
			{
				if ((this.mUIItemGalleryItemGroup == null))
				{
					this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup3(this);
				}
				return this.mUIItemGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemGalleryItemGroup3 mUIItemGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemGalleryItemGroup3 : DXTestControl
	{
		public UIItemGalleryItemGroup3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UILandscapeOrientationGalleryItem
		{
			get
			{
				if ((this.mUILandscapeOrientationGalleryItem == null))
				{
					this.mUILandscapeOrientationGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUILandscapeOrientationGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Landscape Orientation";
					this.mUILandscapeOrientationGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUILandscapeOrientationGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUILandscapeOrientationGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUILandscapeOrientationGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu4 : DXMenu
	{
		public UIGalleryDropDownBarCoMenu4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIItemGalleryItemGroup4 UIItemGalleryItemGroup
		{
			get
			{
				if ((this.mUIItemGalleryItemGroup == null))
				{
					this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup4(this);
				}
				return this.mUIItemGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemGalleryItemGroup4 mUIItemGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemGalleryItemGroup4 : DXTestControl
	{
		public UIItemGalleryItemGroup4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UIWideGalleryItem
		{
			get
			{
				if ((this.mUIWideGalleryItem == null))
				{
					this.mUIWideGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIWideGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Wide";
					this.mUIWideGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIWideGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIWideGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIWideGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu5 : DXMenu
	{
		public UIGalleryDropDownBarCoMenu5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIItemGalleryItemGroup5 UIItemGalleryItemGroup
		{
			get
			{
				if ((this.mUIItemGalleryItemGroup == null))
				{
					this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup5(this);
				}
				return this.mUIItemGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemGalleryItemGroup5 mUIItemGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemGalleryItemGroup5 : DXTestControl
	{
		public UIItemGalleryItemGroup5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UIA3GalleryItem
		{
			get
			{
				if ((this.mUIA3GalleryItem == null))
				{
					this.mUIA3GalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIA3GalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "A3";
					this.mUIA3GalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIA3GalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIA3GalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIA3GalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerFormCustom : DXTestControl
	{
		public UIPopupContainerFormCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownPopupContainerForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
			#endregion
		}
		#region Properties
		public UICustomPopupBarControMenu1 UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu1(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControMenu1 mUICustomPopupBarControMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu1 : DXMenu
	{
		public UICustomPopupBarControMenu1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIPopupControlContaineClient UIPopupControlContaineClient
		{
			get
			{
				if ((this.mUIPopupControlContaineClient == null))
				{
					this.mUIPopupControlContaineClient = new UIPopupControlContaineClient(this);
				}
				return this.mUIPopupControlContaineClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupControlContaineClient mUIPopupControlContaineClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupControlContaineClient : DXTestControl
	{
		public UIPopupControlContaineClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList : DXTestControl
	{
		public UIXtraTabControlTabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabPageClient UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPageClient mUIXtraTabPageClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient : DXTestControl
	{
		public UIXtraTabPageClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTestControl UIColorCellsControlClient
		{
			get
			{
				if ((this.mUIColorCellsControlClient == null))
				{
					this.mUIColorCellsControlClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]ColorCellsControl[0]";
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorCellsControl";
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIColorCellsControlClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIColorCellsControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow1 : WinWindow
	{
		public UIItemWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
			#endregion
		}
		#region Properties
		public WinClient UIDesktopClient
		{
			get
			{
				if ((this.mUIDesktopClient == null))
				{
					this.mUIDesktopClient = new WinClient(this);
				}
				return this.mUIDesktopClient;
			}
		}
		#endregion
		#region Fields
		private WinClient mUIDesktopClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu8 : DXMenu
	{
		public UIPopupMenuBarControlMenu8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIAddtoQuickAccessToolMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIAddtoQuickAccessToolMenuBaseButtonItem == null))
				{
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add to Quick Access Toolbar";
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIAddtoQuickAccessToolMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UICustomizetheRibbonMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICustomizetheRibbonMenuBaseButtonItem == null))
				{
					this.mUICustomizetheRibbonMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICustomizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Customize the &Ribbon...";
					this.mUICustomizetheRibbonMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUICustomizetheRibbonMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UISortAscendingMenuBaseButtonItem
		{
			get
			{
				if ((this.mUISortAscendingMenuBaseButtonItem == null))
				{
					this.mUISortAscendingMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUISortAscendingMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Sort Ascending";
					this.mUISortAscendingMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUISortAscendingMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UISortDescendingMenuBaseButtonItem
		{
			get
			{
				if ((this.mUISortDescendingMenuBaseButtonItem == null))
				{
					this.mUISortDescendingMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUISortDescendingMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Sort Descending";
					this.mUISortDescendingMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUISortDescendingMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBiLinkPropertiesMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBiLinkPropertiesMenuBaseButtonItem == null))
				{
					this.mUIBiLinkPropertiesMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBiLinkPropertiesMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biLinkProperties";
					this.mUIBiLinkPropertiesMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBiLinkPropertiesMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBiDeleteLinkMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBiDeleteLinkMenuBaseButtonItem == null))
				{
					this.mUIBiDeleteLinkMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBiDeleteLinkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biDeleteLink";
					this.mUIBiDeleteLinkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBiDeleteLinkMenuBaseButtonItem;
			}
		}
		public UIAddNewLinkMenuItem1 UIAddNewLinkMenuItem
		{
			get
			{
				if ((this.mUIAddNewLinkMenuItem == null))
				{
					this.mUIAddNewLinkMenuItem = new UIAddNewLinkMenuItem1(this);
				}
				return this.mUIAddNewLinkMenuItem;
			}
		}
		public DXMenuBaseButtonItem UIBiAddNewGroupMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBiAddNewGroupMenuBaseButtonItem == null))
				{
					this.mUIBiAddNewGroupMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBiAddNewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biAddNewGroup";
					this.mUIBiAddNewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBiAddNewGroupMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBiRemoveGroupMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBiRemoveGroupMenuBaseButtonItem == null))
				{
					this.mUIBiRemoveGroupMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBiRemoveGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biRemoveGroup";
					this.mUIBiRemoveGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBiRemoveGroupMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink6MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink6MenuBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink6MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink6MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[6]";
					this.mUIBarButtonItemLink6MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarButtonItemLink6MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink5MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink5MenuBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink5MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink5MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[4]";
					this.mUIBarButtonItemLink5MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarButtonItemLink5MenuBaseButtonItem;
			}
		}
		public UIAddorRemoveButtonsMenuItem1 UIAddorRemoveButtonsMenuItem
		{
			get
			{
				if ((this.mUIAddorRemoveButtonsMenuItem == null))
				{
					this.mUIAddorRemoveButtonsMenuItem = new UIAddorRemoveButtonsMenuItem1(this);
				}
				return this.mUIAddorRemoveButtonsMenuItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink1MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink1MenuBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
					this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarButtonItemLink1MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarButtonItemLink0MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink0MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink0MenuBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[0]";
					this.mUIBarCheckItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarCheckItemLink0MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIICopyMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIICopyMenuBaseButtonItem == null))
				{
					this.mUIICopyMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIICopyMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "iCopy";
					this.mUIICopyMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIICopyMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink5MenuBaseButtonItem1
		{
			get
			{
				if ((this.mUIBarButtonItemLink5MenuBaseButtonItem1 == null))
				{
					this.mUIBarButtonItemLink5MenuBaseButtonItem1 = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink5MenuBaseButtonItem1.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[5]";
					this.mUIBarButtonItemLink5MenuBaseButtonItem1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarButtonItemLink5MenuBaseButtonItem1;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIAddtoQuickAccessToolMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUICustomizetheRibbonMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUISortAscendingMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUISortDescendingMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBiLinkPropertiesMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBiDeleteLinkMenuBaseButtonItem;
		private UIAddNewLinkMenuItem1 mUIAddNewLinkMenuItem;
		private DXMenuBaseButtonItem mUIBiAddNewGroupMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBiRemoveGroupMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink6MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink5MenuBaseButtonItem;
		private UIAddorRemoveButtonsMenuItem1 mUIAddorRemoveButtonsMenuItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink1MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink0MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIICopyMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink5MenuBaseButtonItem1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddNewLinkMenuItem1 : DXMenuItem
	{
		public UIAddNewLinkMenuItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "bsiItems";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIInboxMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIInboxMenuBaseButtonItem == null))
				{
					this.mUIInboxMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIInboxMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIInboxMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIInboxMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIInboxMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddorRemoveButtonsMenuItem1 : DXMenuItem
	{
		public UIAddorRemoveButtonsMenuItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UICalendarMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICalendarMenuBaseButtonItem == null))
				{
					this.mUICalendarMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICalendarMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
					this.mUICalendarMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUICalendarMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUICalendarMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu11 : DXMenu
	{
		public UICustomPopupBarControMenu11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIPasteMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteMenuBaseButtonItem == null))
				{
					this.mUIPasteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIPasteMenuBaseButtonItem;
			}
		}
		public UIPasteMenuItem UIPasteMenuItem
		{
			get
			{
				if ((this.mUIPasteMenuItem == null))
				{
					this.mUIPasteMenuItem = new UIPasteMenuItem(this);
				}
				return this.mUIPasteMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIPasteMenuBaseButtonItem;
		private UIPasteMenuItem mUIPasteMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPasteMenuItem : DXMenuItem
	{
		public UIPasteMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIAddtoQuickAccessToolMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIAddtoQuickAccessToolMenuBaseButtonItem == null))
				{
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add to Quick Access Toolbar";
					this.mUIAddtoQuickAccessToolMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIAddtoQuickAccessToolMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIAddtoQuickAccessToolMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu6 : DXMenu
	{
		public UIGalleryDropDownBarCoMenu6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			#endregion
		}
		#region Properties
		public UIItemGalleryItemGroup6 UIItemGalleryItemGroup
		{
			get
			{
				if ((this.mUIItemGalleryItemGroup == null))
				{
					this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup6(this);
				}
				return this.mUIItemGalleryItemGroup;
			}
		}
		public UIWebColorsGalleryItemGroup1 UIWebColorsGalleryItemGroup
		{
			get
			{
				if ((this.mUIWebColorsGalleryItemGroup == null))
				{
					this.mUIWebColorsGalleryItemGroup = new UIWebColorsGalleryItemGroup1(this);
				}
				return this.mUIWebColorsGalleryItemGroup;
			}
		}
		public UIStandardSkinsGalleryItemGroup UIStandardSkinsGalleryItemGroup
		{
			get
			{
				if ((this.mUIStandardSkinsGalleryItemGroup == null))
				{
					this.mUIStandardSkinsGalleryItemGroup = new UIStandardSkinsGalleryItemGroup(this);
				}
				return this.mUIStandardSkinsGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemGalleryItemGroup6 mUIItemGalleryItemGroup;
		private UIWebColorsGalleryItemGroup1 mUIWebColorsGalleryItemGroup;
		private UIStandardSkinsGalleryItemGroup mUIStandardSkinsGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemGalleryItemGroup6 : DXTestControl
	{
		public UIItemGalleryItemGroup6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			#endregion
		}
		#region Properties
		public DXTestControl UIA5GalleryItem
		{
			get
			{
				if ((this.mUIA5GalleryItem == null))
				{
					this.mUIA5GalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIA5GalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "A5";
					this.mUIA5GalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIA5GalleryItem;
			}
		}
		public DXTestControl UITabloidGalleryItem
		{
			get
			{
				if ((this.mUITabloidGalleryItem == null))
				{
					this.mUITabloidGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUITabloidGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Tabloid";
					this.mUITabloidGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUITabloidGalleryItem;
			}
		}
		public DXTestControl UIPDFFileGalleryItem
		{
			get
			{
				if ((this.mUIPDFFileGalleryItem == null))
				{
					this.mUIPDFFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIPDFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "PDF File";
					this.mUIPDFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIPDFFileGalleryItem;
			}
		}
		public DXTestControl UIHTMLFileGalleryItem
		{
			get
			{
				if ((this.mUIHTMLFileGalleryItem == null))
				{
					this.mUIHTMLFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIHTMLFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "HTML File";
					this.mUIHTMLFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIHTMLFileGalleryItem;
			}
		}
		public DXTestControl UIMHTFileGalleryItem
		{
			get
			{
				if ((this.mUIMHTFileGalleryItem == null))
				{
					this.mUIMHTFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIMHTFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "MHT File";
					this.mUIMHTFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIMHTFileGalleryItem;
			}
		}
		public DXTestControl UIRTFFileGalleryItem
		{
			get
			{
				if ((this.mUIRTFFileGalleryItem == null))
				{
					this.mUIRTFFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIRTFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF File";
					this.mUIRTFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIRTFFileGalleryItem;
			}
		}
		public DXTestControl UIXLSFileGalleryItem
		{
			get
			{
				if ((this.mUIXLSFileGalleryItem == null))
				{
					this.mUIXLSFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIXLSFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLS File";
					this.mUIXLSFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIXLSFileGalleryItem;
			}
		}
		public DXTestControl UIXLSXFileGalleryItem
		{
			get
			{
				if ((this.mUIXLSXFileGalleryItem == null))
				{
					this.mUIXLSXFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIXLSXFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLSX File";
					this.mUIXLSXFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIXLSXFileGalleryItem;
			}
		}
		public DXTestControl UICSVFileGalleryItem
		{
			get
			{
				if ((this.mUICSVFileGalleryItem == null))
				{
					this.mUICSVFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUICSVFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "CSV File";
					this.mUICSVFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUICSVFileGalleryItem;
			}
		}
		public DXTestControl UITextFileGalleryItem
		{
			get
			{
				if ((this.mUITextFileGalleryItem == null))
				{
					this.mUITextFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUITextFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Text File";
					this.mUITextFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUITextFileGalleryItem;
			}
		}
		public DXTestControl UIImageFileGalleryItem
		{
			get
			{
				if ((this.mUIImageFileGalleryItem == null))
				{
					this.mUIImageFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIImageFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Image File";
					this.mUIImageFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIImageFileGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIA5GalleryItem;
		private DXTestControl mUITabloidGalleryItem;
		private DXTestControl mUIPDFFileGalleryItem;
		private DXTestControl mUIHTMLFileGalleryItem;
		private DXTestControl mUIMHTFileGalleryItem;
		private DXTestControl mUIRTFFileGalleryItem;
		private DXTestControl mUIXLSFileGalleryItem;
		private DXTestControl mUIXLSXFileGalleryItem;
		private DXTestControl mUICSVFileGalleryItem;
		private DXTestControl mUITextFileGalleryItem;
		private DXTestControl mUIImageFileGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIWebColorsGalleryItemGroup1 : DXTestControl
	{
		public UIWebColorsGalleryItemGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Web Colors";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			#endregion
		}
		#region Properties
		public DXTestControl UICoralGalleryItem
		{
			get
			{
				if ((this.mUICoralGalleryItem == null))
				{
					this.mUICoralGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUICoralGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Coral";
					this.mUICoralGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUICoralGalleryItem;
			}
		}
		public DXTestControl UIDarkOrangeGalleryItem
		{
			get
			{
				if ((this.mUIDarkOrangeGalleryItem == null))
				{
					this.mUIDarkOrangeGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIDarkOrangeGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "DarkOrange";
					this.mUIDarkOrangeGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIDarkOrangeGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICoralGalleryItem;
		private DXTestControl mUIDarkOrangeGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStandardSkinsGalleryItemGroup : DXTestControl
	{
		public UIStandardSkinsGalleryItemGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Standard Skins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			#endregion
		}
		#region Properties
		public DXTestControl UIDevExpressStyleGalleryItem
		{
			get
			{
				if ((this.mUIDevExpressStyleGalleryItem == null))
				{
					this.mUIDevExpressStyleGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIDevExpressStyleGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "DevExpress Style";
					this.mUIDevExpressStyleGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIDevExpressStyleGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDevExpressStyleGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerFormCustom1 : DXTestControl
	{
		public UIPopupContainerFormCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownPopupContainerForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
			#endregion
		}
		#region Properties
		public UICustomPopupBarControMenu2 UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu2(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControMenu2 mUICustomPopupBarControMenu;
		private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu2 : DXMenu
	{
		public UICustomPopupBarControMenu2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			#endregion
		}
		#region Properties
		public UIPopupControlContaineClient1 UIPopupControlContaineClient
		{
			get
			{
				if ((this.mUIPopupControlContaineClient == null))
				{
					this.mUIPopupControlContaineClient = new UIPopupControlContaineClient1(this);
				}
				return this.mUIPopupControlContaineClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupControlContaineClient1 mUIPopupControlContaineClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupControlContaineClient1 : DXTestControl
	{
		public UIPopupControlContaineClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList1 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList1(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList1 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList1 : DXTestControl
	{
		public UIXtraTabControlTabList1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			#endregion
		}
		#region Properties
		public UIXtraTabPageClient1 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient1(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPageClient1 mUIXtraTabPageClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient1 : DXTestControl
	{
		public UIXtraTabPageClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			#endregion
		}
		#region Properties
		public DXTestControl UIColorCellsControlClient
		{
			get
			{
				if ((this.mUIColorCellsControlClient == null))
				{
					this.mUIColorCellsControlClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]ColorCellsControl[0]";
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorCellsControl";
					#endregion
				}
				return this.mUIColorCellsControlClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIColorCellsControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerBarConMenu : DXMenu
	{
		public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
			#endregion
		}
		#region Properties
		public UIPopupContainerBarConClient UIPopupContainerBarConClient
		{
			get
			{
				if ((this.mUIPopupContainerBarConClient == null))
				{
					this.mUIPopupContainerBarConClient = new UIPopupContainerBarConClient(this);
				}
				return this.mUIPopupContainerBarConClient;
			}
		}
		public DXTestControl UIPopupContainerBarConClient1
		{
			get
			{
				if ((this.mUIPopupContainerBarConClient1 == null))
				{
					this.mUIPopupContainerBarConClient1 = new DXTestControl(this);
					#region Search Criteria
					this.mUIPopupContainerBarConClient1.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlMultiplePagesControlContainer[0]";
					this.mUIPopupContainerBarConClient1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultiplePagesControlContainer";
					#endregion
				}
				return this.mUIPopupContainerBarConClient1;
			}
		}
		public UIPopupControlContaineClient2 UIPopupControlContaineClient
		{
			get
			{
				if ((this.mUIPopupControlContaineClient == null))
				{
					this.mUIPopupControlContaineClient = new UIPopupControlContaineClient2(this);
				}
				return this.mUIPopupControlContaineClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerBarConClient mUIPopupContainerBarConClient;
		private DXTestControl mUIPopupContainerBarConClient1;
		private UIPopupControlContaineClient2 mUIPopupControlContaineClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerBarConClient : DXTestControl
	{
		public UIPopupContainerBarConClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ScaleControlContainer";
			#endregion
		}
		#region Properties
		public UIGroupControlClient UIGroupControlClient
		{
			get
			{
				if ((this.mUIGroupControlClient == null))
				{
					this.mUIGroupControlClient = new UIGroupControlClient(this);
				}
				return this.mUIGroupControlClient;
			}
		}
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]SimpleButton[0]";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private UIGroupControlClient mUIGroupControlClient;
		private DXButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControlClient : DXTestControl
	{
		public UIGroupControlClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]GroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public DXCheckBox UIFittoCheckBox
		{
			get
			{
				if ((this.mUIFittoCheckBox == null))
				{
					this.mUIFittoCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIFittoCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]GroupControl[0]CheckEdit[1]";
					this.mUIFittoCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					#endregion
				}
				return this.mUIFittoCheckBox;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]GroupControl[0]SpinEdit[0]";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIFittoCheckBox;
		private DXTextEdit mUISpinEditEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupControlContaineClient2 : DXTestControl
	{
		public UIPopupControlContaineClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList2 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList2(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList2 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList2 : DXTestControl
	{
		public UIXtraTabControlTabList2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			#endregion
		}
		#region Properties
		public UIXtraTabPageClient2 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient2(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPageClient2 mUIXtraTabPageClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient2 : DXTestControl
	{
		public UIXtraTabPageClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			#endregion
		}
		#region Properties
		public DXTestControl UIColorCellsControlClient
		{
			get
			{
				if ((this.mUIColorCellsControlClient == null))
				{
					this.mUIColorCellsControlClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]ColorCellsControl[0]";
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorCellsControl";
					#endregion
				}
				return this.mUIColorCellsControlClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIColorCellsControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISubMenuBarControlMenu : DXMenu
	{
		public UISubMenuBarControlMenu(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SubMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SubMenuBarControl";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIPasteMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteMenuBaseButtonItem == null))
				{
					this.mUIPasteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIPasteMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarInListItemLink4MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarInListItemLink4MenuBaseButtonItem == null))
				{
					this.mUIBarInListItemLink4MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarInListItemLink4MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarInListItemLink[4]";
					this.mUIBarInListItemLink4MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarInListItemLink4MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarInListItemLink1MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarInListItemLink1MenuBaseButtonItem == null))
				{
					this.mUIBarInListItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarInListItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarInListItemLink[1]";
					this.mUIBarInListItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarInListItemLink1MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarInListItemLink2MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarInListItemLink2MenuBaseButtonItem == null))
				{
					this.mUIBarInListItemLink2MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarInListItemLink2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarInListItemLink[2]";
					this.mUIBarInListItemLink2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarInListItemLink2MenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIPasteMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarInListItemLink4MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarInListItemLink1MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarInListItemLink2MenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMinimizedRibbonPopupCustom : DXTestControl
	{
		public UIMinimizedRibbonPopupCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownMinimizedRibbonPopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MinimizedRibbonPopupForm";
			#endregion
		}
		#region Properties
		public UIRibbonMinimizedContrRibbon UIRibbonMinimizedContrRibbon
		{
			get
			{
				if ((this.mUIRibbonMinimizedContrRibbon == null))
				{
					this.mUIRibbonMinimizedContrRibbon = new UIRibbonMinimizedContrRibbon(this);
				}
				return this.mUIRibbonMinimizedContrRibbon;
			}
		}
		#endregion
		#region Fields
		private UIRibbonMinimizedContrRibbon mUIRibbonMinimizedContrRibbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonMinimizedContrRibbon : DXRibbon
	{
		public UIRibbonMinimizedContrRibbon(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownMinimizedRibbonPopupFormRibbonMinimizedControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonMinimizedControl";
			#endregion
		}
		#region Properties
		public UIRibbonPage0RibbonPage UIRibbonPage0RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage0RibbonPage == null))
				{
					this.mUIRibbonPage0RibbonPage = new UIRibbonPage0RibbonPage(this);
				}
				return this.mUIRibbonPage0RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage0RibbonPage mUIRibbonPage0RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage0RibbonPage : DXRibbonPage
	{
		public UIRibbonPage0RibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage0";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup5RibbonPageGroup UIRibbonPageGroup5RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup5RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup5RibbonPageGroup = new UIRibbonPageGroup5RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup5RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup5RibbonPageGroup mUIRibbonPageGroup5RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup5RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup5RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIPasteRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteRibbonBaseButtonItem == null))
				{
					this.mUIPasteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIPasteRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIPasteRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonMinimizedGroupCustom : DXTestControl
	{
		public UIRibbonMinimizedGroupCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownRibbonMinimizedGroupPopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonMinimizedGroupPopupForm";
			#endregion
		}
		#region Properties
		public UIRibbonOneGroupControRibbon UIRibbonOneGroupControRibbon
		{
			get
			{
				if ((this.mUIRibbonOneGroupControRibbon == null))
				{
					this.mUIRibbonOneGroupControRibbon = new UIRibbonOneGroupControRibbon(this);
				}
				return this.mUIRibbonOneGroupControRibbon;
			}
		}
		#endregion
		#region Fields
		private UIRibbonOneGroupControRibbon mUIRibbonOneGroupControRibbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonOneGroupControRibbon : DXRibbon
	{
		public UIRibbonOneGroupControRibbon(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownRibbonMinimizedGroupPopupFormRibbonOneGroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonOneGroupControl";
			#endregion
		}
		#region Properties
		public UIRibbonPage0RibbonPage1 UIRibbonPage0RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage0RibbonPage == null))
				{
					this.mUIRibbonPage0RibbonPage = new UIRibbonPage0RibbonPage1(this);
				}
				return this.mUIRibbonPage0RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage0RibbonPage1 mUIRibbonPage0RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage0RibbonPage1 : DXRibbonPage
	{
		public UIRibbonPage0RibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage0";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup2RibbonPageGroup UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		public UIRibbonPageGroup3RibbonPageGroup UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new UIRibbonPageGroup3RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		public UIPrintPreviewRibbonPaRibbonPageGroup UIPrintPreviewRibbonPaRibbonPageGroup
		{
			get
			{
				if ((this.mUIPrintPreviewRibbonPaRibbonPageGroup == null))
				{
					this.mUIPrintPreviewRibbonPaRibbonPageGroup = new UIPrintPreviewRibbonPaRibbonPageGroup(this);
				}
				return this.mUIPrintPreviewRibbonPaRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup2RibbonPageGroup mUIRibbonPageGroup2RibbonPageGroup;
		private UIRibbonPageGroup3RibbonPageGroup mUIRibbonPageGroup3RibbonPageGroup;
		private UIPrintPreviewRibbonPaRibbonPageGroup mUIPrintPreviewRibbonPaRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIUndoRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIUndoRibbonBaseButtonItem == null))
				{
					this.mUIUndoRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIUndoRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Undo";
					this.mUIUndoRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIUndoRibbonBaseButtonItem;
			}
		}
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIUndoRibbonBaseButtonItem;
		private DXRibbonItem mUIPasteRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup3RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup3RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			#endregion
		}
		#region Properties
		public UIFontStyleRibbonItem UIFontStyleRibbonItem
		{
			get
			{
				if ((this.mUIFontStyleRibbonItem == null))
				{
					this.mUIFontStyleRibbonItem = new UIFontStyleRibbonItem(this);
				}
				return this.mUIFontStyleRibbonItem;
			}
		}
		#endregion
		#region Fields
		private UIFontStyleRibbonItem mUIFontStyleRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontStyleRibbonItem : DXRibbonItem
	{
		public UIFontStyleRibbonItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "bgFontStyle";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIBoldRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIBoldRibbonBaseButtonItem == null))
				{
					this.mUIBoldRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIBoldRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "iBold";
					this.mUIBoldRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIBoldRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIBoldRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintPreviewRibbonPaRibbonPageGroup : DXRibbonPageGroup
	{
		public UIPrintPreviewRibbonPaRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewRibbonPageGroup5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIZoomOutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIZoomOutRibbonBaseButtonItem == null))
				{
					this.mUIZoomOutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIZoomOutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem13";
					this.mUIZoomOutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIZoomOutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIZoomOutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonQuickToolbarPoCustom : DXTestControl
	{
		public UIRibbonQuickToolbarPoCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownRibbonQuickToolbarPopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonQuickToolbarPopupForm";
			#endregion
		}
		#region Properties
		public UIRibbonPopupToolbarCoRibbon UIRibbonPopupToolbarCoRibbon
		{
			get
			{
				if ((this.mUIRibbonPopupToolbarCoRibbon == null))
				{
					this.mUIRibbonPopupToolbarCoRibbon = new UIRibbonPopupToolbarCoRibbon(this);
				}
				return this.mUIRibbonPopupToolbarCoRibbon;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPopupToolbarCoRibbon mUIRibbonPopupToolbarCoRibbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPopupToolbarCoRibbon : DXRibbon
	{
		public UIRibbonPopupToolbarCoRibbon(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownRibbonQuickToolbarPopupFormRibbonPopupToolbarControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPopupToolbarControl";
			#endregion
		}
		#region Properties
		public UIRibbonQuickAccessTooRibbonBar UIRibbonQuickAccessTooRibbonBar
		{
			get
			{
				if ((this.mUIRibbonQuickAccessTooRibbonBar == null))
				{
					this.mUIRibbonQuickAccessTooRibbonBar = new UIRibbonQuickAccessTooRibbonBar(this);
				}
				return this.mUIRibbonQuickAccessTooRibbonBar;
			}
		}
		#endregion
		#region Fields
		private UIRibbonQuickAccessTooRibbonBar mUIRibbonQuickAccessTooRibbonBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonQuickAccessTooRibbonBar : DXTestControl
	{
		public UIRibbonQuickAccessTooRibbonBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonQuickAccessToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonQuickAccessToolbar";
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIPasteRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteRibbonBaseButtonItem == null))
				{
					this.mUIPasteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIPasteRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIPasteRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom : DXTestControl
	{
		public UIBarDockControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			#endregion
		}
		#region Properties
		public UIFormatMenuBar UIFormatMenuBar
		{
			get
			{
				if ((this.mUIFormatMenuBar == null))
				{
					this.mUIFormatMenuBar = new UIFormatMenuBar(this);
				}
				return this.mUIFormatMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIFormatMenuBar mUIFormatMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuBar : DXMenu
	{
		public UIFormatMenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			#endregion
		}
		#region Properties
		public UIBarCustomizationItemBarItem UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new UIBarCustomizationItemBarItem(this);
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		#endregion
		#region Fields
		private UIBarCustomizationItemBarItem mUIBarCustomizationItemBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarCustomizationItemBarItem : DXMenuItem
	{
		public UIBarCustomizationItemBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			#endregion
		}
		#region Properties
		public UIAddorRemoveButtonsMenuItem2 UIAddorRemoveButtonsMenuItem
		{
			get
			{
				if ((this.mUIAddorRemoveButtonsMenuItem == null))
				{
					this.mUIAddorRemoveButtonsMenuItem = new UIAddorRemoveButtonsMenuItem2(this);
				}
				return this.mUIAddorRemoveButtonsMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIAddorRemoveButtonsMenuItem2 mUIAddorRemoveButtonsMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddorRemoveButtonsMenuItem2 : DXMenuItem
	{
		public UIAddorRemoveButtonsMenuItem2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add or Remove Buttons";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UICustomizeMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICustomizeMenuBaseButtonItem == null))
				{
					this.mUICustomizeMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICustomizeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Customize ...";
					this.mUICustomizeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUICustomizeMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUICustomizeMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom1 : DXTestControl
	{
		public UIBarDockControlCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar : DXMenu
	{
		public UIToolbarMenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			#endregion
		}
		#region Properties
		public UIMultiplePagesBarItem UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		#endregion
		#region Fields
		private UIMultiplePagesBarItem mUIMultiplePagesBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem : DXMenuItem
	{
		public UIMultiplePagesBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPcMainClient1 : DXTestControl
	{
		public UIPcMainClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			#endregion
		}
		#region Properties
		public UIGcContainerClient3 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient3(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient3 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient3 : DXTestControl
	{
		public UIGcContainerClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public UIEditorItemsCustom UIEditorItemsCustom
		{
			get
			{
				if ((this.mUIEditorItemsCustom == null))
				{
					this.mUIEditorItemsCustom = new UIEditorItemsCustom(this);
				}
				return this.mUIEditorItemsCustom;
			}
		}
		#endregion
		#region Fields
		private UIEditorItemsCustom mUIEditorItemsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorItemsCustom : DXTestControl
	{
		public UIEditorItemsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItems";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorItems";
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom2 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom2(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom2 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom2 : DXTestControl
	{
		public UIBarDockControlCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			#endregion
		}
		#region Properties
		public UICustom1MenuBar UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		public UICustom2MenuBar UICustom2MenuBar
		{
			get
			{
				if ((this.mUICustom2MenuBar == null))
				{
					this.mUICustom2MenuBar = new UICustom2MenuBar(this);
				}
				return this.mUICustom2MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar mUICustom1MenuBar;
		private UICustom2MenuBar mUICustom2MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar : DXMenu
	{
		public UICustom1MenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			#endregion
		}
		#region Properties
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Calc Edit:";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUICalcEditPopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom2MenuBar : DXMenu
	{
		public UICustom2MenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxComboBox
		{
			get
			{
				if ((this.mUIComboBoxComboBox == null))
				{
					this.mUIComboBoxComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Combo Box:";
					this.mUIComboBoxComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUIComboBoxComboBox;
			}
		}
		public DXDateTimePicker UIDateEditDateTimePicker
		{
			get
			{
				if ((this.mUIDateEditDateTimePicker == null))
				{
					this.mUIDateEditDateTimePicker = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.Name] = "Date Edit:";
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
					#endregion
				}
				return this.mUIDateEditDateTimePicker;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxComboBox;
		private DXDateTimePicker mUIDateEditDateTimePicker;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client18 : DXTestControl
	{
		public UIPanelControl1Client18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			#endregion
		}
		#region Properties
		public UIGcContainerClient4 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient4(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient4 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient4 : DXTestControl
	{
		public UIGcContainerClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public UIFilteringCustom UIFilteringCustom
		{
			get
			{
				if ((this.mUIFilteringCustom == null))
				{
					this.mUIFilteringCustom = new UIFilteringCustom(this);
				}
				return this.mUIFilteringCustom;
			}
		}
		#endregion
		#region Fields
		private UIFilteringCustom mUIFilteringCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilteringCustom : DXTestControl
	{
		public UIFilteringCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Filtering";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "Filtering";
			#endregion
		}
		#region Properties
		public UIGridControl1Table1 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table1(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table1 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table1 : DXGrid
	{
		public UIGridControl1Table1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			#endregion
		}
		#region Properties
		public UIFilterComboBoxCheckedComboBox UIFilterComboBoxCheckedComboBox
		{
			get
			{
				if ((this.mUIFilterComboBoxCheckedComboBox == null))
				{
					this.mUIFilterComboBoxCheckedComboBox = new UIFilterComboBoxCheckedComboBox(this);
				}
				return this.mUIFilterComboBoxCheckedComboBox;
			}
		}
		public UIFilterComboBoxCheckedComboBox1 UIFilterComboBoxCheckedComboBox1
		{
			get
			{
				if ((this.mUIFilterComboBoxCheckedComboBox1 == null))
				{
					this.mUIFilterComboBoxCheckedComboBox1 = new UIFilterComboBoxCheckedComboBox1(this);
				}
				return this.mUIFilterComboBoxCheckedComboBox1;
			}
		}
		#endregion
		#region Fields
		private UIFilterComboBoxCheckedComboBox mUIFilterComboBoxCheckedComboBox;
		private UIFilterComboBoxCheckedComboBox1 mUIFilterComboBoxCheckedComboBox1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterComboBoxCheckedComboBox : DXCheckedComboBox
	{
		public UIFilterComboBoxCheckedComboBox(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterComboBox";
			#endregion
		}
		#region Properties
		public UIFilterCheckedPopupCoWindow UIFilterCheckedPopupCoWindow
		{
			get
			{
				if ((this.mUIFilterCheckedPopupCoWindow == null))
				{
					this.mUIFilterCheckedPopupCoWindow = new UIFilterCheckedPopupCoWindow(this);
				}
				return this.mUIFilterCheckedPopupCoWindow;
			}
		}
		#endregion
		#region Fields
		private UIFilterCheckedPopupCoWindow mUIFilterCheckedPopupCoWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterCheckedPopupCoWindow : DXWindow
	{
		public UIFilterCheckedPopupCoWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterCheckedPopupContainerForm";
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterComboBoxCheckedComboBox1 : DXCheckedComboBox
	{
		public UIFilterComboBoxCheckedComboBox1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterComboBox";
			#endregion
		}
		#region Properties
		public UIFilterCheckedPopupCoWindow1 UIFilterCheckedPopupCoWindow
		{
			get
			{
				if ((this.mUIFilterCheckedPopupCoWindow == null))
				{
					this.mUIFilterCheckedPopupCoWindow = new UIFilterCheckedPopupCoWindow1(this);
				}
				return this.mUIFilterCheckedPopupCoWindow;
			}
		}
		#endregion
		#region Fields
		private UIFilterCheckedPopupCoWindow1 mUIFilterCheckedPopupCoWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterCheckedPopupCoWindow1 : DXWindow
	{
		public UIFilterCheckedPopupCoWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterCheckedPopupContainerForm";
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraMessageBoxFormWindow : DXWindow
	{
		public UIXtraMessageBoxFormWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Customize";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomizeSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu11 : DXMenu
	{
		public UIPopupMenuBarControlMenu11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UINewGroupMenuBaseButtonItem
		{
			get
			{
				if ((this.mUINewGroupMenuBaseButtonItem == null))
				{
					this.mUINewGroupMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUINewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "New Group";
					this.mUINewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUINewGroupMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UINewTabMenuBaseButtonItem
		{
			get
			{
				if ((this.mUINewTabMenuBaseButtonItem == null))
				{
					this.mUINewTabMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUINewTabMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "New Tab";
					this.mUINewTabMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUINewTabMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UINewCategoryMenuBaseButtonItem
		{
			get
			{
				if ((this.mUINewCategoryMenuBaseButtonItem == null))
				{
					this.mUINewCategoryMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUINewCategoryMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "New Category";
					this.mUINewCategoryMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUINewCategoryMenuBaseButtonItem;
			}
		}
		public DXMenuEditItem UIExactMenuEditItem
		{
			get
			{
				if ((this.mUIExactMenuEditItem == null))
				{
					this.mUIExactMenuEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIExactMenuEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIExactMenuEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuEditItem";
					#endregion
				}
				return this.mUIExactMenuEditItem;
			}
		}
		public DXTextEdit UIBarEditItemLink0Edit
		{
			get
			{
				if ((this.mUIBarEditItemLink0Edit == null))
				{
					this.mUIBarEditItemLink0Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIBarEditItemLink0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIBarEditItemLink0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					#endregion
				}
				return this.mUIBarEditItemLink0Edit;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink6MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink6MenuBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink6MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink6MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[6]";
					this.mUIBarButtonItemLink6MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarButtonItemLink6MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarButtonItemLink0MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink1MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink1MenuBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
					this.mUIBarCheckItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUIBarCheckItemLink1MenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUINewGroupMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUINewTabMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUINewCategoryMenuBaseButtonItem;
		private DXMenuEditItem mUIExactMenuEditItem;
		private DXTextEdit mUIBarEditItemLink0Edit;
		private DXMenuBaseButtonItem mUIBarButtonItemLink6MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink1MenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu21 : DXMenu
	{
		public UIPopupMenuBarControlMenu21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UINewGroupMenuBaseButtonItem
		{
			get
			{
				if ((this.mUINewGroupMenuBaseButtonItem == null))
				{
					this.mUINewGroupMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUINewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "New Group";
					this.mUINewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUINewGroupMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUINewGroupMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupMenuBarControlMenu31 : DXMenu
	{
		public UIPopupMenuBarControlMenu31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UINewGroupMenuBaseButtonItem
		{
			get
			{
				if ((this.mUINewGroupMenuBaseButtonItem == null))
				{
					this.mUINewGroupMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUINewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "New Group";
					this.mUINewGroupMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					#endregion
				}
				return this.mUINewGroupMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUINewGroupMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIButtonClickWindow : DXWindow
	{
		public UIButtonClickWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Button Click";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			#endregion
		}
		#region Properties
		public DXButton UICloseButton
		{
			get
			{
				if ((this.mUICloseButton == null))
				{
					this.mUICloseButton = new DXButton(this);
					#region Search Criteria
					this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
					this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
					#endregion
				}
				return this.mUICloseButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUICloseButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow11 : WinWindow
	{
		public UIItemWindow11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIGalleryDropDownBarCoMenu7 UIGalleryDropDownBarCoMenu
		{
			get
			{
				if ((this.mUIGalleryDropDownBarCoMenu == null))
				{
					this.mUIGalleryDropDownBarCoMenu = new UIGalleryDropDownBarCoMenu7(this);
				}
				return this.mUIGalleryDropDownBarCoMenu;
			}
		}
		#endregion
		#region Fields
		private UIGalleryDropDownBarCoMenu7 mUIGalleryDropDownBarCoMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryDropDownBarCoMenu7 : DXMenu
	{
		public UIGalleryDropDownBarCoMenu7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
			#endregion
		}
		#region Properties
		public UIStandardSkinsGalleryItemGroup1 UIStandardSkinsGalleryItemGroup
		{
			get
			{
				if ((this.mUIStandardSkinsGalleryItemGroup == null))
				{
					this.mUIStandardSkinsGalleryItemGroup = new UIStandardSkinsGalleryItemGroup1(this);
				}
				return this.mUIStandardSkinsGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIStandardSkinsGalleryItemGroup1 mUIStandardSkinsGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStandardSkinsGalleryItemGroup1 : DXTestControl
	{
		public UIStandardSkinsGalleryItemGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Standard Skins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			#endregion
		}
		#region Properties
		public DXTestControl UIDevExpressStyleGalleryItem
		{
			get
			{
				if ((this.mUIDevExpressStyleGalleryItem == null))
				{
					this.mUIDevExpressStyleGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIDevExpressStyleGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "DevExpress Style";
					this.mUIDevExpressStyleGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					#endregion
				}
				return this.mUIDevExpressStyleGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDevExpressStyleGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerBarConMenu1 : DXMenu
	{
		public UIPopupContainerBarConMenu1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
			#endregion
		}
		#region Properties
		public DXTestControl UIPopupContainerBarConClient
		{
			get
			{
				if ((this.mUIPopupContainerBarConClient == null))
				{
					this.mUIPopupContainerBarConClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIPopupContainerBarConClient.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlMultiplePagesControlContainer[0]";
					this.mUIPopupContainerBarConClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultiplePagesControlContainer";
					#endregion
				}
				return this.mUIPopupContainerBarConClient;
			}
		}
		public UIPopupContainerBarConClient1 UIPopupContainerBarConClient1
		{
			get
			{
				if ((this.mUIPopupContainerBarConClient1 == null))
				{
					this.mUIPopupContainerBarConClient1 = new UIPopupContainerBarConClient1(this);
				}
				return this.mUIPopupContainerBarConClient1;
			}
		}
		public UIPopupContainerBarConClient2 UIPopupContainerBarConClient2
		{
			get
			{
				if ((this.mUIPopupContainerBarConClient2 == null))
				{
					this.mUIPopupContainerBarConClient2 = new UIPopupContainerBarConClient2(this);
				}
				return this.mUIPopupContainerBarConClient2;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIPopupContainerBarConClient;
		private UIPopupContainerBarConClient1 mUIPopupContainerBarConClient1;
		private UIPopupContainerBarConClient2 mUIPopupContainerBarConClient2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerBarConClient1 : DXTestControl
	{
		public UIPopupContainerBarConClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ScaleControlContainer";
			#endregion
		}
		#region Properties
		public UIGroupControlClient1 UIGroupControlClient
		{
			get
			{
				if ((this.mUIGroupControlClient == null))
				{
					this.mUIGroupControlClient = new UIGroupControlClient1(this);
				}
				return this.mUIGroupControlClient;
			}
		}
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]SimpleButton[0]";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private UIGroupControlClient1 mUIGroupControlClient;
		private DXButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControlClient1 : DXTestControl
	{
		public UIGroupControlClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]GroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]GroupControl[0]SpinEdit[0]";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXCheckBox UIFittoCheckBox
		{
			get
			{
				if ((this.mUIFittoCheckBox == null))
				{
					this.mUIFittoCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIFittoCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]GroupControl[0]CheckEdit[1]";
					this.mUIFittoCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					#endregion
				}
				return this.mUIFittoCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		private DXCheckBox mUIFittoCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerBarConClient2 : DXTestControl
	{
		public UIPopupContainerBarConClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ScaleControlContainer";
			#endregion
		}
		#region Properties
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControlScaleControlContainer[0]SimpleButton[0]";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		public UILayoutControl1Custom1 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom1(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIOKButton;
		private UILayoutControl1Custom1 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom1 : DXTestControl
	{
		public UILayoutControl1Custom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			#endregion
		}
		#region Properties
		public UIRootLayoutGroup UIRootLayoutGroup
		{
			get
			{
				if ((this.mUIRootLayoutGroup == null))
				{
					this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
				}
				return this.mUIRootLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UIRootLayoutGroup mUIRootLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRootLayoutGroup : DXBaseLayoutItem
	{
		public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			#endregion
		}
		#region Properties
		public UIGroupLayoutGroup UIGroupLayoutGroup
		{
			get
			{
				if ((this.mUIGroupLayoutGroup == null))
				{
					this.mUIGroupLayoutGroup = new UIGroupLayoutGroup(this);
				}
				return this.mUIGroupLayoutGroup;
			}
		}
		public UIGrpButtonsLayoutGroup UIGrpButtonsLayoutGroup
		{
			get
			{
				if ((this.mUIGrpButtonsLayoutGroup == null))
				{
					this.mUIGrpButtonsLayoutGroup = new UIGrpButtonsLayoutGroup(this);
				}
				return this.mUIGrpButtonsLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UIGroupLayoutGroup mUIGroupLayoutGroup;
		private UIGrpButtonsLayoutGroup mUIGrpButtonsLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupLayoutGroup : DXBaseLayoutItem
	{
		public UIGroupLayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "group";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			#endregion
		}
		#region Properties
		public UILayoutControlItem3LayoutControlItem UILayoutControlItem3LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem3LayoutControlItem == null))
				{
					this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem(this);
				}
				return this.mUILayoutControlItem3LayoutControlItem;
			}
		}
		public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem2LayoutControlItem == null))
				{
					this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
				}
				return this.mUILayoutControlItem2LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem3LayoutControlItem mUILayoutControlItem3LayoutControlItem;
		private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem3LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem3LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinScalePercentEdit
		{
			get
			{
				if ((this.mUISpinScalePercentEdit == null))
				{
					this.mUISpinScalePercentEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinScalePercentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "spinScalePercent";
					this.mUISpinScalePercentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					#endregion
				}
				return this.mUISpinScalePercentEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinScalePercentEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			#endregion
		}
		#region Properties
		public DXCheckBox UIRadioFitToPageWidthCheckBox
		{
			get
			{
				if ((this.mUIRadioFitToPageWidthCheckBox == null))
				{
					this.mUIRadioFitToPageWidthCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIRadioFitToPageWidthCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "radioFitToPageWidth";
					this.mUIRadioFitToPageWidthCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					#endregion
				}
				return this.mUIRadioFitToPageWidthCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIRadioFitToPageWidthCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGrpButtonsLayoutGroup : DXBaseLayoutItem
	{
		public UIGrpButtonsLayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpButtons";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			#endregion
		}
		#region Properties
		public UILayoutControlItem7LayoutControlItem1 UILayoutControlItem7LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem7LayoutControlItem == null))
				{
					this.mUILayoutControlItem7LayoutControlItem = new UILayoutControlItem7LayoutControlItem1(this);
				}
				return this.mUILayoutControlItem7LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem7LayoutControlItem1 mUILayoutControlItem7LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem7LayoutControlItem1 : DXBaseLayoutItem
	{
		public UILayoutControlItem7LayoutControlItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem7";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			#endregion
		}
		#region Properties
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow1 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow1()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "The XtraGrid Suite by DevExpress (C# code) - Table View", PropertyExpressionOperator.Contains));
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View (updated)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client19 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client19(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIPanelControl1Client110 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client110(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client19 mUIPanelControl1Client;
		private UIPanelControl1Client110 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client19 : DXTestControl
	{
		public UIPanelControl1Client19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UIGcContainerClient5 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient5(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient5 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient5 : DXTestControl
	{
		public UIGcContainerClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UITableViewCustom UITableViewCustom
		{
			get
			{
				if ((this.mUITableViewCustom == null))
				{
					this.mUITableViewCustom = new UITableViewCustom(this);
				}
				return this.mUITableViewCustom;
			}
		}
		#endregion
		#region Fields
		private UITableViewCustom mUITableViewCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITableViewCustom : DXTestControl
	{
		public UITableViewCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "TableView";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TableView";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UIGridControl1Table2 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table2(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table2 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table2 : DXGrid
	{
		public UIGridControl1Table2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1TextEdit[View]gridView1[Row]10[Column]gridColumn5";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXColumnHeader UIGridColumn3ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn3ColumnHeader == null))
				{
					this.mUIGridColumn3ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn3ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn3";
					this.mUIGridColumn3ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn3ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn3ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn3ColumnHeader;
			}
		}
		public DXColumnHeader UIGridColumn2ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn2ColumnHeader == null))
				{
					this.mUIGridColumn2ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn2";
					this.mUIGridColumn2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn2ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn2ColumnHeader;
			}
		}
		public DXColumnHeader UIGridColumn5ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn5ColumnHeader == null))
				{
					this.mUIGridColumn5ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn5ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn5";
					this.mUIGridColumn5ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn5ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn5ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn5ColumnHeader;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow == null))
				{
					this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-1[Column]gridColumn2";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow1
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow1 == null))
				{
					this.mUIGridControlGroupRowGroupRow1 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-2[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow1;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow2
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow2 == null))
				{
					this.mUIGridControlGroupRowGroupRow2 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-3[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow2;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow3
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow3 == null))
				{
					this.mUIGridControlGroupRowGroupRow3 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-4[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow3;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow4
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow4 == null))
				{
					this.mUIGridControlGroupRowGroupRow4 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-5[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow4;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow5
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow5 == null))
				{
					this.mUIGridControlGroupRowGroupRow5 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-6[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow5;
			}
		}
		public DXColumnHeader UIGridColumn2ColumnHeader1
		{
			get
			{
				if ((this.mUIGridColumn2ColumnHeader1 == null))
				{
					this.mUIGridColumn2ColumnHeader1 = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn2ColumnHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupPanelColumn[View]gridView1[Column]gridColumn2";
					this.mUIGridColumn2ColumnHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIGridColumn2ColumnHeader1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn2ColumnHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn2ColumnHeader1;
			}
		}
		public DXColumnHeader UIGridColumn5ColumnHeader1
		{
			get
			{
				if ((this.mUIGridColumn5ColumnHeader1 == null))
				{
					this.mUIGridColumn5ColumnHeader1 = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn5ColumnHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupPanelColumn[View]gridView1[Column]gridColumn5";
					this.mUIGridColumn5ColumnHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIGridColumn5ColumnHeader1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn5ColumnHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn5ColumnHeader1;
			}
		}
		public DXTestControl UIGridControlGroupPaneCustom
		{
			get
			{
				if ((this.mUIGridControlGroupPaneCustom == null))
				{
					this.mUIGridControlGroupPaneCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupPanel[View]gridView1";
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanel";
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupPaneCustom.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlGroupPaneCustom;
			}
		}
		public DXCell UIAliceMuttonCell
		{
			get
			{
				if ((this.mUIAliceMuttonCell == null))
				{
					this.mUIAliceMuttonCell = new DXCell(this);
					#region Search Criteria
					this.mUIAliceMuttonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]gridColumn2";
					this.mUIAliceMuttonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIAliceMuttonCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAliceMuttonCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIAliceMuttonCell;
			}
		}
		public DXCell UIItem10251Cell
		{
			get
			{
				if ((this.mUIItem10251Cell == null))
				{
					this.mUIItem10251Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem10251Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]gridColumn1";
					this.mUIItem10251Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem10251Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem10251Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem10251Cell;
			}
		}
		public DXCell UIItem1680Cell
		{
			get
			{
				if ((this.mUIItem1680Cell == null))
				{
					this.mUIItem1680Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem1680Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]gridColumn3";
					this.mUIItem1680Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem1680Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem1680Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem1680Cell;
			}
		}
		public DXCell UIItem6Cell
		{
			get
			{
				if ((this.mUIItem6Cell == null))
				{
					this.mUIItem6Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem6Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]gridColumn4";
					this.mUIItem6Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem6Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem6Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem6Cell;
			}
		}
		public DXCell UIItem500Cell
		{
			get
			{
				if ((this.mUIItem500Cell == null))
				{
					this.mUIItem500Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem500Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]gridColumn5";
					this.mUIItem500Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem500Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem500Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem500Cell;
			}
		}
		public DXButton UIGridControlFilterPanButton
		{
			get
			{
				if ((this.mUIGridControlFilterPanButton == null))
				{
					this.mUIGridControlFilterPanButton = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlFilterPanButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelCloseButton[View]gridView1";
					this.mUIGridControlFilterPanButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelCloseButton";
					this.mUIGridControlFilterPanButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlFilterPanButton;
			}
		}
		public DXCheckBox UIGridControlFilterPanCheckBox
		{
			get
			{
				if ((this.mUIGridControlFilterPanCheckBox == null))
				{
					this.mUIGridControlFilterPanCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIGridControlFilterPanCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelActiveButton[View]gridView1";
					this.mUIGridControlFilterPanCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelActiveButton";
					this.mUIGridControlFilterPanCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlFilterPanCheckBox;
			}
		}
		public DXTextEdit UITextEditEdit1
		{
			get
			{
				if ((this.mUITextEditEdit1 == null))
				{
					this.mUITextEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1TextEdit[View]gridView1[Row]-2147483647[Column]gridColumn1";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUITextEditEdit1;
			}
		}
		public DXPopupEdit UILookUpEditPopupEdit
		{
			get
			{
				if ((this.mUILookUpEditPopupEdit == null))
				{
					this.mUILookUpEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1LookUpEdit[View]gridView1[Row]-2147483647[Column]gridColumn2";
					this.mUILookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILookUpEditPopupEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUILookUpEditPopupEdit;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CalcEdit[View]gridView1[Row]-2147483647[Column]gridColumn3";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]gridView1[Row]-2147483647[Column]gridColumn4";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXTextEdit UITextEditEdit11
		{
			get
			{
				if ((this.mUITextEditEdit11 == null))
				{
					this.mUITextEditEdit11 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit11.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1TextEdit[View]gridView1[Row]-2147483647[Column]gridColumn5";
					this.mUITextEditEdit11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit11.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit11.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUITextEditEdit11;
			}
		}
		public DXCell UIItem1Cell
		{
			get
			{
				if ((this.mUIItem1Cell == null))
				{
					this.mUIItem1Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]2155[Column]gridColumn1";
					this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem1Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem1Cell;
			}
		}
		public DXCell UIFiloMixCell
		{
			get
			{
				if ((this.mUIFiloMixCell == null))
				{
					this.mUIFiloMixCell = new DXCell(this);
					#region Search Criteria
					this.mUIFiloMixCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]2155[Column]gridColumn2";
					this.mUIFiloMixCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIFiloMixCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFiloMixCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIFiloMixCell;
			}
		}
		public DXCell UIItem76500Cell
		{
			get
			{
				if ((this.mUIItem76500Cell == null))
				{
					this.mUIItem76500Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem76500Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]2155[Column]gridColumn3";
					this.mUIItem76500Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem76500Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem76500Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem76500Cell;
			}
		}
		public DXCell UIItem100Cell
		{
			get
			{
				if ((this.mUIItem100Cell == null))
				{
					this.mUIItem100Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]2155[Column]gridColumn4";
					this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem100Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem100Cell;
			}
		}
		public DXCell UIItem000Cell
		{
			get
			{
				if ((this.mUIItem000Cell == null))
				{
					this.mUIItem000Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]2155[Column]gridColumn5";
					this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem000Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem000Cell;
			}
		}
		public DXButton UIGridControlRowGroupBButton
		{
			get
			{
				if ((this.mUIGridControlRowGroupBButton == null))
				{
					this.mUIGridControlRowGroupBButton = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowGroupButton[View]gridView1[Row]-1";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowGroupButton";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowGroupBButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlRowGroupBButton;
			}
		}
		public DXTestControl UIGridControlFilterPanCustom
		{
			get
			{
				if ((this.mUIGridControlFilterPanCustom == null))
				{
					this.mUIGridControlFilterPanCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanel[View]gridView1";
					this.mUIGridControlFilterPanCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanel";
					this.mUIGridControlFilterPanCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanCustom.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlFilterPanCustom;
			}
		}
		public DXTestControl UIGridControlFilterPanText
		{
			get
			{
				if ((this.mUIGridControlFilterPanText == null))
				{
					this.mUIGridControlFilterPanText = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelText[View]gridView1";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelText";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanText.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlFilterPanText;
			}
		}
		public DXColumnHeader UIGridColumn4ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn4ColumnHeader == null))
				{
					this.mUIGridColumn4ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn4ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn4";
					this.mUIGridColumn4ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn4ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn4ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn4ColumnHeader;
			}
		}
		public DXScrollBar UIVCrkScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVCrkScrollBarScrollBarControl == null))
				{
					this.mUIVCrkScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1VCrkScrollBar";
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VCrkScrollBar";
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIVCrkScrollBarScrollBarControl.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIVCrkScrollBarScrollBarControl;
			}
		}
		public DXCell UIItem2Cell
		{
			get
			{
				if ((this.mUIItem2Cell == null))
				{
					this.mUIItem2Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]21[Column]gridColumn4";
					this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem2Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem2Cell;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditEdit;
		private DXColumnHeader mUIGridColumn3ColumnHeader;
		private DXColumnHeader mUIGridColumn2ColumnHeader;
		private DXColumnHeader mUIGridColumn5ColumnHeader;
		private DXGroupRow mUIGridControlGroupRowGroupRow;
		private DXGroupRow mUIGridControlGroupRowGroupRow1;
		private DXGroupRow mUIGridControlGroupRowGroupRow2;
		private DXGroupRow mUIGridControlGroupRowGroupRow3;
		private DXGroupRow mUIGridControlGroupRowGroupRow4;
		private DXGroupRow mUIGridControlGroupRowGroupRow5;
		private DXColumnHeader mUIGridColumn2ColumnHeader1;
		private DXColumnHeader mUIGridColumn5ColumnHeader1;
		private DXTestControl mUIGridControlGroupPaneCustom;
		private DXCell mUIAliceMuttonCell;
		private DXCell mUIItem10251Cell;
		private DXCell mUIItem1680Cell;
		private DXCell mUIItem6Cell;
		private DXCell mUIItem500Cell;
		private DXButton mUIGridControlFilterPanButton;
		private DXCheckBox mUIGridControlFilterPanCheckBox;
		private DXTextEdit mUITextEditEdit1;
		private DXPopupEdit mUILookUpEditPopupEdit;
		private DXPopupEdit mUICalcEditPopupEdit;
		private DXTextEdit mUISpinEditEdit;
		private DXTextEdit mUITextEditEdit11;
		private DXCell mUIItem1Cell;
		private DXCell mUIFiloMixCell;
		private DXCell mUIItem76500Cell;
		private DXCell mUIItem100Cell;
		private DXCell mUIItem000Cell;
		private DXButton mUIGridControlRowGroupBButton;
		private DXTestControl mUIGridControlFilterPanCustom;
		private DXTestControl mUIGridControlFilterPanText;
		private DXColumnHeader mUIGridColumn4ColumnHeader;
		private DXScrollBar mUIVCrkScrollBarScrollBarControl;
		private DXCell mUIItem2Cell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client110 : DXTestControl
	{
		public UIPanelControl1Client110(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UIGcContainerClient6 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient6(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient6 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient6 : DXTestControl
	{
		public UIGcContainerClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UITableViewCustom1 UITableViewCustom
		{
			get
			{
				if ((this.mUITableViewCustom == null))
				{
					this.mUITableViewCustom = new UITableViewCustom1(this);
				}
				return this.mUITableViewCustom;
			}
		}
		#endregion
		#region Fields
		private UITableViewCustom1 mUITableViewCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITableViewCustom1 : DXTestControl
	{
		public UITableViewCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "TableView";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TableView";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UIGridControl1Table3 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table3(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table3 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table3 : DXGrid
	{
		public UIGridControl1Table3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIGridColumn3ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn3ColumnHeader == null))
				{
					this.mUIGridColumn3ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn3ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn3";
					this.mUIGridColumn3ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn3ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn3ColumnHeader;
			}
		}
		public DXCell UIItem200Cell
		{
			get
			{
				if ((this.mUIItem200Cell == null))
				{
					this.mUIItem200Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]gridColumn3";
					this.mUIItem200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem200Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem200Cell;
			}
		}
		public DXCell UIItem250Cell
		{
			get
			{
				if ((this.mUIItem250Cell == null))
				{
					this.mUIItem250Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem250Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]16[Column]gridColumn3";
					this.mUIItem250Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem250Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIItem250Cell;
			}
		}
		public DXScrollBar UIVCrkScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVCrkScrollBarScrollBarControl == null))
				{
					this.mUIVCrkScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1VCrkScrollBar";
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VCrkScrollBar";
					this.mUIVCrkScrollBarScrollBarControl.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIVCrkScrollBarScrollBarControl;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIGridColumn3ColumnHeader;
		private DXCell mUIItem200Cell;
		private DXCell mUIItem250Cell;
		private DXScrollBar mUIVCrkScrollBarScrollBarControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow12 : WinWindow
	{
		public UIItemWindow12()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Custom AutoFilter";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIPanelControlClient UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient : DXTestControl
	{
		public UIPanelControlClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIGroupControlClient2 UIGroupControlClient
		{
			get
			{
				if ((this.mUIGroupControlClient == null))
				{
					this.mUIGroupControlClient = new UIGroupControlClient2(this);
				}
				return this.mUIGroupControlClient;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Custom AutoFilter");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIGroupControlClient2 mUIGroupControlClient;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControlClient2 : DXTestControl
	{
		public UIGroupControlClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "grbMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "piFirst";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "grbMainCalcEdit[0]";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "piSecond";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit1
		{
			get
			{
				if ((this.mUICalcEditPopupEdit1 == null))
				{
					this.mUICalcEditPopupEdit1 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "grbMainCalcEdit[1]";
					this.mUICalcEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICalcEditPopupEdit1;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXPopupEdit mUICalcEditPopupEdit;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXPopupEdit mUICalcEditPopupEdit1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterEditorWindow : WinWindow
	{
		public UIFilterEditorWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Filter Editor";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Filter Editor");
			#endregion
		}
		#region Properties
		public UIGridFilterControlFilterControl UIGridFilterControlFilterControl
		{
			get
			{
				if ((this.mUIGridFilterControlFilterControl == null))
				{
					this.mUIGridFilterControlFilterControl = new UIGridFilterControlFilterControl(this);
				}
				return this.mUIGridFilterControlFilterControl;
			}
		}
		public UIPanelControlClient1 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient1(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIGridFilterControlFilterControl mUIGridFilterControlFilterControl;
		private UIPanelControlClient1 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridFilterControlFilterControl : DXFilterControl
	{
		public UIGridFilterControlFilterControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridFilterControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Filter Editor");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlSpinEditNode1Element2";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlCalcEditNode3Element2";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICalcEditPopupEdit.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit1
		{
			get
			{
				if ((this.mUICalcEditPopupEdit1 == null))
				{
					this.mUICalcEditPopupEdit1 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlCalcEditNode3Element3";
					this.mUICalcEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICalcEditPopupEdit1.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUICalcEditPopupEdit1;
			}
		}
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlTextEditNode4Element2";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit2
		{
			get
			{
				if ((this.mUICalcEditPopupEdit2 == null))
				{
					this.mUICalcEditPopupEdit2 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlCalcEditNode6Element2";
					this.mUICalcEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICalcEditPopupEdit2.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUICalcEditPopupEdit2;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit3
		{
			get
			{
				if ((this.mUICalcEditPopupEdit3 == null))
				{
					this.mUICalcEditPopupEdit3 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlCalcEditNode6Element3";
					this.mUICalcEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICalcEditPopupEdit3;
			}
		}
		public DXTextEdit UITextEditEdit1
		{
			get
			{
				if ((this.mUITextEditEdit1 == null))
				{
					this.mUITextEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlTextEditNode7Element2";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit1.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUITextEditEdit1;
			}
		}
		public DXPopupEdit UILookUpEditPopupEdit
		{
			get
			{
				if ((this.mUILookUpEditPopupEdit == null))
				{
					this.mUILookUpEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlLookUpEditNode9Element2";
					this.mUILookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUILookUpEditPopupEdit;
			}
		}
		public DXPopupEdit UILookUpEditPopupEdit1
		{
			get
			{
				if ((this.mUILookUpEditPopupEdit1 == null))
				{
					this.mUILookUpEditPopupEdit1 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlLookUpEditNode10Element2";
					this.mUILookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILookUpEditPopupEdit1.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUILookUpEditPopupEdit1;
			}
		}
		public DXTextEdit UISpinEditEdit1
		{
			get
			{
				if ((this.mUISpinEditEdit1 == null))
				{
					this.mUISpinEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridFilterControlSpinEditNode7Element2";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit1.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUISpinEditEdit1;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		private DXPopupEdit mUICalcEditPopupEdit;
		private DXPopupEdit mUICalcEditPopupEdit1;
		private DXTextEdit mUITextEditEdit;
		private DXPopupEdit mUICalcEditPopupEdit2;
		private DXPopupEdit mUICalcEditPopupEdit3;
		private DXTextEdit mUITextEditEdit1;
		private DXPopupEdit mUILookUpEditPopupEdit;
		private DXPopupEdit mUILookUpEditPopupEdit1;
		private DXTextEdit mUISpinEditEdit1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient1 : DXTestControl
	{
		public UIPanelControlClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlsPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Filter Editor");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXButton UISbApplyButton
		{
			get
			{
				if ((this.mUISbApplyButton == null))
				{
					this.mUISbApplyButton = new DXButton(this);
					#region Search Criteria
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbApply";
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISbApplyButton.WindowTitles.Add("Filter Editor");
					#endregion
				}
				return this.mUISbApplyButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		private DXButton mUISbApplyButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow3 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow3()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Fixed Bands";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client20 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client20(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client20 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client20 : DXTestControl
	{
		public UIPanelControl1Client20(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public UIGcContainerClient7 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient7(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient7 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient7 : DXTestControl
	{
		public UIGcContainerClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public UIFixedBandsCustom UIFixedBandsCustom
		{
			get
			{
				if ((this.mUIFixedBandsCustom == null))
				{
					this.mUIFixedBandsCustom = new UIFixedBandsCustom(this);
				}
				return this.mUIFixedBandsCustom;
			}
		}
		#endregion
		#region Fields
		private UIFixedBandsCustom mUIFixedBandsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFixedBandsCustom : DXTestControl
	{
		public UIFixedBandsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedBands";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedBands";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList19 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList19(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList19 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList19 : DXTestControl
	{
		public UIXtraTabControl1TabList19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client19 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client19(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1PageHeader1";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		public UIXtraTabPage2Client UIXtraTabPage2Client
		{
			get
			{
				if ((this.mUIXtraTabPage2Client == null))
				{
					this.mUIXtraTabPage2Client = new UIXtraTabPage2Client(this);
				}
				return this.mUIXtraTabPage2Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client19 mUIXtraTabPage1Client;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		private UIXtraTabPage2Client mUIXtraTabPage2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client19 : DXTestControl
	{
		public UIXtraTabPage1Client19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public UIGridControl1Table4 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table4(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table4 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table4 : DXGrid
	{
		public UIGridControl1Table4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public DXScrollBar UIHCrkScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIHCrkScrollBarScrollBarControl == null))
				{
					this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1HCrkScrollBar";
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIHCrkScrollBarScrollBarControl;
			}
		}
		public DXColumnHeader UIGrColumnMakerColumnHeader
		{
			get
			{
				if ((this.mUIGrColumnMakerColumnHeader == null))
				{
					this.mUIGrColumnMakerColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGrColumnMakerColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]bandedGridView1[Column]grColumnMaker";
					this.mUIGrColumnMakerColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGrColumnMakerColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGrColumnMakerColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGrColumnMakerColumnHeader;
			}
		}
		public DXColumnHeader UIGrColumnUnitSoldColumnHeader
		{
			get
			{
				if ((this.mUIGrColumnUnitSoldColumnHeader == null))
				{
					this.mUIGrColumnUnitSoldColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGrColumnUnitSoldColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]bandedGridView1[Column]grColumnUnitSold";
					this.mUIGrColumnUnitSoldColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGrColumnUnitSoldColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGrColumnUnitSoldColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGrColumnUnitSoldColumnHeader;
			}
		}
		public DXColumnHeader UIGrColumnYear1992ColumnHeader
		{
			get
			{
				if ((this.mUIGrColumnYear1992ColumnHeader == null))
				{
					this.mUIGrColumnYear1992ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGrColumnYear1992ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]bandedGridView1[Column]grColumnYear1992";
					this.mUIGrColumnYear1992ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGrColumnYear1992ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGrColumnYear1992ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGrColumnYear1992ColumnHeader;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1992";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXTextEdit UISpinEditEdit1
		{
			get
			{
				if ((this.mUISpinEditEdit1 == null))
				{
					this.mUISpinEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1993";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit1;
			}
		}
		public DXTextEdit UISpinEditEdit2
		{
			get
			{
				if ((this.mUISpinEditEdit2 == null))
				{
					this.mUISpinEditEdit2 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1994";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit2;
			}
		}
		public DXTextEdit UISpinEditEdit3
		{
			get
			{
				if ((this.mUISpinEditEdit3 == null))
				{
					this.mUISpinEditEdit3 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1995";
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit3;
			}
		}
		public DXTextEdit UISpinEditEdit4
		{
			get
			{
				if ((this.mUISpinEditEdit4 == null))
				{
					this.mUISpinEditEdit4 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1996";
					this.mUISpinEditEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit4;
			}
		}
		public DXTextEdit UISpinEditEdit5
		{
			get
			{
				if ((this.mUISpinEditEdit5 == null))
				{
					this.mUISpinEditEdit5 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1997";
					this.mUISpinEditEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit5;
			}
		}
		public DXTextEdit UISpinEditEdit6
		{
			get
			{
				if ((this.mUISpinEditEdit6 == null))
				{
					this.mUISpinEditEdit6 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1998";
					this.mUISpinEditEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit6.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit6.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit6;
			}
		}
		public DXTextEdit UISpinEditEdit7
		{
			get
			{
				if ((this.mUISpinEditEdit7 == null))
				{
					this.mUISpinEditEdit7 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear1999";
					this.mUISpinEditEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit7.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit7.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit7;
			}
		}
		public DXTextEdit UISpinEditEdit8
		{
			get
			{
				if ((this.mUISpinEditEdit8 == null))
				{
					this.mUISpinEditEdit8 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit8.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]0[Column]grColumnYear2000";
					this.mUISpinEditEdit8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit8.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit8.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit8;
			}
		}
		public DXTextEdit UISpinEditEdit9
		{
			get
			{
				if ((this.mUISpinEditEdit9 == null))
				{
					this.mUISpinEditEdit9 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit9.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]8[Column]grColumnYear1992";
					this.mUISpinEditEdit9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit9.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit9.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit9;
			}
		}
		public DXTextEdit UISpinEditEdit10
		{
			get
			{
				if ((this.mUISpinEditEdit10 == null))
				{
					this.mUISpinEditEdit10 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit10.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]bandedGridView1[Row]8[Column]grColumnYear1992";
					this.mUISpinEditEdit10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit10.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit10.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit10;
			}
		}
		public DXCell UIItem2792353Cell
		{
			get
			{
				if ((this.mUIItem2792353Cell == null))
				{
					this.mUIItem2792353Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem2792353Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]bandedGridView1[Row]8[Column]grColumnUnitSold";
					this.mUIItem2792353Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem2792353Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem2792353Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIItem2792353Cell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]bandedGridView1[Row]0[Column]grColumnYear1" +
						"992";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridBand UIGridBand1GridBand
		{
			get
			{
				if ((this.mUIGridBand1GridBand == null))
				{
					this.mUIGridBand1GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]bandedGridView1[BandName]gbManufacture";
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand1GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridBand1GridBand;
			}
		}
		public DXCell UIItem615182Cell
		{
			get
			{
				if ((this.mUIItem615182Cell == null))
				{
					this.mUIItem615182Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem615182Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]bandedGridView1[Row]9[Column]grColumnYear1992";
					this.mUIItem615182Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem615182Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem615182Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIItem615182Cell;
			}
		}
		#endregion
		#region Fields
		private DXScrollBar mUIHCrkScrollBarScrollBarControl;
		private DXColumnHeader mUIGrColumnMakerColumnHeader;
		private DXColumnHeader mUIGrColumnUnitSoldColumnHeader;
		private DXColumnHeader mUIGrColumnYear1992ColumnHeader;
		private DXTextEdit mUISpinEditEdit;
		private DXTextEdit mUISpinEditEdit1;
		private DXTextEdit mUISpinEditEdit2;
		private DXTextEdit mUISpinEditEdit3;
		private DXTextEdit mUISpinEditEdit4;
		private DXTextEdit mUISpinEditEdit5;
		private DXTextEdit mUISpinEditEdit6;
		private DXTextEdit mUISpinEditEdit7;
		private DXTextEdit mUISpinEditEdit8;
		private DXTextEdit mUISpinEditEdit9;
		private DXTextEdit mUISpinEditEdit10;
		private DXCell mUIItem2792353Cell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridBand mUIGridBand1GridBand;
		private DXCell mUIItem615182Cell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage2Client : DXTestControl
	{
		public UIXtraTabPage2Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public UIGridControl2Table UIGridControl2Table
		{
			get
			{
				if ((this.mUIGridControl2Table == null))
				{
					this.mUIGridControl2Table = new UIGridControl2Table(this);
				}
				return this.mUIGridControl2Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl2Table mUIGridControl2Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl2Table : DXGrid
	{
		public UIGridControl2Table(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
			#endregion
		}
		#region Properties
		public DXScrollBar UIHCrkScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIHCrkScrollBarScrollBarControl == null))
				{
					this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2HCrkScrollBar";
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIHCrkScrollBarScrollBarControl;
			}
		}
		public DXGridBand UIGridBand4GridBand
		{
			get
			{
				if ((this.mUIGridBand4GridBand == null))
				{
					this.mUIGridBand4GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlBand[View]bandedGridView2[BandName]gridBand4";
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand4GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridBand4GridBand;
			}
		}
		public DXGridBand UIGridBand6GridBand
		{
			get
			{
				if ((this.mUIGridBand6GridBand == null))
				{
					this.mUIGridBand6GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand6GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlBand[View]bandedGridView2[BandName]gridBand6";
					this.mUIGridBand6GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand6GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand6GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridBand6GridBand;
			}
		}
		public DXColumnHeader UIColJanuaryColumnHeader
		{
			get
			{
				if ((this.mUIColJanuaryColumnHeader == null))
				{
					this.mUIColJanuaryColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColJanuaryColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]bandedGridView2[Column]colJanuary";
					this.mUIColJanuaryColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColJanuaryColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColJanuaryColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIColJanuaryColumnHeader;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colJanuary";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXTextEdit UISpinEditEdit1
		{
			get
			{
				if ((this.mUISpinEditEdit1 == null))
				{
					this.mUISpinEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colFebruary";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit1;
			}
		}
		public DXTextEdit UISpinEditEdit2
		{
			get
			{
				if ((this.mUISpinEditEdit2 == null))
				{
					this.mUISpinEditEdit2 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colMarch";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit2;
			}
		}
		public DXTextEdit UISpinEditEdit3
		{
			get
			{
				if ((this.mUISpinEditEdit3 == null))
				{
					this.mUISpinEditEdit3 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colApril";
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit3;
			}
		}
		public DXTextEdit UISpinEditEdit4
		{
			get
			{
				if ((this.mUISpinEditEdit4 == null))
				{
					this.mUISpinEditEdit4 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colMay";
					this.mUISpinEditEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit4;
			}
		}
		public DXTextEdit UISpinEditEdit5
		{
			get
			{
				if ((this.mUISpinEditEdit5 == null))
				{
					this.mUISpinEditEdit5 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colJune";
					this.mUISpinEditEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit5;
			}
		}
		public DXTextEdit UISpinEditEdit6
		{
			get
			{
				if ((this.mUISpinEditEdit6 == null))
				{
					this.mUISpinEditEdit6 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colJuly";
					this.mUISpinEditEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit6.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit6.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit6;
			}
		}
		public DXTextEdit UISpinEditEdit7
		{
			get
			{
				if ((this.mUISpinEditEdit7 == null))
				{
					this.mUISpinEditEdit7 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colAugust";
					this.mUISpinEditEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit7.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit7.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit7;
			}
		}
		public DXTextEdit UISpinEditEdit8
		{
			get
			{
				if ((this.mUISpinEditEdit8 == null))
				{
					this.mUISpinEditEdit8 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit8.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colSeptember";
					this.mUISpinEditEdit8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit8.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit8.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit8;
			}
		}
		public DXTextEdit UISpinEditEdit9
		{
			get
			{
				if ((this.mUISpinEditEdit9 == null))
				{
					this.mUISpinEditEdit9 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit9.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colOctober";
					this.mUISpinEditEdit9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit9.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit9.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit9;
			}
		}
		public DXTextEdit UISpinEditEdit10
		{
			get
			{
				if ((this.mUISpinEditEdit10 == null))
				{
					this.mUISpinEditEdit10 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit10.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]0[Column]colNovember";
					this.mUISpinEditEdit10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit10.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit10.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit10;
			}
		}
		public DXTextEdit UISpinEditEdit11
		{
			get
			{
				if ((this.mUISpinEditEdit11 == null))
				{
					this.mUISpinEditEdit11 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit11.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]7[Column]colJanuary";
					this.mUISpinEditEdit11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit11.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit11.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit11;
			}
		}
		public DXTextEdit UISpinEditEdit12
		{
			get
			{
				if ((this.mUISpinEditEdit12 == null))
				{
					this.mUISpinEditEdit12 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit12.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2SpinEdit[View]bandedGridView2[Row]7[Column]colJanuary";
					this.mUISpinEditEdit12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit12.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit12.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUISpinEditEdit12;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow == null))
				{
					this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]bandedGridView2[Row]-2[Column]colYear";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow;
			}
		}
		public DXRowFooterCell UIGridControlRowFooterRowFooterCell
		{
			get
			{
				if ((this.mUIGridControlRowFooterRowFooterCell == null))
				{
					this.mUIGridControlRowFooterRowFooterCell = new DXRowFooterCell(this);
					#region Search Criteria
					this.mUIGridControlRowFooterRowFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowFooterCell[View]bandedGridView2[Row]-1[Column]colJanuar" +
						"y";
					this.mUIGridControlRowFooterRowFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowFooterCell";
					this.mUIGridControlRowFooterRowFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowFooterRowFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridControlRowFooterRowFooterCell;
			}
		}
		public DXCell UIItem10029800Cell
		{
			get
			{
				if ((this.mUIItem10029800Cell == null))
				{
					this.mUIItem10029800Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem10029800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCell[View]bandedGridView2[Row]7[Column]colRowSum";
					this.mUIItem10029800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem10029800Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem10029800Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIItem10029800Cell;
			}
		}
		public DXCell UIItem835817Cell
		{
			get
			{
				if ((this.mUIItem835817Cell == null))
				{
					this.mUIItem835817Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem835817Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCell[View]bandedGridView2[Row]7[Column]colRowAvr";
					this.mUIItem835817Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem835817Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem835817Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIItem835817Cell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlFooterCell[View]bandedGridView2[Row]0[Column]colJanuary";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell1
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell1 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell1 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlFooterCell[View]bandedGridView2[Row]0[Column]colRowSum";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell1;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell2
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell2 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell2 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlFooterCell[View]bandedGridView2[Row]0[Column]colRowAvr";
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell2;
			}
		}
		public DXColumnHeader UIColCustomerNameColumnHeader
		{
			get
			{
				if ((this.mUIColCustomerNameColumnHeader == null))
				{
					this.mUIColCustomerNameColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCustomerNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]bandedGridView2[Column]colCustomerName";
					this.mUIColCustomerNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColCustomerNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColCustomerNameColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Bands");
					#endregion
				}
				return this.mUIColCustomerNameColumnHeader;
			}
		}
		#endregion
		#region Fields
		private DXScrollBar mUIHCrkScrollBarScrollBarControl;
		private DXGridBand mUIGridBand4GridBand;
		private DXGridBand mUIGridBand6GridBand;
		private DXColumnHeader mUIColJanuaryColumnHeader;
		private DXTextEdit mUISpinEditEdit;
		private DXTextEdit mUISpinEditEdit1;
		private DXTextEdit mUISpinEditEdit2;
		private DXTextEdit mUISpinEditEdit3;
		private DXTextEdit mUISpinEditEdit4;
		private DXTextEdit mUISpinEditEdit5;
		private DXTextEdit mUISpinEditEdit6;
		private DXTextEdit mUISpinEditEdit7;
		private DXTextEdit mUISpinEditEdit8;
		private DXTextEdit mUISpinEditEdit9;
		private DXTextEdit mUISpinEditEdit10;
		private DXTextEdit mUISpinEditEdit11;
		private DXTextEdit mUISpinEditEdit12;
		private DXGroupRow mUIGridControlGroupRowGroupRow;
		private DXRowFooterCell mUIGridControlRowFooterRowFooterCell;
		private DXCell mUIItem10029800Cell;
		private DXCell mUIItem835817Cell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell1;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell2;
		private DXColumnHeader mUIColCustomerNameColumnHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow2 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow2()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Fixed Columns";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client21 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client21(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client21 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client21 : DXTestControl
	{
		public UIPanelControl1Client21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
			#endregion
		}
		#region Properties
		public UIGcContainerClient8 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient8(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient8 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient8 : DXTestControl
	{
		public UIGcContainerClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
			#endregion
		}
		#region Properties
		public UIFixedColumnsCustom UIFixedColumnsCustom
		{
			get
			{
				if ((this.mUIFixedColumnsCustom == null))
				{
					this.mUIFixedColumnsCustom = new UIFixedColumnsCustom(this);
				}
				return this.mUIFixedColumnsCustom;
			}
		}
		#endregion
		#region Fields
		private UIFixedColumnsCustom mUIFixedColumnsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFixedColumnsCustom : DXTestControl
	{
		public UIFixedColumnsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedColumns";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedColumns";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
			#endregion
		}
		#region Properties
		public UIGridControl2Table1 UIGridControl2Table
		{
			get
			{
				if ((this.mUIGridControl2Table == null))
				{
					this.mUIGridControl2Table = new UIGridControl2Table1(this);
				}
				return this.mUIGridControl2Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl2Table1 mUIGridControl2Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl2Table1 : DXGrid
	{
		public UIGridControl2Table1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIColCompanyNameColumnHeader
		{
			get
			{
				if ((this.mUIColCompanyNameColumnHeader == null))
				{
					this.mUIColCompanyNameColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView1[Column]colCompanyName";
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColCompanyNameColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
					#endregion
				}
				return this.mUIColCompanyNameColumnHeader;
			}
		}
		public DXScrollBar UIHCrkScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIHCrkScrollBarScrollBarControl == null))
				{
					this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2HCrkScrollBar";
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
					this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
					#endregion
				}
				return this.mUIHCrkScrollBarScrollBarControl;
			}
		}
		public DXColumnHeader UIColRegionColumnHeader
		{
			get
			{
				if ((this.mUIColRegionColumnHeader == null))
				{
					this.mUIColRegionColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView1[Column]colRegion";
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColRegionColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
					#endregion
				}
				return this.mUIColRegionColumnHeader;
			}
		}
		public DXColumnHeader UIColCountryColumnHeader
		{
			get
			{
				if ((this.mUIColCountryColumnHeader == null))
				{
					this.mUIColCountryColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCountryColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView1[Column]colCountry";
					this.mUIColCountryColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColCountryColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColCountryColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Fixed Columns");
					#endregion
				}
				return this.mUIColCountryColumnHeader;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIColCompanyNameColumnHeader;
		private DXScrollBar mUIHCrkScrollBarScrollBarControl;
		private DXColumnHeader mUIColRegionColumnHeader;
		private DXColumnHeader mUIColCountryColumnHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow4 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow4()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Cell Merging";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Merging");
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client22 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client22(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client22 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client22 : DXTestControl
	{
		public UIPanelControl1Client22(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIGcContainerClient9 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient9(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient9 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient9 : DXTestControl
	{
		public UIGcContainerClient9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UICellSelectionCustom UICellSelectionCustom
		{
			get
			{
				if ((this.mUICellSelectionCustom == null))
				{
					this.mUICellSelectionCustom = new UICellSelectionCustom(this);
				}
				return this.mUICellSelectionCustom;
			}
		}
		public UIRowHeightCustom UIRowHeightCustom
		{
			get
			{
				if ((this.mUIRowHeightCustom == null))
				{
					this.mUIRowHeightCustom = new UIRowHeightCustom(this);
				}
				return this.mUIRowHeightCustom;
			}
		}
		#endregion
		#region Fields
		private UICellSelectionCustom mUICellSelectionCustom;
		private UIRowHeightCustom mUIRowHeightCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICellSelectionCustom : DXTestControl
	{
		public UICellSelectionCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CellSelection";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CellSelection";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIGridControl1Table5 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table5(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIXtraTabControl1TabList20 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList20(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table5 mUIGridControl1Table;
		private UIXtraTabControl1TabList20 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table5 : DXGrid
	{
		public UIGridControl1Table5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public DXCell UILondonCell
		{
			get
			{
				if ((this.mUILondonCell == null))
				{
					this.mUILondonCell = new DXCell(this);
					#region Search Criteria
					this.mUILondonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]3[Column]colCity";
					this.mUILondonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUILondonCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILondonCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUILondonCell;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader == null))
				{
					this.mUIGridControlRowIndicaRowHeader = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]5";
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader;
			}
		}
		public DXCell UIWA11DPCell
		{
			get
			{
				if ((this.mUIWA11DPCell == null))
				{
					this.mUIWA11DPCell = new DXCell(this);
					#region Search Criteria
					this.mUIWA11DPCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]3[Column]colPostalCode";
					this.mUIWA11DPCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIWA11DPCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIWA11DPCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIWA11DPCell;
			}
		}
		public DXCell UIItem3012Cell
		{
			get
			{
				if ((this.mUIItem3012Cell == null))
				{
					this.mUIItem3012Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem3012Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]13[Column]colPostalCode";
					this.mUIItem3012Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem3012Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem3012Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIItem3012Cell;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader1
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader1 == null))
				{
					this.mUIGridControlRowIndicaRowHeader1 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]7";
					this.mUIGridControlRowIndicaRowHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader1;
			}
		}
		public DXCell UIEC25NTCell
		{
			get
			{
				if ((this.mUIEC25NTCell == null))
				{
					this.mUIEC25NTCell = new DXCell(this);
					#region Search Criteria
					this.mUIEC25NTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]10[Column]colPostalCode";
					this.mUIEC25NTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIEC25NTCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEC25NTCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIEC25NTCell;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader2
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader2 == null))
				{
					this.mUIGridControlRowIndicaRowHeader2 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]6";
					this.mUIGridControlRowIndicaRowHeader2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader2;
			}
		}
		public DXCell UIItem05023Cell
		{
			get
			{
				if ((this.mUIItem05023Cell == null))
				{
					this.mUIItem05023Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem05023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]2[Column]colPostalCode";
					this.mUIItem05023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem05023Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem05023Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIItem05023Cell;
			}
		}
		public DXCell UIFranceCell
		{
			get
			{
				if ((this.mUIFranceCell == null))
				{
					this.mUIFranceCell = new DXCell(this);
					#region Search Criteria
					this.mUIFranceCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]6[Column]colCountry";
					this.mUIFranceCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIFranceCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFranceCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIFranceCell;
			}
		}
		public DXCell UIBonappCell
		{
			get
			{
				if ((this.mUIBonappCell == null))
				{
					this.mUIBonappCell = new DXCell(this);
					#region Search Criteria
					this.mUIBonappCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]8[Column]colCompanyName";
					this.mUIBonappCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIBonappCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBonappCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIBonappCell;
			}
		}
		public DXCell UIArgentinaCell
		{
			get
			{
				if ((this.mUIArgentinaCell == null))
				{
					this.mUIArgentinaCell = new DXCell(this);
					#region Search Criteria
					this.mUIArgentinaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]11[Column]colCountry";
					this.mUIArgentinaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIArgentinaCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIArgentinaCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIArgentinaCell;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader3
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader3 == null))
				{
					this.mUIGridControlRowIndicaRowHeader3 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]8";
					this.mUIGridControlRowIndicaRowHeader3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader3;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader4
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader4 == null))
				{
					this.mUIGridControlRowIndicaRowHeader4 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]2";
					this.mUIGridControlRowIndicaRowHeader4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader4;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader5
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader5 == null))
				{
					this.mUIGridControlRowIndicaRowHeader5 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]2";
					this.mUIGridControlRowIndicaRowHeader5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader5;
			}
		}
		public DXCell UIBsBeveragesCell
		{
			get
			{
				if ((this.mUIBsBeveragesCell == null))
				{
					this.mUIBsBeveragesCell = new DXCell(this);
					#region Search Criteria
					this.mUIBsBeveragesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]10[Column]colCompanyName";
					this.mUIBsBeveragesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIBsBeveragesCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBsBeveragesCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIBsBeveragesCell;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader6
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader6 == null))
				{
					this.mUIGridControlRowIndicaRowHeader6 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader6.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]1";
					this.mUIGridControlRowIndicaRowHeader6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader6.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader6.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader6;
			}
		}
		public DXCell UIBerglundssnabbköpCell
		{
			get
			{
				if ((this.mUIBerglundssnabbköpCell == null))
				{
					this.mUIBerglundssnabbköpCell = new DXCell(this);
					#region Search Criteria
					this.mUIBerglundssnabbköpCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]4[Column]colCompanyName";
					this.mUIBerglundssnabbköpCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIBerglundssnabbköpCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBerglundssnabbköpCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIBerglundssnabbköpCell;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader31
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader31 == null))
				{
					this.mUIGridControlRowIndicaRowHeader31 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader31.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]9";
					this.mUIGridControlRowIndicaRowHeader31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader31.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader31.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader31;
			}
		}
		#endregion
		#region Fields
		private DXCell mUILondonCell;
		private DXTestControl mUIGridControlRowIndicaRowHeader;
		private DXCell mUIWA11DPCell;
		private DXCell mUIItem3012Cell;
		private DXTestControl mUIGridControlRowIndicaRowHeader1;
		private DXCell mUIEC25NTCell;
		private DXTestControl mUIGridControlRowIndicaRowHeader2;
		private DXCell mUIItem05023Cell;
		private DXCell mUIFranceCell;
		private DXCell mUIBonappCell;
		private DXCell mUIArgentinaCell;
		private DXTestControl mUIGridControlRowIndicaRowHeader3;
		private DXTestControl mUIGridControlRowIndicaRowHeader4;
		private DXTestControl mUIGridControlRowIndicaRowHeader5;
		private DXCell mUIBsBeveragesCell;
		private DXTestControl mUIGridControlRowIndicaRowHeader6;
		private DXCell mUIBerglundssnabbköpCell;
		private DXTestControl mUIGridControlRowIndicaRowHeader31;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList20 : DXTestControl
	{
		public UIXtraTabControl1TabList20(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client20 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client20(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client20 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client20 : DXTestControl
	{
		public UIXtraTabPage1Client20(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public DXButton UISbRecordsButton
		{
			get
			{
				if ((this.mUISbRecordsButton == null))
				{
					this.mUISbRecordsButton = new DXButton(this);
					#region Search Criteria
					this.mUISbRecordsButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbRecords";
					this.mUISbRecordsButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbRecordsButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUISbRecordsButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUISbRecordsButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISbRecordsButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRowHeightCustom : DXTestControl
	{
		public UIRowHeightCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RowHeight";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RowHeight";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public UIGridControl1Table6 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table6(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIPnlTopClient UIPnlTopClient
		{
			get
			{
				if ((this.mUIPnlTopClient == null))
				{
					this.mUIPnlTopClient = new UIPnlTopClient(this);
				}
				return this.mUIPnlTopClient;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table6 mUIGridControl1Table;
		private UIPnlTopClient mUIPnlTopClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table6 : DXGrid
	{
		public UIGridControl1Table6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1MemoEdit[View]gridView1[Row]0[Column]colNotes";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMemoEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXCell UIAndrewreceivedhisBTSCell
		{
			get
			{
				if ((this.mUIAndrewreceivedhisBTSCell == null))
				{
					this.mUIAndrewreceivedhisBTSCell = new DXCell(this);
					#region Search Criteria
					this.mUIAndrewreceivedhisBTSCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]1[Column]colNotes";
					this.mUIAndrewreceivedhisBTSCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIAndrewreceivedhisBTSCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAndrewreceivedhisBTSCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUIAndrewreceivedhisBTSCell;
			}
		}
		public DXCell UIEducationincludesaBACell
		{
			get
			{
				if ((this.mUIEducationincludesaBACell == null))
				{
					this.mUIEducationincludesaBACell = new DXCell(this);
					#region Search Criteria
					this.mUIEducationincludesaBACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]colNotes";
					this.mUIEducationincludesaBACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIEducationincludesaBACell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEducationincludesaBACell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUIEducationincludesaBACell;
			}
		}
		public DXCell UIMichaelisagraduateofCell
		{
			get
			{
				if ((this.mUIMichaelisagraduateofCell == null))
				{
					this.mUIMichaelisagraduateofCell = new DXCell(this);
					#region Search Criteria
					this.mUIMichaelisagraduateofCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]5[Column]colNotes";
					this.mUIMichaelisagraduateofCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIMichaelisagraduateofCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMichaelisagraduateofCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUIMichaelisagraduateofCell;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXCell mUIAndrewreceivedhisBTSCell;
		private DXCell mUIEducationincludesaBACell;
		private DXCell mUIMichaelisagraduateofCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlTopClient : DXTestControl
	{
		public UIPnlTopClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTop";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public DXCheckBox UICheMemoCheckBox
		{
			get
			{
				if ((this.mUICheMemoCheckBox == null))
				{
					this.mUICheMemoCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheMemoCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cheMemo";
					this.mUICheMemoCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheMemoCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICheMemoCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUICheMemoCheckBox;
			}
		}
		public DXCheckBox UIChePictureCheckBox
		{
			get
			{
				if ((this.mUIChePictureCheckBox == null))
				{
					this.mUIChePictureCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChePictureCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chePicture";
					this.mUIChePictureCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChePictureCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChePictureCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUIChePictureCheckBox;
			}
		}
		public DXCheckBox UICheAutoHeightCheckBox
		{
			get
			{
				if ((this.mUICheAutoHeightCheckBox == null))
				{
					this.mUICheAutoHeightCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheAutoHeightCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cheAutoHeight";
					this.mUICheAutoHeightCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheAutoHeightCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICheAutoHeightCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUICheAutoHeightCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUICheMemoCheckBox;
		private DXCheckBox mUIChePictureCheckBox;
		private DXCheckBox mUICheAutoHeightCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow5 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow5()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Column Customization";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client23 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client23(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client23 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client23 : DXTestControl
	{
		public UIPanelControl1Client23(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIGcContainerClient10 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient10(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient10 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient10 : DXTestControl
	{
		public UIGcContainerClient10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIColumnCustomizationCustom UIColumnCustomizationCustom
		{
			get
			{
				if ((this.mUIColumnCustomizationCustom == null))
				{
					this.mUIColumnCustomizationCustom = new UIColumnCustomizationCustom(this);
				}
				return this.mUIColumnCustomizationCustom;
			}
		}
		#endregion
		#region Fields
		private UIColumnCustomizationCustom mUIColumnCustomizationCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIColumnCustomizationCustom : DXTestControl
	{
		public UIColumnCustomizationCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ColumnCustomization";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColumnCustomization";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIGridControl1Table7 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table7(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table7 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table7 : DXGrid
	{
		public UIGridControl1Table7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public DXGridBand UIGridBand2GridBand
		{
			get
			{
				if ((this.mUIGridBand2GridBand == null))
				{
					this.mUIGridBand2GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand2GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gridBand2";
					this.mUIGridBand2GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand2GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand2GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
					#endregion
				}
				return this.mUIGridBand2GridBand;
			}
		}
		public DXGridBand UIGridBand6GridBand
		{
			get
			{
				if ((this.mUIGridBand6GridBand == null))
				{
					this.mUIGridBand6GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand6GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gridBand6";
					this.mUIGridBand6GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand6GridBand.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridBand6GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
					#endregion
				}
				return this.mUIGridBand6GridBand;
			}
		}
		public UICustomizationFormWindow1 UICustomizationFormWindow
		{
			get
			{
				if ((this.mUICustomizationFormWindow == null))
				{
					this.mUICustomizationFormWindow = new UICustomizationFormWindow1(this);
				}
				return this.mUICustomizationFormWindow;
			}
		}
		#endregion
		#region Fields
		private DXGridBand mUIGridBand2GridBand;
		private DXGridBand mUIGridBand6GridBand;
		private UICustomizationFormWindow1 mUICustomizationFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomizationFormWindow1 : DXWindow
	{
		public UICustomizationFormWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]advBandedGridView1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomizationForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList3 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList3(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList3 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList3 : DXTestControl
	{
		public UIXtraTabControlTabList3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]advBandedGridView1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]advBandedGridView1XtraTabControl[0]PageHeader1" +
						"";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomizationWindow : WinWindow
	{
		public UICustomizationWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Customization";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client24 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client24(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public DXButton UIBtCloseButton
		{
			get
			{
				if ((this.mUIBtCloseButton == null))
				{
					this.mUIBtCloseButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtCloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btClose";
					this.mUIBtCloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtCloseButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIBtCloseButton.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIBtCloseButton;
			}
		}
		public UITabControlTabList UITabControlTabList
		{
			get
			{
				if ((this.mUITabControlTabList == null))
				{
					this.mUITabControlTabList = new UITabControlTabList(this);
				}
				return this.mUITabControlTabList;
			}
		}
		public WinTitleBar UICustomizationTitleBar
		{
			get
			{
				if ((this.mUICustomizationTitleBar == null))
				{
					this.mUICustomizationTitleBar = new WinTitleBar(this);
					#region Search Criteria
					this.mUICustomizationTitleBar.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUICustomizationTitleBar;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client24 mUIPanelControl1Client;
		private DXButton mUIBtCloseButton;
		private UITabControlTabList mUITabControlTabList;
		private WinTitleBar mUICustomizationTitleBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client24 : DXTestControl
	{
		public UIPanelControl1Client24(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIGcContainerClient11 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient11(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient11 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient11 : DXTestControl
	{
		public UIGcContainerClient11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIColumnCustomizationCustom1 UIColumnCustomizationCustom
		{
			get
			{
				if ((this.mUIColumnCustomizationCustom == null))
				{
					this.mUIColumnCustomizationCustom = new UIColumnCustomizationCustom1(this);
				}
				return this.mUIColumnCustomizationCustom;
			}
		}
		#endregion
		#region Fields
		private UIColumnCustomizationCustom1 mUIColumnCustomizationCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIColumnCustomizationCustom1 : DXTestControl
	{
		public UIColumnCustomizationCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ColumnCustomization";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColumnCustomization";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIGridControl1Table8 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table8(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table8 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table8 : DXGrid
	{
		public UIGridControl1Table8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UICustomizationFormWindow2 UICustomizationFormWindow
		{
			get
			{
				if ((this.mUICustomizationFormWindow == null))
				{
					this.mUICustomizationFormWindow = new UICustomizationFormWindow2(this);
				}
				return this.mUICustomizationFormWindow;
			}
		}
		#endregion
		#region Fields
		private UICustomizationFormWindow2 mUICustomizationFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomizationFormWindow2 : DXWindow
	{
		public UICustomizationFormWindow2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]advBandedGridView1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomizationForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Column Customization");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList4 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList4(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList4 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList4 : DXTestControl
	{
		public UIXtraTabControlTabList4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]advBandedGridView1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]advBandedGridView1XtraTabControl[0]PageHeader1" +
						"";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabControlTabList : DXTestControl
	{
		public UITabControlTabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public UITpToolbarsClient UITpToolbarsClient
		{
			get
			{
				if ((this.mUITpToolbarsClient == null))
				{
					this.mUITpToolbarsClient = new UITpToolbarsClient(this);
				}
				return this.mUITpToolbarsClient;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlPageHeader1";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		public UIXtraTabPageClient3 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient3(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		public UIXtraTabPageClient11 UIXtraTabPageClient1
		{
			get
			{
				if ((this.mUIXtraTabPageClient1 == null))
				{
					this.mUIXtraTabPageClient1 = new UIXtraTabPageClient11(this);
				}
				return this.mUIXtraTabPageClient1;
			}
		}
		#endregion
		#region Fields
		private UITpToolbarsClient mUITpToolbarsClient;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		private UIXtraTabPageClient3 mUIXtraTabPageClient;
		private UIXtraTabPageClient11 mUIXtraTabPageClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITpToolbarsClient : DXTestControl
	{
		public UITpToolbarsClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpToolbars";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public UIToolBarsListCheckedListBox UIToolBarsListCheckedListBox
		{
			get
			{
				if ((this.mUIToolBarsListCheckedListBox == null))
				{
					this.mUIToolBarsListCheckedListBox = new UIToolBarsListCheckedListBox(this);
				}
				return this.mUIToolBarsListCheckedListBox;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btResetBar";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIToolBarsListCheckedListBox mUIToolBarsListCheckedListBox;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolBarsListCheckedListBox : DXCheckedListBox
	{
		public UIToolBarsListCheckedListBox(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "toolBarsList";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public DXCheckBox UIFormatCheckBox
		{
			get
			{
				if ((this.mUIFormatCheckBox == null))
				{
					this.mUIFormatCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIFormatCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "toolBarsListItem[2]";
					this.mUIFormatCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
					this.mUIFormatCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFormatCheckBox.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIFormatCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIFormatCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient3 : DXTestControl
	{
		public UIXtraTabPageClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpCommands";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public DXListBox UIListBoxControlList
		{
			get
			{
				if ((this.mUIListBoxControlList == null))
				{
					this.mUIListBoxControlList = new DXListBox(this);
					#region Search Criteria
					this.mUIListBoxControlList.SearchProperties[DXTestControl.PropertyNames.Name] = "lbCategories";
					this.mUIListBoxControlList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
					this.mUIListBoxControlList.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIListBoxControlList.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIListBoxControlList;
			}
		}
		#endregion
		#region Fields
		private DXListBox mUIListBoxControlList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient11 : DXTestControl
	{
		public UIXtraTabPageClient11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpCommands";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public UIItemsListBoxList UIItemsListBoxList
		{
			get
			{
				if ((this.mUIItemsListBoxList == null))
				{
					this.mUIItemsListBoxList = new UIItemsListBoxList(this);
				}
				return this.mUIItemsListBoxList;
			}
		}
		#endregion
		#region Fields
		private UIItemsListBoxList mUIItemsListBoxList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemsListBoxList : DXListBox
	{
		public UIItemsListBoxList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "lbCommands";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemsListBox";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public DXListBoxItem UIItemsListBoxItem4ListItem
		{
			get
			{
				if ((this.mUIItemsListBoxItem4ListItem == null))
				{
					this.mUIItemsListBoxItem4ListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIItemsListBoxItem4ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "lbCommandsItem[4]";
					this.mUIItemsListBoxItem4ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemsListBoxItem";
					this.mUIItemsListBoxItem4ListItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItemsListBoxItem4ListItem.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUIItemsListBoxItem4ListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUIItemsListBoxItem4ListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISelectedCellsWindow : WinWindow
	{
		public UISelectedCellsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Selected Cells";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public UIRow3UKLondonWA11DPRoWindow UIRow3UKLondonWA11DPRoWindow
		{
			get
			{
				if ((this.mUIRow3UKLondonWA11DPRoWindow == null))
				{
					this.mUIRow3UKLondonWA11DPRoWindow = new UIRow3UKLondonWA11DPRoWindow(this);
				}
				return this.mUIRow3UKLondonWA11DPRoWindow;
			}
		}
		public UIRow3LondonWA11DPRow4Window UIRow3LondonWA11DPRow4Window
		{
			get
			{
				if ((this.mUIRow3LondonWA11DPRow4Window == null))
				{
					this.mUIRow3LondonWA11DPRow4Window = new UIRow3LondonWA11DPRow4Window(this);
				}
				return this.mUIRow3LondonWA11DPRow4Window;
			}
		}
		public UIRow2MexicoMéxicoDF05Window UIRow2MexicoMéxicoDF05Window
		{
			get
			{
				if ((this.mUIRow2MexicoMéxicoDF05Window == null))
				{
					this.mUIRow2MexicoMéxicoDF05Window = new UIRow2MexicoMéxicoDF05Window(this);
				}
				return this.mUIRow2MexicoMéxicoDF05Window;
			}
		}
		public UIRow0AlfredsFutterkisWindow UIRow0AlfredsFutterkisWindow
		{
			get
			{
				if ((this.mUIRow0AlfredsFutterkisWindow == null))
				{
					this.mUIRow0AlfredsFutterkisWindow = new UIRow0AlfredsFutterkisWindow(this);
				}
				return this.mUIRow0AlfredsFutterkisWindow;
			}
		}
		public UIRow0BerlinWindow UIRow0BerlinWindow
		{
			get
			{
				if ((this.mUIRow0BerlinWindow == null))
				{
					this.mUIRow0BerlinWindow = new UIRow0BerlinWindow(this);
				}
				return this.mUIRow0BerlinWindow;
			}
		}
		public UIRow22LilleWindow UIRow22LilleWindow
		{
			get
			{
				if ((this.mUIRow22LilleWindow == null))
				{
					this.mUIRow22LilleWindow = new UIRow22LilleWindow(this);
				}
				return this.mUIRow22LilleWindow;
			}
		}
		public UIRow16AachenWindow UIRow16AachenWindow
		{
			get
			{
				if ((this.mUIRow16AachenWindow == null))
				{
					this.mUIRow16AachenWindow = new UIRow16AachenWindow(this);
				}
				return this.mUIRow16AachenWindow;
			}
		}
		public UIRow0GermanyRow1MexicWindow UIRow0GermanyRow1MexicWindow
		{
			get
			{
				if ((this.mUIRow0GermanyRow1MexicWindow == null))
				{
					this.mUIRow0GermanyRow1MexicWindow = new UIRow0GermanyRow1MexicWindow(this);
				}
				return this.mUIRow0GermanyRow1MexicWindow;
			}
		}
		public UIRow0GermanyRow1MexicWindow1 UIRow0GermanyRow1MexicWindow1
		{
			get
			{
				if ((this.mUIRow0GermanyRow1MexicWindow1 == null))
				{
					this.mUIRow0GermanyRow1MexicWindow1 = new UIRow0GermanyRow1MexicWindow1(this);
				}
				return this.mUIRow0GermanyRow1MexicWindow1;
			}
		}
		public UIRow4SwedenLuleåS9582Window UIRow4SwedenLuleåS9582Window
		{
			get
			{
				if ((this.mUIRow4SwedenLuleåS9582Window == null))
				{
					this.mUIRow4SwedenLuleåS9582Window = new UIRow4SwedenLuleåS9582Window(this);
				}
				return this.mUIRow4SwedenLuleåS9582Window;
			}
		}
		public UIRow1MexicoMéxicoDF05Window UIRow1MexicoMéxicoDF05Window
		{
			get
			{
				if ((this.mUIRow1MexicoMéxicoDF05Window == null))
				{
					this.mUIRow1MexicoMéxicoDF05Window = new UIRow1MexicoMéxicoDF05Window(this);
				}
				return this.mUIRow1MexicoMéxicoDF05Window;
			}
		}
		public UIRow205023Window UIRow205023Window
		{
			get
			{
				if ((this.mUIRow205023Window == null))
				{
					this.mUIRow205023Window = new UIRow205023Window(this);
				}
				return this.mUIRow205023Window;
			}
		}
		public UIRow2MexicoWindow UIRow2MexicoWindow
		{
			get
			{
				if ((this.mUIRow2MexicoWindow == null))
				{
					this.mUIRow2MexicoWindow = new UIRow2MexicoWindow(this);
				}
				return this.mUIRow2MexicoWindow;
			}
		}
		public UIRow1AnaTrujilloEmparWindow UIRow1AnaTrujilloEmparWindow
		{
			get
			{
				if ((this.mUIRow1AnaTrujilloEmparWindow == null))
				{
					this.mUIRow1AnaTrujilloEmparWindow = new UIRow1AnaTrujilloEmparWindow(this);
				}
				return this.mUIRow1AnaTrujilloEmparWindow;
			}
		}
		public UISelectedCellsClient UISelectedCellsClient
		{
			get
			{
				if ((this.mUISelectedCellsClient == null))
				{
					this.mUISelectedCellsClient = new UISelectedCellsClient(this);
				}
				return this.mUISelectedCellsClient;
			}
		}
		#endregion
		#region Fields
		private UIRow3UKLondonWA11DPRoWindow mUIRow3UKLondonWA11DPRoWindow;
		private UIRow3LondonWA11DPRow4Window mUIRow3LondonWA11DPRow4Window;
		private UIRow2MexicoMéxicoDF05Window mUIRow2MexicoMéxicoDF05Window;
		private UIRow0AlfredsFutterkisWindow mUIRow0AlfredsFutterkisWindow;
		private UIRow0BerlinWindow mUIRow0BerlinWindow;
		private UIRow22LilleWindow mUIRow22LilleWindow;
		private UIRow16AachenWindow mUIRow16AachenWindow;
		private UIRow0GermanyRow1MexicWindow mUIRow0GermanyRow1MexicWindow;
		private UIRow0GermanyRow1MexicWindow1 mUIRow0GermanyRow1MexicWindow1;
		private UIRow4SwedenLuleåS9582Window mUIRow4SwedenLuleåS9582Window;
		private UIRow1MexicoMéxicoDF05Window mUIRow1MexicoMéxicoDF05Window;
		private UIRow205023Window mUIRow205023Window;
		private UIRow2MexicoWindow mUIRow2MexicoWindow;
		private UIRow1AnaTrujilloEmparWindow mUIRow1AnaTrujilloEmparWindow;
		private UISelectedCellsClient mUISelectedCellsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow3UKLondonWA11DPRoWindow : WinWindow
	{
		public UIRow3UKLondonWA11DPRoWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #3
    UK
    London
    WA1 1DP
Row: #4
    Sweden
    Luleå
    S-958 22
Row: #5
    Germany
    Mannheim
    68306
Row: #6
    France
    Strasbourg
    67000
Row: #7
    Spain
    Madrid
    28023
Row: #8
    France
    Marseille
    13008
Row: #9
    Canada
    Tsawwassen
    T2F 8M4
Row: #10
    UK
    London
    EC2 5NT
Row: #11
    Argentina
    Buenos Aires
    1010
Row: #12
    Mexico
    México D.F.
    05022
Row: #13
    Switzerland
    Bern
    3012";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow3LondonWA11DPRow4Window : WinWindow
	{
		public UIRow3LondonWA11DPRow4Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #3
    London
    WA1 1DP
Row: #4
    Luleå
    S-958 22
Row: #5
    Mannheim
    68306
Row: #6
    Strasbourg
    67000
Row: #7
    Madrid
    28023
Row: #8
    Marseille
    13008
Row: #9
    Tsawwassen
    T2F 8M4
Row: #10
    London
    EC2 5NT
Row: #15
    UK
    London
    WX1 6LT
    Berkeley Gardens
12  Brewery 
Row: #16
    Germany
    Aachen
    52066
    Walserweg 21
Row: #17
    France
    Nantes
    44000
    67, rue des Cinquante Otages";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow2MexicoMéxicoDF05Window : WinWindow
	{
		public UIRow2MexicoMéxicoDF05Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #2
    Mexico
    México D.F.
    05023
Row: #3
    UK
    London
    WA1 1DP
Row: #4
    Sweden
    Luleå
    S-958 22
Row: #5
    Germany
    Mannheim
    68306
Row: #6
    France
    Strasbourg
    67000
Row: #8
    Bon app'
    France
Row: #9
    Bottom-Dollar Markets
    Canada
Row: #10
    B's Beverages
    UK
Row: #11
    Cactus Comidas para llevar
    Argentina";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow0AlfredsFutterkisWindow : WinWindow
	{
		public UIRow0AlfredsFutterkisWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #0
    Alfreds Futterkiste
    Germany
    Berlin
    12209
    Obere Str. 57
    030-0074321
    030-0076545
Row: #1
    Ana Trujillo Emparedados y helados
    Mexico
    México D.F.
    05021
    Avda. de la Constitución 2222
    (5) 555-4729
    (5) 555-3745
Row: #2
    Antonio Moreno Taquería
    Mexico
    México D.F.
    05023
    Mataderos  2312
    (5) 555-3932
    
Row: #3
    Around the Horn
    UK
    London
    WA1 1DP
    120 Hanover Sq.
    (171) 555-7788
    (171) 555-6750
Row: #4
    Berglunds snabbköp
    Sweden
    Luleå
    S-958 22
    Berguvsvägen  8
    0921-12 34 65
    0921-12 34 67
Row: #5
    Blauer See Delikatessen
    Germany
    Mannheim
    68306
    Forsterstr. 57
    0621-08460
    0621-08924
Row: #6
    Blondel père et fils
    France
    Strasbourg
    67000
    24, place Kléber
    88.60.15.31
    88.60.15.32
Row: #7
    Bólido Comidas preparadas
    Spain
    Madrid
    28023
    C/ Araquil, 67
    (91) 555";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow0BerlinWindow : WinWindow
	{
		public UIRow0BerlinWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #0\r\n    Berlin";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow22LilleWindow : WinWindow
	{
		public UIRow22LilleWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #22\r\n    Lille";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow16AachenWindow : WinWindow
	{
		public UIRow16AachenWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #16\r\n    Aachen";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow0GermanyRow1MexicWindow : WinWindow
	{
		public UIRow0GermanyRow1MexicWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #0\r\n    Germany\r\nRow: #1\r\n    Mexico\r\nRow: #2\r\n    Mexico\r\nRow: #3\r\n    UK\r\n" +
				"Row: #4\r\n    Sweden";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow0GermanyRow1MexicWindow1 : WinWindow
	{
		public UIRow0GermanyRow1MexicWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #0
    Germany
Row: #1
    Mexico
Row: #2
    Mexico
Row: #3
    UK
Row: #4
    Sweden
Row: #5
    Germany
Row: #6
    France
Row: #7
    Spain
Row: #8
    France
Row: #9
    Canada
Row: #10
    UK
Row: #11
    Argentina
Row: #12
    Mexico
Row: #13
    Switzerland";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow4SwedenLuleåS9582Window : WinWindow
	{
		public UIRow4SwedenLuleåS9582Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #4
    Sweden
    Luleå
    S-958 22
    Berguvsvägen  8
Row: #5
    Germany
    Mannheim
    68306
    Forsterstr. 57
Row: #6
    France
    Strasbourg
    67000
    24, place Kléber
Row: #7
    Spain
    Madrid
    28023
    C/ Araquil, 67";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow1MexicoMéxicoDF05Window : WinWindow
	{
		public UIRow1MexicoMéxicoDF05Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #1
    Mexico
    México D.F.
    05021
Row: #2
    Mexico
    México D.F.
    05023
Row: #3
    UK
    London
    WA1 1DP
Row: #5
    Germany
    Mannheim
Row: #6
    France
    Strasbourg
Row: #7
    Spain
    Madrid
Row: #8
    France
    Marseille
Row: #9
    Canada
    Tsawwassen
Row: #10
    UK
    London";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow205023Window : WinWindow
	{
		public UIRow205023Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #2\r\n    05023";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow2MexicoWindow : WinWindow
	{
		public UIRow2MexicoWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #2\r\n    Mexico";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow1AnaTrujilloEmparWindow : WinWindow
	{
		public UIRow1AnaTrujilloEmparWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #1
    Ana Trujillo Emparedados y helados
    Mexico
    México D.F.
    05021
    Avda. de la Constitución 2222
    (5) 555-4729
    (5) 555-3745
Row: #2
    Antonio Moreno Taquería
    Mexico
    México D.F.
    05023
    Mataderos  2312
    (5) 555-3932
    
Row: #3
    Around the Horn
    UK
    London
    WA1 1DP
    120 Hanover Sq.
    (171) 555-7788
    (171) 555-6750
Row: #4
    Berglunds snabbköp
    Sweden
    Luleå
    S-958 22
    Berguvsvägen  8
    0921-12 34 65
    0921-12 34 67
Row: #7
    Bólido Comidas preparadas
    Spain
    Madrid
    28023
    C/ Araquil, 67
    (91) 555 22 82
    (91) 555 91 99
Row: #8
    Bon app'
    France
    Marseille
    13008
    12, rue des Bouchers
    91.24.45.40
    91.24.45.41
Row: #9
    Bottom-Dollar Markets
    Canada
    Tsawwassen
    T2F 8M4
    23 Tsawassen Blvd.
    (604) 555-4729
    (604) 555-3745";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISelectedCellsClient : WinClient
	{
		public UISelectedCellsClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "Selected Cells";
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public UIRow16AachenWindow1 UIRow16AachenWindow
		{
			get
			{
				if ((this.mUIRow16AachenWindow == null))
				{
					this.mUIRow16AachenWindow = new UIRow16AachenWindow1(this);
				}
				return this.mUIRow16AachenWindow;
			}
		}
		public UIRow0GermanyWindow UIRow0GermanyWindow
		{
			get
			{
				if ((this.mUIRow0GermanyWindow == null))
				{
					this.mUIRow0GermanyWindow = new UIRow0GermanyWindow(this);
				}
				return this.mUIRow0GermanyWindow;
			}
		}
		public UIRow0GermanyRow1MexicWindow2 UIRow0GermanyRow1MexicWindow
		{
			get
			{
				if ((this.mUIRow0GermanyRow1MexicWindow == null))
				{
					this.mUIRow0GermanyRow1MexicWindow = new UIRow0GermanyRow1MexicWindow2(this);
				}
				return this.mUIRow0GermanyRow1MexicWindow;
			}
		}
		public UIRow1AnaTrujilloEmparWindow1 UIRow1AnaTrujilloEmparWindow
		{
			get
			{
				if ((this.mUIRow1AnaTrujilloEmparWindow == null))
				{
					this.mUIRow1AnaTrujilloEmparWindow = new UIRow1AnaTrujilloEmparWindow1(this);
				}
				return this.mUIRow1AnaTrujilloEmparWindow;
			}
		}
		public UIRow1AnaTrujilloEmparWindow11 UIRow1AnaTrujilloEmparWindow1
		{
			get
			{
				if ((this.mUIRow1AnaTrujilloEmparWindow1 == null))
				{
					this.mUIRow1AnaTrujilloEmparWindow1 = new UIRow1AnaTrujilloEmparWindow11(this);
				}
				return this.mUIRow1AnaTrujilloEmparWindow1;
			}
		}
		public UIRow6BlondelpèreetfilWindow UIRow6BlondelpèreetfilWindow
		{
			get
			{
				if ((this.mUIRow6BlondelpèreetfilWindow == null))
				{
					this.mUIRow6BlondelpèreetfilWindow = new UIRow6BlondelpèreetfilWindow(this);
				}
				return this.mUIRow6BlondelpèreetfilWindow;
			}
		}
		public UIRow12CentrocomercialWindow UIRow12CentrocomercialWindow
		{
			get
			{
				if ((this.mUIRow12CentrocomercialWindow == null))
				{
					this.mUIRow12CentrocomercialWindow = new UIRow12CentrocomercialWindow(this);
				}
				return this.mUIRow12CentrocomercialWindow;
			}
		}
		#endregion
		#region Fields
		private UIRow16AachenWindow1 mUIRow16AachenWindow;
		private UIRow0GermanyWindow mUIRow0GermanyWindow;
		private UIRow0GermanyRow1MexicWindow2 mUIRow0GermanyRow1MexicWindow;
		private UIRow1AnaTrujilloEmparWindow1 mUIRow1AnaTrujilloEmparWindow;
		private UIRow1AnaTrujilloEmparWindow11 mUIRow1AnaTrujilloEmparWindow1;
		private UIRow6BlondelpèreetfilWindow mUIRow6BlondelpèreetfilWindow;
		private UIRow12CentrocomercialWindow mUIRow12CentrocomercialWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow16AachenWindow1 : WinWindow
	{
		public UIRow16AachenWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #16\r\n    Aachen";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow0GermanyWindow : WinWindow
	{
		public UIRow0GermanyWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Row: #0\r\n    Germany";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow0GermanyRow1MexicWindow2 : WinWindow
	{
		public UIRow0GermanyRow1MexicWindow2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #0
    Germany
Row: #1
    Mexico
Row: #2
    Mexico
Row: #3
    UK
Row: #4
    Sweden
Row: #5
    Germany
Row: #6
    France
Row: #7
    Spain
Row: #8
    France
Row: #9
    Canada
Row: #10
    UK
Row: #11
    Argentina
Row: #12
    Mexico
Row: #13
    Switzerland
Row: #14
    Brazil
Row: #15
    UK
Row: #16
    Germany";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow1AnaTrujilloEmparWindow1 : WinWindow
	{
		public UIRow1AnaTrujilloEmparWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #1
    Ana Trujillo Emparedados y helados
    Mexico
    México D.F.
    05021
Row: #2
    Antonio Moreno Taquería
    Mexico
    México D.F.
    05023
Row: #3
    Around the Horn
    UK
    London
    WA1 1DP
Row: #4
    Berglunds snabbköp
    Sweden
    Luleå
    S-958 22
Row: #5
    Blauer See Delikatessen
    Germany
    Mannheim
    68306
Row: #6
    Blondel père et fils
    France
    Strasbourg
    67000
Row: #7
    Bólido Comidas preparadas
    Spain
    Madrid
    28023
Row: #8
    Bon app'
    France
    Marseille
    13008";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow1AnaTrujilloEmparWindow11 : WinWindow
	{
		public UIRow1AnaTrujilloEmparWindow11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #1
    Ana Trujillo Emparedados y helados
    Mexico
    México D.F.
    05021
    Avda. de la Constitución 2222
Row: #2
    Antonio Moreno Taquería
    Mexico
    México D.F.
    05023
    Mataderos  2312
Row: #3
    Around the Horn
    UK
    London
    WA1 1DP
    120 Hanover Sq.
Row: #4
    Berglunds snabbköp
    Sweden
    Luleå
    S-958 22
    Berguvsvägen  8
Row: #5
    Blauer See Delikatessen
    Germany
    Mannheim
    68306
    Forsterstr. 57
Row: #6
    Blondel père et fils
    France
    Strasbourg
    67000
    24, place Kléber";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow6BlondelpèreetfilWindow : WinWindow
	{
		public UIRow6BlondelpèreetfilWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #6
    Blondel père et fils
    France
    Strasbourg
Row: #7
    Bólido Comidas preparadas
    Spain
    Madrid
Row: #8
    Bon app'
    France
    Marseille
    12, rue des Bouchers
Row: #9
    23 Tsawassen Blvd.
Row: #10
    Fauntleroy Circus
Row: #11
    Cerrito 333
Row: #12
    Sierras de Granada 9993";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRow12CentrocomercialWindow : WinWindow
	{
		public UIRow12CentrocomercialWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Row: #12
    Centro comercial Moctezuma
    Mexico
Row: #13
    Chop-suey Chinese
    Switzerland
Row: #14
    Comércio Mineiro
    Brazil
Row: #15
    Consolidated Holdings
    UK
    WX1 6LT
Row: #16
    52066
Row: #17
    44000
Row: #18
    WX3 6FW";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Cells");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Cells");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow6 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow6()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Cell Selection";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIPanelControl1Client25 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client25(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client25 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client25 : DXTestControl
	{
		public UIPanelControl1Client25(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIGcContainerClient12 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient12(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient12 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient12 : DXTestControl
	{
		public UIGcContainerClient12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UICellSelectionCustom1 UICellSelectionCustom
		{
			get
			{
				if ((this.mUICellSelectionCustom == null))
				{
					this.mUICellSelectionCustom = new UICellSelectionCustom1(this);
				}
				return this.mUICellSelectionCustom;
			}
		}
		#endregion
		#region Fields
		private UICellSelectionCustom1 mUICellSelectionCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICellSelectionCustom1 : DXTestControl
	{
		public UICellSelectionCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CellSelection";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CellSelection";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList21 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList21(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList21 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList21 : DXTestControl
	{
		public UIXtraTabControl1TabList21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client21 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client21(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client21 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client21 : DXTestControl
	{
		public UIXtraTabPage1Client21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbSelectModeComboBox
		{
			get
			{
				if ((this.mUIIcbSelectModeComboBox == null))
				{
					this.mUIIcbSelectModeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbSelectModeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbSelectMode";
					this.mUIIcbSelectModeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbSelectModeComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIIcbSelectModeComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbSelectModeComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISelectedRowsWindow : WinWindow
	{
		public UISelectedRowsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Selected Rows";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Rows");
			#endregion
		}
		#region Properties
		public UICompanyNameAntonioMoWindow UICompanyNameAntonioMoWindow
		{
			get
			{
				if ((this.mUICompanyNameAntonioMoWindow == null))
				{
					this.mUICompanyNameAntonioMoWindow = new UICompanyNameAntonioMoWindow(this);
				}
				return this.mUICompanyNameAntonioMoWindow;
			}
		}
		public UICompanyNameAnaTrujilWindow UICompanyNameAnaTrujilWindow
		{
			get
			{
				if ((this.mUICompanyNameAnaTrujilWindow == null))
				{
					this.mUICompanyNameAnaTrujilWindow = new UICompanyNameAnaTrujilWindow(this);
				}
				return this.mUICompanyNameAnaTrujilWindow;
			}
		}
		#endregion
		#region Fields
		private UICompanyNameAntonioMoWindow mUICompanyNameAntonioMoWindow;
		private UICompanyNameAnaTrujilWindow mUICompanyNameAnaTrujilWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICompanyNameAntonioMoWindow : WinWindow
	{
		public UICompanyNameAntonioMoWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Company Name: Antonio Moreno Taquería (#2)
Company Name: Around the Horn (#3)
Company Name: Berglunds snabbköp (#4)
Company Name: Blauer See Delikatessen (#5)
Company Name: Blondel père et fils (#6)
Company Name: Bólido Comidas preparadas (#7)
Company Name: Bon app' (#8)
Company Name: Bottom-Dollar Markets (#9)
Company Name: B's Beverages (#10)";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Rows");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Rows");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICompanyNameAnaTrujilWindow : WinWindow
	{
		public UICompanyNameAnaTrujilWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = @"Company Name: Ana Trujillo Emparedados y helados (#1)
Company Name: Antonio Moreno Taquería (#2)
Company Name: Around the Horn (#3)
Company Name: Berglunds snabbköp (#4)
Company Name: Bólido Comidas preparadas (#7)
Company Name: Bon app' (#8)
Company Name: Bottom-Dollar Markets (#9)";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Selected Rows");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("Selected Rows");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow7 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow7()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Split Presentation View";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client26 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client26(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client26 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client26 : DXTestControl
	{
		public UIPanelControl1Client26(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UIGcContainerClient13 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient13(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient13 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient13 : DXTestControl
	{
		public UIGcContainerClient13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UISplitPresentationCustom UISplitPresentationCustom
		{
			get
			{
				if ((this.mUISplitPresentationCustom == null))
				{
					this.mUISplitPresentationCustom = new UISplitPresentationCustom(this);
				}
				return this.mUISplitPresentationCustom;
			}
		}
		#endregion
		#region Fields
		private UISplitPresentationCustom mUISplitPresentationCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitPresentationCustom : DXTestControl
	{
		public UISplitPresentationCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SplitPresentation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitPresentation";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom2 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom2(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom2 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom2 : DXTestControl
	{
		public UILayoutControl1Custom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UIGridSplitContainer1SplitContainerControl UIGridSplitContainer1SplitContainerControl
		{
			get
			{
				if ((this.mUIGridSplitContainer1SplitContainerControl == null))
				{
					this.mUIGridSplitContainer1SplitContainerControl = new UIGridSplitContainer1SplitContainerControl(this);
				}
				return this.mUIGridSplitContainer1SplitContainerControl;
			}
		}
		public DXTextEdit UIEditLoanAmountEdit
		{
			get
			{
				if ((this.mUIEditLoanAmountEdit == null))
				{
					this.mUIEditLoanAmountEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIEditLoanAmountEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "editLoanAmount";
					this.mUIEditLoanAmountEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUIEditLoanAmountEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditLoanAmountEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUIEditLoanAmountEdit;
			}
		}
		public DXButton UISbCalcButton
		{
			get
			{
				if ((this.mUISbCalcButton == null))
				{
					this.mUISbCalcButton = new DXButton(this);
					#region Search Criteria
					this.mUISbCalcButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbCalc";
					this.mUISbCalcButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbCalcButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISbCalcButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUISbCalcButton;
			}
		}
		public DXSplitContainerControl UIGridSplitContainer2SplitContainerControl
		{
			get
			{
				if ((this.mUIGridSplitContainer2SplitContainerControl == null))
				{
					this.mUIGridSplitContainer2SplitContainerControl = new DXSplitContainerControl(this);
					#region Search Criteria
					this.mUIGridSplitContainer2SplitContainerControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gridSplitContainer2";
					this.mUIGridSplitContainer2SplitContainerControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridSplitContainer";
					this.mUIGridSplitContainer2SplitContainerControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridSplitContainer2SplitContainerControl.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUIGridSplitContainer2SplitContainerControl;
			}
		}
		public DXButton UISbRemoveSplitButton
		{
			get
			{
				if ((this.mUISbRemoveSplitButton == null))
				{
					this.mUISbRemoveSplitButton = new DXButton(this);
					#region Search Criteria
					this.mUISbRemoveSplitButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbRemoveSplit";
					this.mUISbRemoveSplitButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbRemoveSplitButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISbRemoveSplitButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUISbRemoveSplitButton;
			}
		}
		#endregion
		#region Fields
		private UIGridSplitContainer1SplitContainerControl mUIGridSplitContainer1SplitContainerControl;
		private DXTextEdit mUIEditLoanAmountEdit;
		private DXButton mUISbCalcButton;
		private DXSplitContainerControl mUIGridSplitContainer2SplitContainerControl;
		private DXButton mUISbRemoveSplitButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridSplitContainer1SplitContainerControl : DXSplitContainerControl
	{
		public UIGridSplitContainer1SplitContainerControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridSplitContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridSplitContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient2 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient2(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		public UISplitGroupPanelClient11 UISplitGroupPanelClient1
		{
			get
			{
				if ((this.mUISplitGroupPanelClient1 == null))
				{
					this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient11(this);
				}
				return this.mUISplitGroupPanelClient1;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient2 mUISplitGroupPanelClient;
		private UISplitGroupPanelClient11 mUISplitGroupPanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient2 : DXTestControl
	{
		public UISplitGroupPanelClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridSplitContainer1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIGridControl1Table9 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table9(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table9 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table9 : DXGrid
	{
		public UIGridControl1Table9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXCell UIItem499465Cell
		{
			get
			{
				if ((this.mUIItem499465Cell == null))
				{
					this.mUIItem499465Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem499465Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]0[Column]gcBalance";
					this.mUIItem499465Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem499465Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem499465Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUIItem499465Cell;
			}
		}
		public DXCell UIItem287828Cell
		{
			get
			{
				if ((this.mUIItem287828Cell == null))
				{
					this.mUIItem287828Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem287828Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]5[Column]gcPayment";
					this.mUIItem287828Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem287828Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem287828Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUIItem287828Cell;
			}
		}
		#endregion
		#region Fields
		private DXCell mUIItem499465Cell;
		private DXCell mUIItem287828Cell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient11 : DXTestControl
	{
		public UISplitGroupPanelClient11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridSplitContainer1SplitGroupPanel[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIGridControlTable UIGridControlTable
		{
			get
			{
				if ((this.mUIGridControlTable == null))
				{
					this.mUIGridControlTable = new UIGridControlTable(this);
				}
				return this.mUIGridControlTable;
			}
		}
		#endregion
		#region Fields
		private UIGridControlTable mUIGridControlTable;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControlTable : DXGrid
	{
		public UIGridControlTable(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridSplitContainer1SplitGroupPanel[1]GridControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXCell UIItem0Cell
		{
			get
			{
				if ((this.mUIItem0Cell == null))
				{
					this.mUIItem0Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridSplitContainer1SplitGroupPanel[1]GridControl[0]GridControlCell[View]gridView1" +
						"[Row]359[Column]gcBalance";
					this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem0Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUIItem0Cell;
			}
		}
		#endregion
		#region Fields
		private DXCell mUIItem0Cell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow8 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow8()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client27 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client27(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client27 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client27 : DXTestControl
	{
		public UIPanelControl1Client27(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIGcContainerClient14 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient14(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient14 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient14 : DXTestControl
	{
		public UIGcContainerClient14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIGridLookUpEditDemoCustom UIGridLookUpEditDemoCustom
		{
			get
			{
				if ((this.mUIGridLookUpEditDemoCustom == null))
				{
					this.mUIGridLookUpEditDemoCustom = new UIGridLookUpEditDemoCustom(this);
				}
				return this.mUIGridLookUpEditDemoCustom;
			}
		}
		#endregion
		#region Fields
		private UIGridLookUpEditDemoCustom mUIGridLookUpEditDemoCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridLookUpEditDemoCustom : DXTestControl
	{
		public UIGridLookUpEditDemoCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GridLookUpEditDemo";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEditDemo";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList22 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList22(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList22 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList22 : DXTestControl
	{
		public UIXtraTabControl1TabList22(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client22 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client22(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		public UIXtraTabPage2Client1 UIXtraTabPage2Client
		{
			get
			{
				if ((this.mUIXtraTabPage2Client == null))
				{
					this.mUIXtraTabPage2Client = new UIXtraTabPage2Client1(this);
				}
				return this.mUIXtraTabPage2Client;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1PageHeader1";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client22 mUIXtraTabPage1Client;
		private UIXtraTabPage2Client1 mUIXtraTabPage2Client;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client22 : DXTestControl
	{
		public UIXtraTabPage1Client22(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIXtraScrollableControScrollableControl UIXtraScrollableControScrollableControl
		{
			get
			{
				if ((this.mUIXtraScrollableControScrollableControl == null))
				{
					this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl(this);
				}
				return this.mUIXtraScrollableControScrollableControl;
			}
		}
		#endregion
		#region Fields
		private UIXtraScrollableControScrollableControl mUIXtraScrollableControScrollableControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraScrollableControScrollableControl : DXScrollableControl
	{
		public UIXtraScrollableControScrollableControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraScrollableControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client28 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client28(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client28 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client28 : DXTestControl
	{
		public UIPanelControl1Client28(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIDataNavigator1Client UIDataNavigator1Client
		{
			get
			{
				if ((this.mUIDataNavigator1Client == null))
				{
					this.mUIDataNavigator1Client = new UIDataNavigator1Client(this);
				}
				return this.mUIDataNavigator1Client;
			}
		}
		public DXPopupEdit UIGridLookUpEdit1PopupEdit
		{
			get
			{
				if ((this.mUIGridLookUpEdit1PopupEdit == null))
				{
					this.mUIGridLookUpEdit1PopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUIGridLookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridLookUpEdit1";
					this.mUIGridLookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
					this.mUIGridLookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridLookUpEdit1PopupEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUIGridLookUpEdit1PopupEdit;
			}
		}
		#endregion
		#region Fields
		private UIDataNavigator1Client mUIDataNavigator1Client;
		private DXPopupEdit mUIGridLookUpEdit1PopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDataNavigator1Client : DXTestControl
	{
		public UIDataNavigator1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigator1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DataNavigator";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public DXButton UINavigatorButtonButton
		{
			get
			{
				if ((this.mUINavigatorButtonButton == null))
				{
					this.mUINavigatorButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigator1Button[2]";
					this.mUINavigatorButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINavigatorButtonButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUINavigatorButtonButton;
			}
		}
		public DXButton UINavigatorButtonButton1
		{
			get
			{
				if ((this.mUINavigatorButtonButton1 == null))
				{
					this.mUINavigatorButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigator1Button[3]";
					this.mUINavigatorButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINavigatorButtonButton1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUINavigatorButtonButton1;
			}
		}
		public DXButton UINavigatorButtonButton2
		{
			get
			{
				if ((this.mUINavigatorButtonButton2 == null))
				{
					this.mUINavigatorButtonButton2 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigator1Button[0]";
					this.mUINavigatorButtonButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINavigatorButtonButton2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUINavigatorButtonButton2;
			}
		}
		public DXButton UINavigatorButtonButton3
		{
			get
			{
				if ((this.mUINavigatorButtonButton3 == null))
				{
					this.mUINavigatorButtonButton3 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton3.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigator1Button[1]";
					this.mUINavigatorButtonButton3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINavigatorButtonButton3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUINavigatorButtonButton3;
			}
		}
		public DXButton UINavigatorButtonButton4
		{
			get
			{
				if ((this.mUINavigatorButtonButton4 == null))
				{
					this.mUINavigatorButtonButton4 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton4.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigator1Button[1]";
					this.mUINavigatorButtonButton4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINavigatorButtonButton4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUINavigatorButtonButton4;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigatorButtonButton;
		private DXButton mUINavigatorButtonButton1;
		private DXButton mUINavigatorButtonButton2;
		private DXButton mUINavigatorButtonButton3;
		private DXButton mUINavigatorButtonButton4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage2Client1 : DXTestControl
	{
		public UIXtraTabPage2Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public UIGridControl1Table10 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table10(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table10 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table10 : DXGrid
	{
		public UIGridControl1Table10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
			#endregion
		}
		#region Properties
		public DXCell UIItem19081994Cell
		{
			get
			{
				if ((this.mUIItem19081994Cell == null))
				{
					this.mUIItem19081994Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem19081994Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]13[Column]colOrderDate";
					this.mUIItem19081994Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem19081994Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem19081994Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUIItem19081994Cell;
			}
		}
		public DXPopupEdit UIGridLookUpEditPopupEdit
		{
			get
			{
				if ((this.mUIGridLookUpEditPopupEdit == null))
				{
					this.mUIGridLookUpEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUIGridLookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridLookUpEdit[View]gridView1[Row]12[Column]colCustomerID";
					this.mUIGridLookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
					this.mUIGridLookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIGridLookUpEditPopupEdit;
			}
		}
		public DXPopupEdit UIGridLookUpEditPopupEdit1
		{
			get
			{
				if ((this.mUIGridLookUpEditPopupEdit1 == null))
				{
					this.mUIGridLookUpEditPopupEdit1 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUIGridLookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridLookUpEdit[View]gridView1[Row]12[Column]colEmployeeID";
					this.mUIGridLookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
					this.mUIGridLookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIGridLookUpEditPopupEdit1;
			}
		}
		public DXDateTimePicker UIDateEditDateTimePicker
		{
			get
			{
				if ((this.mUIDateEditDateTimePicker == null))
				{
					this.mUIDateEditDateTimePicker = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1DateEdit[View]gridView1[Row]12[Column]colOrderDate";
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDateEditDateTimePicker.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUIDateEditDateTimePicker;
			}
		}
		public DXCell UITheBigCheeseCell
		{
			get
			{
				if ((this.mUITheBigCheeseCell == null))
				{
					this.mUITheBigCheeseCell = new DXCell(this);
					#region Search Criteria
					this.mUITheBigCheeseCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]12[Column]colCustomerID";
					this.mUITheBigCheeseCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUITheBigCheeseCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITheBigCheeseCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUITheBigCheeseCell;
			}
		}
		public DXCell UIAnneDodsworthCell
		{
			get
			{
				if ((this.mUIAnneDodsworthCell == null))
				{
					this.mUIAnneDodsworthCell = new DXCell(this);
					#region Search Criteria
					this.mUIAnneDodsworthCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]12[Column]colEmployeeID";
					this.mUIAnneDodsworthCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIAnneDodsworthCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAnneDodsworthCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUIAnneDodsworthCell;
			}
		}
		public DXPopupEdit UIGridLookUpEditPopupEdit2
		{
			get
			{
				if ((this.mUIGridLookUpEditPopupEdit2 == null))
				{
					this.mUIGridLookUpEditPopupEdit2 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUIGridLookUpEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridLookUpEdit[View]gridView1[Row]13[Column]colEmployeeID";
					this.mUIGridLookUpEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
					this.mUIGridLookUpEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridLookUpEditPopupEdit2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor");
					#endregion
				}
				return this.mUIGridLookUpEditPopupEdit2;
			}
		}
		public DXPopupEdit UIGridLookUpEditPopupEdit3
		{
			get
			{
				if ((this.mUIGridLookUpEditPopupEdit3 == null))
				{
					this.mUIGridLookUpEditPopupEdit3 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUIGridLookUpEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridLookUpEdit[View]gridView1[Row]12[Column]colEmployeeID";
					this.mUIGridLookUpEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
					this.mUIGridLookUpEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIGridLookUpEditPopupEdit3;
			}
		}
		#endregion
		#region Fields
		private DXCell mUIItem19081994Cell;
		private DXPopupEdit mUIGridLookUpEditPopupEdit;
		private DXPopupEdit mUIGridLookUpEditPopupEdit1;
		private DXDateTimePicker mUIDateEditDateTimePicker;
		private DXCell mUITheBigCheeseCell;
		private DXCell mUIAnneDodsworthCell;
		private DXPopupEdit mUIGridLookUpEditPopupEdit2;
		private DXPopupEdit mUIGridLookUpEditPopupEdit3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIПереводчикGoogleWindWindow : BrowserWindow
	{
		public UIПереводчикGoogleWindWindow()
		{
			#region Search Criteria
			this.SearchProperties[UITestControl.PropertyNames.Name] = "Переводчик Google#";
			this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
			this.WindowTitles.Add("Переводчик Google#");
			#endregion
		}
		public void LaunchUrl(System.Uri url)
		{
			this.CopyFrom(BrowserWindow.Launch(url));
		}
		#region Properties
		public UIПереводчикGoogleDocument UIПереводчикGoogleDocument
		{
			get
			{
				if ((this.mUIПереводчикGoogleDocument == null))
				{
					this.mUIПереводчикGoogleDocument = new UIПереводчикGoogleDocument(this);
				}
				return this.mUIПереводчикGoogleDocument;
			}
		}
		#endregion
		#region Fields
		private UIПереводчикGoogleDocument mUIПереводчикGoogleDocument;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIПереводчикGoogleDocument : HtmlDocument
	{
		public UIПереводчикGoogleDocument(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
			this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
			this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
			this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Переводчик Google#";
			this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
			this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://translate.google.ru/#ru|en|%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B" +
				"D%D1%8B%D0%B9";
			this.WindowTitles.Add("Переводчик Google#");
			#endregion
		}
		#region Properties
		public HtmlDiv UIGtformcPane
		{
			get
			{
				if ((this.mUIGtformcPane == null))
				{
					this.mUIGtformcPane = new HtmlDiv(this);
					#region Search Criteria
					this.mUIGtformcPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "gt-form-c";
					this.mUIGtformcPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
					this.mUIGtformcPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nПереводчик\r\n\r\n\r\n\r\n\r\nС языка: русский";
					this.mUIGtformcPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
					this.mUIGtformcPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
					this.mUIGtformcPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"gt-form-c\"";
					this.mUIGtformcPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "17";
					this.mUIGtformcPane.WindowTitles.Add("Переводчик Google#");
					#endregion
				}
				return this.mUIGtformcPane;
			}
		}
		#endregion
		#region Fields
		private HtmlDiv mUIGtformcPane;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow9 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow9()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
				"";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
					"");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client29 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client29(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client29 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client29 : DXTestControl
	{
		public UIPanelControl1Client29(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
					"");
			#endregion
		}
		#region Properties
		public UIGcContainerClient15 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient15(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient15 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient15 : DXTestControl
	{
		public UIGcContainerClient15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
					"");
			#endregion
		}
		#region Properties
		public UISearchLookUpEditDemoCustom UISearchLookUpEditDemoCustom
		{
			get
			{
				if ((this.mUISearchLookUpEditDemoCustom == null))
				{
					this.mUISearchLookUpEditDemoCustom = new UISearchLookUpEditDemoCustom(this);
				}
				return this.mUISearchLookUpEditDemoCustom;
			}
		}
		#endregion
		#region Fields
		private UISearchLookUpEditDemoCustom mUISearchLookUpEditDemoCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISearchLookUpEditDemoCustom : DXTestControl
	{
		public UISearchLookUpEditDemoCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchLookUpEditDemo";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEditDemo";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
					"");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList23 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList23(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList23 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList23 : DXTestControl
	{
		public UIXtraTabControl1TabList23(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
					"");
			#endregion
		}
		#region Properties
		public UIXtraTabPage2Client2 UIXtraTabPage2Client
		{
			get
			{
				if ((this.mUIXtraTabPage2Client == null))
				{
					this.mUIXtraTabPage2Client = new UIXtraTabPage2Client2(this);
				}
				return this.mUIXtraTabPage2Client;
			}
		}
		public UIXtraTabPage1Client23 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client23(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1PageHeader1";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
							"");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage2Client2 mUIXtraTabPage2Client;
		private UIXtraTabPage1Client23 mUIXtraTabPage1Client;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage2Client2 : DXTestControl
	{
		public UIXtraTabPage2Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
					"");
			#endregion
		}
		#region Properties
		public UIGridControl1Table11 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table11(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table11 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table11 : DXGrid
	{
		public UIGridControl1Table11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
					"");
			#endregion
		}
		#region Properties
		public DXPopupEdit UISearchLookUpEditPopupEdit
		{
			get
			{
				if ((this.mUISearchLookUpEditPopupEdit == null))
				{
					this.mUISearchLookUpEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUISearchLookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SearchLookUpEdit[View]gridView1[Row]13[Column]colCustomerID";
					this.mUISearchLookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
					this.mUISearchLookUpEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISearchLookUpEditPopupEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
							"");
					#endregion
				}
				return this.mUISearchLookUpEditPopupEdit;
			}
		}
		public DXPopupEdit UISearchLookUpEditPopupEdit1
		{
			get
			{
				if ((this.mUISearchLookUpEditPopupEdit1 == null))
				{
					this.mUISearchLookUpEditPopupEdit1 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUISearchLookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SearchLookUpEdit[View]gridView1[Row]19[Column]colCustomerID";
					this.mUISearchLookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
					this.mUISearchLookUpEditPopupEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISearchLookUpEditPopupEdit1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
							"");
					#endregion
				}
				return this.mUISearchLookUpEditPopupEdit1;
			}
		}
		public DXPopupEdit UISearchLookUpEditPopupEdit2
		{
			get
			{
				if ((this.mUISearchLookUpEditPopupEdit2 == null))
				{
					this.mUISearchLookUpEditPopupEdit2 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUISearchLookUpEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SearchLookUpEdit[View]gridView1[Row]5[Column]colCustomerID";
					this.mUISearchLookUpEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
					this.mUISearchLookUpEditPopupEdit2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISearchLookUpEditPopupEdit2;
			}
		}
		public DXPopupEdit UISearchLookUpEditPopupEdit3
		{
			get
			{
				if ((this.mUISearchLookUpEditPopupEdit3 == null))
				{
					this.mUISearchLookUpEditPopupEdit3 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUISearchLookUpEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SearchLookUpEdit[View]gridView1[Row]5[Column]colCustomerID";
					this.mUISearchLookUpEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
					this.mUISearchLookUpEditPopupEdit3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISearchLookUpEditPopupEdit3;
			}
		}
		public DXPopupEdit UISearchLookUpEditPopupEdit5
		{
			get
			{
				if ((this.mUISearchLookUpEditPopupEdit5 == null))
				{
					this.mUISearchLookUpEditPopupEdit5 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUISearchLookUpEditPopupEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SearchLookUpEdit[View]gridView1[Row]3[Column]colCustomerID";
					this.mUISearchLookUpEditPopupEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
					this.mUISearchLookUpEditPopupEdit5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISearchLookUpEditPopupEdit5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
							"");
					#endregion
				}
				return this.mUISearchLookUpEditPopupEdit5;
			}
		}
		public DXCell UIEditValueisnullCell
		{
			get
			{
				if ((this.mUIEditValueisnullCell == null))
				{
					this.mUIEditValueisnullCell = new DXCell(this);
					#region Search Criteria
					this.mUIEditValueisnullCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]3[Column]colCustomerID";
					this.mUIEditValueisnullCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIEditValueisnullCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditValueisnullCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
							"");
					#endregion
				}
				return this.mUIEditValueisnullCell;
			}
		}
		public DXPopupEdit UISearchLookUpEditPopupEdit4
		{
			get
			{
				if ((this.mUISearchLookUpEditPopupEdit4 == null))
				{
					this.mUISearchLookUpEditPopupEdit4 = new DXPopupEdit(this);
					#region Search Criteria
					this.mUISearchLookUpEditPopupEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SearchLookUpEdit[View]gridView1[Row]6[Column]colCustomerID";
					this.mUISearchLookUpEditPopupEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
					this.mUISearchLookUpEditPopupEdit4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISearchLookUpEditPopupEdit4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
							"");
					#endregion
				}
				return this.mUISearchLookUpEditPopupEdit4;
			}
		}
		public DXCell UIAntonioMorenoTaqueríCell
		{
			get
			{
				if ((this.mUIAntonioMorenoTaqueríCell == null))
				{
					this.mUIAntonioMorenoTaqueríCell = new DXCell(this);
					#region Search Criteria
					this.mUIAntonioMorenoTaqueríCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]5[Column]colCustomerID";
					this.mUIAntonioMorenoTaqueríCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIAntonioMorenoTaqueríCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAntonioMorenoTaqueríCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Extended Lookup Editor (with search)" +
							"");
					#endregion
				}
				return this.mUIAntonioMorenoTaqueríCell;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUISearchLookUpEditPopupEdit;
		private DXPopupEdit mUISearchLookUpEditPopupEdit1;
		private DXPopupEdit mUISearchLookUpEditPopupEdit2;
		private DXPopupEdit mUISearchLookUpEditPopupEdit3;
		private DXPopupEdit mUISearchLookUpEditPopupEdit5;
		private DXCell mUIEditValueisnullCell;
		private DXPopupEdit mUISearchLookUpEditPopupEdit4;
		private DXCell mUIAntonioMorenoTaqueríCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client23 : DXTestControl
	{
		public UIXtraTabPage1Client23(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIXtraScrollableControScrollableControl1 UIXtraScrollableControScrollableControl
		{
			get
			{
				if ((this.mUIXtraScrollableControScrollableControl == null))
				{
					this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl1(this);
				}
				return this.mUIXtraScrollableControScrollableControl;
			}
		}
		#endregion
		#region Fields
		private UIXtraScrollableControScrollableControl1 mUIXtraScrollableControScrollableControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraScrollableControScrollableControl1 : DXScrollableControl
	{
		public UIXtraScrollableControScrollableControl1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraScrollableControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIPanelControl1Client30 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client30(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client30 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client30 : DXTestControl
	{
		public UIPanelControl1Client30(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXPopupEdit UISearchLookUpEdit1PopupEdit
		{
			get
			{
				if ((this.mUISearchLookUpEdit1PopupEdit == null))
				{
					this.mUISearchLookUpEdit1PopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUISearchLookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "searchLookUpEdit1";
					this.mUISearchLookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEditWithGlyph";
					this.mUISearchLookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISearchLookUpEdit1PopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUISearchLookUpEdit1PopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow10 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow10()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client31 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client31(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client31 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client31 : DXTestControl
	{
		public UIPanelControl1Client31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIGcContainerClient16 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient16(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient16 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient16 : DXTestControl
	{
		public UIGcContainerClient16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIMultiEditorsCustom UIMultiEditorsCustom
		{
			get
			{
				if ((this.mUIMultiEditorsCustom == null))
				{
					this.mUIMultiEditorsCustom = new UIMultiEditorsCustom(this);
				}
				return this.mUIMultiEditorsCustom;
			}
		}
		#endregion
		#region Fields
		private UIMultiEditorsCustom mUIMultiEditorsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiEditorsCustom : DXTestControl
	{
		public UIMultiEditorsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MultiEditors";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultiEditors";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIGridControl1Table12 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table12(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table12 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table12 : DXGrid
	{
		public UIGridControl1Table12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public DXCell UIItem83Cell
		{
			get
			{
				if ((this.mUIItem83Cell == null))
				{
					this.mUIItem83Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem83Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]9[Column]gridColumn2";
					this.mUIItem83Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem83Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem83Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
					#endregion
				}
				return this.mUIItem83Cell;
			}
		}
		public DXTestControl UIProgressBarControlProgressBar
		{
			get
			{
				if ((this.mUIProgressBarControlProgressBar == null))
				{
					this.mUIProgressBarControlProgressBar = new DXTestControl(this);
					#region Search Criteria
					this.mUIProgressBarControlProgressBar.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1ProgressBarControl[View]gridView1[Row]9[Column]gridColumn2";
					this.mUIProgressBarControlProgressBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ProgressBarControl";
					this.mUIProgressBarControlProgressBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIProgressBarControlProgressBar.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
					#endregion
				}
				return this.mUIProgressBarControlProgressBar;
			}
		}
		public DXTestControl UIProgressBarControlProgressBar1
		{
			get
			{
				if ((this.mUIProgressBarControlProgressBar1 == null))
				{
					this.mUIProgressBarControlProgressBar1 = new DXTestControl(this);
					#region Search Criteria
					this.mUIProgressBarControlProgressBar1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1ProgressBarControl[View]gridView1[Row]9[Column]gridColumn3";
					this.mUIProgressBarControlProgressBar1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ProgressBarControl";
					this.mUIProgressBarControlProgressBar1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIProgressBarControlProgressBar1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
					#endregion
				}
				return this.mUIProgressBarControlProgressBar1;
			}
		}
		public DXCell UIItem85Cell
		{
			get
			{
				if ((this.mUIItem85Cell == null))
				{
					this.mUIItem85Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem85Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]9[Column]gridColumn3";
					this.mUIItem85Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem85Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem85Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
					#endregion
				}
				return this.mUIItem85Cell;
			}
		}
		#endregion
		#region Fields
		private DXCell mUIItem83Cell;
		private DXTestControl mUIProgressBarControlProgressBar;
		private DXTestControl mUIProgressBarControlProgressBar1;
		private DXCell mUIItem85Cell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow11 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow11()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client32 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client32(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client32 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client32 : DXTestControl
	{
		public UIPanelControl1Client32(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
			#endregion
		}
		#region Properties
		public UIGcContainerClient17 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient17(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient17 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient17 : DXTestControl
	{
		public UIGcContainerClient17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
			#endregion
		}
		#region Properties
		public UIAutoFilterRowCustom UIAutoFilterRowCustom
		{
			get
			{
				if ((this.mUIAutoFilterRowCustom == null))
				{
					this.mUIAutoFilterRowCustom = new UIAutoFilterRowCustom(this);
				}
				return this.mUIAutoFilterRowCustom;
			}
		}
		#endregion
		#region Fields
		private UIAutoFilterRowCustom mUIAutoFilterRowCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoFilterRowCustom : DXTestControl
	{
		public UIAutoFilterRowCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AutoFilterRow";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoFilterRow";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
			#endregion
		}
		#region Properties
		public UIGridControl1Table13 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table13(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table13 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table13 : DXGrid
	{
		public UIGridControl1Table13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
			#endregion
		}
		#region Properties
		public DXCell UICheckedCell
		{
			get
			{
				if ((this.mUICheckedCell == null))
				{
					this.mUICheckedCell = new DXCell(this);
					#region Search Criteria
					this.mUICheckedCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]-2147483646[Column]colType";
					this.mUICheckedCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUICheckedCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICheckedCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
					#endregion
				}
				return this.mUICheckedCell;
			}
		}
		public DXComboBox UIImageComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEditComboBox == null))
				{
					this.mUIImageComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1ImageComboBoxEdit[View]gridView1[Row]-2147483646[Column]colPriority";
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIImageComboBoxEditComboBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
					#endregion
				}
				return this.mUIImageComboBoxEditComboBox;
			}
		}
		public DXColumnHeader UIColPriorityColumnHeader
		{
			get
			{
				if ((this.mUIColPriorityColumnHeader == null))
				{
					this.mUIColPriorityColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colPriority";
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColPriorityColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
					#endregion
				}
				return this.mUIColPriorityColumnHeader;
			}
		}
		public DXColumnHeader UIColTypeColumnHeader
		{
			get
			{
				if ((this.mUIColTypeColumnHeader == null))
				{
					this.mUIColTypeColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColTypeColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colType";
					this.mUIColTypeColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColTypeColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColTypeColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
					#endregion
				}
				return this.mUIColTypeColumnHeader;
			}
		}
		public DXTestControl UIGridControlFilterPanText
		{
			get
			{
				if ((this.mUIGridControlFilterPanText == null))
				{
					this.mUIGridControlFilterPanText = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelText[View]gridView1";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelText";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanText.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Filter Row");
					#endregion
				}
				return this.mUIGridControlFilterPanText;
			}
		}
		#endregion
		#region Fields
		private DXCell mUICheckedCell;
		private DXComboBox mUIImageComboBoxEditComboBox;
		private DXColumnHeader mUIColPriorityColumnHeader;
		private DXColumnHeader mUIColTypeColumnHeader;
		private DXTestControl mUIGridControlFilterPanText;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow12 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow12()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Find Panel";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client33 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client33(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client33 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client33 : DXTestControl
	{
		public UIPanelControl1Client33(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIGcContainerClient18 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient18(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient18 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient18 : DXTestControl
	{
		public UIGcContainerClient18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIFindFilterCustom UIFindFilterCustom
		{
			get
			{
				if ((this.mUIFindFilterCustom == null))
				{
					this.mUIFindFilterCustom = new UIFindFilterCustom(this);
				}
				return this.mUIFindFilterCustom;
			}
		}
		#endregion
		#region Fields
		private UIFindFilterCustom mUIFindFilterCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindFilterCustom : DXTestControl
	{
		public UIFindFilterCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindFilter";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindFilter";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom3 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom3(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom3 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom3 : DXTestControl
	{
		public UILayoutControl1Custom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIGridControl1Table14 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table14(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIPanelControl1Client34 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client34(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table14 mUIGridControl1Table;
		private UIPanelControl1Client34 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table14 : DXGrid
	{
		public UIGridControl1Table14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public DXCell UIAnaTrujilloEmparedadCell
		{
			get
			{
				if ((this.mUIAnaTrujilloEmparedadCell == null))
				{
					this.mUIAnaTrujilloEmparedadCell = new DXCell(this);
					#region Search Criteria
					this.mUIAnaTrujilloEmparedadCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]1[Column]colCompanyName";
					this.mUIAnaTrujilloEmparedadCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIAnaTrujilloEmparedadCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAnaTrujilloEmparedadCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUIAnaTrujilloEmparedadCell;
			}
		}
		public UIFindControlCustom UIFindControlCustom
		{
			get
			{
				if ((this.mUIFindControlCustom == null))
				{
					this.mUIFindControlCustom = new UIFindControlCustom(this);
				}
				return this.mUIFindControlCustom;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]colCompanyName";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		#endregion
		#region Fields
		private DXCell mUIAnaTrujilloEmparedadCell;
		private UIFindControlCustom mUIFindControlCustom;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindControlCustom : DXTestControl
	{
		public UIFindControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom4 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom4(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom4 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom4 : DXTestControl
	{
		public UILayoutControl1Custom4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public DXMRUEdit UITeFindMRUEdit
		{
			get
			{
				if ((this.mUITeFindMRUEdit == null))
				{
					this.mUITeFindMRUEdit = new DXMRUEdit(this);
					#region Search Criteria
					this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
					this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MRUEdit";
					this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITeFindMRUEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUITeFindMRUEdit;
			}
		}
		public DXButton UIBtClearButton
		{
			get
			{
				if ((this.mUIBtClearButton == null))
				{
					this.mUIBtClearButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtClearButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btClear";
					this.mUIBtClearButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtClearButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtClearButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUIBtClearButton;
			}
		}
		public DXButton UICloseButtonButton
		{
			get
			{
				if ((this.mUICloseButtonButton == null))
				{
					this.mUICloseButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btClose";
					this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CloseButton";
					this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICloseButtonButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUICloseButtonButton;
			}
		}
		public DXButton UIBtFindButton
		{
			get
			{
				if ((this.mUIBtFindButton == null))
				{
					this.mUIBtFindButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtFindButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btFind";
					this.mUIBtFindButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtFindButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtFindButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUIBtFindButton;
			}
		}
		#endregion
		#region Fields
		private DXMRUEdit mUITeFindMRUEdit;
		private DXButton mUIBtClearButton;
		private DXButton mUICloseButtonButton;
		private DXButton mUIBtFindButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client34 : DXTestControl
	{
		public UIPanelControl1Client34(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIUcFindOptions1Custom UIUcFindOptions1Custom
		{
			get
			{
				if ((this.mUIUcFindOptions1Custom == null))
				{
					this.mUIUcFindOptions1Custom = new UIUcFindOptions1Custom(this);
				}
				return this.mUIUcFindOptions1Custom;
			}
		}
		#endregion
		#region Fields
		private UIUcFindOptions1Custom mUIUcFindOptions1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUcFindOptions1Custom : DXTestControl
	{
		public UIUcFindOptions1Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ucFindOptions1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ucFindOptions";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom5 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom5(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom5 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom5 : DXTestControl
	{
		public UILayoutControl1Custom5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public DXComboBox UICbFindFilterColumnsComboBox
		{
			get
			{
				if ((this.mUICbFindFilterColumnsComboBox == null))
				{
					this.mUICbFindFilterColumnsComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbFindFilterColumnsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbFindFilterColumns";
					this.mUICbFindFilterColumnsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICbFindFilterColumnsComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICbFindFilterColumnsComboBox;
			}
		}
		public DXComboBox UIIcbFindModeComboBox
		{
			get
			{
				if ((this.mUIIcbFindModeComboBox == null))
				{
					this.mUIIcbFindModeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbFindModeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbFindMode";
					this.mUIIcbFindModeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbFindModeComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIIcbFindModeComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbFindFilterColumnsComboBox;
		private DXComboBox mUIIcbFindModeComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow13 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow13()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - MRU Filter List";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client35 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client35(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIPanelControl1Client111 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client111(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client35 mUIPanelControl1Client;
		private UIPanelControl1Client111 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client35 : DXTestControl
	{
		public UIPanelControl1Client35(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public UIGcContainerClient19 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient19(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient19 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient19 : DXTestControl
	{
		public UIGcContainerClient19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public UIFilteringCustom1 UIFilteringCustom
		{
			get
			{
				if ((this.mUIFilteringCustom == null))
				{
					this.mUIFilteringCustom = new UIFilteringCustom1(this);
				}
				return this.mUIFilteringCustom;
			}
		}
		#endregion
		#region Fields
		private UIFilteringCustom1 mUIFilteringCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilteringCustom1 : DXTestControl
	{
		public UIFilteringCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Filtering";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "Filtering";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public UIGridControl1Table15 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table15(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table15 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table15 : DXGrid
	{
		public UIGridControl1Table15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIColPriorityColumnHeader
		{
			get
			{
				if ((this.mUIColPriorityColumnHeader == null))
				{
					this.mUIColPriorityColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupPanelColumn[View]gridView1[Column]colPriority";
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColPriorityColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIColPriorityColumnHeader;
			}
		}
		public UIFilterComboBoxCheckedComboBox2 UIFilterComboBoxCheckedComboBox
		{
			get
			{
				if ((this.mUIFilterComboBoxCheckedComboBox == null))
				{
					this.mUIFilterComboBoxCheckedComboBox = new UIFilterComboBoxCheckedComboBox2(this);
				}
				return this.mUIFilterComboBoxCheckedComboBox;
			}
		}
		public UIFilterComboBoxCheckedComboBox11 UIFilterComboBoxCheckedComboBox1
		{
			get
			{
				if ((this.mUIFilterComboBoxCheckedComboBox1 == null))
				{
					this.mUIFilterComboBoxCheckedComboBox1 = new UIFilterComboBoxCheckedComboBox11(this);
				}
				return this.mUIFilterComboBoxCheckedComboBox1;
			}
		}
		public DXColumnHeader UIColPriorityColumnHeader1
		{
			get
			{
				if ((this.mUIColPriorityColumnHeader1 == null))
				{
					this.mUIColPriorityColumnHeader1 = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColPriorityColumnHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colPriority";
					this.mUIColPriorityColumnHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColPriorityColumnHeader1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColPriorityColumnHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIColPriorityColumnHeader1;
			}
		}
		public DXColumnHeader UIColStatusColumnHeader
		{
			get
			{
				if ((this.mUIColStatusColumnHeader == null))
				{
					this.mUIColStatusColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColStatusColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colStatus";
					this.mUIColStatusColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColStatusColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColStatusColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIColStatusColumnHeader;
			}
		}
		public DXTestControl UIGridControlFilterPanText
		{
			get
			{
				if ((this.mUIGridControlFilterPanText == null))
				{
					this.mUIGridControlFilterPanText = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelText[View]gridView1";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelText";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanText.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIGridControlFilterPanText;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]colName";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell1
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell1 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell1 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]colCreatedDate";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell1;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIColPriorityColumnHeader;
		private UIFilterComboBoxCheckedComboBox2 mUIFilterComboBoxCheckedComboBox;
		private UIFilterComboBoxCheckedComboBox11 mUIFilterComboBoxCheckedComboBox1;
		private DXColumnHeader mUIColPriorityColumnHeader1;
		private DXColumnHeader mUIColStatusColumnHeader;
		private DXTestControl mUIGridControlFilterPanText;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterComboBoxCheckedComboBox2 : DXCheckedComboBox
	{
		public UIFilterComboBoxCheckedComboBox2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterComboBox";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIFilterCheckedPopupCoWindow2 UIFilterCheckedPopupCoWindow
		{
			get
			{
				if ((this.mUIFilterCheckedPopupCoWindow == null))
				{
					this.mUIFilterCheckedPopupCoWindow = new UIFilterCheckedPopupCoWindow2(this);
				}
				return this.mUIFilterCheckedPopupCoWindow;
			}
		}
		#endregion
		#region Fields
		private UIFilterCheckedPopupCoWindow2 mUIFilterCheckedPopupCoWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterCheckedPopupCoWindow2 : DXWindow
	{
		public UIFilterCheckedPopupCoWindow2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterCheckedPopupContainerForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterComboBoxCheckedComboBox11 : DXCheckedComboBox
	{
		public UIFilterComboBoxCheckedComboBox11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterComboBox";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIFilterCheckedPopupCoWindow3 UIFilterCheckedPopupCoWindow
		{
			get
			{
				if ((this.mUIFilterCheckedPopupCoWindow == null))
				{
					this.mUIFilterCheckedPopupCoWindow = new UIFilterCheckedPopupCoWindow3(this);
				}
				return this.mUIFilterCheckedPopupCoWindow;
			}
		}
		#endregion
		#region Fields
		private UIFilterCheckedPopupCoWindow3 mUIFilterCheckedPopupCoWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterCheckedPopupCoWindow3 : DXWindow
	{
		public UIFilterCheckedPopupCoWindow3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterCheckedPopupContainerForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1FilterComboBox[0]PopupFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client111 : DXTestControl
	{
		public UIPanelControl1Client111(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public UIGcContainerClient20 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient20(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient20 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient20 : DXTestControl
	{
		public UIGcContainerClient20(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public UIFilteringCustom2 UIFilteringCustom
		{
			get
			{
				if ((this.mUIFilteringCustom == null))
				{
					this.mUIFilteringCustom = new UIFilteringCustom2(this);
				}
				return this.mUIFilteringCustom;
			}
		}
		#endregion
		#region Fields
		private UIFilteringCustom2 mUIFilteringCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilteringCustom2 : DXTestControl
	{
		public UIFilteringCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Filtering";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "Filtering";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public UIGridControl1Table16 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table16(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table16 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table16 : DXGrid
	{
		public UIGridControl1Table16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIColPriorityColumnHeader
		{
			get
			{
				if ((this.mUIColPriorityColumnHeader == null))
				{
					this.mUIColPriorityColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupPanelColumn[View]gridView1[Column]colPriority";
					this.mUIColPriorityColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColPriorityColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIColPriorityColumnHeader;
			}
		}
		public DXColumnHeader UIColStatusColumnHeader
		{
			get
			{
				if ((this.mUIColStatusColumnHeader == null))
				{
					this.mUIColStatusColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColStatusColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colStatus";
					this.mUIColStatusColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColStatusColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIColStatusColumnHeader;
			}
		}
		public DXTestControl UIGridControlFilterPanText
		{
			get
			{
				if ((this.mUIGridControlFilterPanText == null))
				{
					this.mUIGridControlFilterPanText = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelText[View]gridView1";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelText";
					this.mUIGridControlFilterPanText.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIGridControlFilterPanText;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]colName";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell1
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell1 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell1 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]colCreatedDate";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - MRU Filter List");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell1;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIColPriorityColumnHeader;
		private DXColumnHeader mUIColStatusColumnHeader;
		private DXTestControl mUIGridControlFilterPanText;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow14 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow14()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client36 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client36(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client36 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client36 : DXTestControl
	{
		public UIPanelControl1Client36(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIGcContainerClient21 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient21(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient21 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient21 : DXTestControl
	{
		public UIGcContainerClient21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIFilterControlCustom UIFilterControlCustom
		{
			get
			{
				if ((this.mUIFilterControlCustom == null))
				{
					this.mUIFilterControlCustom = new UIFilterControlCustom(this);
				}
				return this.mUIFilterControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIFilterControlCustom mUIFilterControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterControlCustom : DXTestControl
	{
		public UIFilterControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FilterControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList24 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList24(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList24 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList24 : DXTestControl
	{
		public UIXtraTabControl1TabList24(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1PageHeader1";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		public UIXtraTabPage2Client3 UIXtraTabPage2Client
		{
			get
			{
				if ((this.mUIXtraTabPage2Client == null))
				{
					this.mUIXtraTabPage2Client = new UIXtraTabPage2Client3(this);
				}
				return this.mUIXtraTabPage2Client;
			}
		}
		public UIXtraTabPage1Client24 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client24(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		private UIXtraTabPage2Client3 mUIXtraTabPage2Client;
		private UIXtraTabPage1Client24 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage2Client3 : DXTestControl
	{
		public UIXtraTabPage2Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl1 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl1(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl1 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl1 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient3 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient3(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		public UISplitGroupPanelClient12 UISplitGroupPanelClient1
		{
			get
			{
				if ((this.mUISplitGroupPanelClient1 == null))
				{
					this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient12(this);
				}
				return this.mUISplitGroupPanelClient1;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient3 mUISplitGroupPanelClient;
		private UISplitGroupPanelClient12 mUISplitGroupPanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient3 : DXTestControl
	{
		public UISplitGroupPanelClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl2SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIFilterControl2FilterControl UIFilterControl2FilterControl
		{
			get
			{
				if ((this.mUIFilterControl2FilterControl == null))
				{
					this.mUIFilterControl2FilterControl = new UIFilterControl2FilterControl(this);
				}
				return this.mUIFilterControl2FilterControl;
			}
		}
		public UIPanelControl3Client UIPanelControl3Client
		{
			get
			{
				if ((this.mUIPanelControl3Client == null))
				{
					this.mUIPanelControl3Client = new UIPanelControl3Client(this);
				}
				return this.mUIPanelControl3Client;
			}
		}
		#endregion
		#region Fields
		private UIFilterControl2FilterControl mUIFilterControl2FilterControl;
		private UIPanelControl3Client mUIPanelControl3Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterControl2FilterControl : DXFilterControl
	{
		public UIFilterControl2FilterControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXTrackBar UITrackBarControlTrackBar
		{
			get
			{
				if ((this.mUITrackBarControlTrackBar == null))
				{
					this.mUITrackBarControlTrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUITrackBarControlTrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl2TrackBarControlNode1Element2";
					this.mUITrackBarControlTrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TrackBarControl";
					this.mUITrackBarControlTrackBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITrackBarControlTrackBar.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUITrackBarControlTrackBar;
			}
		}
		public DXComboBox UIImageComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEditComboBox == null))
				{
					this.mUIImageComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl2ImageComboBoxEditNode2Element2";
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIImageComboBoxEditComboBox;
			}
		}
		#endregion
		#region Fields
		private DXTrackBar mUITrackBarControlTrackBar;
		private DXComboBox mUIImageComboBoxEditComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl3Client : DXTestControl
	{
		public UIPanelControl3Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXButton UISbApplyFilter2Button
		{
			get
			{
				if ((this.mUISbApplyFilter2Button == null))
				{
					this.mUISbApplyFilter2Button = new DXButton(this);
					#region Search Criteria
					this.mUISbApplyFilter2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "sbApplyFilter2";
					this.mUISbApplyFilter2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbApplyFilter2Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISbApplyFilter2Button.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISbApplyFilter2Button;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISbApplyFilter2Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient12 : DXTestControl
	{
		public UISplitGroupPanelClient12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl2SplitGroupPanel[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIGridControl2Table2 UIGridControl2Table
		{
			get
			{
				if ((this.mUIGridControl2Table == null))
				{
					this.mUIGridControl2Table = new UIGridControl2Table2(this);
				}
				return this.mUIGridControl2Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl2Table2 mUIGridControl2Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl2Table2 : DXGrid
	{
		public UIGridControl2Table2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXTestControl UIGridControlFilterPanText
		{
			get
			{
				if ((this.mUIGridControlFilterPanText == null))
				{
					this.mUIGridControlFilterPanText = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlFilterPanelText[View]gridView2";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelText";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanText.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridControlFilterPanText;
			}
		}
		public DXColumnHeader UIGridColumnSuspendedColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnSuspendedColumnHeader == null))
				{
					this.mUIGridColumnSuspendedColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnSuspendedColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView2[Column]gridColumnSuspended";
					this.mUIGridColumnSuspendedColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnSuspendedColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumnSuspendedColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnSuspendedColumnHeader;
			}
		}
		public DXColumnHeader UIGridColumnImplementeColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnImplementeColumnHeader == null))
				{
					this.mUIGridColumnImplementeColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnImplementeColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView2[Column]gridColumnImplemented";
					this.mUIGridColumnImplementeColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnImplementeColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumnImplementeColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnImplementeColumnHeader;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIGridControlFilterPanText;
		private DXColumnHeader mUIGridColumnSuspendedColumnHeader;
		private DXColumnHeader mUIGridColumnImplementeColumnHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client24 : DXTestControl
	{
		public UIXtraTabPage1Client24(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl2 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl2(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl2 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl2 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient4 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient4(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		public UISplitGroupPanelClient13 UISplitGroupPanelClient1
		{
			get
			{
				if ((this.mUISplitGroupPanelClient1 == null))
				{
					this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient13(this);
				}
				return this.mUISplitGroupPanelClient1;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient4 mUISplitGroupPanelClient;
		private UISplitGroupPanelClient13 mUISplitGroupPanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient4 : DXTestControl
	{
		public UISplitGroupPanelClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIFilterControl1FilterControl UIFilterControl1FilterControl
		{
			get
			{
				if ((this.mUIFilterControl1FilterControl == null))
				{
					this.mUIFilterControl1FilterControl = new UIFilterControl1FilterControl(this);
				}
				return this.mUIFilterControl1FilterControl;
			}
		}
		public UIPanelControl1Client37 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client37(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIFilterControl1FilterControl mUIFilterControl1FilterControl;
		private UIPanelControl1Client37 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterControl1FilterControl : DXFilterControl
	{
		public UIFilterControl1FilterControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1ComboBoxEditNode1Element3";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1SpinEditNode3Element2";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXTextEdit UISpinEditEdit1
		{
			get
			{
				if ((this.mUISpinEditEdit1 == null))
				{
					this.mUISpinEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1SpinEditNode3Element3";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISpinEditEdit1;
			}
		}
		public DXTextEdit UISpinEditEdit2
		{
			get
			{
				if ((this.mUISpinEditEdit2 == null))
				{
					this.mUISpinEditEdit2 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1SpinEditNode3Element4";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISpinEditEdit2;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXTextEdit mUISpinEditEdit;
		private DXTextEdit mUISpinEditEdit1;
		private DXTextEdit mUISpinEditEdit2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client37 : DXTestControl
	{
		public UIPanelControl1Client37(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXButton UISbApplyButton
		{
			get
			{
				if ((this.mUISbApplyButton == null))
				{
					this.mUISbApplyButton = new DXButton(this);
					#region Search Criteria
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbApply";
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISbApplyButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISbApplyButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISbApplyButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient13 : DXTestControl
	{
		public UISplitGroupPanelClient13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIGridControl1Table17 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table17(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table17 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table17 : DXGrid
	{
		public UIGridControl1Table17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXTestControl UIGridControlFilterPanText
		{
			get
			{
				if ((this.mUIGridControlFilterPanText == null))
				{
					this.mUIGridControlFilterPanText = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelText[View]gridView1";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelText";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFilterPanText.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridControlFilterPanText;
			}
		}
		public DXColumnHeader UIGridColumnProductColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnProductColumnHeader == null))
				{
					this.mUIGridColumnProductColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnProductColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumnProduct";
					this.mUIGridColumnProductColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnProductColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumnProductColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnProductColumnHeader;
			}
		}
		public DXColumnHeader UIGridColumnDiscountColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnDiscountColumnHeader == null))
				{
					this.mUIGridColumnDiscountColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnDiscountColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumnDiscount";
					this.mUIGridColumnDiscountColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnDiscountColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumnDiscountColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnDiscountColumnHeader;
			}
		}
		public DXColumnHeader UIGridColumnQuantityColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnQuantityColumnHeader == null))
				{
					this.mUIGridColumnQuantityColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnQuantityColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumnQuantity";
					this.mUIGridColumnQuantityColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnQuantityColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumnQuantityColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnQuantityColumnHeader;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIGridControlFilterPanText;
		private DXColumnHeader mUIGridColumnProductColumnHeader;
		private DXColumnHeader mUIGridColumnDiscountColumnHeader;
		private DXColumnHeader mUIGridColumnQuantityColumnHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow15 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow15()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Group Intervals";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client38 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client38(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client38 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client38 : DXTestControl
	{
		public UIPanelControl1Client38(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
			#endregion
		}
		#region Properties
		public UIGcContainerClient22 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient22(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient22 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient22 : DXTestControl
	{
		public UIGcContainerClient22(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
			#endregion
		}
		#region Properties
		public UIGroupIntervalCustom UIGroupIntervalCustom
		{
			get
			{
				if ((this.mUIGroupIntervalCustom == null))
				{
					this.mUIGroupIntervalCustom = new UIGroupIntervalCustom(this);
				}
				return this.mUIGroupIntervalCustom;
			}
		}
		#endregion
		#region Fields
		private UIGroupIntervalCustom mUIGroupIntervalCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupIntervalCustom : DXTestControl
	{
		public UIGroupIntervalCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GroupInterval";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupInterval";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
			#endregion
		}
		#region Properties
		public UIGridControl1Table18 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table18(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIPanelControl1Client39 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client39(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table18 mUIGridControl1Table;
		private UIPanelControl1Client39 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table18 : DXGrid
	{
		public UIGridControl1Table18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
			#endregion
		}
		#region Properties
		public DXGroupRow UIGridControlGroupRowGroupRow
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow == null))
				{
					this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-8[Column]gridColumn1";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow;
			}
		}
		public DXColumnHeader UIGridColumn1ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn1ColumnHeader == null))
				{
					this.mUIGridColumn1ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn1ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn1";
					this.mUIGridColumn1ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn1ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn1ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridColumn1ColumnHeader;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow1
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow1 == null))
				{
					this.mUIGridControlGroupRowGroupRow1 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-11[Column]gridColumn1";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow1;
			}
		}
		public DXButton UIGridControlRowGroupBButton
		{
			get
			{
				if ((this.mUIGridControlRowGroupBButton == null))
				{
					this.mUIGridControlRowGroupBButton = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowGroupButton[View]gridView1[Row]-8";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowGroupButton";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowGroupBButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlRowGroupBButton;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow2
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow2 == null))
				{
					this.mUIGridControlGroupRowGroupRow2 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-6[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow2;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow3
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow3 == null))
				{
					this.mUIGridControlGroupRowGroupRow3 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-7[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow3;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow4
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow4 == null))
				{
					this.mUIGridControlGroupRowGroupRow4 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-1[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow4;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow5
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow5 == null))
				{
					this.mUIGridControlGroupRowGroupRow5 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-5[Column]gridColumn4";
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow5;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow6
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow6 == null))
				{
					this.mUIGridControlGroupRowGroupRow6 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow6.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-4[Column]gridColumn2";
					this.mUIGridControlGroupRowGroupRow6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow6.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow6.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Group Intervals");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow6;
			}
		}
		#endregion
		#region Fields
		private DXGroupRow mUIGridControlGroupRowGroupRow;
		private DXColumnHeader mUIGridColumn1ColumnHeader;
		private DXGroupRow mUIGridControlGroupRowGroupRow1;
		private DXButton mUIGridControlRowGroupBButton;
		private DXGroupRow mUIGridControlGroupRowGroupRow2;
		private DXGroupRow mUIGridControlGroupRowGroupRow3;
		private DXGroupRow mUIGridControlGroupRowGroupRow4;
		private DXGroupRow mUIGridControlGroupRowGroupRow5;
		private DXGroupRow mUIGridControlGroupRowGroupRow6;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client39 : DXTestControl
	{
		public UIPanelControl1Client39(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UICbeIntervalComboBox
		{
			get
			{
				if ((this.mUICbeIntervalComboBox == null))
				{
					this.mUICbeIntervalComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbeIntervalComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeInterval";
					this.mUICbeIntervalComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICbeIntervalComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICbeIntervalComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbeIntervalComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow16 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow16()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client40 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client40(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client40 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client40 : DXTestControl
	{
		public UIPanelControl1Client40(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIGcContainerClient23 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient23(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient23 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient23 : DXTestControl
	{
		public UIGcContainerClient23(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIMasterDetailGroupingCustom UIMasterDetailGroupingCustom
		{
			get
			{
				if ((this.mUIMasterDetailGroupingCustom == null))
				{
					this.mUIMasterDetailGroupingCustom = new UIMasterDetailGroupingCustom(this);
				}
				return this.mUIMasterDetailGroupingCustom;
			}
		}
		#endregion
		#region Fields
		private UIMasterDetailGroupingCustom mUIMasterDetailGroupingCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMasterDetailGroupingCustom : DXTestControl
	{
		public UIMasterDetailGroupingCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MasterDetailGrouping";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MasterDetailGrouping";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIGridControl2Table3 UIGridControl2Table
		{
			get
			{
				if ((this.mUIGridControl2Table == null))
				{
					this.mUIGridControl2Table = new UIGridControl2Table3(this);
				}
				return this.mUIGridControl2Table;
			}
		}
		public UIPanelControl1Client41 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client41(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIGridControl2Table3 mUIGridControl2Table;
		private UIPanelControl1Client41 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl2Table3 : DXGrid
	{
		public UIGridControl2Table3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public DXGroupRow UIGridControlGroupRowGroupRow
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow == null))
				{
					this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-1[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow;
			}
		}
		public DXColumnHeader UIColCountryColumnHeader
		{
			get
			{
				if ((this.mUIColCountryColumnHeader == null))
				{
					this.mUIColCountryColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCountryColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView1[Column]colCountry";
					this.mUIColCountryColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColCountryColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColCountryColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColCountryColumnHeader;
			}
		}
		public DXColumnHeader UIColRegionColumnHeader
		{
			get
			{
				if ((this.mUIColRegionColumnHeader == null))
				{
					this.mUIColRegionColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanelColumn[View]gridView1[Column]colRegion";
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColRegionColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColRegionColumnHeader;
			}
		}
		public DXColumnHeader UIColCompanyNameColumnHeader
		{
			get
			{
				if ((this.mUIColCompanyNameColumnHeader == null))
				{
					this.mUIColCompanyNameColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView1[Column]colCompanyName";
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColCompanyNameColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColCompanyNameColumnHeader;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow1
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow1 == null))
				{
					this.mUIGridControlGroupRowGroupRow1 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-1[Column]colCountry";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow1;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow2
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow2 == null))
				{
					this.mUIGridControlGroupRowGroupRow2 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-2[Column]colRegion";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow2;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow3
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow3 == null))
				{
					this.mUIGridControlGroupRowGroupRow3 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-3[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow3;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow4
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow4 == null))
				{
					this.mUIGridControlGroupRowGroupRow4 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-4[Column]colCompanyName";
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow4;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow5
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow5 == null))
				{
					this.mUIGridControlGroupRowGroupRow5 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-5[Column]colCompanyName";
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow5;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow6
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow6 == null))
				{
					this.mUIGridControlGroupRowGroupRow6 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow6.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-6[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow6.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow6.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow6;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow7
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow7 == null))
				{
					this.mUIGridControlGroupRowGroupRow7 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow7.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-7[Column]colCompanyName";
					this.mUIGridControlGroupRowGroupRow7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow7.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow7.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow7;
			}
		}
		public DXColumnHeader UIColCompanyNameColumnHeader1
		{
			get
			{
				if ((this.mUIColCompanyNameColumnHeader1 == null))
				{
					this.mUIColCompanyNameColumnHeader1 = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCompanyNameColumnHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanelColumn[View]gridView1[Column]colCompanyName";
					this.mUIColCompanyNameColumnHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColCompanyNameColumnHeader1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColCompanyNameColumnHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColCompanyNameColumnHeader1;
			}
		}
		public DXColumnHeader UIColContactTitleColumnHeader
		{
			get
			{
				if ((this.mUIColContactTitleColumnHeader == null))
				{
					this.mUIColContactTitleColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColContactTitleColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanelColumn[View]gridView1[Column]colContactTitle";
					this.mUIColContactTitleColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColContactTitleColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColContactTitleColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColContactTitleColumnHeader;
			}
		}
		public DXColumnHeader UIColCountryColumnHeader1
		{
			get
			{
				if ((this.mUIColCountryColumnHeader1 == null))
				{
					this.mUIColCountryColumnHeader1 = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCountryColumnHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanelColumn[View]gridView1[Column]colCountry";
					this.mUIColCountryColumnHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColCountryColumnHeader1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColCountryColumnHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColCountryColumnHeader1;
			}
		}
		public DXButton UIGridControlRowGroupBButton
		{
			get
			{
				if ((this.mUIGridControlRowGroupBButton == null))
				{
					this.mUIGridControlRowGroupBButton = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowGroupButton[View]gridView1[Row]-1";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowGroupButton";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowGroupBButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowGroupBButton;
			}
		}
		public DXButton UIGridControlRowGroupBButton1
		{
			get
			{
				if ((this.mUIGridControlRowGroupBButton1 == null))
				{
					this.mUIGridControlRowGroupBButton1 = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlRowGroupBButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowGroupButton[View]gridView1[Row]-6";
					this.mUIGridControlRowGroupBButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowGroupButton";
					this.mUIGridControlRowGroupBButton1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowGroupBButton1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowGroupBButton1;
			}
		}
		public DXButton UIGridControlRowGroupBButton2
		{
			get
			{
				if ((this.mUIGridControlRowGroupBButton2 == null))
				{
					this.mUIGridControlRowGroupBButton2 = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlRowGroupBButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowGroupButton[View]gridView1[Row]-11";
					this.mUIGridControlRowGroupBButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowGroupButton";
					this.mUIGridControlRowGroupBButton2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowGroupBButton2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowGroupBButton2;
			}
		}
		public DXButton UIGridControlRowGroupBButton3
		{
			get
			{
				if ((this.mUIGridControlRowGroupBButton3 == null))
				{
					this.mUIGridControlRowGroupBButton3 = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlRowGroupBButton3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowGroupButton[View]gridView1[Row]-9";
					this.mUIGridControlRowGroupBButton3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowGroupButton";
					this.mUIGridControlRowGroupBButton3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowGroupBButton3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowGroupBButton3;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow8
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow8 == null))
				{
					this.mUIGridControlGroupRowGroupRow8 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow8.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-7[Column]colRegion";
					this.mUIGridControlGroupRowGroupRow8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow8.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow8.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow8;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow9
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow9 == null))
				{
					this.mUIGridControlGroupRowGroupRow9 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow9.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-8[Column]colRegion";
					this.mUIGridControlGroupRowGroupRow9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow9.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow9.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow9;
			}
		}
		public DXCell UIFoliesgourmandesCell
		{
			get
			{
				if ((this.mUIFoliesgourmandesCell == null))
				{
					this.mUIFoliesgourmandesCell = new DXCell(this);
					#region Search Criteria
					this.mUIFoliesgourmandesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCell[View]gridView1[Row]10[Column]colCompanyName";
					this.mUIFoliesgourmandesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIFoliesgourmandesCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFoliesgourmandesCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIFoliesgourmandesCell;
			}
		}
		public DXCell UIRicardoAdocicadosCell
		{
			get
			{
				if ((this.mUIRicardoAdocicadosCell == null))
				{
					this.mUIRicardoAdocicadosCell = new DXCell(this);
					#region Search Criteria
					this.mUIRicardoAdocicadosCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCell[View]gridView1[Row]11[Column]colCompanyName";
					this.mUIRicardoAdocicadosCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIRicardoAdocicadosCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRicardoAdocicadosCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIRicardoAdocicadosCell;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow21
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow21 == null))
				{
					this.mUIGridControlGroupRowGroupRow21 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow21.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-9[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow21.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow21.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow21;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow31
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow31 == null))
				{
					this.mUIGridControlGroupRowGroupRow31 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow31.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-11[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow31.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow31.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow31;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow41
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow41 == null))
				{
					this.mUIGridControlGroupRowGroupRow41 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow41.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-17[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow41.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow41.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow41;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow51
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow51 == null))
				{
					this.mUIGridControlGroupRowGroupRow51 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow51.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-22[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow51.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow51.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow51.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow51;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow22
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow22 == null))
				{
					this.mUIGridControlGroupRowGroupRow22 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow22.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-9[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow22.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow22.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow22.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow22;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader == null))
				{
					this.mUIGridControlRowIndicaRowHeader = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]-1";
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader1
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader1 == null))
				{
					this.mUIGridControlRowIndicaRowHeader1 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]-6";
					this.mUIGridControlRowIndicaRowHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader1;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader2
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader2 == null))
				{
					this.mUIGridControlRowIndicaRowHeader2 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]-9";
					this.mUIGridControlRowIndicaRowHeader2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader2;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader3
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader3 == null))
				{
					this.mUIGridControlRowIndicaRowHeader3 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]-11";
					this.mUIGridControlRowIndicaRowHeader3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader3;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader4
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader4 == null))
				{
					this.mUIGridControlRowIndicaRowHeader4 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]-17";
					this.mUIGridControlRowIndicaRowHeader4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader4;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader5
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader5 == null))
				{
					this.mUIGridControlRowIndicaRowHeader5 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader5.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]-22";
					this.mUIGridControlRowIndicaRowHeader5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader5.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader5;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader6
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader6 == null))
				{
					this.mUIGridControlRowIndicaRowHeader6 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader6.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]-24";
					this.mUIGridControlRowIndicaRowHeader6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader6.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader6.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader6;
			}
		}
		public DXTestControl UIGridControlGroupPaneCustom
		{
			get
			{
				if ((this.mUIGridControlGroupPaneCustom == null))
				{
					this.mUIGridControlGroupPaneCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanel[View]gridView1";
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanel";
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupPaneCustom.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupPaneCustom;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow10
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow10 == null))
				{
					this.mUIGridControlGroupRowGroupRow10 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow10.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-30[Column]colContactTitle";
					this.mUIGridControlGroupRowGroupRow10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow10.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow10.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow10;
			}
		}
		public DXCell UIFISSAFabricaInterSalCell
		{
			get
			{
				if ((this.mUIFISSAFabricaInterSalCell == null))
				{
					this.mUIFISSAFabricaInterSalCell = new DXCell(this);
					#region Search Criteria
					this.mUIFISSAFabricaInterSalCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCell[View]gridView1[Row]0[Column]colCompanyName";
					this.mUIFISSAFabricaInterSalCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIFISSAFabricaInterSalCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFISSAFabricaInterSalCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIFISSAFabricaInterSalCell;
			}
		}
		public DXCell UIQUICKStopCell
		{
			get
			{
				if ((this.mUIQUICKStopCell == null))
				{
					this.mUIQUICKStopCell = new DXCell(this);
					#region Search Criteria
					this.mUIQUICKStopCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCell[View]gridView1[Row]1[Column]colCompanyName";
					this.mUIQUICKStopCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIQUICKStopCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIQUICKStopCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIQUICKStopCell;
			}
		}
		public DXCell UIRomeroytomilloCell
		{
			get
			{
				if ((this.mUIRomeroytomilloCell == null))
				{
					this.mUIRomeroytomilloCell = new DXCell(this);
					#region Search Criteria
					this.mUIRomeroytomilloCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCell[View]gridView1[Row]2[Column]colCompanyName";
					this.mUIRomeroytomilloCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIRomeroytomilloCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRomeroytomilloCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIRomeroytomilloCell;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow11
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow11 == null))
				{
					this.mUIGridControlGroupRowGroupRow11 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow11.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-3[Column]colRegion";
					this.mUIGridControlGroupRowGroupRow11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow11.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow11.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow11;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow12
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow12 == null))
				{
					this.mUIGridControlGroupRowGroupRow12 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow12.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView2[Row]-1[Column]colShipVia";
					this.mUIGridControlGroupRowGroupRow12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow12.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow12.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow12;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow13
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow13 == null))
				{
					this.mUIGridControlGroupRowGroupRow13 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow13.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView2[Row]-2[Column]colShipVia";
					this.mUIGridControlGroupRowGroupRow13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow13.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow13.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow13;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow14
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow14 == null))
				{
					this.mUIGridControlGroupRowGroupRow14 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow14.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView2-2[Row]-1[Column]colShipVia";
					this.mUIGridControlGroupRowGroupRow14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow14.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow14.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow14;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader7
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader7 == null))
				{
					this.mUIGridControlRowIndicaRowHeader7 = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader7.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlRowIndicator[View]gridView1[Row]1";
					this.mUIGridControlRowIndicaRowHeader7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader7.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader7.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader7;
			}
		}
		public DXColumnHeader UIColShipNameColumnHeader
		{
			get
			{
				if ((this.mUIColShipNameColumnHeader == null))
				{
					this.mUIColShipNameColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColShipNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView2-2[Column]colShipName";
					this.mUIColShipNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColShipNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColShipNameColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColShipNameColumnHeader;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow15
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow15 == null))
				{
					this.mUIGridControlGroupRowGroupRow15 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow15.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView1[Row]-1[Column]colCompanyName";
					this.mUIGridControlGroupRowGroupRow15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow15.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow15.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow15;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow16
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow16 == null))
				{
					this.mUIGridControlGroupRowGroupRow16 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow16.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView2-2[Row]-2[Column]colShipName";
					this.mUIGridControlGroupRowGroupRow16.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow16.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow16.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow16;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow17
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow17 == null))
				{
					this.mUIGridControlGroupRowGroupRow17 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow17.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView2-2[Row]-3[Column]colShipVia";
					this.mUIGridControlGroupRowGroupRow17.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow17.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow17.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow17;
			}
		}
		#endregion
		#region Fields
		private DXGroupRow mUIGridControlGroupRowGroupRow;
		private DXColumnHeader mUIColCountryColumnHeader;
		private DXColumnHeader mUIColRegionColumnHeader;
		private DXColumnHeader mUIColCompanyNameColumnHeader;
		private DXGroupRow mUIGridControlGroupRowGroupRow1;
		private DXGroupRow mUIGridControlGroupRowGroupRow2;
		private DXGroupRow mUIGridControlGroupRowGroupRow3;
		private DXGroupRow mUIGridControlGroupRowGroupRow4;
		private DXGroupRow mUIGridControlGroupRowGroupRow5;
		private DXGroupRow mUIGridControlGroupRowGroupRow6;
		private DXGroupRow mUIGridControlGroupRowGroupRow7;
		private DXColumnHeader mUIColCompanyNameColumnHeader1;
		private DXColumnHeader mUIColContactTitleColumnHeader;
		private DXColumnHeader mUIColCountryColumnHeader1;
		private DXButton mUIGridControlRowGroupBButton;
		private DXButton mUIGridControlRowGroupBButton1;
		private DXButton mUIGridControlRowGroupBButton2;
		private DXButton mUIGridControlRowGroupBButton3;
		private DXGroupRow mUIGridControlGroupRowGroupRow8;
		private DXGroupRow mUIGridControlGroupRowGroupRow9;
		private DXCell mUIFoliesgourmandesCell;
		private DXCell mUIRicardoAdocicadosCell;
		private DXGroupRow mUIGridControlGroupRowGroupRow21;
		private DXGroupRow mUIGridControlGroupRowGroupRow31;
		private DXGroupRow mUIGridControlGroupRowGroupRow41;
		private DXGroupRow mUIGridControlGroupRowGroupRow51;
		private DXGroupRow mUIGridControlGroupRowGroupRow22;
		private DXTestControl mUIGridControlRowIndicaRowHeader;
		private DXTestControl mUIGridControlRowIndicaRowHeader1;
		private DXTestControl mUIGridControlRowIndicaRowHeader2;
		private DXTestControl mUIGridControlRowIndicaRowHeader3;
		private DXTestControl mUIGridControlRowIndicaRowHeader4;
		private DXTestControl mUIGridControlRowIndicaRowHeader5;
		private DXTestControl mUIGridControlRowIndicaRowHeader6;
		private DXTestControl mUIGridControlGroupPaneCustom;
		private DXGroupRow mUIGridControlGroupRowGroupRow10;
		private DXCell mUIFISSAFabricaInterSalCell;
		private DXCell mUIQUICKStopCell;
		private DXCell mUIRomeroytomilloCell;
		private DXGroupRow mUIGridControlGroupRowGroupRow11;
		private DXGroupRow mUIGridControlGroupRowGroupRow12;
		private DXGroupRow mUIGridControlGroupRowGroupRow13;
		private DXGroupRow mUIGridControlGroupRowGroupRow14;
		private DXTestControl mUIGridControlRowIndicaRowHeader7;
		private DXColumnHeader mUIColShipNameColumnHeader;
		private DXGroupRow mUIGridControlGroupRowGroupRow15;
		private DXGroupRow mUIGridControlGroupRowGroupRow16;
		private DXGroupRow mUIGridControlGroupRowGroupRow17;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client41 : DXTestControl
	{
		public UIPanelControl1Client41(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public DXCheckButton UIChJoinedCheckButton
		{
			get
			{
				if ((this.mUIChJoinedCheckButton == null))
				{
					this.mUIChJoinedCheckButton = new DXCheckButton(this);
					#region Search Criteria
					this.mUIChJoinedCheckButton.SearchProperties[DXTestControl.PropertyNames.Name] = "chJoined";
					this.mUIChJoinedCheckButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckButton";
					this.mUIChJoinedCheckButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChJoinedCheckButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIChJoinedCheckButton;
			}
		}
		#endregion
		#region Fields
		private DXCheckButton mUIChJoinedCheckButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow17 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow17()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client42 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client42(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIPanelControl1Client112 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client112(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client42 mUIPanelControl1Client;
		private UIPanelControl1Client112 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client42 : DXTestControl
	{
		public UIPanelControl1Client42(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public UIGcContainerClient24 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient24(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient24 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient24 : DXTestControl
	{
		public UIGcContainerClient24(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public UIMultipleGroupingCustom UIMultipleGroupingCustom
		{
			get
			{
				if ((this.mUIMultipleGroupingCustom == null))
				{
					this.mUIMultipleGroupingCustom = new UIMultipleGroupingCustom(this);
				}
				return this.mUIMultipleGroupingCustom;
			}
		}
		#endregion
		#region Fields
		private UIMultipleGroupingCustom mUIMultipleGroupingCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultipleGroupingCustom : DXTestControl
	{
		public UIMultipleGroupingCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MultipleGrouping";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultipleGrouping";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client43 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client43(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGridControl1Table19 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table19(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client43 mUIPanelControl1Client;
		private UIGridControl1Table19 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client43 : DXTestControl
	{
		public UIPanelControl1Client43(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public DXButton UISbGroupButton
		{
			get
			{
				if ((this.mUISbGroupButton == null))
				{
					this.mUISbGroupButton = new DXButton(this);
					#region Search Criteria
					this.mUISbGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbGroup";
					this.mUISbGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbGroupButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISbGroupButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
					#endregion
				}
				return this.mUISbGroupButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISbGroupButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table19 : DXGrid
	{
		public UIGridControl1Table19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public DXGroupRow UIGridControlGroupRowGroupRow
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow == null))
				{
					this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-1[Column]colCategory";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow;
			}
		}
		public DXCell UITask3Cell
		{
			get
			{
				if ((this.mUITask3Cell == null))
				{
					this.mUITask3Cell = new DXCell(this);
					#region Search Criteria
					this.mUITask3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]1[Column]colTask";
					this.mUITask3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUITask3Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITask3Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
					#endregion
				}
				return this.mUITask3Cell;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow1
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow1 == null))
				{
					this.mUIGridControlGroupRowGroupRow1 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-3[Column]colCategory";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow1;
			}
		}
		public DXCell UITask3Cell1
		{
			get
			{
				if ((this.mUITask3Cell1 == null))
				{
					this.mUITask3Cell1 = new DXCell(this);
					#region Search Criteria
					this.mUITask3Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]4[Column]colTask";
					this.mUITask3Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUITask3Cell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITask3Cell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
					#endregion
				}
				return this.mUITask3Cell1;
			}
		}
		#endregion
		#region Fields
		private DXGroupRow mUIGridControlGroupRowGroupRow;
		private DXCell mUITask3Cell;
		private DXGroupRow mUIGridControlGroupRowGroupRow1;
		private DXCell mUITask3Cell1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client112 : DXTestControl
	{
		public UIPanelControl1Client112(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public UIGcContainerClient25 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient25(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient25 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient25 : DXTestControl
	{
		public UIGcContainerClient25(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public UIMultipleGroupingCustom1 UIMultipleGroupingCustom
		{
			get
			{
				if ((this.mUIMultipleGroupingCustom == null))
				{
					this.mUIMultipleGroupingCustom = new UIMultipleGroupingCustom1(this);
				}
				return this.mUIMultipleGroupingCustom;
			}
		}
		#endregion
		#region Fields
		private UIMultipleGroupingCustom1 mUIMultipleGroupingCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultipleGroupingCustom1 : DXTestControl
	{
		public UIMultipleGroupingCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MultipleGrouping";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultipleGrouping";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public UIGridControl1Table20 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table20(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table20 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table20 : DXGrid
	{
		public UIGridControl1Table20(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIColCategoryColumnHeader
		{
			get
			{
				if ((this.mUIColCategoryColumnHeader == null))
				{
					this.mUIColCategoryColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCategoryColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colCategory";
					this.mUIColCategoryColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColCategoryColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Grouping against Multiple Values");
					#endregion
				}
				return this.mUIColCategoryColumnHeader;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIColCategoryColumnHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow18 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow18()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client44 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client44(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client44 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client44 : DXTestControl
	{
		public UIPanelControl1Client44(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
			#endregion
		}
		#region Properties
		public UIGcContainerClient26 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient26(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient26 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient26 : DXTestControl
	{
		public UIGcContainerClient26(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
			#endregion
		}
		#region Properties
		public UISortingBySummaryCustom UISortingBySummaryCustom
		{
			get
			{
				if ((this.mUISortingBySummaryCustom == null))
				{
					this.mUISortingBySummaryCustom = new UISortingBySummaryCustom(this);
				}
				return this.mUISortingBySummaryCustom;
			}
		}
		#endregion
		#region Fields
		private UISortingBySummaryCustom mUISortingBySummaryCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISortingBySummaryCustom : DXTestControl
	{
		public UISortingBySummaryCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SortingBySummary";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SortingBySummary";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client45 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client45(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGridControl1Table21 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table21(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client45 mUIPanelControl1Client;
		private UIGridControl1Table21 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client45 : DXTestControl
	{
		public UIPanelControl1Client45(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UICbeSortingComboBox
		{
			get
			{
				if ((this.mUICbeSortingComboBox == null))
				{
					this.mUICbeSortingComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbeSortingComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeSorting";
					this.mUICbeSortingComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICbeSortingComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICbeSortingComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbeSortingComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table21 : DXGrid
	{
		public UIGridControl1Table21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
			#endregion
		}
		#region Properties
		public DXGroupRow UIGridControlGroupRowGroupRow
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow == null))
				{
					this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-8[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow1
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow1 == null))
				{
					this.mUIGridControlGroupRowGroupRow1 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-3[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow1;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]gridView1[Row]489[Column]gridColumn3";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow2
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow2 == null))
				{
					this.mUIGridControlGroupRowGroupRow2 = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupRow[View]gridView1[Row]-3[Column]gridColumn5";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupRowGroupRow2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow2;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]gridColumn3";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell1
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell1 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell1 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]gridColumn4";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Sorting by Summary Values");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell1;
			}
		}
		#endregion
		#region Fields
		private DXGroupRow mUIGridControlGroupRowGroupRow;
		private DXGroupRow mUIGridControlGroupRowGroupRow1;
		private DXTextEdit mUISpinEditEdit;
		private DXGroupRow mUIGridControlGroupRowGroupRow2;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow19 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow19()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client46 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client46(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client46 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client46 : DXTestControl
	{
		public UIPanelControl1Client46(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIGcContainerClient27 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient27(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient27 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient27 : DXTestControl
	{
		public UIGcContainerClient27(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIDataSummariesCustom UIDataSummariesCustom
		{
			get
			{
				if ((this.mUIDataSummariesCustom == null))
				{
					this.mUIDataSummariesCustom = new UIDataSummariesCustom(this);
				}
				return this.mUIDataSummariesCustom;
			}
		}
		#endregion
		#region Fields
		private UIDataSummariesCustom mUIDataSummariesCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDataSummariesCustom : DXTestControl
	{
		public UIDataSummariesCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DataSummaries";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DataSummaries";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIGridControl1Table22 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table22(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIPanelControl2Client UIPanelControl2Client
		{
			get
			{
				if ((this.mUIPanelControl2Client == null))
				{
					this.mUIPanelControl2Client = new UIPanelControl2Client(this);
				}
				return this.mUIPanelControl2Client;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table22 mUIGridControl1Table;
		private UIPanelControl2Client mUIPanelControl2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table22 : DXGrid
	{
		public UIGridControl1Table22(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]advBandedGridView1[Row]0[Column]colUnitPri" +
						"ce";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell1
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell1 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell1 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]colQuantity";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell1;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell2
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell2 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell2 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]1[Column]colQuantity";
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell2;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell3
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell3 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell3 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]advBandedGridView1[Row]0[Column]colReorder" +
						"Level";
					this.mUIGridControlFooterCelGridFooterCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell3;
			}
		}
		public DXButton UIGridControlRowGroupBButton
		{
			get
			{
				if ((this.mUIGridControlRowGroupBButton == null))
				{
					this.mUIGridControlRowGroupBButton = new DXButton(this);
					#region Search Criteria
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowGroupButton[View]gridView1[Row]-1";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowGroupButton";
					this.mUIGridControlRowGroupBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowGroupBButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlRowGroupBButton;
			}
		}
		public DXRowFooterCell UIGridControlRowFooterRowFooterCell
		{
			get
			{
				if ((this.mUIGridControlRowFooterRowFooterCell == null))
				{
					this.mUIGridControlRowFooterRowFooterCell = new DXRowFooterCell(this);
					#region Search Criteria
					this.mUIGridControlRowFooterRowFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowFooterCell[View]gridView1[Row]-1[Column]colQuantity";
					this.mUIGridControlRowFooterRowFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowFooterCell";
					this.mUIGridControlRowFooterRowFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowFooterRowFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlRowFooterRowFooterCell;
			}
		}
		public DXRowFooterCell UIGridControlRowFooterRowFooterCell1
		{
			get
			{
				if ((this.mUIGridControlRowFooterRowFooterCell1 == null))
				{
					this.mUIGridControlRowFooterRowFooterCell1 = new DXRowFooterCell(this);
					#region Search Criteria
					this.mUIGridControlRowFooterRowFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowFooterCell[View]gridView1[Row]-2[Column]colSubTotal";
					this.mUIGridControlRowFooterRowFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowFooterCell";
					this.mUIGridControlRowFooterRowFooterCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowFooterRowFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlRowFooterRowFooterCell1;
			}
		}
		public DXTestControl UIGridControlGroupPaneCustom
		{
			get
			{
				if ((this.mUIGridControlGroupPaneCustom == null))
				{
					this.mUIGridControlGroupPaneCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlGroupPanel[View]advBandedGridView1";
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanel";
					this.mUIGridControlGroupPaneCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlGroupPaneCustom.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlGroupPaneCustom;
			}
		}
		public DXTestControl UIGridControlRowIndicaRowHeader
		{
			get
			{
				if ((this.mUIGridControlRowIndicaRowHeader == null))
				{
					this.mUIGridControlRowIndicaRowHeader = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowIndicator[View]gridView1[Row]-1";
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
					this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowIndicaRowHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlRowIndicaRowHeader;
			}
		}
		public DXScrollBar UIVCrkScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVCrkScrollBarScrollBarControl == null))
				{
					this.mUIVCrkScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1VCrkScrollBar";
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VCrkScrollBar";
					this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIVCrkScrollBarScrollBarControl.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIVCrkScrollBarScrollBarControl;
			}
		}
		public DXRowFooterCell UIGridControlRowFooterRowFooterCell2
		{
			get
			{
				if ((this.mUIGridControlRowFooterRowFooterCell2 == null))
				{
					this.mUIGridControlRowFooterRowFooterCell2 = new DXRowFooterCell(this);
					#region Search Criteria
					this.mUIGridControlRowFooterRowFooterCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlRowFooterCell[View]gridView1[Row]-1[Column]colSubTotal";
					this.mUIGridControlRowFooterRowFooterCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowFooterCell";
					this.mUIGridControlRowFooterRowFooterCell2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlRowFooterRowFooterCell2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlRowFooterRowFooterCell2;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]gridView1[Row]2[Column]colQuantity";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXGridFooter UIGridControlFooterGridFooter
		{
			get
			{
				if ((this.mUIGridControlFooterGridFooter == null))
				{
					this.mUIGridControlFooterGridFooter = new DXGridFooter(this);
					#region Search Criteria
					this.mUIGridControlFooterGridFooter.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooter[View]gridView1";
					this.mUIGridControlFooterGridFooter.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooter";
					this.mUIGridControlFooterGridFooter.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterGridFooter.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlFooterGridFooter;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell4
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell4 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell4 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]colSubTotal";
					this.mUIGridControlFooterCelGridFooterCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell4.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell4;
			}
		}
		public DXCell UIItem000Cell
		{
			get
			{
				if ((this.mUIItem000Cell == null))
				{
					this.mUIItem000Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]3[Column]colDiscount";
					this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem000Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIItem000Cell;
			}
		}
		#endregion
		#region Fields
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell1;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell2;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell3;
		private DXButton mUIGridControlRowGroupBButton;
		private DXRowFooterCell mUIGridControlRowFooterRowFooterCell;
		private DXRowFooterCell mUIGridControlRowFooterRowFooterCell1;
		private DXTestControl mUIGridControlGroupPaneCustom;
		private DXTestControl mUIGridControlRowIndicaRowHeader;
		private DXScrollBar mUIVCrkScrollBarScrollBarControl;
		private DXRowFooterCell mUIGridControlRowFooterRowFooterCell2;
		private DXTextEdit mUISpinEditEdit;
		private DXGridFooter mUIGridControlFooterGridFooter;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell4;
		private DXCell mUIItem000Cell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl2Client : DXTestControl
	{
		public UIPanelControl2Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public DXCheckButton UIChDisplaySummaryCheckButton
		{
			get
			{
				if ((this.mUIChDisplaySummaryCheckButton == null))
				{
					this.mUIChDisplaySummaryCheckButton = new DXCheckButton(this);
					#region Search Criteria
					this.mUIChDisplaySummaryCheckButton.SearchProperties[DXTestControl.PropertyNames.Name] = "chDisplaySummary";
					this.mUIChDisplaySummaryCheckButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckButton";
					this.mUIChDisplaySummaryCheckButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChDisplaySummaryCheckButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIChDisplaySummaryCheckButton;
			}
		}
		#endregion
		#region Fields
		private DXCheckButton mUIChDisplaySummaryCheckButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow20 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow20()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Custom Summaries";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client47 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client47(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client47 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client47 : DXTestControl
	{
		public UIPanelControl1Client47(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
			#endregion
		}
		#region Properties
		public UIGcContainerClient28 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient28(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient28 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient28 : DXTestControl
	{
		public UIGcContainerClient28(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
			#endregion
		}
		#region Properties
		public UICustomDataSummariesCustom UICustomDataSummariesCustom
		{
			get
			{
				if ((this.mUICustomDataSummariesCustom == null))
				{
					this.mUICustomDataSummariesCustom = new UICustomDataSummariesCustom(this);
				}
				return this.mUICustomDataSummariesCustom;
			}
		}
		#endregion
		#region Fields
		private UICustomDataSummariesCustom mUICustomDataSummariesCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomDataSummariesCustom : DXTestControl
	{
		public UICustomDataSummariesCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomDataSummaries";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomDataSummaries";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
			#endregion
		}
		#region Properties
		public UIPnlLeftClient UIPnlLeftClient
		{
			get
			{
				if ((this.mUIPnlLeftClient == null))
				{
					this.mUIPnlLeftClient = new UIPnlLeftClient(this);
				}
				return this.mUIPnlLeftClient;
			}
		}
		public UIGridControl2Table4 UIGridControl2Table
		{
			get
			{
				if ((this.mUIGridControl2Table == null))
				{
					this.mUIGridControl2Table = new UIGridControl2Table4(this);
				}
				return this.mUIGridControl2Table;
			}
		}
		#endregion
		#region Fields
		private UIPnlLeftClient mUIPnlLeftClient;
		private UIGridControl2Table4 mUIGridControl2Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlLeftClient : DXTestControl
	{
		public UIPnlLeftClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlLeft";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
			#endregion
		}
		#region Properties
		public DXTextEdit UINumCustomEdit
		{
			get
			{
				if ((this.mUINumCustomEdit == null))
				{
					this.mUINumCustomEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUINumCustomEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "numCustom";
					this.mUINumCustomEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUINumCustomEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINumCustomEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
					#endregion
				}
				return this.mUINumCustomEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUINumCustomEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl2Table4 : DXGrid
	{
		public UIGridControl2Table4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
			#endregion
		}
		#region Properties
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlFooterCell[View]gridView2[Row]0[Column]colFreight";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Custom Summaries");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		#endregion
		#region Fields
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow21 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow21()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client48 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client48(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIPanelControl1Client113 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client113(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client48 mUIPanelControl1Client;
		private UIPanelControl1Client113 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client48 : DXTestControl
	{
		public UIPanelControl1Client48(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIGcContainerClient29 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient29(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient29 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient29 : DXTestControl
	{
		public UIGcContainerClient29(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIUnboundExpressionCustom UIUnboundExpressionCustom
		{
			get
			{
				if ((this.mUIUnboundExpressionCustom == null))
				{
					this.mUIUnboundExpressionCustom = new UIUnboundExpressionCustom(this);
				}
				return this.mUIUnboundExpressionCustom;
			}
		}
		#endregion
		#region Fields
		private UIUnboundExpressionCustom mUIUnboundExpressionCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUnboundExpressionCustom : DXTestControl
	{
		public UIUnboundExpressionCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnboundExpression";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "UnboundExpression";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client49 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client49(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGridControl1Table23 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table23(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client49 mUIPanelControl1Client;
		private UIGridControl1Table23 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client49 : DXTestControl
	{
		public UIPanelControl1Client49(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public DXComboBox UIImageComboBoxEdit1ComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEdit1ComboBox == null))
				{
					this.mUIImageComboBoxEdit1ComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEdit1ComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "imageComboBoxEdit1";
					this.mUIImageComboBoxEdit1ComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEdit1ComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIImageComboBoxEdit1ComboBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIImageComboBoxEdit1ComboBox;
			}
		}
		public DXButton UISimpleButton1Button
		{
			get
			{
				if ((this.mUISimpleButton1Button == null))
				{
					this.mUISimpleButton1Button = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton1";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButton1Button.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUISimpleButton1Button;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIImageComboBoxEdit1ComboBox;
		private DXButton mUISimpleButton1Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table23 : DXGrid
	{
		public UIGridControl1Table23(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]gridColumn7";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell1
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell1 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell1 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]gridColumn6";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell1;
			}
		}
		public DXColumnHeader UIGridColumn7ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn7ColumnHeader == null))
				{
					this.mUIGridColumn7ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn7ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn7";
					this.mUIGridColumn7ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn7ColumnHeader.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridColumn7ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIGridColumn7ColumnHeader;
			}
		}
		#endregion
		#region Fields
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell1;
		private DXColumnHeader mUIGridColumn7ColumnHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client113 : DXTestControl
	{
		public UIPanelControl1Client113(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIGcContainerClient30 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient30(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient30 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient30 : DXTestControl
	{
		public UIGcContainerClient30(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIUnboundExpressionCustom1 UIUnboundExpressionCustom
		{
			get
			{
				if ((this.mUIUnboundExpressionCustom == null))
				{
					this.mUIUnboundExpressionCustom = new UIUnboundExpressionCustom1(this);
				}
				return this.mUIUnboundExpressionCustom;
			}
		}
		#endregion
		#region Fields
		private UIUnboundExpressionCustom1 mUIUnboundExpressionCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUnboundExpressionCustom1 : DXTestControl
	{
		public UIUnboundExpressionCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnboundExpression";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "UnboundExpression";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIGridControl1Table24 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table24(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIPanelControl1Client50 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client50(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIPanelControl1Client114 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client114(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table24 mUIGridControl1Table;
		private UIPanelControl1Client50 mUIPanelControl1Client;
		private UIPanelControl1Client114 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table24 : DXGrid
	{
		public UIGridControl1Table24(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]gridColumn7";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		#endregion
		#region Fields
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client50 : DXTestControl
	{
		public UIPanelControl1Client50(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public DXComboBox UIImageComboBoxEdit1ComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEdit1ComboBox == null))
				{
					this.mUIImageComboBoxEdit1ComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEdit1ComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "imageComboBoxEdit1";
					this.mUIImageComboBoxEdit1ComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEdit1ComboBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIImageComboBoxEdit1ComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIImageComboBoxEdit1ComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client114 : DXTestControl
	{
		public UIPanelControl1Client114(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButton1Button
		{
			get
			{
				if ((this.mUISimpleButton1Button == null))
				{
					this.mUISimpleButton1Button = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton1";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButton1Button.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUISimpleButton1Button;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButton1Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExpressioneditorWindow : WinWindow
	{
		public UIExpressioneditorWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Expression editor";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Expression editor");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMemoEditEdit.WindowTitles.Add("Expression editor");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Expression editor");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXTextEdit UIMemoEditEdit1
		{
			get
			{
				if ((this.mUIMemoEditEdit1 == null))
				{
					this.mUIMemoEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionEdit";
					this.mUIMemoEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit1.WindowTitles.Add("Expression editor");
					#endregion
				}
				return this.mUIMemoEditEdit1;
			}
		}
		public DXButton UISimpleButtonButton1
		{
			get
			{
				if ((this.mUISimpleButtonButton1 == null))
				{
					this.mUISimpleButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOK";
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton1.WindowTitles.Add("Expression editor");
					#endregion
				}
				return this.mUISimpleButtonButton1;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUISimpleButtonButton;
		private DXTextEdit mUIMemoEditEdit1;
		private DXButton mUISimpleButtonButton1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow22 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow22()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Spreadsheet";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client51 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client51(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client51 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client51 : DXTestControl
	{
		public UIPanelControl1Client51(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
			#endregion
		}
		#region Properties
		public UIGcContainerClient31 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient31(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient31 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient31 : DXTestControl
	{
		public UIGcContainerClient31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
			#endregion
		}
		#region Properties
		public UIGridSheetCustom UIGridSheetCustom
		{
			get
			{
				if ((this.mUIGridSheetCustom == null))
				{
					this.mUIGridSheetCustom = new UIGridSheetCustom(this);
				}
				return this.mUIGridSheetCustom;
			}
		}
		#endregion
		#region Fields
		private UIGridSheetCustom mUIGridSheetCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridSheetCustom : DXTestControl
	{
		public UIGridSheetCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "GridSheet";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridSheet";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
			#endregion
		}
		#region Properties
		public UIGridControl1Table25 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table25(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table25 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table25 : DXGrid
	{
		public UIGridControl1Table25(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]gridView1[Row]4[Column]ColumnHandle4";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXTextEdit UISpinEditEdit1
		{
			get
			{
				if ((this.mUISpinEditEdit1 == null))
				{
					this.mUISpinEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]gridView1[Row]6[Column]ColumnHandle3";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUISpinEditEdit1;
			}
		}
		public DXTextEdit UISpinEditEdit2
		{
			get
			{
				if ((this.mUISpinEditEdit2 == null))
				{
					this.mUISpinEditEdit2 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]gridView1[Row]4[Column]ColumnHandle2";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUISpinEditEdit2;
			}
		}
		public DXTextEdit UISpinEditEdit3
		{
			get
			{
				if ((this.mUISpinEditEdit3 == null))
				{
					this.mUISpinEditEdit3 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1SpinEdit[View]gridView1[Row]8[Column]ColumnHandle3";
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUISpinEditEdit3;
			}
		}
		public DXCell UIItem10Cell
		{
			get
			{
				if ((this.mUIItem10Cell == null))
				{
					this.mUIItem10Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]4[Column]ColumnHandle256";
					this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem10Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIItem10Cell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]ColumnHandle2";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell1
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell1 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell1 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]ColumnHandle3";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell1;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell2
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell2 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell2 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]ColumnHandle4";
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell2;
			}
		}
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell3
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell3 == null))
				{
					this.mUIGridControlFooterCelGridFooterCell3 = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]ColumnHandle256";
					this.mUIGridControlFooterCelGridFooterCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControlFooterCelGridFooterCell3.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell3;
			}
		}
		public DXCell UIItem5Cell
		{
			get
			{
				if ((this.mUIItem5Cell == null))
				{
					this.mUIItem5Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]6[Column]ColumnHandle256";
					this.mUIItem5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem5Cell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem5Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIItem5Cell;
			}
		}
		public DXCell UIItemCell
		{
			get
			{
				if ((this.mUIItemCell == null))
				{
					this.mUIItemCell = new DXCell(this);
					#region Search Criteria
					this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]8[Column]ColumnHandle5";
					this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItemCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIItemCell;
			}
		}
		public DXCell UIItemCell1
		{
			get
			{
				if ((this.mUIItemCell1 == null))
				{
					this.mUIItemCell1 = new DXCell(this);
					#region Search Criteria
					this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]6[Column]ColumnHandle5";
					this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItemCell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIItemCell1;
			}
		}
		public DXCell UIItemCell2
		{
			get
			{
				if ((this.mUIItemCell2 == null))
				{
					this.mUIItemCell2 = new DXCell(this);
					#region Search Criteria
					this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]6[Column]ColumnHandle5";
					this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItemCell2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIItemCell2;
			}
		}
		public DXCell UIItem5Cell1
		{
			get
			{
				if ((this.mUIItem5Cell1 == null))
				{
					this.mUIItem5Cell1 = new DXCell(this);
					#region Search Criteria
					this.mUIItem5Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]8[Column]ColumnHandle256";
					this.mUIItem5Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem5Cell1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItem5Cell1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Spreadsheet");
					#endregion
				}
				return this.mUIItem5Cell1;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		private DXTextEdit mUISpinEditEdit1;
		private DXTextEdit mUISpinEditEdit2;
		private DXTextEdit mUISpinEditEdit3;
		private DXCell mUIItem10Cell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell1;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell2;
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell3;
		private DXCell mUIItem5Cell;
		private DXCell mUIItemCell;
		private DXCell mUIItemCell1;
		private DXCell mUIItemCell2;
		private DXCell mUIItem5Cell1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow23 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow23()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
				"and Expressions)";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client52 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client52(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIPanelControl1Client115 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client115(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client52 mUIPanelControl1Client;
		private UIPanelControl1Client115 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client52 : DXTestControl
	{
		public UIPanelControl1Client52(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient32 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient32(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient32 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient32 : DXTestControl
	{
		public UIGcContainerClient32(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIStyleConditionsCustom UIStyleConditionsCustom
		{
			get
			{
				if ((this.mUIStyleConditionsCustom == null))
				{
					this.mUIStyleConditionsCustom = new UIStyleConditionsCustom(this);
				}
				return this.mUIStyleConditionsCustom;
			}
		}
		#endregion
		#region Fields
		private UIStyleConditionsCustom mUIStyleConditionsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStyleConditionsCustom : DXTestControl
	{
		public UIStyleConditionsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "StyleConditions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StyleConditions";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList25 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList25(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList25 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList25 : DXTestControl
	{
		public UIXtraTabControl1TabList25(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage2Client4 UIXtraTabPage2Client
		{
			get
			{
				if ((this.mUIXtraTabPage2Client == null))
				{
					this.mUIXtraTabPage2Client = new UIXtraTabPage2Client4(this);
				}
				return this.mUIXtraTabPage2Client;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1PageHeader1";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		public UIXtraTabPage1Client25 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client25(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage2Client4 mUIXtraTabPage2Client;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		private UIXtraTabPage1Client25 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage2Client4 : DXTestControl
	{
		public UIXtraTabPage2Client4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl3 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl3(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl3 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl3 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient5 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient5(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient5 mUISplitGroupPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient5 : DXTestControl
	{
		public UISplitGroupPanelClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIExpressionConditionsCustom UIExpressionConditionsCustom
		{
			get
			{
				if ((this.mUIExpressionConditionsCustom == null))
				{
					this.mUIExpressionConditionsCustom = new UIExpressionConditionsCustom(this);
				}
				return this.mUIExpressionConditionsCustom;
			}
		}
		#endregion
		#region Fields
		private UIExpressionConditionsCustom mUIExpressionConditionsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExpressionConditionsCustom : DXTestControl
	{
		public UIExpressionConditionsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionConditionsEditor1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExpressionConditionsEditor";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIMainmenuMenuBar UIMainmenuMenuBar
		{
			get
			{
				if ((this.mUIMainmenuMenuBar == null))
				{
					this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
				}
				return this.mUIMainmenuMenuBar;
			}
		}
		public UIFormatItemListList UIFormatItemListList
		{
			get
			{
				if ((this.mUIFormatItemListList == null))
				{
					this.mUIFormatItemListList = new UIFormatItemListList(this);
				}
				return this.mUIFormatItemListList;
			}
		}
		#endregion
		#region Fields
		private UIMainmenuMenuBar mUIMainmenuMenuBar;
		private UIFormatItemListList mUIFormatItemListList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMainmenuMenuBar : DXMenu
	{
		public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public DXMenuItem UIAddBarItem
		{
			get
			{
				if ((this.mUIAddBarItem == null))
				{
					this.mUIAddBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIAddBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Add";
					this.mUIAddBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIAddBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIAddBarItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIAddBarItem;
			}
		}
		public DXMenuItem UIRemoveBarItem
		{
			get
			{
				if ((this.mUIRemoveBarItem == null))
				{
					this.mUIRemoveBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRemoveBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Remove";
					this.mUIRemoveBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIRemoveBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRemoveBarItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIRemoveBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIAddBarItem;
		private DXMenuItem mUIRemoveBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatItemListList : DXListBox
	{
		public UIFormatItemListList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemList";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public DXListBoxItem UIQuantity10AndQuantitListItem
		{
			get
			{
				if ((this.mUIQuantity10AndQuantitListItem == null))
				{
					this.mUIQuantity10AndQuantitListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIQuantity10AndQuantitListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemListItem[4]";
					this.mUIQuantity10AndQuantitListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIQuantity10AndQuantitListItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIQuantity10AndQuantitListItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIQuantity10AndQuantitListItem;
			}
		}
		public DXListBoxItem UITotal50AndDiscount0ListItem
		{
			get
			{
				if ((this.mUITotal50AndDiscount0ListItem == null))
				{
					this.mUITotal50AndDiscount0ListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUITotal50AndDiscount0ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemListItem[2]";
					this.mUITotal50AndDiscount0ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUITotal50AndDiscount0ListItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITotal50AndDiscount0ListItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUITotal50AndDiscount0ListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUIQuantity10AndQuantitListItem;
		private DXListBoxItem mUITotal50AndDiscount0ListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client25 : DXTestControl
	{
		public UIXtraTabPage1Client25(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public DXGrid UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new DXGrid(this);
					#region Search Criteria
					this.mUIGridControl1Table.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
					this.mUIGridControl1Table.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
					this.mUIGridControl1Table.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGridControl1Table.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIPanelControl1Client53 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client53(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private DXGrid mUIGridControl1Table;
		private UIPanelControl1Client53 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client53 : DXTestControl
	{
		public UIPanelControl1Client53(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIPanelControl2Client1 UIPanelControl2Client
		{
			get
			{
				if ((this.mUIPanelControl2Client == null))
				{
					this.mUIPanelControl2Client = new UIPanelControl2Client1(this);
				}
				return this.mUIPanelControl2Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl2Client1 mUIPanelControl2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl2Client1 : DXTestControl
	{
		public UIPanelControl2Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButton1Button
		{
			get
			{
				if ((this.mUISimpleButton1Button == null))
				{
					this.mUISimpleButton1Button = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton1";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButton1Button.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUISimpleButton1Button;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButton1Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client115 : DXTestControl
	{
		public UIPanelControl1Client115(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient33 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient33(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient33 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient33 : DXTestControl
	{
		public UIGcContainerClient33(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIStyleConditionsCustom1 UIStyleConditionsCustom
		{
			get
			{
				if ((this.mUIStyleConditionsCustom == null))
				{
					this.mUIStyleConditionsCustom = new UIStyleConditionsCustom1(this);
				}
				return this.mUIStyleConditionsCustom;
			}
		}
		#endregion
		#region Fields
		private UIStyleConditionsCustom1 mUIStyleConditionsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStyleConditionsCustom1 : DXTestControl
	{
		public UIStyleConditionsCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "StyleConditions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StyleConditions";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList26 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList26(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList26 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList26 : DXTestControl
	{
		public UIXtraTabControl1TabList26(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage2Client5 UIXtraTabPage2Client
		{
			get
			{
				if ((this.mUIXtraTabPage2Client == null))
				{
					this.mUIXtraTabPage2Client = new UIXtraTabPage2Client5(this);
				}
				return this.mUIXtraTabPage2Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage2Client5 mUIXtraTabPage2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage2Client5 : DXTestControl
	{
		public UIXtraTabPage2Client5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl4 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl4(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl4 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl4 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient6 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient6(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient6 mUISplitGroupPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient6 : DXTestControl
	{
		public UISplitGroupPanelClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIExpressionConditionsCustom1 UIExpressionConditionsCustom
		{
			get
			{
				if ((this.mUIExpressionConditionsCustom == null))
				{
					this.mUIExpressionConditionsCustom = new UIExpressionConditionsCustom1(this);
				}
				return this.mUIExpressionConditionsCustom;
			}
		}
		#endregion
		#region Fields
		private UIExpressionConditionsCustom1 mUIExpressionConditionsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExpressionConditionsCustom1 : DXTestControl
	{
		public UIExpressionConditionsCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionConditionsEditor1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExpressionConditionsEditor";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom3 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom3(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public DXListBox UIFormatItemListList
		{
			get
			{
				if ((this.mUIFormatItemListList == null))
				{
					this.mUIFormatItemListList = new DXListBox(this);
					#region Search Criteria
					this.mUIFormatItemListList.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemList";
					this.mUIFormatItemListList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
					this.mUIFormatItemListList.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIFormatItemListList;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom3 mUIBarDockControlCustom;
		private DXListBox mUIFormatItemListList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom3 : DXTestControl
	{
		public UIBarDockControlCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionConditionsEditor1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIMainmenuMenuBar1 UIMainmenuMenuBar
		{
			get
			{
				if ((this.mUIMainmenuMenuBar == null))
				{
					this.mUIMainmenuMenuBar = new UIMainmenuMenuBar1(this);
				}
				return this.mUIMainmenuMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIMainmenuMenuBar1 mUIMainmenuMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMainmenuMenuBar1 : DXMenu
	{
		public UIMainmenuMenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIAddBarBaseButtonItem
		{
			get
			{
				if ((this.mUIAddBarBaseButtonItem == null))
				{
					this.mUIAddBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIAddBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Add";
					this.mUIAddBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIAddBarBaseButtonItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIAddBarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIRemoveBarBaseButtonItem
		{
			get
			{
				if ((this.mUIRemoveBarBaseButtonItem == null))
				{
					this.mUIRemoveBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIRemoveBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Remove";
					this.mUIRemoveBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIRemoveBarBaseButtonItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUIRemoveBarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIAddBarBaseButtonItem;
		private DXMenuBaseButtonItem mUIRemoveBarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIConditionexpressioneWindow : WinWindow
	{
		public UIConditionexpressioneWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Format rule expression editor";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Format rule expression editor");
			#endregion
		}
		#region Properties
		public DXListBox UIListBoxControlList
		{
			get
			{
				if ((this.mUIListBoxControlList == null))
				{
					this.mUIListBoxControlList = new DXListBox(this);
					#region Search Criteria
					this.mUIListBoxControlList.SearchProperties[DXTestControl.PropertyNames.Name] = "listOfInputTypes";
					this.mUIListBoxControlList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
					this.mUIListBoxControlList.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIListBoxControlList.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUIListBoxControlList;
			}
		}
		public DXListBox UIListBoxControlList1
		{
			get
			{
				if ((this.mUIListBoxControlList1 == null))
				{
					this.mUIListBoxControlList1 = new DXListBox(this);
					#region Search Criteria
					this.mUIListBoxControlList1.SearchProperties[DXTestControl.PropertyNames.Name] = "listOfInputParameters";
					this.mUIListBoxControlList1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
					this.mUIListBoxControlList1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIListBoxControlList1.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUIListBoxControlList1;
			}
		}
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMemoEditEdit.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UILayoutItemButtonButton
		{
			get
			{
				if ((this.mUILayoutItemButtonButton == null))
				{
					this.mUILayoutItemButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton10";
					this.mUILayoutItemButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILayoutItemButtonButton.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton;
			}
		}
		public DXButton UILayoutItemButtonButton1
		{
			get
			{
				if ((this.mUILayoutItemButtonButton1 == null))
				{
					this.mUILayoutItemButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton12";
					this.mUILayoutItemButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILayoutItemButtonButton1.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton1;
			}
		}
		public DXButton UILayoutItemButtonButton2
		{
			get
			{
				if ((this.mUILayoutItemButtonButton2 == null))
				{
					this.mUILayoutItemButtonButton2 = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton9";
					this.mUILayoutItemButtonButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILayoutItemButtonButton2.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton2;
			}
		}
		public DXButton UILayoutItemButtonButton3
		{
			get
			{
				if ((this.mUILayoutItemButtonButton3 == null))
				{
					this.mUILayoutItemButtonButton3 = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton3.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton11";
					this.mUILayoutItemButtonButton3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILayoutItemButtonButton3.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton3;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXTextEdit UIExpressionEditEdit
		{
			get
			{
				if ((this.mUIExpressionEditEdit == null))
				{
					this.mUIExpressionEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIExpressionEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionEdit";
					this.mUIExpressionEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIExpressionEditEdit.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUIExpressionEditEdit;
			}
		}
		public DXButton UILayoutItemButton10Button
		{
			get
			{
				if ((this.mUILayoutItemButton10Button == null))
				{
					this.mUILayoutItemButton10Button = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButton10Button.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton10";
					this.mUILayoutItemButton10Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButton10Button.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButton10Button;
			}
		}
		public DXButton UILayoutItemButtonButton4
		{
			get
			{
				if ((this.mUILayoutItemButtonButton4 == null))
				{
					this.mUILayoutItemButtonButton4 = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton4.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton12";
					this.mUILayoutItemButtonButton4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton4.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton4;
			}
		}
		public DXButton UILayoutItemButtonButton11
		{
			get
			{
				if ((this.mUILayoutItemButtonButton11 == null))
				{
					this.mUILayoutItemButtonButton11 = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton11.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton9";
					this.mUILayoutItemButtonButton11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton11.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton11;
			}
		}
		public DXButton UILayoutItemButtonButton21
		{
			get
			{
				if ((this.mUILayoutItemButtonButton21 == null))
				{
					this.mUILayoutItemButtonButton21 = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton21.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton13";
					this.mUILayoutItemButtonButton21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton21.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton21;
			}
		}
		public DXButton UILayoutItemButtonButton31
		{
			get
			{
				if ((this.mUILayoutItemButtonButton31 == null))
				{
					this.mUILayoutItemButtonButton31 = new DXButton(this);
					#region Search Criteria
					this.mUILayoutItemButtonButton31.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutItemButton11";
					this.mUILayoutItemButtonButton31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutItemButton";
					this.mUILayoutItemButtonButton31.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUILayoutItemButtonButton31;
			}
		}
		public DXButton UISimpleButtonButton1
		{
			get
			{
				if ((this.mUISimpleButtonButton1 == null))
				{
					this.mUISimpleButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOK";
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton1.WindowTitles.Add("Format rule expression editor");
					#endregion
				}
				return this.mUISimpleButtonButton1;
			}
		}
		#endregion
		#region Fields
		private DXListBox mUIListBoxControlList;
		private DXListBox mUIListBoxControlList1;
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUILayoutItemButtonButton;
		private DXButton mUILayoutItemButtonButton1;
		private DXButton mUILayoutItemButtonButton2;
		private DXButton mUILayoutItemButtonButton3;
		private DXButton mUISimpleButtonButton;
		private DXTextEdit mUIExpressionEditEdit;
		private DXButton mUILayoutItemButton10Button;
		private DXButton mUILayoutItemButtonButton4;
		private DXButton mUILayoutItemButtonButton11;
		private DXButton mUILayoutItemButtonButton21;
		private DXButton mUILayoutItemButtonButton31;
		private DXButton mUISimpleButtonButton1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStyleFormatConditionWindow : WinWindow
	{
		public UIStyleFormatConditionWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
				"In Stock] column";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
					"In Stock] column");
			#endregion
		}
		#region Properties
		public UIPanelControlClient2 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient2(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		public UIPanelControlClient11 UIPanelControlClient1
		{
			get
			{
				if ((this.mUIPanelControlClient1 == null))
				{
					this.mUIPanelControlClient1 = new UIPanelControlClient11(this);
				}
				return this.mUIPanelControlClient1;
			}
		}
		public UIPanelControlClient21 UIPanelControlClient2
		{
			get
			{
				if ((this.mUIPanelControlClient2 == null))
				{
					this.mUIPanelControlClient2 = new UIPanelControlClient21(this);
				}
				return this.mUIPanelControlClient2;
			}
		}
		public UIPanelControlClient3 UIPanelControlClient3
		{
			get
			{
				if ((this.mUIPanelControlClient3 == null))
				{
					this.mUIPanelControlClient3 = new UIPanelControlClient3(this);
				}
				return this.mUIPanelControlClient3;
			}
		}
		public UIStyleFormatConditionTitleBar UIStyleFormatConditionTitleBar
		{
			get
			{
				if ((this.mUIStyleFormatConditionTitleBar == null))
				{
					this.mUIStyleFormatConditionTitleBar = new UIStyleFormatConditionTitleBar(this);
				}
				return this.mUIStyleFormatConditionTitleBar;
			}
		}
		public UIFormatItemListList1 UIFormatItemListList
		{
			get
			{
				if ((this.mUIFormatItemListList == null))
				{
					this.mUIFormatItemListList = new UIFormatItemListList1(this);
				}
				return this.mUIFormatItemListList;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient2 mUIPanelControlClient;
		private UIPanelControlClient11 mUIPanelControlClient1;
		private UIPanelControlClient21 mUIPanelControlClient2;
		private UIPanelControlClient3 mUIPanelControlClient3;
		private UIStyleFormatConditionTitleBar mUIStyleFormatConditionTitleBar;
		private UIFormatItemListList1 mUIFormatItemListList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient2 : DXTestControl
	{
		public UIPanelControlClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
					"In Stock] column");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbAdd";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
							"In Stock] column");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient11 : DXTestControl
	{
		public UIPanelControlClient11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UIImageComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEditComboBox == null))
				{
					this.mUIImageComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbCondition";
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					#endregion
				}
				return this.mUIImageComboBoxEditComboBox;
			}
		}
		public UIXtraPropertyGridCustom UIXtraPropertyGridCustom
		{
			get
			{
				if ((this.mUIXtraPropertyGridCustom == null))
				{
					this.mUIXtraPropertyGridCustom = new UIXtraPropertyGridCustom(this);
				}
				return this.mUIXtraPropertyGridCustom;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIImageComboBoxEditComboBox;
		private UIXtraPropertyGridCustom mUIXtraPropertyGridCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPropertyGridCustom : DXTestControl
	{
		public UIXtraPropertyGridCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "propertyGrid1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraPropertyGrid";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
					"In Stock] column");
			#endregion
		}
		#region Properties
		public DXTestControl UIPropertyGridControlCustom
		{
			get
			{
				if ((this.mUIPropertyGridControlCustom == null))
				{
					this.mUIPropertyGridControlCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIPropertyGridControlCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "propertyGridControl1";
					this.mUIPropertyGridControlCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PropertyGridControl";
					this.mUIPropertyGridControlCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPropertyGridControlCustom.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
							"In Stock] column");
					#endregion
				}
				return this.mUIPropertyGridControlCustom;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIPropertyGridControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient21 : DXTestControl
	{
		public UIPanelControlClient21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2SpinEdit[0]";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUISpinEditEdit.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
							"In Stock] column");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient3 : DXTestControl
	{
		public UIPanelControlClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2SpinEdit[1]";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUISpinEditEdit.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
							"In Stock] column");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStyleFormatConditionTitleBar : WinTitleBar
	{
		public UIStyleFormatConditionTitleBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
					"In Stock] column");
			#endregion
		}
		#region Properties
		public WinButton UICloseButton
		{
			get
			{
				if ((this.mUICloseButton == null))
				{
					this.mUICloseButton = new WinButton(this);
					#region Search Criteria
					this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
					this.mUICloseButton.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
							"In Stock] column");
					#endregion
				}
				return this.mUICloseButton;
			}
		}
		#endregion
		#region Fields
		private WinButton mUICloseButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatItemListList1 : DXListBox
	{
		public UIFormatItemListList1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemList";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
					"In Stock] column");
			#endregion
		}
		#region Properties
		public DXListBoxItem UINotBetween1040ListItem
		{
			get
			{
				if ((this.mUINotBetween1040ListItem == null))
				{
					this.mUINotBetween1040ListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUINotBetween1040ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemListItem[0]";
					this.mUINotBetween1040ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUINotBetween1040ListItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINotBetween1040ListItem.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Units " +
							"In Stock] column");
					#endregion
				}
				return this.mUINotBetween1040ListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUINotBetween1040ListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILinkPropertiesWindow : WinWindow
	{
		public UILinkPropertiesWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Link Properties";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Link Properties");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCaption";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit.WindowTitles.Add("Link Properties");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbItem";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditEdit;
		private DXComboBox mUIComboBoxEditComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow111 : WinWindow
	{
		public UIItemWindow111()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Link Properties");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXButton UISimpleButtonButton1
		{
			get
			{
				if ((this.mUISimpleButtonButton1 == null))
				{
					this.mUISimpleButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "btClose";
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUISimpleButtonButton1.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUISimpleButtonButton1;
			}
		}
		public DXButton UISimpleButtonButton2
		{
			get
			{
				if ((this.mUISimpleButtonButton2 == null))
				{
					this.mUISimpleButtonButton2 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
					this.mUISimpleButtonButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton2.WindowTitles.Add("Find ");
					#endregion
				}
				return this.mUISimpleButtonButton2;
			}
		}
		public DXButton UISimpleButtonButton3
		{
			get
			{
				if ((this.mUISimpleButtonButton3 == null))
				{
					this.mUISimpleButtonButton3 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton3.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
					this.mUISimpleButtonButton3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton3.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUISimpleButtonButton3;
			}
		}
		public DXButton UISimpleButtonButton4
		{
			get
			{
				if ((this.mUISimpleButtonButton4 == null))
				{
					this.mUISimpleButtonButton4 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton4.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
					this.mUISimpleButtonButton4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton4.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUISimpleButtonButton4;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		private DXButton mUISimpleButtonButton1;
		private DXButton mUISimpleButtonButton2;
		private DXButton mUISimpleButtonButton3;
		private DXButton mUISimpleButtonButton4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISimplePadCDemoWindow : WinWindow
	{
		public UISimplePadCDemoWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "SimplePad (C# Demo)";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom4 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom4(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIRtPadWindow UIRtPadWindow
		{
			get
			{
				if ((this.mUIRtPadWindow == null))
				{
					this.mUIRtPadWindow = new UIRtPadWindow(this);
				}
				return this.mUIRtPadWindow;
			}
		}
		public UIBarDockControlCustom11 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom11(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		public WinTitleBar UISimplePadCDemoTitleBar
		{
			get
			{
				if ((this.mUISimplePadCDemoTitleBar == null))
				{
					this.mUISimplePadCDemoTitleBar = new WinTitleBar(this);
					#region Search Criteria
					this.mUISimplePadCDemoTitleBar.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUISimplePadCDemoTitleBar;
			}
		}
		public UIBarDockControlCustom21 UIBarDockControlCustom2
		{
			get
			{
				if ((this.mUIBarDockControlCustom2 == null))
				{
					this.mUIBarDockControlCustom2 = new UIBarDockControlCustom21(this);
				}
				return this.mUIBarDockControlCustom2;
			}
		}
		public UIBarDockControlCustom31 UIBarDockControlCustom3
		{
			get
			{
				if ((this.mUIBarDockControlCustom3 == null))
				{
					this.mUIBarDockControlCustom3 = new UIBarDockControlCustom31(this);
				}
				return this.mUIBarDockControlCustom3;
			}
		}
		public UISimplePadCDemoClient UISimplePadCDemoClient
		{
			get
			{
				if ((this.mUISimplePadCDemoClient == null))
				{
					this.mUISimplePadCDemoClient = new UISimplePadCDemoClient(this);
				}
				return this.mUISimplePadCDemoClient;
			}
		}
		public UIBarDockControlCustom41 UIBarDockControlCustom4
		{
			get
			{
				if ((this.mUIBarDockControlCustom4 == null))
				{
					this.mUIBarDockControlCustom4 = new UIBarDockControlCustom41(this);
				}
				return this.mUIBarDockControlCustom4;
			}
		}
		public UIBarDockControlCustom5 UIBarDockControlCustom5
		{
			get
			{
				if ((this.mUIBarDockControlCustom5 == null))
				{
					this.mUIBarDockControlCustom5 = new UIBarDockControlCustom5(this);
				}
				return this.mUIBarDockControlCustom5;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom4 mUIBarDockControlCustom;
		private UIRtPadWindow mUIRtPadWindow;
		private UIBarDockControlCustom11 mUIBarDockControlCustom1;
		private WinTitleBar mUISimplePadCDemoTitleBar;
		private UIBarDockControlCustom21 mUIBarDockControlCustom2;
		private UIBarDockControlCustom31 mUIBarDockControlCustom3;
		private UISimplePadCDemoClient mUISimplePadCDemoClient;
		private UIBarDockControlCustom41 mUIBarDockControlCustom4;
		private UIBarDockControlCustom5 mUIBarDockControlCustom5;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom4 : DXTestControl
	{
		public UIBarDockControlCustom4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIStandardMenuBar UIStandardMenuBar
		{
			get
			{
				if ((this.mUIStandardMenuBar == null))
				{
					this.mUIStandardMenuBar = new UIStandardMenuBar(this);
				}
				return this.mUIStandardMenuBar;
			}
		}
		public UIFormatMenuBar1 UIFormatMenuBar
		{
			get
			{
				if ((this.mUIFormatMenuBar == null))
				{
					this.mUIFormatMenuBar = new UIFormatMenuBar1(this);
				}
				return this.mUIFormatMenuBar;
			}
		}
		public DXMenu UIPaintStyleMenuBar
		{
			get
			{
				if ((this.mUIPaintStyleMenuBar == null))
				{
					this.mUIPaintStyleMenuBar = new DXMenu(this);
					#region Search Criteria
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.Name] = "PaintStyle";
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPaintStyleMenuBar.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIPaintStyleMenuBar;
			}
		}
		public UIMainMenuMenuBar UIMainMenuMenuBar
		{
			get
			{
				if ((this.mUIMainMenuMenuBar == null))
				{
					this.mUIMainMenuMenuBar = new UIMainMenuMenuBar(this);
				}
				return this.mUIMainMenuMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIStandardMenuBar mUIStandardMenuBar;
		private UIFormatMenuBar1 mUIFormatMenuBar;
		private DXMenu mUIPaintStyleMenuBar;
		private UIMainMenuMenuBar mUIMainMenuMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStandardMenuBar : DXMenu
	{
		public UIStandardMenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Standard";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPasteBarItem
		{
			get
			{
				if ((this.mUIPasteBarItem == null))
				{
					this.mUIPasteBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPasteBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPasteBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPasteBarItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIPasteBarItem;
			}
		}
		public DXMenuItem UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarCustomizationItemBarItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPasteBarItem;
		private DXMenuItem mUIBarCustomizationItemBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuBar1 : DXMenu
	{
		public UIFormatMenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIBarCustomizationItemBarItem1 UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new UIBarCustomizationItemBarItem1(this);
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		public DXMenuItem UICenterBarItem
		{
			get
			{
				if ((this.mUICenterBarItem == null))
				{
					this.mUICenterBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUICenterBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Center";
					this.mUICenterBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUICenterBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICenterBarItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUICenterBarItem;
			}
		}
		public DXMenuItem UIItalicBarItem
		{
			get
			{
				if ((this.mUIItalicBarItem == null))
				{
					this.mUIItalicBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIItalicBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Italic";
					this.mUIItalicBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIItalicBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItalicBarItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIItalicBarItem;
			}
		}
		public DXMenuItem UIBoldBarItem
		{
			get
			{
				if ((this.mUIBoldBarItem == null))
				{
					this.mUIBoldBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBoldBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Bold";
					this.mUIBoldBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBoldBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBoldBarItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIBoldBarItem;
			}
		}
		public DXMenuItem UIUnderlineBarItem
		{
			get
			{
				if ((this.mUIUnderlineBarItem == null))
				{
					this.mUIUnderlineBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIUnderlineBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Underline";
					this.mUIUnderlineBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIUnderlineBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIUnderlineBarItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIUnderlineBarItem;
			}
		}
		#endregion
		#region Fields
		private UIBarCustomizationItemBarItem1 mUIBarCustomizationItemBarItem;
		private DXMenuItem mUICenterBarItem;
		private DXMenuItem mUIItalicBarItem;
		private DXMenuItem mUIBoldBarItem;
		private DXMenuItem mUIUnderlineBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarCustomizationItemBarItem1 : DXMenuItem
	{
		public UIBarCustomizationItemBarItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIAddorRemoveButtonsMenuItem3 UIAddorRemoveButtonsMenuItem
		{
			get
			{
				if ((this.mUIAddorRemoveButtonsMenuItem == null))
				{
					this.mUIAddorRemoveButtonsMenuItem = new UIAddorRemoveButtonsMenuItem3(this);
				}
				return this.mUIAddorRemoveButtonsMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIAddorRemoveButtonsMenuItem3 mUIAddorRemoveButtonsMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddorRemoveButtonsMenuItem3 : DXMenuItem
	{
		public UIAddorRemoveButtonsMenuItem3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add or Remove Buttons";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuItem UICustomizeMenuItem
		{
			get
			{
				if ((this.mUICustomizeMenuItem == null))
				{
					this.mUICustomizeMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUICustomizeMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Customize ...";
					this.mUICustomizeMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUICustomizeMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICustomizeMenuItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUICustomizeMenuItem;
			}
		}
		public UIFormatMenuItem UIFormatMenuItem
		{
			get
			{
				if ((this.mUIFormatMenuItem == null))
				{
					this.mUIFormatMenuItem = new UIFormatMenuItem(this);
				}
				return this.mUIFormatMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUICustomizeMenuItem;
		private UIFormatMenuItem mUIFormatMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuItem : DXMenuItem
	{
		public UIFormatMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuItem UIItalicMenuItem
		{
			get
			{
				if ((this.mUIItalicMenuItem == null))
				{
					this.mUIItalicMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIItalicMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Italic";
					this.mUIItalicMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIItalicMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItalicMenuItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIItalicMenuItem;
			}
		}
		public DXMenuItem UIResetToolbarMenuItem
		{
			get
			{
				if ((this.mUIResetToolbarMenuItem == null))
				{
					this.mUIResetToolbarMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIResetToolbarMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Reset Toolbar";
					this.mUIResetToolbarMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIResetToolbarMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIResetToolbarMenuItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIResetToolbarMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIItalicMenuItem;
		private DXMenuItem mUIResetToolbarMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMainMenuMenuBar : DXMenu
	{
		public UIMainMenuMenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainMenu";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFileBarItem UIFileBarItem
		{
			get
			{
				if ((this.mUIFileBarItem == null))
				{
					this.mUIFileBarItem = new UIFileBarItem(this);
				}
				return this.mUIFileBarItem;
			}
		}
		public UIEditBarItem UIEditBarItem
		{
			get
			{
				if ((this.mUIEditBarItem == null))
				{
					this.mUIEditBarItem = new UIEditBarItem(this);
				}
				return this.mUIEditBarItem;
			}
		}
		public UIFormatBarItem UIFormatBarItem
		{
			get
			{
				if ((this.mUIFormatBarItem == null))
				{
					this.mUIFormatBarItem = new UIFormatBarItem(this);
				}
				return this.mUIFormatBarItem;
			}
		}
		#endregion
		#region Fields
		private UIFileBarItem mUIFileBarItem;
		private UIEditBarItem mUIEditBarItem;
		private UIFormatBarItem mUIFormatBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFileBarItem : DXMenuItem
	{
		public UIFileBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&File";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuItem UIBarRecentExpanderIteMenuItem
		{
			get
			{
				if ((this.mUIBarRecentExpanderIteMenuItem == null))
				{
					this.mUIBarRecentExpanderIteMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarRecentExpanderIteMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarRecentExpanderItemLink[0]";
					this.mUIBarRecentExpanderIteMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIBarRecentExpanderIteMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarRecentExpanderIteMenuItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIBarRecentExpanderIteMenuItem;
			}
		}
		public DXMenuItem UINewMenuItem
		{
			get
			{
				if ((this.mUINewMenuItem == null))
				{
					this.mUINewMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUINewMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&New";
					this.mUINewMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUINewMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUINewMenuItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUINewMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIBarRecentExpanderIteMenuItem;
		private DXMenuItem mUINewMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditBarItem : DXMenuItem
	{
		public UIEditBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&Edit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuItem UICutMenuItem
		{
			get
			{
				if ((this.mUICutMenuItem == null))
				{
					this.mUICutMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUICutMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cu&t";
					this.mUICutMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUICutMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICutMenuItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUICutMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUICutMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatBarItem : DXMenuItem
	{
		public UIFormatBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "F&ormat";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuItem UIBarRecentExpanderIteMenuItem
		{
			get
			{
				if ((this.mUIBarRecentExpanderIteMenuItem == null))
				{
					this.mUIBarRecentExpanderIteMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarRecentExpanderIteMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarRecentExpanderItemLink[0]";
					this.mUIBarRecentExpanderIteMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIBarRecentExpanderIteMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarRecentExpanderIteMenuItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIBarRecentExpanderIteMenuItem;
			}
		}
		public UIFontColorMenuItem UIFontColorMenuItem
		{
			get
			{
				if ((this.mUIFontColorMenuItem == null))
				{
					this.mUIFontColorMenuItem = new UIFontColorMenuItem(this);
				}
				return this.mUIFontColorMenuItem;
			}
		}
		public UIFontColorMenuItem1 UIFontColorMenuItem1
		{
			get
			{
				if ((this.mUIFontColorMenuItem1 == null))
				{
					this.mUIFontColorMenuItem1 = new UIFontColorMenuItem1(this);
				}
				return this.mUIFontColorMenuItem1;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIBarRecentExpanderIteMenuItem;
		private UIFontColorMenuItem mUIFontColorMenuItem;
		private UIFontColorMenuItem1 mUIFontColorMenuItem1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontColorMenuItem : DXMenuItem
	{
		public UIFontColorMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Font C&olor";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UICustomPopupBarControMenu3 UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu3(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControMenu3 mUICustomPopupBarControMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu3 : DXMenu
	{
		public UICustomPopupBarControMenu3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIPopupControlContaineClient3 UIPopupControlContaineClient
		{
			get
			{
				if ((this.mUIPopupControlContaineClient == null))
				{
					this.mUIPopupControlContaineClient = new UIPopupControlContaineClient3(this);
				}
				return this.mUIPopupControlContaineClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupControlContaineClient3 mUIPopupControlContaineClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupControlContaineClient3 : DXTestControl
	{
		public UIPopupControlContaineClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList5 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList5(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList5 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList5 : DXTestControl
	{
		public UIXtraTabControlTabList5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIXtraTabPageClient4 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient4(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPageClient4 mUIXtraTabPageClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient4 : DXTestControl
	{
		public UIXtraTabPageClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXTestControl UIColorCellsControlClient
		{
			get
			{
				if ((this.mUIColorCellsControlClient == null))
				{
					this.mUIColorCellsControlClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]ColorCellsControl[0]";
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorCellsControl";
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColorCellsControlClient.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIColorCellsControlClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIColorCellsControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontColorMenuItem1 : DXMenuItem
	{
		public UIFontColorMenuItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Font C&olor";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UICustomPopupBarControMenu4 UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu4(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControMenu4 mUICustomPopupBarControMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu4 : DXMenu
	{
		public UICustomPopupBarControMenu4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIPopupControlContaineClient4 UIPopupControlContaineClient
		{
			get
			{
				if ((this.mUIPopupControlContaineClient == null))
				{
					this.mUIPopupControlContaineClient = new UIPopupControlContaineClient4(this);
				}
				return this.mUIPopupControlContaineClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupControlContaineClient4 mUIPopupControlContaineClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupControlContaineClient4 : DXTestControl
	{
		public UIPopupControlContaineClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList6 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList6(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList6 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList6 : DXTestControl
	{
		public UIXtraTabControlTabList6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]PageHeader0";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRtPadWindow : WinWindow
	{
		public UIRtPadWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rtPad";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public WinEdit UIRtPadEdit
		{
			get
			{
				if ((this.mUIRtPadEdit == null))
				{
					this.mUIRtPadEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIRtPadEdit.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIRtPadEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRtPadEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom11 : DXTestControl
	{
		public UIBarDockControlCustom11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenu UIPaintStyleMenuBar
		{
			get
			{
				if ((this.mUIPaintStyleMenuBar == null))
				{
					this.mUIPaintStyleMenuBar = new DXMenu(this);
					#region Search Criteria
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.Name] = "PaintStyle";
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPaintStyleMenuBar.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIPaintStyleMenuBar;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPaintStyleMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom21 : DXTestControl
	{
		public UIBarDockControlCustom21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIMainMenuMenuBar1 UIMainMenuMenuBar
		{
			get
			{
				if ((this.mUIMainMenuMenuBar == null))
				{
					this.mUIMainMenuMenuBar = new UIMainMenuMenuBar1(this);
				}
				return this.mUIMainMenuMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIMainMenuMenuBar1 mUIMainMenuMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMainMenuMenuBar1 : DXMenu
	{
		public UIMainMenuMenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainMenu";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFormatBarItem1 UIFormatBarItem
		{
			get
			{
				if ((this.mUIFormatBarItem == null))
				{
					this.mUIFormatBarItem = new UIFormatBarItem1(this);
				}
				return this.mUIFormatBarItem;
			}
		}
		#endregion
		#region Fields
		private UIFormatBarItem1 mUIFormatBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatBarItem1 : DXMenuItem
	{
		public UIFormatBarItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "F&ormat";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFontColorMenuItem2 UIFontColorMenuItem
		{
			get
			{
				if ((this.mUIFontColorMenuItem == null))
				{
					this.mUIFontColorMenuItem = new UIFontColorMenuItem2(this);
				}
				return this.mUIFontColorMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIFontColorMenuItem2 mUIFontColorMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontColorMenuItem2 : DXMenuItem
	{
		public UIFontColorMenuItem2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Font C&olor";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIPopupContainerBarConMenu2 UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu2(this);
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerBarConMenu2 mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerBarConMenu2 : DXMenu
	{
		public UIPopupContainerBarConMenu2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIPopupControlContaineClient5 UIPopupControlContaineClient
		{
			get
			{
				if ((this.mUIPopupControlContaineClient == null))
				{
					this.mUIPopupControlContaineClient = new UIPopupControlContaineClient5(this);
				}
				return this.mUIPopupControlContaineClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupControlContaineClient5 mUIPopupControlContaineClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupControlContaineClient5 : DXTestControl
	{
		public UIPopupControlContaineClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList7 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList7(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList7 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList7 : DXTestControl
	{
		public UIXtraTabControlTabList7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]PageHeader0";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom31 : DXTestControl
	{
		public UIBarDockControlCustom31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIMainMenuMenuBar2 UIMainMenuMenuBar
		{
			get
			{
				if ((this.mUIMainMenuMenuBar == null))
				{
					this.mUIMainMenuMenuBar = new UIMainMenuMenuBar2(this);
				}
				return this.mUIMainMenuMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIMainMenuMenuBar2 mUIMainMenuMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMainMenuMenuBar2 : DXMenu
	{
		public UIMainMenuMenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainMenu";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFormatBarItem2 UIFormatBarItem
		{
			get
			{
				if ((this.mUIFormatBarItem == null))
				{
					this.mUIFormatBarItem = new UIFormatBarItem2(this);
				}
				return this.mUIFormatBarItem;
			}
		}
		#endregion
		#region Fields
		private UIFormatBarItem2 mUIFormatBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatBarItem2 : DXMenuItem
	{
		public UIFormatBarItem2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "F&ormat";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFontColorMenuItem3 UIFontColorMenuItem
		{
			get
			{
				if ((this.mUIFontColorMenuItem == null))
				{
					this.mUIFontColorMenuItem = new UIFontColorMenuItem3(this);
				}
				return this.mUIFontColorMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIFontColorMenuItem3 mUIFontColorMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontColorMenuItem3 : DXMenuItem
	{
		public UIFontColorMenuItem3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Font C&olor";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIPopupContainerBarConMenu3 UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu3(this);
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerBarConMenu3 mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerBarConMenu3 : DXMenu
	{
		public UIPopupContainerBarConMenu3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIPopupControlContaineClient6 UIPopupControlContaineClient
		{
			get
			{
				if ((this.mUIPopupControlContaineClient == null))
				{
					this.mUIPopupControlContaineClient = new UIPopupControlContaineClient6(this);
				}
				return this.mUIPopupControlContaineClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupControlContaineClient6 mUIPopupControlContaineClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupControlContaineClient6 : DXTestControl
	{
		public UIPopupControlContaineClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList8 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList8(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList8 mUIXtraTabControlTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList8 : DXTestControl
	{
		public UIXtraTabControlTabList8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIXtraTabPageClient5 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient5(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPageClient5 mUIXtraTabPageClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient5 : DXTestControl
	{
		public UIXtraTabPageClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXTestControl UIColorCellsControlClient
		{
			get
			{
				if ((this.mUIColorCellsControlClient == null))
				{
					this.mUIColorCellsControlClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1XtraTabControl[0]XtraTabPage[0]ColorCellsControl[0]";
					this.mUIColorCellsControlClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorCellsControl";
					this.mUIColorCellsControlClient.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIColorCellsControlClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIColorCellsControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISimplePadCDemoClient : WinClient
	{
		public UISimplePadCDemoClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "SimplePad (C# Demo)";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIRtPadWindow1 UIRtPadWindow
		{
			get
			{
				if ((this.mUIRtPadWindow == null))
				{
					this.mUIRtPadWindow = new UIRtPadWindow1(this);
				}
				return this.mUIRtPadWindow;
			}
		}
		#endregion
		#region Fields
		private UIRtPadWindow1 mUIRtPadWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRtPadWindow1 : WinWindow
	{
		public UIRtPadWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.RichEdit20W", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public WinEdit UIRtPadEdit
		{
			get
			{
				if ((this.mUIRtPadEdit == null))
				{
					this.mUIRtPadEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIRtPadEdit.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIRtPadEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRtPadEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom41 : DXTestControl
	{
		public UIBarDockControlCustom41(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFormatMenuBar2 UIFormatMenuBar
		{
			get
			{
				if ((this.mUIFormatMenuBar == null))
				{
					this.mUIFormatMenuBar = new UIFormatMenuBar2(this);
				}
				return this.mUIFormatMenuBar;
			}
		}
		public DXMenu UIPaintStyleMenuBar
		{
			get
			{
				if ((this.mUIPaintStyleMenuBar == null))
				{
					this.mUIPaintStyleMenuBar = new DXMenu(this);
					#region Search Criteria
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.Name] = "PaintStyle";
					this.mUIPaintStyleMenuBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
					this.mUIPaintStyleMenuBar.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIPaintStyleMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIFormatMenuBar2 mUIFormatMenuBar;
		private DXMenu mUIPaintStyleMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuBar2 : DXMenu
	{
		public UIFormatMenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIItalicBarBaseButtonItem
		{
			get
			{
				if ((this.mUIItalicBarBaseButtonItem == null))
				{
					this.mUIItalicBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIItalicBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Italic";
					this.mUIItalicBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIItalicBarBaseButtonItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIItalicBarBaseButtonItem;
			}
		}
		public DXMenuItem UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarCustomizationItemBarItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIItalicBarBaseButtonItem;
		private DXMenuItem mUIBarCustomizationItemBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom5 : DXTestControl
	{
		public UIBarDockControlCustom5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFormatMenuBar3 UIFormatMenuBar
		{
			get
			{
				if ((this.mUIFormatMenuBar == null))
				{
					this.mUIFormatMenuBar = new UIFormatMenuBar3(this);
				}
				return this.mUIFormatMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIFormatMenuBar3 mUIFormatMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuBar3 : DXMenu
	{
		public UIFormatMenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIUnderlineBarBaseButtonItem
		{
			get
			{
				if ((this.mUIUnderlineBarBaseButtonItem == null))
				{
					this.mUIUnderlineBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIUnderlineBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Underline";
					this.mUIUnderlineBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIUnderlineBarBaseButtonItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIUnderlineBarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIUnderlineBarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomizeWindow : WinWindow
	{
		public UICustomizeWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Customize";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Customize");
			#endregion
		}
		#region Properties
		public UIXtraMessageBoxFormWindow1 UIXtraMessageBoxFormWindow
		{
			get
			{
				if ((this.mUIXtraMessageBoxFormWindow == null))
				{
					this.mUIXtraMessageBoxFormWindow = new UIXtraMessageBoxFormWindow1(this);
				}
				return this.mUIXtraMessageBoxFormWindow;
			}
		}
		#endregion
		#region Fields
		private UIXtraMessageBoxFormWindow1 mUIXtraMessageBoxFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraMessageBoxFormWindow1 : DXWindow
	{
		public UIXtraMessageBoxFormWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomizeXtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
			this.WindowTitles.Add("Customize");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomizeXtraMessageBoxFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Customize");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISimplePadQuestionWindow : WinWindow
	{
		public UISimplePadQuestionWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "SimplePad Question";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("SimplePad Question");
			#endregion
		}
		#region Properties
		public UIXtraMessageBoxFormWindow2 UIXtraMessageBoxFormWindow
		{
			get
			{
				if ((this.mUIXtraMessageBoxFormWindow == null))
				{
					this.mUIXtraMessageBoxFormWindow = new UIXtraMessageBoxFormWindow2(this);
				}
				return this.mUIXtraMessageBoxFormWindow;
			}
		}
		public UIXtraMessageBoxFormWindow11 UIXtraMessageBoxFormWindow1
		{
			get
			{
				if ((this.mUIXtraMessageBoxFormWindow1 == null))
				{
					this.mUIXtraMessageBoxFormWindow1 = new UIXtraMessageBoxFormWindow11(this);
				}
				return this.mUIXtraMessageBoxFormWindow1;
			}
		}
		public UIXtraMessageBoxFormWindow21 UIXtraMessageBoxFormWindow2
		{
			get
			{
				if ((this.mUIXtraMessageBoxFormWindow2 == null))
				{
					this.mUIXtraMessageBoxFormWindow2 = new UIXtraMessageBoxFormWindow21(this);
				}
				return this.mUIXtraMessageBoxFormWindow2;
			}
		}
		#endregion
		#region Fields
		private UIXtraMessageBoxFormWindow2 mUIXtraMessageBoxFormWindow;
		private UIXtraMessageBoxFormWindow11 mUIXtraMessageBoxFormWindow1;
		private UIXtraMessageBoxFormWindow21 mUIXtraMessageBoxFormWindow2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraMessageBoxFormWindow2 : DXWindow
	{
		public UIXtraMessageBoxFormWindow2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SimplePad QuestionXtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
			this.WindowTitles.Add("SimplePad Question");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "SimplePad QuestionXtraMessageBoxFormSimpleButton[2]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("SimplePad Question");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraMessageBoxFormWindow11 : DXWindow
	{
		public UIXtraMessageBoxFormWindow11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SimplePad Question";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
			this.WindowTitles.Add("SimplePad Question");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "SimplePad QuestionSimpleButton[1]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("SimplePad Question");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraMessageBoxFormWindow21 : DXWindow
	{
		public UIXtraMessageBoxFormWindow21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SimplePad Question";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			this.WindowTitles.Add("SimplePad Question");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "SimplePad QuestionSimpleButton[2]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("SimplePad Question");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIApplicationUIWindow : WinWindow
	{
		public UIApplicationUIWindow()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Application UI Layout Controls Demo (C# code)", PropertyExpressionOperator.Contains));
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcNavigationsClient1 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient1(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		public UIPcMainClient2 UIPcMainClient
		{
			get
			{
				if ((this.mUIPcMainClient == null))
				{
					this.mUIPcMainClient = new UIPcMainClient2(this);
				}
				return this.mUIPcMainClient;
			}
		}
		public UIEditorItemsWindow UIEditorItemsWindow
		{
			get
			{
				if ((this.mUIEditorItemsWindow == null))
				{
					this.mUIEditorItemsWindow = new UIEditorItemsWindow(this);
				}
				return this.mUIEditorItemsWindow;
			}
		}
		public UIPcMainClient21 UIPcMainClient2
		{
			get
			{
				if ((this.mUIPcMainClient2 == null))
				{
					this.mUIPcMainClient2 = new UIPcMainClient21(this);
				}
				return this.mUIPcMainClient2;
			}
		}
		#endregion
		#region Fields
		private UIGcNavigationsClient1 mUIGcNavigationsClient;
		private UIPcMainClient2 mUIPcMainClient;
		private UIEditorItemsWindow mUIEditorItemsWindow;
		private UIPcMainClient21 mUIPcMainClient2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient1 : DXTestControl
	{
		public UIGcNavigationsClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXListBox UIListBoxControl1List
		{
			get
			{
				if ((this.mUIListBoxControl1List == null))
				{
					this.mUIListBoxControl1List = new DXListBox(this);
					#region Search Criteria
					this.mUIListBoxControl1List.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControl1";
					this.mUIListBoxControl1List.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
					this.mUIListBoxControl1List.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIListBoxControl1List.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIListBoxControl1List;
			}
		}
		#endregion
		#region Fields
		private DXListBox mUIListBoxControl1List;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPcMainClient2 : DXTestControl
	{
		public UIPcMainClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient34 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient34(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient34 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient34 : DXTestControl
	{
		public UIGcContainerClient34(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIAlertControlTutorialCustom UIAlertControlTutorialCustom
		{
			get
			{
				if ((this.mUIAlertControlTutorialCustom == null))
				{
					this.mUIAlertControlTutorialCustom = new UIAlertControlTutorialCustom(this);
				}
				return this.mUIAlertControlTutorialCustom;
			}
		}
		public UIEditorItemsCustom1 UIEditorItemsCustom
		{
			get
			{
				if ((this.mUIEditorItemsCustom == null))
				{
					this.mUIEditorItemsCustom = new UIEditorItemsCustom1(this);
				}
				return this.mUIEditorItemsCustom;
			}
		}
		public UIStandaloneBDControlCustom UIStandaloneBDControlCustom
		{
			get
			{
				if ((this.mUIStandaloneBDControlCustom == null))
				{
					this.mUIStandaloneBDControlCustom = new UIStandaloneBDControlCustom(this);
				}
				return this.mUIStandaloneBDControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIAlertControlTutorialCustom mUIAlertControlTutorialCustom;
		private UIEditorItemsCustom1 mUIEditorItemsCustom;
		private UIStandaloneBDControlCustom mUIStandaloneBDControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAlertControlTutorialCustom : DXTestControl
	{
		public UIAlertControlTutorialCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertControlTutorial";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertControlTutorial";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIButton1Button
		{
			get
			{
				if ((this.mUIButton1Button == null))
				{
					this.mUIButton1Button = new DXButton(this);
					#region Search Criteria
					this.mUIButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "button1";
					this.mUIButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIButton1Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIButton1Button.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIButton1Button;
			}
		}
		public UIGroupControl1Client1 UIGroupControl1Client
		{
			get
			{
				if ((this.mUIGroupControl1Client == null))
				{
					this.mUIGroupControl1Client = new UIGroupControl1Client1(this);
				}
				return this.mUIGroupControl1Client;
			}
		}
		public UIGroupControl2Client UIGroupControl2Client
		{
			get
			{
				if ((this.mUIGroupControl2Client == null))
				{
					this.mUIGroupControl2Client = new UIGroupControl2Client(this);
				}
				return this.mUIGroupControl2Client;
			}
		}
		public DXTextEdit UISePostponedFormCountEdit
		{
			get
			{
				if ((this.mUISePostponedFormCountEdit == null))
				{
					this.mUISePostponedFormCountEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISePostponedFormCountEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sePostponedFormCount";
					this.mUISePostponedFormCountEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISePostponedFormCountEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISePostponedFormCountEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISePostponedFormCountEdit;
			}
		}
		public DXTextEdit UICeWidthEdit
		{
			get
			{
				if ((this.mUICeWidthEdit == null))
				{
					this.mUICeWidthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUICeWidthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ceWidth";
					this.mUICeWidthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUICeWidthEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICeWidthEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICeWidthEdit;
			}
		}
		public DXTextEdit UICeHeightEdit
		{
			get
			{
				if ((this.mUICeHeightEdit == null))
				{
					this.mUICeHeightEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUICeHeightEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ceHeight";
					this.mUICeHeightEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUICeHeightEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICeHeightEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICeHeightEdit;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIButton1Button;
		private UIGroupControl1Client1 mUIGroupControl1Client;
		private UIGroupControl2Client mUIGroupControl2Client;
		private DXTextEdit mUISePostponedFormCountEdit;
		private DXTextEdit mUICeWidthEdit;
		private DXTextEdit mUICeHeightEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl1Client1 : DXTestControl
	{
		public UIGroupControl1Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIAlertControlPropertiCustom UIAlertControlPropertiCustom
		{
			get
			{
				if ((this.mUIAlertControlPropertiCustom == null))
				{
					this.mUIAlertControlPropertiCustom = new UIAlertControlPropertiCustom(this);
				}
				return this.mUIAlertControlPropertiCustom;
			}
		}
		#endregion
		#region Fields
		private UIAlertControlPropertiCustom mUIAlertControlPropertiCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAlertControlPropertiCustom : DXTestControl
	{
		public UIAlertControlPropertiCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "alertControlProperties1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertControlProperties";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbFormLocationComboBox
		{
			get
			{
				if ((this.mUIIcbFormLocationComboBox == null))
				{
					this.mUIIcbFormLocationComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbFormLocationComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbFormLocation";
					this.mUIIcbFormLocationComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbFormLocationComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIIcbFormLocationComboBox;
			}
		}
		public DXCheckedComboBox UICcbeButtonsCheckedComboBox
		{
			get
			{
				if ((this.mUICcbeButtonsCheckedComboBox == null))
				{
					this.mUICcbeButtonsCheckedComboBox = new DXCheckedComboBox(this);
					#region Search Criteria
					this.mUICcbeButtonsCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ccbeButtons";
					this.mUICcbeButtonsCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedComboBoxEdit";
					this.mUICcbeButtonsCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICcbeButtonsCheckedComboBox;
			}
		}
		public DXTextEdit UISeFormMaxCountEdit
		{
			get
			{
				if ((this.mUISeFormMaxCountEdit == null))
				{
					this.mUISeFormMaxCountEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISeFormMaxCountEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "seFormMaxCount";
					this.mUISeFormMaxCountEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISeFormMaxCountEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISeFormMaxCountEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISeFormMaxCountEdit;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbFormLocationComboBox;
		private DXCheckedComboBox mUICcbeButtonsCheckedComboBox;
		private DXTextEdit mUISeFormMaxCountEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl2Client : DXTestControl
	{
		public UIGroupControl2Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIAlertInfoProperties1Custom UIAlertInfoProperties1Custom
		{
			get
			{
				if ((this.mUIAlertInfoProperties1Custom == null))
				{
					this.mUIAlertInfoProperties1Custom = new UIAlertInfoProperties1Custom(this);
				}
				return this.mUIAlertInfoProperties1Custom;
			}
		}
		#endregion
		#region Fields
		private UIAlertInfoProperties1Custom mUIAlertInfoProperties1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAlertInfoProperties1Custom : DXTestControl
	{
		public UIAlertInfoProperties1Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "alertInfoProperties1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertInfoProperties";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbImageComboBox
		{
			get
			{
				if ((this.mUIIcbImageComboBox == null))
				{
					this.mUIIcbImageComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbImageComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbImage";
					this.mUIIcbImageComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbImageComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIIcbImageComboBox;
			}
		}
		public DXTextEdit UITxtCaptionEdit
		{
			get
			{
				if ((this.mUITxtCaptionEdit == null))
				{
					this.mUITxtCaptionEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCaptionEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCaption";
					this.mUITxtCaptionEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCaptionEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCaptionEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUITxtCaptionEdit;
			}
		}
		public DXTextEdit UITxtTextEdit
		{
			get
			{
				if ((this.mUITxtTextEdit == null))
				{
					this.mUITxtTextEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtTextEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtText";
					this.mUITxtTextEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITxtTextEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtTextEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUITxtTextEdit;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbImageComboBox;
		private DXTextEdit mUITxtCaptionEdit;
		private DXTextEdit mUITxtTextEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorItemsCustom1 : DXTestControl
	{
		public UIEditorItemsCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItems";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorItems";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom6 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom6(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIBarDockControlCustom12 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom12(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		public UIBarDockControlCustom22 UIBarDockControlCustom2
		{
			get
			{
				if ((this.mUIBarDockControlCustom2 == null))
				{
					this.mUIBarDockControlCustom2 = new UIBarDockControlCustom22(this);
				}
				return this.mUIBarDockControlCustom2;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom6 mUIBarDockControlCustom;
		private UIBarDockControlCustom12 mUIBarDockControlCustom1;
		private UIBarDockControlCustom22 mUIBarDockControlCustom2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom6 : DXTestControl
	{
		public UIBarDockControlCustom6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom3MenuBar UICustom3MenuBar
		{
			get
			{
				if ((this.mUICustom3MenuBar == null))
				{
					this.mUICustom3MenuBar = new UICustom3MenuBar(this);
				}
				return this.mUICustom3MenuBar;
			}
		}
		public UICustom1MenuBar1 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar1(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		public UICustom2MenuBar1 UICustom2MenuBar
		{
			get
			{
				if ((this.mUICustom2MenuBar == null))
				{
					this.mUICustom2MenuBar = new UICustom2MenuBar1(this);
				}
				return this.mUICustom2MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom3MenuBar mUICustom3MenuBar;
		private UICustom1MenuBar1 mUICustom1MenuBar;
		private UICustom2MenuBar1 mUICustom2MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom3MenuBar : DXMenu
	{
		public UICustom3MenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIMemoExEditBarEditItem
		{
			get
			{
				if ((this.mUIMemoExEditBarEditItem == null))
				{
					this.mUIMemoExEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIMemoExEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:";
					this.mUIMemoExEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIMemoExEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMemoExEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIMemoExEditBarEditItem;
			}
		}
		public UIMemoExEditPopupEdit UIMemoExEditPopupEdit
		{
			get
			{
				if ((this.mUIMemoExEditPopupEdit == null))
				{
					this.mUIMemoExEditPopupEdit = new UIMemoExEditPopupEdit(this);
				}
				return this.mUIMemoExEditPopupEdit;
			}
		}
		public DXMenuEditItem UIPickImageBarEditItem
		{
			get
			{
				if ((this.mUIPickImageBarEditItem == null))
				{
					this.mUIPickImageBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIPickImageBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Pick Image:";
					this.mUIPickImageBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIPickImageBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPickImageBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPickImageBarEditItem;
			}
		}
		public DXComboBox UIPickImageComboBox
		{
			get
			{
				if ((this.mUIPickImageComboBox == null))
				{
					this.mUIPickImageComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIPickImageComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Pick Image:";
					this.mUIPickImageComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIPickImageComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPickImageComboBox.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPickImageComboBox;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIMemoExEditBarEditItem;
		private UIMemoExEditPopupEdit mUIMemoExEditPopupEdit;
		private DXMenuEditItem mUIPickImageBarEditItem;
		private DXComboBox mUIPickImageComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExEditPopupEdit : DXPopupEdit
	{
		public UIMemoExEditPopupEdit(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMemoExPopupFormWindow1 UIMemoExPopupFormWindow
		{
			get
			{
				if ((this.mUIMemoExPopupFormWindow == null))
				{
					this.mUIMemoExPopupFormWindow = new UIMemoExPopupFormWindow1(this);
				}
				return this.mUIMemoExPopupFormWindow;
			}
		}
		#endregion
		#region Fields
		private UIMemoExPopupFormWindow1 mUIMemoExPopupFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExPopupFormWindow1 : DXWindow
	{
		public UIMemoExPopupFormWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:PopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExPopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:PopupFormMemoEdit[0]";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMemoEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:PopupFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar1 : DXMenu
	{
		public UICustom1MenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIButtonEditBarEditItem
		{
			get
			{
				if ((this.mUIButtonEditBarEditItem == null))
				{
					this.mUIButtonEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIButtonEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Button Edit: ";
					this.mUIButtonEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIButtonEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIButtonEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIButtonEditBarEditItem;
			}
		}
		public DXTextEdit UIButtonEditEdit
		{
			get
			{
				if ((this.mUIButtonEditEdit == null))
				{
					this.mUIButtonEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIButtonEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Button Edit: ";
					this.mUIButtonEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ButtonEdit";
					this.mUIButtonEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIButtonEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIButtonEditEdit;
			}
		}
		public DXMenuEditItem UICalcEditBarEditItem
		{
			get
			{
				if ((this.mUICalcEditBarEditItem == null))
				{
					this.mUICalcEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUICalcEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Calc Edit:";
					this.mUICalcEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUICalcEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICalcEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICalcEditBarEditItem;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Calc Edit:";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		public DXMenuEditItem UICheckEditBarEditItem
		{
			get
			{
				if ((this.mUICheckEditBarEditItem == null))
				{
					this.mUICheckEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUICheckEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Check Edit: ";
					this.mUICheckEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUICheckEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICheckEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICheckEditBarEditItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIButtonEditBarEditItem;
		private DXTextEdit mUIButtonEditEdit;
		private DXMenuEditItem mUICalcEditBarEditItem;
		private DXPopupEdit mUICalcEditPopupEdit;
		private DXMenuEditItem mUICheckEditBarEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom2MenuBar1 : DXMenu
	{
		public UICustom2MenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIColorEditBarEditItem
		{
			get
			{
				if ((this.mUIColorEditBarEditItem == null))
				{
					this.mUIColorEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIColorEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Color Edit";
					this.mUIColorEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIColorEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIColorEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIColorEditBarEditItem;
			}
		}
		public DXColorEdit UIColorEditColorEdit
		{
			get
			{
				if ((this.mUIColorEditColorEdit == null))
				{
					this.mUIColorEditColorEdit = new DXColorEdit(this);
					#region Search Criteria
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Color Edit";
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = null;
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIColorEditColorEdit;
			}
		}
		public DXColorEdit UIColorEditColorEdit1
		{
			get
			{
				if ((this.mUIColorEditColorEdit1 == null))
				{
					this.mUIColorEditColorEdit1 = new DXColorEdit(this);
					#region Search Criteria
					this.mUIColorEditColorEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "Color Edit";
					this.mUIColorEditColorEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorEdit";
					this.mUIColorEditColorEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIColorEditColorEdit1;
			}
		}
		public DXMenuEditItem UIComboBoxBarEditItem
		{
			get
			{
				if ((this.mUIComboBoxBarEditItem == null))
				{
					this.mUIComboBoxBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIComboBoxBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Combo Box:";
					this.mUIComboBoxBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIComboBoxBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIComboBoxBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIComboBoxBarEditItem;
			}
		}
		public DXMenuEditItem UIDateEditBarEditItem
		{
			get
			{
				if ((this.mUIDateEditBarEditItem == null))
				{
					this.mUIDateEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIDateEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Date Edit:";
					this.mUIDateEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIDateEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDateEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIDateEditBarEditItem;
			}
		}
		public DXDateTimePicker UIDateEditDateTimePicker
		{
			get
			{
				if ((this.mUIDateEditDateTimePicker == null))
				{
					this.mUIDateEditDateTimePicker = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.Name] = "Date Edit:";
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDateEditDateTimePicker.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIDateEditDateTimePicker;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIColorEditBarEditItem;
		private DXColorEdit mUIColorEditColorEdit;
		private DXColorEdit mUIColorEditColorEdit1;
		private DXMenuEditItem mUIComboBoxBarEditItem;
		private DXMenuEditItem mUIDateEditBarEditItem;
		private DXDateTimePicker mUIDateEditDateTimePicker;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom12 : DXTestControl
	{
		public UIBarDockControlCustom12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom4MenuBar UICustom4MenuBar
		{
			get
			{
				if ((this.mUICustom4MenuBar == null))
				{
					this.mUICustom4MenuBar = new UICustom4MenuBar(this);
				}
				return this.mUICustom4MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom4MenuBar mUICustom4MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom4MenuBar : DXMenu
	{
		public UICustom4MenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UISpinEditBarEditItem
		{
			get
			{
				if ((this.mUISpinEditBarEditItem == null))
				{
					this.mUISpinEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUISpinEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin Edit:";
					this.mUISpinEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUISpinEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditBarEditItem;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin Edit:";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUISpinEditBarEditItem;
		private DXTextEdit mUISpinEditEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom22 : DXTestControl
	{
		public UIBarDockControlCustom22(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom4MenuBar1 UICustom4MenuBar
		{
			get
			{
				if ((this.mUICustom4MenuBar == null))
				{
					this.mUICustom4MenuBar = new UICustom4MenuBar1(this);
				}
				return this.mUICustom4MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom4MenuBar1 mUICustom4MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom4MenuBar1 : DXMenu
	{
		public UICustom4MenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin Edit:";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStandaloneBDControlCustom : DXTestControl
	{
		public UIStandaloneBDControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "StandaloneBDControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBDControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanel1Client UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client(this);
				}
				return this.mUIPanel1Client;
			}
		}
		public UIBarDockControlCustom7 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom7(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Client mUIPanel1Client;
		private UIBarDockControlCustom7 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client : DXTestControl
	{
		public UIPanel1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList27 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList27(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList27 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList27 : DXTestControl
	{
		public UIXtraTabControl1TabList27(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client26 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client26(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client26 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client26 : DXTestControl
	{
		public UIXtraTabPage1Client26(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
		{
			get
			{
				if ((this.mUIStandaloneBarDockConCustom == null))
				{
					this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
				}
				return this.mUIStandaloneBarDockConCustom;
			}
		}
		#endregion
		#region Fields
		private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStandaloneBarDockConCustom : DXTestControl
	{
		public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIFormatMenuBar4 UIFormatMenuBar
		{
			get
			{
				if ((this.mUIFormatMenuBar == null))
				{
					this.mUIFormatMenuBar = new UIFormatMenuBar4(this);
				}
				return this.mUIFormatMenuBar;
			}
		}
		public DXMenu UIFontMenuBar
		{
			get
			{
				if ((this.mUIFontMenuBar == null))
				{
					this.mUIFontMenuBar = new DXMenu(this);
					#region Search Criteria
					this.mUIFontMenuBar.SearchProperties[DXTestControl.PropertyNames.Name] = "Font";
					this.mUIFontMenuBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
					this.mUIFontMenuBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFontMenuBar.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIFontMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIFormatMenuBar4 mUIFormatMenuBar;
		private DXMenu mUIFontMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuBar4 : DXMenu
	{
		public UIFormatMenuBar4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIFormatDragBorder
		{
			get
			{
				if ((this.mUIFormatDragBorder == null))
				{
					this.mUIFormatDragBorder = new DXTestControl(this);
					#region Search Criteria
					this.mUIFormatDragBorder.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
					this.mUIFormatDragBorder.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragBorder";
					this.mUIFormatDragBorder.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFormatDragBorder.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIFormatDragBorder;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIFormatDragBorder;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom7 : DXTestControl
	{
		public UIBarDockControlCustom7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "StandaloneBDControlBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenu UIFontMenuBar
		{
			get
			{
				if ((this.mUIFontMenuBar == null))
				{
					this.mUIFontMenuBar = new DXMenu(this);
					#region Search Criteria
					this.mUIFontMenuBar.SearchProperties[DXTestControl.PropertyNames.Name] = "Font";
					this.mUIFontMenuBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
					this.mUIFontMenuBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFontMenuBar.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIFontMenuBar;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIFontMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorItemsWindow : WinWindow
	{
		public UIEditorItemsWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "EditorItems";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanel1Window UIPanel1Window
		{
			get
			{
				if ((this.mUIPanel1Window == null))
				{
					this.mUIPanel1Window = new UIPanel1Window(this);
				}
				return this.mUIPanel1Window;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Window mUIPanel1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Window : WinWindow
	{
		public UIPanel1Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPickImageEditValueChWindow UIPickImageEditValueChWindow
		{
			get
			{
				if ((this.mUIPickImageEditValueChWindow == null))
				{
					this.mUIPickImageEditValueChWindow = new UIPickImageEditValueChWindow(this);
				}
				return this.mUIPickImageEditValueChWindow;
			}
		}
		#endregion
		#region Fields
		private UIPickImageEditValueChWindow mUIPickImageEditValueChWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPickImageEditValueChWindow : WinWindow
	{
		public UIPickImageEditValueChWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "label1";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public WinText UIPickImageEditValueChText
		{
			get
			{
				if ((this.mUIPickImageEditValueChText == null))
				{
					this.mUIPickImageEditValueChText = new WinText(this);
					#region Search Criteria
					this.mUIPickImageEditValueChText.SearchProperties[WinText.PropertyNames.Name] = "Pick Image: EditValueChanged - New Value: MiddleCenter";
					this.mUIPickImageEditValueChText.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPickImageEditValueChText;
			}
		}
		public WinText UIPickImageEditValueChText1
		{
			get
			{
				if ((this.mUIPickImageEditValueChText1 == null))
				{
					this.mUIPickImageEditValueChText1 = new WinText(this);
					#region Search Criteria
					this.mUIPickImageEditValueChText1.SearchProperties[WinText.PropertyNames.Name] = "Pick Image: EditValueChanged - New Value: MiddleRight";
					this.mUIPickImageEditValueChText1.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPickImageEditValueChText1;
			}
		}
		public WinText UIColorEditEditValueChText
		{
			get
			{
				if ((this.mUIColorEditEditValueChText == null))
				{
					this.mUIColorEditEditValueChText = new WinText(this);
					#region Search Criteria
					this.mUIColorEditEditValueChText.SearchProperties[WinText.PropertyNames.Name] = "Color Edit EditValueChanged - New Value: Color [A=255, R=255, G=128, B=0]";
					this.mUIColorEditEditValueChText.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIColorEditEditValueChText;
			}
		}
		#endregion
		#region Fields
		private WinText mUIPickImageEditValueChText;
		private WinText mUIPickImageEditValueChText1;
		private WinText mUIColorEditEditValueChText;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPcMainClient21 : DXTestControl
	{
		public UIPcMainClient21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient35 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient35(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient35 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient35 : DXTestControl
	{
		public UIGcContainerClient35(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIEditorItemsCustom2 UIEditorItemsCustom
		{
			get
			{
				if ((this.mUIEditorItemsCustom == null))
				{
					this.mUIEditorItemsCustom = new UIEditorItemsCustom2(this);
				}
				return this.mUIEditorItemsCustom;
			}
		}
		#endregion
		#region Fields
		private UIEditorItemsCustom2 mUIEditorItemsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorItemsCustom2 : DXTestControl
	{
		public UIEditorItemsCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItems";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorItems";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom8 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom8(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom8 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom8 : DXTestControl
	{
		public UIBarDockControlCustom8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar2 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar2(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		public UICustom2MenuBar2 UICustom2MenuBar
		{
			get
			{
				if ((this.mUICustom2MenuBar == null))
				{
					this.mUICustom2MenuBar = new UICustom2MenuBar2(this);
				}
				return this.mUICustom2MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar2 mUICustom1MenuBar;
		private UICustom2MenuBar2 mUICustom2MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar2 : DXMenu
	{
		public UICustom1MenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UICalcEditBarEditItem
		{
			get
			{
				if ((this.mUICalcEditBarEditItem == null))
				{
					this.mUICalcEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUICalcEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Calc Edit:";
					this.mUICalcEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUICalcEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICalcEditBarEditItem;
			}
		}
		public DXMenuEditItem UICheckEditBarEditItem
		{
			get
			{
				if ((this.mUICheckEditBarEditItem == null))
				{
					this.mUICheckEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUICheckEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Check Edit: ";
					this.mUICheckEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUICheckEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICheckEditBarEditItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUICalcEditBarEditItem;
		private DXMenuEditItem mUICheckEditBarEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom2MenuBar2 : DXMenu
	{
		public UICustom2MenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIComboBoxBarEditItem
		{
			get
			{
				if ((this.mUIComboBoxBarEditItem == null))
				{
					this.mUIComboBoxBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIComboBoxBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Combo Box:";
					this.mUIComboBoxBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIComboBoxBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIComboBoxBarEditItem;
			}
		}
		public DXMenuEditItem UIDateEditBarEditItem
		{
			get
			{
				if ((this.mUIDateEditBarEditItem == null))
				{
					this.mUIDateEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIDateEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Date Edit:";
					this.mUIDateEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIDateEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIDateEditBarEditItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIComboBoxBarEditItem;
		private DXMenuEditItem mUIDateEditBarEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow2 : WinWindow
	{
		public UIItemWindow2()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public DXWindow UIAlertFormWindow
		{
			get
			{
				if ((this.mUIAlertFormWindow == null))
				{
					this.mUIAlertFormWindow = new DXWindow(this);
					#region Search Criteria
					this.mUIAlertFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertForm";
					this.mUIAlertFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertForm";
					this.mUIAlertFormWindow.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
					#endregion
				}
				return this.mUIAlertFormWindow;
			}
		}
		public UIRibbonOneGroupControRibbon1 UIRibbonOneGroupControRibbon
		{
			get
			{
				if ((this.mUIRibbonOneGroupControRibbon == null))
				{
					this.mUIRibbonOneGroupControRibbon = new UIRibbonOneGroupControRibbon1(this);
				}
				return this.mUIRibbonOneGroupControRibbon;
			}
		}
		public UIRibbonOneGroupControRibbon11 UIRibbonOneGroupControRibbon1
		{
			get
			{
				if ((this.mUIRibbonOneGroupControRibbon1 == null))
				{
					this.mUIRibbonOneGroupControRibbon1 = new UIRibbonOneGroupControRibbon11(this);
				}
				return this.mUIRibbonOneGroupControRibbon1;
			}
		}
		#endregion
		#region Fields
		private DXWindow mUIAlertFormWindow;
		private UIRibbonOneGroupControRibbon1 mUIRibbonOneGroupControRibbon;
		private UIRibbonOneGroupControRibbon11 mUIRibbonOneGroupControRibbon1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonOneGroupControRibbon1 : DXRibbon
	{
		public UIRibbonOneGroupControRibbon1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonOneGroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonOneGroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIItemRibbonPage UIItemRibbonPage
		{
			get
			{
				if ((this.mUIItemRibbonPage == null))
				{
					this.mUIItemRibbonPage = new UIItemRibbonPage(this);
				}
				return this.mUIItemRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIItemRibbonPage mUIItemRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPage : DXRibbonPage
	{
		public UIItemRibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup2RibbonPageGroup1 UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup1(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup2RibbonPageGroup1 mUIRibbonPageGroup2RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIPasteRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonOneGroupControRibbon11 : DXRibbon
	{
		public UIRibbonOneGroupControRibbon11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonOneGroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonOneGroupControl";
			#endregion
		}
		#region Properties
		public UIItemRibbonPage1 UIItemRibbonPage
		{
			get
			{
				if ((this.mUIItemRibbonPage == null))
				{
					this.mUIItemRibbonPage = new UIItemRibbonPage1(this);
				}
				return this.mUIItemRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIItemRibbonPage1 mUIItemRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPage1 : DXRibbonPage
	{
		public UIItemRibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup2RibbonPageGroup2 UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup2(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup2RibbonPageGroup2 mUIRibbonPageGroup2RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			#endregion
		}
		#region Properties
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		public DXRibbonButtonItem UIUndoRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIUndoRibbonBaseButtonItem == null))
				{
					this.mUIUndoRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIUndoRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Undo";
					this.mUIUndoRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIUndoRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIPasteRibbonItem;
		private DXRibbonButtonItem mUIUndoRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIButtonClickWindow1 : WinWindow
	{
		public UIButtonClickWindow1()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Button Click";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Button Click");
			#endregion
		}
		#region Properties
		public UIXtraMessageBoxFormWindow3 UIXtraMessageBoxFormWindow
		{
			get
			{
				if ((this.mUIXtraMessageBoxFormWindow == null))
				{
					this.mUIXtraMessageBoxFormWindow = new UIXtraMessageBoxFormWindow3(this);
				}
				return this.mUIXtraMessageBoxFormWindow;
			}
		}
		public UIXtraMessageBoxFormWindow12 UIXtraMessageBoxFormWindow1
		{
			get
			{
				if ((this.mUIXtraMessageBoxFormWindow1 == null))
				{
					this.mUIXtraMessageBoxFormWindow1 = new UIXtraMessageBoxFormWindow12(this);
				}
				return this.mUIXtraMessageBoxFormWindow1;
			}
		}
		#endregion
		#region Fields
		private UIXtraMessageBoxFormWindow3 mUIXtraMessageBoxFormWindow;
		private UIXtraMessageBoxFormWindow12 mUIXtraMessageBoxFormWindow1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraMessageBoxFormWindow3 : DXWindow
	{
		public UIXtraMessageBoxFormWindow3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Button ClickXtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
			this.WindowTitles.Add("Button Click");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Button ClickXtraMessageBoxFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Button Click");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraMessageBoxFormWindow12 : DXWindow
	{
		public UIXtraMessageBoxFormWindow12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Button Click";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "0";
			this.WindowTitles.Add("Button Click");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Button ClickSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Button Click");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow : WinWindow
	{
		public UIXtraPrintingFeaturesWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code)";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcNavigationsClient2 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient2(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		#endregion
		#region Fields
		private UIGcNavigationsClient2 mUIGcNavigationsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient2 : DXTestControl
	{
		public UIGcNavigationsClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar1 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar1(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar1 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar1 : DXNavBar
	{
		public UINavBarControl1NavBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPrintableControlsNavBarGroup UIPrintableControlsNavBarGroup
		{
			get
			{
				if ((this.mUIPrintableControlsNavBarGroup == null))
				{
					this.mUIPrintableControlsNavBarGroup = new UIPrintableControlsNavBarGroup(this);
				}
				return this.mUIPrintableControlsNavBarGroup;
			}
		}
		public UILayoutNavBarGroup UILayoutNavBarGroup
		{
			get
			{
				if ((this.mUILayoutNavBarGroup == null))
				{
					this.mUILayoutNavBarGroup = new UILayoutNavBarGroup(this);
				}
				return this.mUILayoutNavBarGroup;
			}
		}
		public UIMiscellaneousNavBarGroup UIMiscellaneousNavBarGroup
		{
			get
			{
				if ((this.mUIMiscellaneousNavBarGroup == null))
				{
					this.mUIMiscellaneousNavBarGroup = new UIMiscellaneousNavBarGroup(this);
				}
				return this.mUIMiscellaneousNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIPrintableControlsNavBarGroup mUIPrintableControlsNavBarGroup;
		private UILayoutNavBarGroup mUILayoutNavBarGroup;
		private UIMiscellaneousNavBarGroup mUIMiscellaneousNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintableControlsNavBarGroup : DXTestControl
	{
		public UIPrintableControlsNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Printable Controls";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIDataGridNavBarLink
		{
			get
			{
				if ((this.mUIDataGridNavBarLink == null))
				{
					this.mUIDataGridNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIDataGridNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "DataGrid";
					this.mUIDataGridNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIDataGridNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDataGridNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIDataGridNavBarLink;
			}
		}
		public DXTestControl UIListViewNavBarLink
		{
			get
			{
				if ((this.mUIListViewNavBarLink == null))
				{
					this.mUIListViewNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIListViewNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "ListView";
					this.mUIListViewNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIListViewNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIListViewNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIListViewNavBarLink;
			}
		}
		public DXTestControl UIRichTextBoxNavBarLink
		{
			get
			{
				if ((this.mUIRichTextBoxNavBarLink == null))
				{
					this.mUIRichTextBoxNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIRichTextBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "RichTextBox";
					this.mUIRichTextBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIRichTextBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRichTextBoxNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIRichTextBoxNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDataGridNavBarLink;
		private DXTestControl mUIListViewNavBarLink;
		private DXTestControl mUIRichTextBoxNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutNavBarGroup : DXTestControl
	{
		public UILayoutNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Layout";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UILabelsNavBarLink
		{
			get
			{
				if ((this.mUILabelsNavBarLink == null))
				{
					this.mUILabelsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUILabelsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Labels";
					this.mUILabelsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUILabelsNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILabelsNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUILabelsNavBarLink;
			}
		}
		public DXTestControl UITableNavBarLink
		{
			get
			{
				if ((this.mUITableNavBarLink == null))
				{
					this.mUITableNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUITableNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Table";
					this.mUITableNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUITableNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITableNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUITableNavBarLink;
			}
		}
		public DXTestControl UIGroupsNavBarLink
		{
			get
			{
				if ((this.mUIGroupsNavBarLink == null))
				{
					this.mUIGroupsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIGroupsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Groups";
					this.mUIGroupsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIGroupsNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIGroupsNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIGroupsNavBarLink;
			}
		}
		public DXTestControl UISummariesNavBarLink
		{
			get
			{
				if ((this.mUISummariesNavBarLink == null))
				{
					this.mUISummariesNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISummariesNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Summaries";
					this.mUISummariesNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISummariesNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISummariesNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUISummariesNavBarLink;
			}
		}
		public DXTestControl UIMasterDetailNavBarLink
		{
			get
			{
				if ((this.mUIMasterDetailNavBarLink == null))
				{
					this.mUIMasterDetailNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMasterDetailNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Master-Detail";
					this.mUIMasterDetailNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMasterDetailNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMasterDetailNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIMasterDetailNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUILabelsNavBarLink;
		private DXTestControl mUITableNavBarLink;
		private DXTestControl mUIGroupsNavBarLink;
		private DXTestControl mUISummariesNavBarLink;
		private DXTestControl mUIMasterDetailNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMiscellaneousNavBarGroup : DXTestControl
	{
		public UIMiscellaneousNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Miscellaneous";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UICalendarNavBarLink
		{
			get
			{
				if ((this.mUICalendarNavBarLink == null))
				{
					this.mUICalendarNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICalendarNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Calendar";
					this.mUICalendarNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICalendarNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICalendarNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUICalendarNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICalendarNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow1 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow1()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - DataGrid";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client54 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client54(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIItemWindow3 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow3(this);
				}
				return this.mUIItemWindow;
			}
		}
		public UIGcNavigationsClient3 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient3(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		public UIPanelControl1Client116 UIPanelControl1Client1
		{
			get
			{
				if ((this.mUIPanelControl1Client1 == null))
				{
					this.mUIPanelControl1Client1 = new UIPanelControl1Client116(this);
				}
				return this.mUIPanelControl1Client1;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client54 mUIPanelControl1Client;
		private UIItemWindow3 mUIItemWindow;
		private UIGcNavigationsClient3 mUIGcNavigationsClient;
		private UIPanelControl1Client116 mUIPanelControl1Client1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client54 : DXTestControl
	{
		public UIPanelControl1Client54(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIGcContainerClient36 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient36(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient36 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient36 : DXTestControl
	{
		public UIGcContainerClient36(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom : DXTestControl
	{
		public UIPreviewControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client55 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client55(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client55 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client55 : DXTestControl
	{
		public UIPanelControl1Client55(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom9 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom9(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIDocumentViewerPrintViewControl UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		public DXScrollBar UIHScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIHScrollBarScrollBarControl == null))
				{
					this.mUIHScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIHScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "hScrollBar";
					this.mUIHScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HScrollBar";
					this.mUIHScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIHScrollBarScrollBarControl.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHScrollBarScrollBarControl;
			}
		}
		public DXScrollBar UIVScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVScrollBarScrollBarControl == null))
				{
					this.mUIVScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "vScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIVScrollBarScrollBarControl.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIVScrollBarScrollBarControl;
			}
		}
		public UIBarDockControlCustom13 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom13(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		public UIBarDockControlCustom23 UIBarDockControlCustom2
		{
			get
			{
				if ((this.mUIBarDockControlCustom2 == null))
				{
					this.mUIBarDockControlCustom2 = new UIBarDockControlCustom23(this);
				}
				return this.mUIBarDockControlCustom2;
			}
		}
		public UIBarDockControlCustom32 UIBarDockControlCustom3
		{
			get
			{
				if ((this.mUIBarDockControlCustom3 == null))
				{
					this.mUIBarDockControlCustom3 = new UIBarDockControlCustom32(this);
				}
				return this.mUIBarDockControlCustom3;
			}
		}
		public UIBarDockControlCustom42 UIBarDockControlCustom4
		{
			get
			{
				if ((this.mUIBarDockControlCustom4 == null))
				{
					this.mUIBarDockControlCustom4 = new UIBarDockControlCustom42(this);
				}
				return this.mUIBarDockControlCustom4;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom9 mUIBarDockControlCustom;
		private UIDocumentViewerPrintViewControl mUIDocumentViewerPrintViewControl;
		private DXScrollBar mUIHScrollBarScrollBarControl;
		private DXScrollBar mUIVScrollBarScrollBarControl;
		private UIBarDockControlCustom13 mUIBarDockControlCustom1;
		private UIBarDockControlCustom23 mUIBarDockControlCustom2;
		private UIBarDockControlCustom32 mUIBarDockControlCustom3;
		private UIBarDockControlCustom42 mUIBarDockControlCustom4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom9 : DXTestControl
	{
		public UIBarDockControlCustom9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar1 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar1(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar1 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar1 : DXMenu
	{
		public UIToolbarMenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuItem UISearchBarItem
		{
			get
			{
				if ((this.mUISearchBarItem == null))
				{
					this.mUISearchBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUISearchBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Search";
					this.mUISearchBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUISearchBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISearchBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUISearchBarItem;
			}
		}
		public DXMenuItem UIHeaderAndFooterBarItem
		{
			get
			{
				if ((this.mUIHeaderAndFooterBarItem == null))
				{
					this.mUIHeaderAndFooterBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIHeaderAndFooterBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Header And Footer";
					this.mUIHeaderAndFooterBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIHeaderAndFooterBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIHeaderAndFooterBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHeaderAndFooterBarItem;
			}
		}
		public UIScaleBarItem UIScaleBarItem
		{
			get
			{
				if ((this.mUIScaleBarItem == null))
				{
					this.mUIScaleBarItem = new UIScaleBarItem(this);
				}
				return this.mUIScaleBarItem;
			}
		}
		public DXMenuItem UIZoomInBarItem
		{
			get
			{
				if ((this.mUIZoomInBarItem == null))
				{
					this.mUIZoomInBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIZoomInBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Zoom In";
					this.mUIZoomInBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIZoomInBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIZoomInBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomInBarItem;
			}
		}
		public DXMenuEditItem UIZoomBarEditItem
		{
			get
			{
				if ((this.mUIZoomBarEditItem == null))
				{
					this.mUIZoomBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIZoomBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Zoom";
					this.mUIZoomBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIZoomBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIZoomBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomBarEditItem;
			}
		}
		public DXComboBox UIZoomComboBox
		{
			get
			{
				if ((this.mUIZoomComboBox == null))
				{
					this.mUIZoomComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIZoomComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Zoom";
					this.mUIZoomComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIZoomComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIZoomComboBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomComboBox;
			}
		}
		public DXMenuItem UIZoomOutBarItem
		{
			get
			{
				if ((this.mUIZoomOutBarItem == null))
				{
					this.mUIZoomOutBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIZoomOutBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Zoom Out";
					this.mUIZoomOutBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIZoomOutBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIZoomOutBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomOutBarItem;
			}
		}
		public DXMenuItem UIMagnifierBarItem
		{
			get
			{
				if ((this.mUIMagnifierBarItem == null))
				{
					this.mUIMagnifierBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIMagnifierBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Magnifier";
					this.mUIMagnifierBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIMagnifierBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMagnifierBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIMagnifierBarItem;
			}
		}
		public UIMultiplePagesBarItem1 UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem1(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		public DXMenuItem UIPageSetupBarItem
		{
			get
			{
				if ((this.mUIPageSetupBarItem == null))
				{
					this.mUIPageSetupBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPageSetupBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page Set&up...";
					this.mUIPageSetupBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPageSetupBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPageSetupBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPageSetupBarItem;
			}
		}
		public DXMenuItem UIHandToolBarItem
		{
			get
			{
				if ((this.mUIHandToolBarItem == null))
				{
					this.mUIHandToolBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIHandToolBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Hand Tool";
					this.mUIHandToolBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIHandToolBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIHandToolBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHandToolBarItem;
			}
		}
		public DXMenuItem UIWatermarkBarItem
		{
			get
			{
				if ((this.mUIWatermarkBarItem == null))
				{
					this.mUIWatermarkBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIWatermarkBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Watermark...";
					this.mUIWatermarkBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIWatermarkBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIWatermarkBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIWatermarkBarItem;
			}
		}
		public UIExportDocumentBarItem UIExportDocumentBarItem
		{
			get
			{
				if ((this.mUIExportDocumentBarItem == null))
				{
					this.mUIExportDocumentBarItem = new UIExportDocumentBarItem(this);
				}
				return this.mUIExportDocumentBarItem;
			}
		}
		public DXMenuItem UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarCustomizationItemBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		public UIBarCustomizationItemBarItem11 UIBarCustomizationItemBarItem1
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem1 == null))
				{
					this.mUIBarCustomizationItemBarItem1 = new UIBarCustomizationItemBarItem11(this);
				}
				return this.mUIBarCustomizationItemBarItem1;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUISearchBarItem;
		private DXMenuItem mUIHeaderAndFooterBarItem;
		private UIScaleBarItem mUIScaleBarItem;
		private DXMenuItem mUIZoomInBarItem;
		private DXMenuEditItem mUIZoomBarEditItem;
		private DXComboBox mUIZoomComboBox;
		private DXMenuItem mUIZoomOutBarItem;
		private DXMenuItem mUIMagnifierBarItem;
		private UIMultiplePagesBarItem1 mUIMultiplePagesBarItem;
		private DXMenuItem mUIPageSetupBarItem;
		private DXMenuItem mUIHandToolBarItem;
		private DXMenuItem mUIWatermarkBarItem;
		private UIExportDocumentBarItem mUIExportDocumentBarItem;
		private DXMenuItem mUIBarCustomizationItemBarItem;
		private UIBarCustomizationItemBarItem11 mUIBarCustomizationItemBarItem1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIScaleBarItem : DXMenuItem
	{
		public UIScaleBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Scale";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UICustomPopupBarControMenu5 UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu5(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControMenu5 mUICustomPopupBarControMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu5 : DXMenu
	{
		public UICustomPopupBarControMenu5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UICustomPopupBarControClient UICustomPopupBarControClient
		{
			get
			{
				if ((this.mUICustomPopupBarControClient == null))
				{
					this.mUICustomPopupBarControClient = new UICustomPopupBarControClient(this);
				}
				return this.mUICustomPopupBarControClient;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControClient mUICustomPopupBarControClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControClient : DXTestControl
	{
		public UICustomPopupBarControClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControlScaleControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ScaleControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIGroupControlClient3 UIGroupControlClient
		{
			get
			{
				if ((this.mUIGroupControlClient == null))
				{
					this.mUIGroupControlClient = new UIGroupControlClient3(this);
				}
				return this.mUIGroupControlClient;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControlScaleControlContainer[0]SimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIGroupControlClient3 mUIGroupControlClient;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControlClient3 : DXTestControl
	{
		public UIGroupControlClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControlScaleControlContainer[0]GroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControlScaleControlContainer[0]GroupControl[0]SpinEdit[0]";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISpinEditEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXCheckBox UIFittoCheckBox
		{
			get
			{
				if ((this.mUIFittoCheckBox == null))
				{
					this.mUIFittoCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIFittoCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControlScaleControlContainer[0]GroupControl[0]CheckEdit[1]";
					this.mUIFittoCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIFittoCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFittoCheckBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIFittoCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		private DXCheckBox mUIFittoCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem1 : DXMenuItem
	{
		public UIMultiplePagesBarItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UICustomPopupBarControMenu6 UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu6(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControMenu6 mUICustomPopupBarControMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu6 : DXMenu
	{
		public UICustomPopupBarControMenu6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXTestControl UICustomPopupBarControClient
		{
			get
			{
				if ((this.mUICustomPopupBarControClient == null))
				{
					this.mUICustomPopupBarControClient = new DXTestControl(this);
					#region Search Criteria
					this.mUICustomPopupBarControClient.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControlMultiplePagesControlContainer[0]";
					this.mUICustomPopupBarControClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultiplePagesControlContainer";
					this.mUICustomPopupBarControClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICustomPopupBarControClient.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUICustomPopupBarControClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICustomPopupBarControClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportDocumentBarItem : DXMenuItem
	{
		public UIExportDocumentBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Export Document...";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIHTMLFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIHTMLFileMenuBaseButtonItem == null))
				{
					this.mUIHTMLFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIHTMLFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "HTML File";
					this.mUIHTMLFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIHTMLFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIHTMLFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHTMLFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIRTFFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIRTFFileMenuBaseButtonItem == null))
				{
					this.mUIRTFFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIRTFFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF File";
					this.mUIRTFFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIRTFFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRTFFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIRTFFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIXLSFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIXLSFileMenuBaseButtonItem == null))
				{
					this.mUIXLSFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIXLSFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLS File";
					this.mUIXLSFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIXLSFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXLSFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIXLSFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UICSVFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICSVFileMenuBaseButtonItem == null))
				{
					this.mUICSVFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICSVFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "CSV File";
					this.mUICSVFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUICSVFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICSVFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUICSVFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIImageFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIImageFileMenuBaseButtonItem == null))
				{
					this.mUIImageFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIImageFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Image File";
					this.mUIImageFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIImageFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIImageFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIImageFileMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIHTMLFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIRTFFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIXLSFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUICSVFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIImageFileMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarCustomizationItemBarItem11 : DXMenuItem
	{
		public UIBarCustomizationItemBarItem11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPreviewFormMenuItem
		{
			get
			{
				if ((this.mUIPreviewFormMenuItem == null))
				{
					this.mUIPreviewFormMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPreviewFormMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Preview Form";
					this.mUIPreviewFormMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIPreviewFormMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPreviewFormMenuItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPreviewFormMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPreviewFormMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl : DXPrinting
	{
		public UIDocumentViewerPrintViewControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices034PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices034PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices034PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices034PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[34]";
					this.mUIPage0BrickIndices034PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices034PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices034PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices034PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices100PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices100PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices100PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices100PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [1].[0].[0]";
					this.mUIPage0BrickIndices100PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices100PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices100PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices100PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices110PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices110PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices110PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices110PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [1].[1].[0]";
					this.mUIPage0BrickIndices110PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices110PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices110PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices110PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices120PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices120PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices120PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices120PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [1].[2].[0]";
					this.mUIPage0BrickIndices120PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices120PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices120PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices120PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices121PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices121PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices121PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices121PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [1].[2].[1]";
					this.mUIPage0BrickIndices121PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices121PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices121PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices121PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices033PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices033PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices033PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices033PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[33]";
					this.mUIPage0BrickIndices033PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices033PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices033PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices033PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices06PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices06PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices06PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices06PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[6]";
					this.mUIPage0BrickIndices06PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices06PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices06PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices06PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices00PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices00PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices00PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0]";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices00PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices00PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices05PrintControlBrick
		{
			get
			{
				if ((this.mUIPage2BrickIndices05PrintControlBrick == null))
				{
					this.mUIPage2BrickIndices05PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[5]";
					this.mUIPage2BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices05PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage2BrickIndices05PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage45BrickIndices05PrintControlBrick
		{
			get
			{
				if ((this.mUIPage45BrickIndices05PrintControlBrick == null))
				{
					this.mUIPage45BrickIndices05PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage45BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [45].BrickIndices [0].[5]";
					this.mUIPage45BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage45BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage45BrickIndices05PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage45BrickIndices05PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices01PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices01PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices01PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices01PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[1]";
					this.mUIPage0BrickIndices01PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices01PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices01PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices01PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices03PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices03PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices03PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[3]";
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices03PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices03PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage5BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage5BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage5BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage5BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [5].BrickIndices [0].[107]";
					this.mUIPage5BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage5BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage5BrickIndices010PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage5BrickIndices010PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices097PrintControlBrick
		{
			get
			{
				if ((this.mUIPage2BrickIndices097PrintControlBrick == null))
				{
					this.mUIPage2BrickIndices097PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices097PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[0].[0]";
					this.mUIPage2BrickIndices097PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices097PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices097PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage2BrickIndices097PrintControlBrick;
			}
		}
		public DXTestControl UIPrintingMarginRightPrintingMargin
		{
			get
			{
				if ((this.mUIPrintingMarginRightPrintingMargin == null))
				{
					this.mUIPrintingMarginRightPrintingMargin = new DXTestControl(this);
					#region Search Criteria
					this.mUIPrintingMarginRightPrintingMargin.SearchProperties[DXTestControl.PropertyNames.Name] = "PrintingMarginRight";
					this.mUIPrintingMarginRightPrintingMargin.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintingMargin";
					this.mUIPrintingMarginRightPrintingMargin.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPrintingMarginRightPrintingMargin.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPrintingMarginRightPrintingMargin;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices024PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices024PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices024PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices024PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[24]";
					this.mUIPage0BrickIndices024PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices024PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices024PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices024PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices08PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices08PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices08PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices08PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[8]";
					this.mUIPage0BrickIndices08PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices08PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices08PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices08PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices034PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices100PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices110PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices120PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices121PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices033PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices06PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices00PrintControlBrick;
		private DXPrintingBrick mUIPage2BrickIndices05PrintControlBrick;
		private DXPrintingBrick mUIPage45BrickIndices05PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices01PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices03PrintControlBrick;
		private DXPrintingBrick mUIPage5BrickIndices010PrintControlBrick;
		private DXPrintingBrick mUIPage2BrickIndices097PrintControlBrick;
		private DXTestControl mUIPrintingMarginRightPrintingMargin;
		private DXPrintingBrick mUIPage0BrickIndices024PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices08PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom13 : DXTestControl
	{
		public UIBarDockControlCustom13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIStatusBarMenuBar UIStatusBarMenuBar
		{
			get
			{
				if ((this.mUIStatusBarMenuBar == null))
				{
					this.mUIStatusBarMenuBar = new UIStatusBarMenuBar(this);
				}
				return this.mUIStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIStatusBarMenuBar mUIStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStatusBarMenuBar : DXMenu
	{
		public UIStatusBarMenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Status Bar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPage1of1BarItem
		{
			get
			{
				if ((this.mUIPage1of1BarItem == null))
				{
					this.mUIPage1of1BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 1 of 1";
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1of1BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage1of1BarItem;
			}
		}
		public DXMenuItem UIPage3of46BarItem
		{
			get
			{
				if ((this.mUIPage3of46BarItem == null))
				{
					this.mUIPage3of46BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage3of46BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 3 of 46";
					this.mUIPage3of46BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage3of46BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage3of46BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage3of46BarItem;
			}
		}
		public DXMenuItem UIPage46of46BarItem
		{
			get
			{
				if ((this.mUIPage46of46BarItem == null))
				{
					this.mUIPage46of46BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage46of46BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 46 of 46";
					this.mUIPage46of46BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage46of46BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage46of46BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage46of46BarItem;
			}
		}
		public DXMenuItem UIPage1of46BarItem
		{
			get
			{
				if ((this.mUIPage1of46BarItem == null))
				{
					this.mUIPage1of46BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of46BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 1 of 46";
					this.mUIPage1of46BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of46BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1of46BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage1of46BarItem;
			}
		}
		public DXMenuEditItem UIBarEditItemLink0BarEditItem
		{
			get
			{
				if ((this.mUIBarEditItemLink0BarEditItem == null))
				{
					this.mUIBarEditItemLink0BarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarEditItemLink0BarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIBarEditItemLink0BarEditItem;
			}
		}
		public DXMenuItem UIPage1of4BarItem
		{
			get
			{
				if ((this.mUIPage1of4BarItem == null))
				{
					this.mUIPage1of4BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of4BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 1 of 4";
					this.mUIPage1of4BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of4BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1of4BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage1of4BarItem;
			}
		}
		public DXMenuItem UIPage1of6BarItem
		{
			get
			{
				if ((this.mUIPage1of6BarItem == null))
				{
					this.mUIPage1of6BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of6BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 1 of 6";
					this.mUIPage1of6BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of6BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1of6BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage1of6BarItem;
			}
		}
		public UIBarEditItemLink0TrackBar UIBarEditItemLink0TrackBar
		{
			get
			{
				if ((this.mUIBarEditItemLink0TrackBar == null))
				{
					this.mUIBarEditItemLink0TrackBar = new UIBarEditItemLink0TrackBar(this);
				}
				return this.mUIBarEditItemLink0TrackBar;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPage1of1BarItem;
		private DXMenuItem mUIPage3of46BarItem;
		private DXMenuItem mUIPage46of46BarItem;
		private DXMenuItem mUIPage1of46BarItem;
		private DXMenuEditItem mUIBarEditItemLink0BarEditItem;
		private DXMenuItem mUIPage1of4BarItem;
		private DXMenuItem mUIPage1of6BarItem;
		private UIBarEditItemLink0TrackBar mUIBarEditItemLink0TrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarEditItemLink0TrackBar : DXTrackBar
	{
		public UIBarEditItemLink0TrackBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ZoomTrackBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButtonButton
		{
			get
			{
				if ((this.mUIEditorButtonButton == null))
				{
					this.mUIEditorButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]ZoomIn";
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditorButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIEditorButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom23 : DXTestControl
	{
		public UIBarDockControlCustom23(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar3 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar3(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar3 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar3 : DXMenu
	{
		public UICustom1MenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UITableBarEditItem
		{
			get
			{
				if ((this.mUITableBarEditItem == null))
				{
					this.mUITableBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUITableBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Table:";
					this.mUITableBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUITableBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITableBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUITableBarEditItem;
			}
		}
		public DXMenuItem UIRefreshPreviewBarItem
		{
			get
			{
				if ((this.mUIRefreshPreviewBarItem == null))
				{
					this.mUIRefreshPreviewBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Refresh Preview";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRefreshPreviewBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIRefreshPreviewBarItem;
			}
		}
		public DXComboBox UITableComboBox
		{
			get
			{
				if ((this.mUITableComboBox == null))
				{
					this.mUITableComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUITableComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Table:";
					this.mUITableComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUITableComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITableComboBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUITableComboBox;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUITableBarEditItem;
		private DXMenuItem mUIRefreshPreviewBarItem;
		private DXComboBox mUITableComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom32 : DXTestControl
	{
		public UIBarDockControlCustom32(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar4 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar4(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar4 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar4 : DXMenu
	{
		public UICustom1MenuBar4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXComboBox UITableComboBox
		{
			get
			{
				if ((this.mUITableComboBox == null))
				{
					this.mUITableComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUITableComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Table:";
					this.mUITableComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUITableComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITableComboBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUITableComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUITableComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom42 : DXTestControl
	{
		public UIBarDockControlCustom42(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenu UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new DXMenu(this);
					#region Search Criteria
					this.mUICustom1MenuBar.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
					this.mUICustom1MenuBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
					this.mUICustom1MenuBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICustom1MenuBar.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow3 : WinWindow
	{
		public UIItemWindow3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIDataGridClient UIDataGridClient
		{
			get
			{
				if ((this.mUIDataGridClient == null))
				{
					this.mUIDataGridClient = new UIDataGridClient(this);
				}
				return this.mUIDataGridClient;
			}
		}
		#endregion
		#region Fields
		private UIDataGridClient mUIDataGridClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDataGridClient : WinClient
	{
		public UIDataGridClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIItemWindow4 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow4(this);
				}
				return this.mUIItemWindow;
			}
		}
		#endregion
		#region Fields
		private UIItemWindow4 mUIItemWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow4 : WinWindow
	{
		public UIItemWindow4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DataGrid";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public WinTable UIDataGridTable
		{
			get
			{
				if ((this.mUIDataGridTable == null))
				{
					this.mUIDataGridTable = new WinTable(this);
					#region Search Criteria
					this.mUIDataGridTable.SearchProperties[WinTable.PropertyNames.Name] = "DataGrid";
					this.mUIDataGridTable.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIDataGridTable;
			}
		}
		#endregion
		#region Fields
		private WinTable mUIDataGridTable;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient3 : DXTestControl
	{
		public UIGcNavigationsClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar2 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar2(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar2 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar2 : DXNavBar
	{
		public UINavBarControl1NavBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPrintableControlsNavBarGroup1 UIPrintableControlsNavBarGroup
		{
			get
			{
				if ((this.mUIPrintableControlsNavBarGroup == null))
				{
					this.mUIPrintableControlsNavBarGroup = new UIPrintableControlsNavBarGroup1(this);
				}
				return this.mUIPrintableControlsNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIPrintableControlsNavBarGroup1 mUIPrintableControlsNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintableControlsNavBarGroup1 : DXTestControl
	{
		public UIPrintableControlsNavBarGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Printable Controls";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXTestControl UIRichTextBoxNavBarLink
		{
			get
			{
				if ((this.mUIRichTextBoxNavBarLink == null))
				{
					this.mUIRichTextBoxNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIRichTextBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "RichTextBox";
					this.mUIRichTextBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIRichTextBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRichTextBoxNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIRichTextBoxNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIRichTextBoxNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client116 : DXTestControl
	{
		public UIPanelControl1Client116(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIGcContainerClient37 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient37(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient37 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient37 : DXTestControl
	{
		public UIGcContainerClient37(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom1 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom1(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom1 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom1 : DXTestControl
	{
		public UIPreviewControlCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client56 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client56(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client56 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client56 : DXTestControl
	{
		public UIPanelControl1Client56(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom10 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom10(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIBarDockControlCustom14 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom14(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		public UIBarDockControlCustom24 UIBarDockControlCustom2
		{
			get
			{
				if ((this.mUIBarDockControlCustom2 == null))
				{
					this.mUIBarDockControlCustom2 = new UIBarDockControlCustom24(this);
				}
				return this.mUIBarDockControlCustom2;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom10 mUIBarDockControlCustom;
		private UIBarDockControlCustom14 mUIBarDockControlCustom1;
		private UIBarDockControlCustom24 mUIBarDockControlCustom2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom10 : DXTestControl
	{
		public UIBarDockControlCustom10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIStatusBarMenuBar1 UIStatusBarMenuBar
		{
			get
			{
				if ((this.mUIStatusBarMenuBar == null))
				{
					this.mUIStatusBarMenuBar = new UIStatusBarMenuBar1(this);
				}
				return this.mUIStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIStatusBarMenuBar1 mUIStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStatusBarMenuBar1 : DXMenu
	{
		public UIStatusBarMenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Status Bar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIBarEditItemLink0BarEditItem
		{
			get
			{
				if ((this.mUIBarEditItemLink0BarEditItem == null))
				{
					this.mUIBarEditItemLink0BarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIBarEditItemLink0BarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIBarEditItemLink0BarEditItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIBarEditItemLink0BarEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom14 : DXTestControl
	{
		public UIBarDockControlCustom14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar2 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar2(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar2 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar2 : DXMenu
	{
		public UIToolbarMenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIMultiplePagesBarBaseButtonItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarBaseButtonItem == null))
				{
					this.mUIMultiplePagesBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIMultiplePagesBarBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIMultiplePagesBarBaseButtonItem;
			}
		}
		public UIMultiplePagesBarItem2 UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem2(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		public DXMenuBaseButtonItem UIScaleBarBaseButtonItem
		{
			get
			{
				if ((this.mUIScaleBarBaseButtonItem == null))
				{
					this.mUIScaleBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIScaleBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Scale";
					this.mUIScaleBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIScaleBarBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIScaleBarBaseButtonItem;
			}
		}
		public UIScaleBarItem1 UIScaleBarItem
		{
			get
			{
				if ((this.mUIScaleBarItem == null))
				{
					this.mUIScaleBarItem = new UIScaleBarItem1(this);
				}
				return this.mUIScaleBarItem;
			}
		}
		public UIScaleBarItem11 UIScaleBarItem1
		{
			get
			{
				if ((this.mUIScaleBarItem1 == null))
				{
					this.mUIScaleBarItem1 = new UIScaleBarItem11(this);
				}
				return this.mUIScaleBarItem1;
			}
		}
		public DXMenuBaseButtonItem UIHeaderAndFooterBarBaseButtonItem
		{
			get
			{
				if ((this.mUIHeaderAndFooterBarBaseButtonItem == null))
				{
					this.mUIHeaderAndFooterBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIHeaderAndFooterBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Header And Footer";
					this.mUIHeaderAndFooterBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIHeaderAndFooterBarBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHeaderAndFooterBarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIMultiplePagesBarBaseButtonItem;
		private UIMultiplePagesBarItem2 mUIMultiplePagesBarItem;
		private DXMenuBaseButtonItem mUIScaleBarBaseButtonItem;
		private UIScaleBarItem1 mUIScaleBarItem;
		private UIScaleBarItem11 mUIScaleBarItem1;
		private DXMenuBaseButtonItem mUIHeaderAndFooterBarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem2 : DXMenuItem
	{
		public UIMultiplePagesBarItem2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIScaleBarItem1 : DXMenuItem
	{
		public UIScaleBarItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Scale";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIScaleBarItem11 : DXMenuItem
	{
		public UIScaleBarItem11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Scale";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom24 : DXTestControl
	{
		public UIBarDockControlCustom24(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar3 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar3(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar3 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar3 : DXMenu
	{
		public UIToolbarMenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIMultiplePagesBarItem3 UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem3(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		#endregion
		#region Fields
		private UIMultiplePagesBarItem3 mUIMultiplePagesBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem3 : DXMenuItem
	{
		public UIMultiplePagesBarItem3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindWindow : WinWindow
	{
		public UIFindWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Find";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Find");
			#endregion
		}
		#region Properties
		public DXComboBox UICmbFindComboBox
		{
			get
			{
				if ((this.mUICmbFindComboBox == null))
				{
					this.mUICmbFindComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICmbFindComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cmbFind";
					this.mUICmbFindComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICmbFindComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICmbFindComboBox.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUICmbFindComboBox;
			}
		}
		public DXCheckBox UIChbWholeWordCheckBox
		{
			get
			{
				if ((this.mUIChbWholeWordCheckBox == null))
				{
					this.mUIChbWholeWordCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbWholeWordCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbWholeWord";
					this.mUIChbWholeWordCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbWholeWordCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChbWholeWordCheckBox.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUIChbWholeWordCheckBox;
			}
		}
		public DXButton UIBtnFindButton
		{
			get
			{
				if ((this.mUIBtnFindButton == null))
				{
					this.mUIBtnFindButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnFindButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnFind";
					this.mUIBtnFindButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnFindButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnFindButton.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUIBtnFindButton;
			}
		}
		public DXButton UIBtnCloseButton
		{
			get
			{
				if ((this.mUIBtnCloseButton == null))
				{
					this.mUIBtnCloseButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnCloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
					this.mUIBtnCloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnCloseButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnCloseButton.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUIBtnCloseButton;
			}
		}
		public DXCheckBox UIPropertyReadingErrorCheckBox
		{
			get
			{
				if ((this.mUIPropertyReadingErrorCheckBox == null))
				{
					this.mUIPropertyReadingErrorCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIPropertyReadingErrorCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbMatchCase";
					this.mUIPropertyReadingErrorCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIPropertyReadingErrorCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPropertyReadingErrorCheckBox.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUIPropertyReadingErrorCheckBox;
			}
		}
		public DXCheckBox UIPropertyReadingErrorCheckBox1
		{
			get
			{
				if ((this.mUIPropertyReadingErrorCheckBox1 == null))
				{
					this.mUIPropertyReadingErrorCheckBox1 = new DXCheckBox(this);
					#region Search Criteria
					this.mUIPropertyReadingErrorCheckBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "chbSearchUp";
					this.mUIPropertyReadingErrorCheckBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIPropertyReadingErrorCheckBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPropertyReadingErrorCheckBox1.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUIPropertyReadingErrorCheckBox1;
			}
		}
		public UIFindTitleBar UIFindTitleBar
		{
			get
			{
				if ((this.mUIFindTitleBar == null))
				{
					this.mUIFindTitleBar = new UIFindTitleBar(this);
				}
				return this.mUIFindTitleBar;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICmbFindComboBox;
		private DXCheckBox mUIChbWholeWordCheckBox;
		private DXButton mUIBtnFindButton;
		private DXButton mUIBtnCloseButton;
		private DXCheckBox mUIPropertyReadingErrorCheckBox;
		private DXCheckBox mUIPropertyReadingErrorCheckBox1;
		private UIFindTitleBar mUIFindTitleBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindTitleBar : WinTitleBar
	{
		public UIFindTitleBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Find");
			#endregion
		}
		#region Properties
		public WinButton UICloseButton
		{
			get
			{
				if ((this.mUICloseButton == null))
				{
					this.mUICloseButton = new WinButton(this);
					#region Search Criteria
					this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
					this.mUICloseButton.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUICloseButton;
			}
		}
		#endregion
		#region Fields
		private WinButton mUICloseButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIHeaderandFooterWindow : WinWindow
	{
		public UIHeaderandFooterWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Header and Footer";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom15 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom15(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public DXTextEdit UITbHead2Edit
		{
			get
			{
				if ((this.mUITbHead2Edit == null))
				{
					this.mUITbHead2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead2";
					this.mUITbHead2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead2Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITbHead2Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead2Edit;
			}
		}
		public DXTextEdit UITbHead3Edit
		{
			get
			{
				if ((this.mUITbHead3Edit == null))
				{
					this.mUITbHead3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead3";
					this.mUITbHead3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead3Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITbHead3Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead3Edit;
			}
		}
		public DXTextEdit UITbHead1Edit
		{
			get
			{
				if ((this.mUITbHead1Edit == null))
				{
					this.mUITbHead1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead1";
					this.mUITbHead1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITbHead1Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead1Edit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXCheckBox UIFooterCheckEditCheckBox
		{
			get
			{
				if ((this.mUIFooterCheckEditCheckBox == null))
				{
					this.mUIFooterCheckEditCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIFooterCheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "footerCheckEdit";
					this.mUIFooterCheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIFooterCheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFooterCheckEditCheckBox.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIFooterCheckEditCheckBox;
			}
		}
		public DXTextEdit UITbFoot2Edit
		{
			get
			{
				if ((this.mUITbFoot2Edit == null))
				{
					this.mUITbFoot2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot2";
					this.mUITbFoot2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot2Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITbFoot2Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot2Edit;
			}
		}
		public DXTextEdit UITbFoot3Edit
		{
			get
			{
				if ((this.mUITbFoot3Edit == null))
				{
					this.mUITbFoot3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot3";
					this.mUITbFoot3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot3Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITbFoot3Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot3Edit;
			}
		}
		public DXTextEdit UITbFoot1Edit
		{
			get
			{
				if ((this.mUITbFoot1Edit == null))
				{
					this.mUITbFoot1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot1";
					this.mUITbFoot1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITbFoot1Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot1Edit;
			}
		}
		public DXTextEdit UITbHead2Edit1
		{
			get
			{
				if ((this.mUITbHead2Edit1 == null))
				{
					this.mUITbHead2Edit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead2Edit1.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead2";
					this.mUITbHead2Edit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead2Edit1.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead2Edit1;
			}
		}
		public DXTextEdit UITbHead3Edit1
		{
			get
			{
				if ((this.mUITbHead3Edit1 == null))
				{
					this.mUITbHead3Edit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead3Edit1.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead3";
					this.mUITbHead3Edit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead3Edit1.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead3Edit1;
			}
		}
		public DXTextEdit UITbHead3Edit2
		{
			get
			{
				if ((this.mUITbHead3Edit2 == null))
				{
					this.mUITbHead3Edit2 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead3Edit2.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead3";
					this.mUITbHead3Edit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead3Edit2.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead3Edit2;
			}
		}
		public DXTextEdit UITbHead1Edit1
		{
			get
			{
				if ((this.mUITbHead1Edit1 == null))
				{
					this.mUITbHead1Edit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead1Edit1.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead1";
					this.mUITbHead1Edit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead1Edit1.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead1Edit1;
			}
		}
		public DXCheckBox UIFooterCheckEditCheckBox1
		{
			get
			{
				if ((this.mUIFooterCheckEditCheckBox1 == null))
				{
					this.mUIFooterCheckEditCheckBox1 = new DXCheckBox(this);
					#region Search Criteria
					this.mUIFooterCheckEditCheckBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "footerCheckEdit";
					this.mUIFooterCheckEditCheckBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIFooterCheckEditCheckBox1.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIFooterCheckEditCheckBox1;
			}
		}
		public DXTextEdit UITbFoot2Edit1
		{
			get
			{
				if ((this.mUITbFoot2Edit1 == null))
				{
					this.mUITbFoot2Edit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot2Edit1.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot2";
					this.mUITbFoot2Edit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot2Edit1.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot2Edit1;
			}
		}
		public DXTextEdit UITbFoot3Edit1
		{
			get
			{
				if ((this.mUITbFoot3Edit1 == null))
				{
					this.mUITbFoot3Edit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot3Edit1.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot3";
					this.mUITbFoot3Edit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot3Edit1.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot3Edit1;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom15 mUIBarDockControlCustom;
		private DXTextEdit mUITbHead2Edit;
		private DXTextEdit mUITbHead3Edit;
		private DXTextEdit mUITbHead1Edit;
		private DXButton mUISimpleButtonButton;
		private DXCheckBox mUIFooterCheckEditCheckBox;
		private DXTextEdit mUITbFoot2Edit;
		private DXTextEdit mUITbFoot3Edit;
		private DXTextEdit mUITbFoot1Edit;
		private DXTextEdit mUITbHead2Edit1;
		private DXTextEdit mUITbHead3Edit1;
		private DXTextEdit mUITbHead3Edit2;
		private DXTextEdit mUITbHead1Edit1;
		private DXCheckBox mUIFooterCheckEditCheckBox1;
		private DXTextEdit mUITbFoot2Edit1;
		private DXTextEdit mUITbFoot3Edit1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom15 : DXTestControl
	{
		public UIBarDockControlCustom15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar5 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar5(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		public UICustom1MenuBar11 UICustom1MenuBar1
		{
			get
			{
				if ((this.mUICustom1MenuBar1 == null))
				{
					this.mUICustom1MenuBar1 = new UICustom1MenuBar11(this);
				}
				return this.mUICustom1MenuBar1;
			}
		}
		public UICustom1MenuBar21 UICustom1MenuBar2
		{
			get
			{
				if ((this.mUICustom1MenuBar2 == null))
				{
					this.mUICustom1MenuBar2 = new UICustom1MenuBar21(this);
				}
				return this.mUICustom1MenuBar2;
			}
		}
		public UICustom1MenuBar31 UICustom1MenuBar3
		{
			get
			{
				if ((this.mUICustom1MenuBar3 == null))
				{
					this.mUICustom1MenuBar3 = new UICustom1MenuBar31(this);
				}
				return this.mUICustom1MenuBar3;
			}
		}
		public UICustom1MenuBar41 UICustom1MenuBar4
		{
			get
			{
				if ((this.mUICustom1MenuBar4 == null))
				{
					this.mUICustom1MenuBar4 = new UICustom1MenuBar41(this);
				}
				return this.mUICustom1MenuBar4;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar5 mUICustom1MenuBar;
		private UICustom1MenuBar11 mUICustom1MenuBar1;
		private UICustom1MenuBar21 mUICustom1MenuBar2;
		private UICustom1MenuBar31 mUICustom1MenuBar3;
		private UICustom1MenuBar41 mUICustom1MenuBar4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar5 : DXMenu
	{
		public UICustom1MenuBar5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXMenuItem UIBarButtonItemLink0BarItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink0BarItem == null))
				{
					this.mUIBarButtonItemLink0BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink0BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIBarButtonItemLink0BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarButtonItemLink0BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarButtonItemLink0BarItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink0BarItem;
			}
		}
		public DXMenuItem UIBarButtonItemLink1BarItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink1BarItem == null))
				{
					this.mUIBarButtonItemLink1BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink1BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
					this.mUIBarButtonItemLink1BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarButtonItemLink1BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarButtonItemLink1BarItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink1BarItem;
			}
		}
		public DXMenuItem UIBarButtonItemLink2BarItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink2BarItem == null))
				{
					this.mUIBarButtonItemLink2BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink2BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
					this.mUIBarButtonItemLink2BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarButtonItemLink2BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarButtonItemLink2BarItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink2BarItem;
			}
		}
		public DXMenuItem UIBarButtonItemLink3BarItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink3BarItem == null))
				{
					this.mUIBarButtonItemLink3BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink3BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
					this.mUIBarButtonItemLink3BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarButtonItemLink3BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarButtonItemLink3BarItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink3BarItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink2BarCheckItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink2BarCheckItem == null))
				{
					this.mUIBarCheckItemLink2BarCheckItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink2BarCheckItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[2]";
					this.mUIBarCheckItemLink2BarCheckItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarCheckItem";
					this.mUIBarCheckItemLink2BarCheckItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarCheckItemLink2BarCheckItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarCheckItemLink2BarCheckItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink1BarCheckItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink1BarCheckItem == null))
				{
					this.mUIBarCheckItemLink1BarCheckItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink1BarCheckItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
					this.mUIBarCheckItemLink1BarCheckItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarCheckItem";
					this.mUIBarCheckItemLink1BarCheckItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarCheckItemLink1BarCheckItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarCheckItemLink1BarCheckItem;
			}
		}
		public DXMenuEditItem UIBarEditItemLink0BarEditItem
		{
			get
			{
				if ((this.mUIBarEditItemLink0BarEditItem == null))
				{
					this.mUIBarEditItemLink0BarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBarEditItemLink0BarEditItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarEditItemLink0BarEditItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIBarButtonItemLink0BarItem;
		private DXMenuItem mUIBarButtonItemLink1BarItem;
		private DXMenuItem mUIBarButtonItemLink2BarItem;
		private DXMenuItem mUIBarButtonItemLink3BarItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink2BarCheckItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink1BarCheckItem;
		private DXMenuEditItem mUIBarEditItemLink0BarEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar11 : DXMenu
	{
		public UICustom1MenuBar11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIBarButtonItemLink0BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink0BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink0BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink0BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIBarButtonItemLink0BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink0BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink0BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink2BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink2BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink2BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink3BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink3BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink3BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink3BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink3BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink4BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink4BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink4BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[4]";
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink4BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink4BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink1BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink1BarBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink1BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
					this.mUIBarCheckItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarCheckItemLink1BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarCheckItemLink1BarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIBarButtonItemLink0BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink2BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink3BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink4BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink1BarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar21 : DXMenu
	{
		public UICustom1MenuBar21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIBarButtonItemLink2BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink2BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink2BarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIBarButtonItemLink2BarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar31 : DXMenu
	{
		public UICustom1MenuBar31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIBarButtonItemLink3BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink3BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink3BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink3BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink3BarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIBarButtonItemLink3BarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar41 : DXMenu
	{
		public UICustom1MenuBar41(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIBarButtonItemLink4BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink4BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink4BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[4]";
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink4BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink4BarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIBarButtonItemLink4BarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontWindow : WinWindow
	{
		public UIFontWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Font";
			this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
			this.WindowTitles.Add("Font");
			#endregion
		}
		#region Properties
		public UIItemWindow5 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow5(this);
				}
				return this.mUIItemWindow;
			}
		}
		public UIOKWindow UIOKWindow
		{
			get
			{
				if ((this.mUIOKWindow == null))
				{
					this.mUIOKWindow = new UIOKWindow(this);
				}
				return this.mUIOKWindow;
			}
		}
		#endregion
		#region Fields
		private UIItemWindow5 mUIItemWindow;
		private UIOKWindow mUIOKWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow5 : WinWindow
	{
		public UIItemWindow5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1136";
			this.WindowTitles.Add("Font");
			#endregion
		}
		#region Properties
		public WinComboBox UIFontComboBox
		{
			get
			{
				if ((this.mUIFontComboBox == null))
				{
					this.mUIFontComboBox = new WinComboBox(this);
					#region Search Criteria
					this.mUIFontComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Font:";
					this.mUIFontComboBox.WindowTitles.Add("Font");
					#endregion
				}
				return this.mUIFontComboBox;
			}
		}
		#endregion
		#region Fields
		private WinComboBox mUIFontComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIOKWindow : WinWindow
	{
		public UIOKWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
			this.WindowTitles.Add("Font");
			#endregion
		}
		#region Properties
		public WinButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new WinButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
					this.mUIOKButton.WindowTitles.Add("Font");
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private WinButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageSetupWindow : WinWindow
	{
		public UIPageSetupWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Page Setup";
			this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
			this.WindowTitles.Add("Page Setup");
			#endregion
		}
		#region Properties
		public UIItemWindow6 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow6(this);
				}
				return this.mUIItemWindow;
			}
		}
		public UILandscapeWindow UILandscapeWindow
		{
			get
			{
				if ((this.mUILandscapeWindow == null))
				{
					this.mUILandscapeWindow = new UILandscapeWindow(this);
				}
				return this.mUILandscapeWindow;
			}
		}
		public UIItemWindow13 UIItemWindow1
		{
			get
			{
				if ((this.mUIItemWindow1 == null))
				{
					this.mUIItemWindow1 = new UIItemWindow13(this);
				}
				return this.mUIItemWindow1;
			}
		}
		public UIOKWindow1 UIOKWindow
		{
			get
			{
				if ((this.mUIOKWindow == null))
				{
					this.mUIOKWindow = new UIOKWindow1(this);
				}
				return this.mUIOKWindow;
			}
		}
		#endregion
		#region Fields
		private UIItemWindow6 mUIItemWindow;
		private UILandscapeWindow mUILandscapeWindow;
		private UIItemWindow13 mUIItemWindow1;
		private UIOKWindow1 mUIOKWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow6 : WinWindow
	{
		public UIItemWindow6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1137";
			this.WindowTitles.Add("Page Setup");
			#endregion
		}
		#region Properties
		public WinComboBox UISizeComboBox
		{
			get
			{
				if ((this.mUISizeComboBox == null))
				{
					this.mUISizeComboBox = new WinComboBox(this);
					#region Search Criteria
					this.mUISizeComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Size:";
					this.mUISizeComboBox.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUISizeComboBox;
			}
		}
		#endregion
		#region Fields
		private WinComboBox mUISizeComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILandscapeWindow : WinWindow
	{
		public UILandscapeWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1057";
			this.WindowTitles.Add("Page Setup");
			#endregion
		}
		#region Properties
		public WinRadioButton UILandscapeRadioButton
		{
			get
			{
				if ((this.mUILandscapeRadioButton == null))
				{
					this.mUILandscapeRadioButton = new WinRadioButton(this);
					#region Search Criteria
					this.mUILandscapeRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Landscape";
					this.mUILandscapeRadioButton.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUILandscapeRadioButton;
			}
		}
		#endregion
		#region Fields
		private WinRadioButton mUILandscapeRadioButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow13 : WinWindow
	{
		public UIItemWindow13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1155";
			this.WindowTitles.Add("Page Setup");
			#endregion
		}
		#region Properties
		public WinEdit UILeftEdit
		{
			get
			{
				if ((this.mUILeftEdit == null))
				{
					this.mUILeftEdit = new WinEdit(this);
					#region Search Criteria
					this.mUILeftEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Left:";
					this.mUILeftEdit.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUILeftEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUILeftEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIOKWindow1 : WinWindow
	{
		public UIOKWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
			this.WindowTitles.Add("Page Setup");
			#endregion
		}
		#region Properties
		public WinButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new WinButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
					this.mUIOKButton.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private WinButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIWatermarkWindow : WinWindow
	{
		public UIWatermarkWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Watermark";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList9 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList9(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		public UIGrpBoxZOrderClient UIGrpBoxZOrderClient
		{
			get
			{
				if ((this.mUIGrpBoxZOrderClient == null))
				{
					this.mUIGrpBoxZOrderClient = new UIGrpBoxZOrderClient(this);
				}
				return this.mUIGrpBoxZOrderClient;
			}
		}
		public UIGrpBoxPageRangeClient UIGrpBoxPageRangeClient
		{
			get
			{
				if ((this.mUIGrpBoxPageRangeClient == null))
				{
					this.mUIGrpBoxPageRangeClient = new UIGrpBoxPageRangeClient(this);
				}
				return this.mUIGrpBoxPageRangeClient;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList9 mUIXtraTabControlTabList;
		private UIGrpBoxZOrderClient mUIGrpBoxZOrderClient;
		private UIGrpBoxPageRangeClient mUIGrpBoxPageRangeClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList9 : DXTestControl
	{
		public UIXtraTabControlTabList9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UITpTextWaterMarkClient UITpTextWaterMarkClient
		{
			get
			{
				if ((this.mUITpTextWaterMarkClient == null))
				{
					this.mUITpTextWaterMarkClient = new UITpTextWaterMarkClient(this);
				}
				return this.mUITpTextWaterMarkClient;
			}
		}
		#endregion
		#region Fields
		private UITpTextWaterMarkClient mUITpTextWaterMarkClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITpTextWaterMarkClient : DXTestControl
	{
		public UITpTextWaterMarkClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpTextWaterMark";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public DXComboBox UICmbWatermarkTextComboBox
		{
			get
			{
				if ((this.mUICmbWatermarkTextComboBox == null))
				{
					this.mUICmbWatermarkTextComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICmbWatermarkTextComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cmbWatermarkText";
					this.mUICmbWatermarkTextComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICmbWatermarkTextComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICmbWatermarkTextComboBox;
			}
		}
		public DXPopupEdit UILkpTextDirectionPopupEdit
		{
			get
			{
				if ((this.mUILkpTextDirectionPopupEdit == null))
				{
					this.mUILkpTextDirectionPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILkpTextDirectionPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lkpTextDirection";
					this.mUILkpTextDirectionPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILkpTextDirectionPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUILkpTextDirectionPopupEdit.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUILkpTextDirectionPopupEdit;
			}
		}
		public DXColorEdit UICeWatermarkColorColorEdit
		{
			get
			{
				if ((this.mUICeWatermarkColorColorEdit == null))
				{
					this.mUICeWatermarkColorColorEdit = new DXColorEdit(this);
					#region Search Criteria
					this.mUICeWatermarkColorColorEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ceWatermarkColor";
					this.mUICeWatermarkColorColorEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorEdit";
					this.mUICeWatermarkColorColorEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICeWatermarkColorColorEdit.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUICeWatermarkColorColorEdit;
			}
		}
		public DXComboBox UICmbWatermarkFontSizeComboBox
		{
			get
			{
				if ((this.mUICmbWatermarkFontSizeComboBox == null))
				{
					this.mUICmbWatermarkFontSizeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICmbWatermarkFontSizeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cmbWatermarkFontSize";
					this.mUICmbWatermarkFontSizeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICmbWatermarkFontSizeComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICmbWatermarkFontSizeComboBox.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUICmbWatermarkFontSizeComboBox;
			}
		}
		public DXTextEdit UITeTransparentValueEdit
		{
			get
			{
				if ((this.mUITeTransparentValueEdit == null))
				{
					this.mUITeTransparentValueEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeTransparentValueEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teTransparentValue";
					this.mUITeTransparentValueEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeTransparentValueEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITeTransparentValueEdit.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUITeTransparentValueEdit;
			}
		}
		public DXCheckBox UIChbBoldCheckBox
		{
			get
			{
				if ((this.mUIChbBoldCheckBox == null))
				{
					this.mUIChbBoldCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbBoldCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbBold";
					this.mUIChbBoldCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbBoldCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChbBoldCheckBox.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUIChbBoldCheckBox;
			}
		}
		public DXCheckBox UIChbItalicCheckBox
		{
			get
			{
				if ((this.mUIChbItalicCheckBox == null))
				{
					this.mUIChbItalicCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbItalicCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbItalic";
					this.mUIChbItalicCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbItalicCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChbItalicCheckBox.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUIChbItalicCheckBox;
			}
		}
		public DXComboBox UICmbWatermarkFontComboBox
		{
			get
			{
				if ((this.mUICmbWatermarkFontComboBox == null))
				{
					this.mUICmbWatermarkFontComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICmbWatermarkFontComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cmbWatermarkFont";
					this.mUICmbWatermarkFontComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICmbWatermarkFontComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICmbWatermarkFontComboBox;
			}
		}
		public DXTrackBar UITrBarTextTransparencTrackBar
		{
			get
			{
				if ((this.mUITrBarTextTransparencTrackBar == null))
				{
					this.mUITrBarTextTransparencTrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUITrBarTextTransparencTrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "trBarTextTransparency";
					this.mUITrBarTextTransparencTrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TrackBarControl";
					this.mUITrBarTextTransparencTrackBar.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITrBarTextTransparencTrackBar.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUITrBarTextTransparencTrackBar;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICmbWatermarkTextComboBox;
		private DXPopupEdit mUILkpTextDirectionPopupEdit;
		private DXColorEdit mUICeWatermarkColorColorEdit;
		private DXComboBox mUICmbWatermarkFontSizeComboBox;
		private DXTextEdit mUITeTransparentValueEdit;
		private DXCheckBox mUIChbBoldCheckBox;
		private DXCheckBox mUIChbItalicCheckBox;
		private DXComboBox mUICmbWatermarkFontComboBox;
		private DXTrackBar mUITrBarTextTransparencTrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGrpBoxZOrderClient : DXTestControl
	{
		public UIGrpBoxZOrderClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpBoxZOrder";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UIRgrpZOrderRadioGroup UIRgrpZOrderRadioGroup
		{
			get
			{
				if ((this.mUIRgrpZOrderRadioGroup == null))
				{
					this.mUIRgrpZOrderRadioGroup = new UIRgrpZOrderRadioGroup(this);
				}
				return this.mUIRgrpZOrderRadioGroup;
			}
		}
		#endregion
		#region Fields
		private UIRgrpZOrderRadioGroup mUIRgrpZOrderRadioGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRgrpZOrderRadioGroup : DXRadioGroup
	{
		public UIRgrpZOrderRadioGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpZOrder";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public DXRadioButton UIRadioGroupItemRadioButton
		{
			get
			{
				if ((this.mUIRadioGroupItemRadioButton == null))
				{
					this.mUIRadioGroupItemRadioButton = new DXRadioButton(this);
					#region Search Criteria
					this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpZOrderItem[1]";
					this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroupItem";
					this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRadioGroupItemRadioButton.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUIRadioGroupItemRadioButton;
			}
		}
		public DXRadioButton UIRadioGroupItemRadioButton1
		{
			get
			{
				if ((this.mUIRadioGroupItemRadioButton1 == null))
				{
					this.mUIRadioGroupItemRadioButton1 = new DXRadioButton(this);
					#region Search Criteria
					this.mUIRadioGroupItemRadioButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpZOrderItem[0]";
					this.mUIRadioGroupItemRadioButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroupItem";
					this.mUIRadioGroupItemRadioButton1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRadioGroupItemRadioButton1.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUIRadioGroupItemRadioButton1;
			}
		}
		#endregion
		#region Fields
		private DXRadioButton mUIRadioGroupItemRadioButton;
		private DXRadioButton mUIRadioGroupItemRadioButton1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGrpBoxPageRangeClient : DXTestControl
	{
		public UIGrpBoxPageRangeClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpBoxPageRange";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public DXCheckBox UIRbAllCheckBox
		{
			get
			{
				if ((this.mUIRbAllCheckBox == null))
				{
					this.mUIRbAllCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIRbAllCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "rbAll";
					this.mUIRbAllCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIRbAllCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRbAllCheckBox.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUIRbAllCheckBox;
			}
		}
		public DXCheckBox UIRbPagesCheckBox
		{
			get
			{
				if ((this.mUIRbPagesCheckBox == null))
				{
					this.mUIRbPagesCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIRbPagesCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "rbPages";
					this.mUIRbPagesCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIRbPagesCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRbPagesCheckBox.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUIRbPagesCheckBox;
			}
		}
		public DXTextEdit UITePageRangeEdit
		{
			get
			{
				if ((this.mUITePageRangeEdit == null))
				{
					this.mUITePageRangeEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITePageRangeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "tePageRange";
					this.mUITePageRangeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITePageRangeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITePageRangeEdit.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUITePageRangeEdit;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIRbAllCheckBox;
		private DXCheckBox mUIRbPagesCheckBox;
		private DXTextEdit mUITePageRangeEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPDFExportOptionsWindow : WinWindow
	{
		public UIPDFExportOptionsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "PDF Export Options";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("PDF Export Options");
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[1]";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox1.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXCheckBox UIConvertImagestoJpegCheckBox
		{
			get
			{
				if ((this.mUIConvertImagestoJpegCheckBox == null))
				{
					this.mUIConvertImagestoJpegCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIConvertImagestoJpegCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[0]";
					this.mUIConvertImagestoJpegCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIConvertImagestoJpegCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIConvertImagestoJpegCheckBox.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIConvertImagestoJpegCheckBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox2
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox2 == null))
				{
					this.mUIComboBoxEditComboBox2 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[2]";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox2;
			}
		}
		public DXCheckBox UICompressedCheckBox
		{
			get
			{
				if ((this.mUICompressedCheckBox == null))
				{
					this.mUICompressedCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICompressedCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[1]";
					this.mUICompressedCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICompressedCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUICompressedCheckBox.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUICompressedCheckBox;
			}
		}
		public DXCheckBox UIShowprintdialogonopeCheckBox
		{
			get
			{
				if ((this.mUIShowprintdialogonopeCheckBox == null))
				{
					this.mUIShowprintdialogonopeCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIShowprintdialogonopeCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[2]";
					this.mUIShowprintdialogonopeCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIShowprintdialogonopeCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIShowprintdialogonopeCheckBox.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIShowprintdialogonopeCheckBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox3
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox3 == null))
				{
					this.mUIComboBoxEditComboBox3 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[3]";
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox3.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox3;
			}
		}
		public DXComboBox UIComboBoxEditComboBox4
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox4 == null))
				{
					this.mUIComboBoxEditComboBox4 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox4.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[4]";
					this.mUIComboBoxEditComboBox4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox4.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox4;
			}
		}
		public DXComboBox UIComboBoxEditComboBox5
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox5 == null))
				{
					this.mUIComboBoxEditComboBox5 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox5.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[5]";
					this.mUIComboBoxEditComboBox5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox5.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox5.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox5;
			}
		}
		public DXComboBox UIComboBoxEditComboBox6
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox6 == null))
				{
					this.mUIComboBoxEditComboBox6 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox6.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[6]";
					this.mUIComboBoxEditComboBox6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox6.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox6.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox6;
			}
		}
		public DXComboBox UIComboBoxEditComboBox7
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox7 == null))
				{
					this.mUIComboBoxEditComboBox7 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox7.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[7]";
					this.mUIComboBoxEditComboBox7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox7.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox7.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox7;
			}
		}
		public UIDropDownEditPopupEdit UIDropDownEditPopupEdit
		{
			get
			{
				if ((this.mUIDropDownEditPopupEdit == null))
				{
					this.mUIDropDownEditPopupEdit = new UIDropDownEditPopupEdit(this);
				}
				return this.mUIDropDownEditPopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXCheckBox mUIConvertImagestoJpegCheckBox;
		private DXComboBox mUIComboBoxEditComboBox2;
		private DXCheckBox mUICompressedCheckBox;
		private DXCheckBox mUIShowprintdialogonopeCheckBox;
		private DXComboBox mUIComboBoxEditComboBox3;
		private DXComboBox mUIComboBoxEditComboBox4;
		private DXComboBox mUIComboBoxEditComboBox5;
		private DXComboBox mUIComboBoxEditComboBox6;
		private DXComboBox mUIComboBoxEditComboBox7;
		private UIDropDownEditPopupEdit mUIDropDownEditPopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDropDownEditPopupEdit : DXPopupEdit
	{
		public UIDropDownEditPopupEdit(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DropDownEdit[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownEdit";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
			this.WindowTitles.Add("PDF Export Options");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButton0Button
		{
			get
			{
				if ((this.mUIEditorButton0Button == null))
				{
					this.mUIEditorButton0Button = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "DropDownEdit[0]Button[0]";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIEditorButton0Button.WindowTitles.Add("PDF Export Options");
					#endregion
				}
				return this.mUIEditorButton0Button;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButton0Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPasswordSecurityWindow : WinWindow
	{
		public UIPasswordSecurityWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Password Security";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Password Security");
			#endregion
		}
		#region Properties
		public DXCheckBox UIChbOpenPasswordCheckBox
		{
			get
			{
				if ((this.mUIChbOpenPasswordCheckBox == null))
				{
					this.mUIChbOpenPasswordCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbOpenPasswordCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbOpenPassword";
					this.mUIChbOpenPasswordCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbOpenPasswordCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChbOpenPasswordCheckBox.WindowTitles.Add("Password Security");
					#endregion
				}
				return this.mUIChbOpenPasswordCheckBox;
			}
		}
		public DXTextEdit UITeOpenPasswordEdit
		{
			get
			{
				if ((this.mUITeOpenPasswordEdit == null))
				{
					this.mUITeOpenPasswordEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeOpenPasswordEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teOpenPassword";
					this.mUITeOpenPasswordEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeOpenPasswordEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITeOpenPasswordEdit.WindowTitles.Add("Password Security");
					#endregion
				}
				return this.mUITeOpenPasswordEdit;
			}
		}
		public UIGrpBoxPermissionsClient UIGrpBoxPermissionsClient
		{
			get
			{
				if ((this.mUIGrpBoxPermissionsClient == null))
				{
					this.mUIGrpBoxPermissionsClient = new UIGrpBoxPermissionsClient(this);
				}
				return this.mUIGrpBoxPermissionsClient;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Password Security");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIChbOpenPasswordCheckBox;
		private DXTextEdit mUITeOpenPasswordEdit;
		private UIGrpBoxPermissionsClient mUIGrpBoxPermissionsClient;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGrpBoxPermissionsClient : DXTestControl
	{
		public UIGrpBoxPermissionsClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpBoxPermissions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Password Security");
			#endregion
		}
		#region Properties
		public DXCheckBox UIChbRestrictCheckBox
		{
			get
			{
				if ((this.mUIChbRestrictCheckBox == null))
				{
					this.mUIChbRestrictCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbRestrictCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbRestrict";
					this.mUIChbRestrictCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbRestrictCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChbRestrictCheckBox.WindowTitles.Add("Password Security");
					#endregion
				}
				return this.mUIChbRestrictCheckBox;
			}
		}
		public DXTextEdit UITePermissionsPassworEdit
		{
			get
			{
				if ((this.mUITePermissionsPassworEdit == null))
				{
					this.mUITePermissionsPassworEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITePermissionsPassworEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "tePermissionsPassword";
					this.mUITePermissionsPassworEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITePermissionsPassworEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITePermissionsPassworEdit.WindowTitles.Add("Password Security");
					#endregion
				}
				return this.mUITePermissionsPassworEdit;
			}
		}
		public DXPopupEdit UILkpPrintingAllowedPopupEdit
		{
			get
			{
				if ((this.mUILkpPrintingAllowedPopupEdit == null))
				{
					this.mUILkpPrintingAllowedPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILkpPrintingAllowedPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lkpPrintingAllowed";
					this.mUILkpPrintingAllowedPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILkpPrintingAllowedPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUILkpPrintingAllowedPopupEdit;
			}
		}
		public DXPopupEdit UILkpChangesAllowedPopupEdit
		{
			get
			{
				if ((this.mUILkpChangesAllowedPopupEdit == null))
				{
					this.mUILkpChangesAllowedPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILkpChangesAllowedPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lkpChangesAllowed";
					this.mUILkpChangesAllowedPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILkpChangesAllowedPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUILkpChangesAllowedPopupEdit;
			}
		}
		public DXCheckBox UIChbEnableCopingCheckBox
		{
			get
			{
				if ((this.mUIChbEnableCopingCheckBox == null))
				{
					this.mUIChbEnableCopingCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbEnableCopingCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbEnableCoping";
					this.mUIChbEnableCopingCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbEnableCopingCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChbEnableCopingCheckBox.WindowTitles.Add("Password Security");
					#endregion
				}
				return this.mUIChbEnableCopingCheckBox;
			}
		}
		public DXCheckBox UIChbEnableScreenReadeCheckBox
		{
			get
			{
				if ((this.mUIChbEnableScreenReadeCheckBox == null))
				{
					this.mUIChbEnableScreenReadeCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbEnableScreenReadeCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbEnableScreenReaders";
					this.mUIChbEnableScreenReadeCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbEnableScreenReadeCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChbEnableScreenReadeCheckBox.WindowTitles.Add("Password Security");
					#endregion
				}
				return this.mUIChbEnableScreenReadeCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIChbRestrictCheckBox;
		private DXTextEdit mUITePermissionsPassworEdit;
		private DXPopupEdit mUILkpPrintingAllowedPopupEdit;
		private DXPopupEdit mUILkpChangesAllowedPopupEdit;
		private DXCheckBox mUIChbEnableCopingCheckBox;
		private DXCheckBox mUIChbEnableScreenReadeCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIHTMLExportOptionsWindow : WinWindow
	{
		public UIHTMLExportOptionsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "HTML Export Options";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[1]";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox1.WindowTitles.Add("HTML Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXColorEdit UIColorEditColorEdit
		{
			get
			{
				if ((this.mUIColorEditColorEdit == null))
				{
					this.mUIColorEditColorEdit = new DXColorEdit(this);
					#region Search Criteria
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ColorEdit[0]";
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorEdit";
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIColorEditColorEdit;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "SpinEdit[0]";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUISpinEditEdit.WindowTitles.Add("HTML Export Options");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXComboBox UIComboBoxEditComboBox2
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox2 == null))
				{
					this.mUIComboBoxEditComboBox2 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[2]";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox2.WindowTitles.Add("HTML Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox2;
			}
		}
		public DXComboBox UIComboBoxEditComboBox3
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox3 == null))
				{
					this.mUIComboBoxEditComboBox3 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[3]";
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox3.WindowTitles.Add("HTML Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox3;
			}
		}
		public DXCheckBox UIRemovecarriagereturnCheckBox
		{
			get
			{
				if ((this.mUIRemovecarriagereturnCheckBox == null))
				{
					this.mUIRemovecarriagereturnCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIRemovecarriagereturnCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[0]";
					this.mUIRemovecarriagereturnCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIRemovecarriagereturnCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIRemovecarriagereturnCheckBox.WindowTitles.Add("HTML Export Options");
					#endregion
				}
				return this.mUIRemovecarriagereturnCheckBox;
			}
		}
		public DXCheckBox UIEmbedimagesinHTMLCheckBox
		{
			get
			{
				if ((this.mUIEmbedimagesinHTMLCheckBox == null))
				{
					this.mUIEmbedimagesinHTMLCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIEmbedimagesinHTMLCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[1]";
					this.mUIEmbedimagesinHTMLCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIEmbedimagesinHTMLCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIEmbedimagesinHTMLCheckBox.WindowTitles.Add("HTML Export Options");
					#endregion
				}
				return this.mUIEmbedimagesinHTMLCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXColorEdit mUIColorEditColorEdit;
		private DXTextEdit mUISpinEditEdit;
		private DXComboBox mUIComboBoxEditComboBox2;
		private DXComboBox mUIComboBoxEditComboBox3;
		private DXCheckBox mUIRemovecarriagereturnCheckBox;
		private DXCheckBox mUIEmbedimagesinHTMLCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRTFExportOptionsWindow : WinWindow
	{
		public UIRTFExportOptionsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "RTF Export Options";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("RTF Export Options");
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox.WindowTitles.Add("RTF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[1]";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox1.WindowTitles.Add("RTF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXCheckBox UIExportwatermarksCheckBox
		{
			get
			{
				if ((this.mUIExportwatermarksCheckBox == null))
				{
					this.mUIExportwatermarksCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIExportwatermarksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[0]";
					this.mUIExportwatermarksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIExportwatermarksCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIExportwatermarksCheckBox.WindowTitles.Add("RTF Export Options");
					#endregion
				}
				return this.mUIExportwatermarksCheckBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox2
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox2 == null))
				{
					this.mUIComboBoxEditComboBox2 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF Export OptionsComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox2.WindowTitles.Add("RTF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox2;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXCheckBox mUIExportwatermarksCheckBox;
		private DXComboBox mUIComboBoxEditComboBox2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXLSExportOptionsWindow : WinWindow
	{
		public UIXLSExportOptionsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XLS Export Options";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[1]";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox1.WindowTitles.Add("XLS Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXComboBox UIComboBoxEditComboBox2
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox2 == null))
				{
					this.mUIComboBoxEditComboBox2 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[2]";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox2.WindowTitles.Add("XLS Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox2;
			}
		}
		public DXComboBox UIComboBoxEditComboBox3
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox3 == null))
				{
					this.mUIComboBoxEditComboBox3 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[3]";
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox3;
			}
		}
		public DXCheckBox UIShowgridlinesCheckBox
		{
			get
			{
				if ((this.mUIShowgridlinesCheckBox == null))
				{
					this.mUIShowgridlinesCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIShowgridlinesCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[0]";
					this.mUIShowgridlinesCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIShowgridlinesCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIShowgridlinesCheckBox.WindowTitles.Add("XLS Export Options");
					#endregion
				}
				return this.mUIShowgridlinesCheckBox;
			}
		}
		public DXCheckBox UIExporthyperlinksCheckBox
		{
			get
			{
				if ((this.mUIExporthyperlinksCheckBox == null))
				{
					this.mUIExporthyperlinksCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIExporthyperlinksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[1]";
					this.mUIExporthyperlinksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIExporthyperlinksCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIExporthyperlinksCheckBox.WindowTitles.Add("XLS Export Options");
					#endregion
				}
				return this.mUIExporthyperlinksCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXComboBox mUIComboBoxEditComboBox2;
		private DXComboBox mUIComboBoxEditComboBox3;
		private DXCheckBox mUIShowgridlinesCheckBox;
		private DXCheckBox mUIExporthyperlinksCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICSVExportOptionsWindow : WinWindow
	{
		public UICSVExportOptionsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "CSV Export Options";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[1]";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXComboBox UIComboBoxEditComboBox2
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox2 == null))
				{
					this.mUIComboBoxEditComboBox2 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[2]";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox2.WindowTitles.Add("CSV Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox2;
			}
		}
		public DXCheckBox UIQuotestringswithsepaCheckBox
		{
			get
			{
				if ((this.mUIQuotestringswithsepaCheckBox == null))
				{
					this.mUIQuotestringswithsepaCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIQuotestringswithsepaCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "CheckEdit[0]";
					this.mUIQuotestringswithsepaCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIQuotestringswithsepaCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIQuotestringswithsepaCheckBox.WindowTitles.Add("CSV Export Options");
					#endregion
				}
				return this.mUIQuotestringswithsepaCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXComboBox mUIComboBoxEditComboBox2;
		private DXCheckBox mUIQuotestringswithsepaCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIImageExportOptionsWindow : WinWindow
	{
		public UIImageExportOptionsWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Image Export Options";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "SpinEdit[0]";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUISpinEditEdit.WindowTitles.Add("Image Export Options");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[1]";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXComboBox UIComboBoxEditComboBox2
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox2 == null))
				{
					this.mUIComboBoxEditComboBox2 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.Name] = "ComboBoxEdit[2]";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox2.WindowTitles.Add("Image Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox2;
			}
		}
		public DXColorEdit UIColorEditColorEdit
		{
			get
			{
				if ((this.mUIColorEditColorEdit == null))
				{
					this.mUIColorEditColorEdit = new DXColorEdit(this);
					#region Search Criteria
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ColorEdit[0]";
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorEdit";
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					#endregion
				}
				return this.mUIColorEditColorEdit;
			}
		}
		public DXTextEdit UISpinEditEdit1
		{
			get
			{
				if ((this.mUISpinEditEdit1 == null))
				{
					this.mUISpinEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "SpinEdit[1]";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUISpinEditEdit1.WindowTitles.Add("Image Export Options");
					#endregion
				}
				return this.mUISpinEditEdit1;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXTextEdit mUISpinEditEdit;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXComboBox mUIComboBoxEditComboBox2;
		private DXColorEdit mUIColorEditColorEdit;
		private DXTextEdit mUISpinEditEdit1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow2 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow2()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - DataGrid";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIPanelControl1Client57 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client57(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client57 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client57 : DXTestControl
	{
		public UIPanelControl1Client57(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIGcContainerClient38 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient38(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient38 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient38 : DXTestControl
	{
		public UIGcContainerClient38(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom2 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom2(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom2 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom2 : DXTestControl
	{
		public UIPreviewControlCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client58 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client58(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client58 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client58 : DXTestControl
	{
		public UIPanelControl1Client58(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom16 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom16(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom16 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom16 : DXTestControl
	{
		public UIBarDockControlCustom16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar4 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar4(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar4 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar4 : DXMenu
	{
		public UIToolbarMenuBar4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPreviewFormBarItem
		{
			get
			{
				if ((this.mUIPreviewFormBarItem == null))
				{
					this.mUIPreviewFormBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPreviewFormBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Preview Form";
					this.mUIPreviewFormBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPreviewFormBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPreviewFormBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPreviewFormBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPreviewFormBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewWindow : WinWindow
	{
		public UIPreviewWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Preview";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom17 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom17(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIDocumentViewerPrintViewControl1 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl1(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		public DXScrollBar UIVScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVScrollBarScrollBarControl == null))
				{
					this.mUIVScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "vScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIVScrollBarScrollBarControl.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIVScrollBarScrollBarControl;
			}
		}
		public UIBarDockControlCustom18 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom18(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		public UIBarDockControlCustom25 UIBarDockControlCustom2
		{
			get
			{
				if ((this.mUIBarDockControlCustom2 == null))
				{
					this.mUIBarDockControlCustom2 = new UIBarDockControlCustom25(this);
				}
				return this.mUIBarDockControlCustom2;
			}
		}
		public UIBarDockControlCustom33 UIBarDockControlCustom3
		{
			get
			{
				if ((this.mUIBarDockControlCustom3 == null))
				{
					this.mUIBarDockControlCustom3 = new UIBarDockControlCustom33(this);
				}
				return this.mUIBarDockControlCustom3;
			}
		}
		public UIBarDockControlCustom43 UIBarDockControlCustom4
		{
			get
			{
				if ((this.mUIBarDockControlCustom4 == null))
				{
					this.mUIBarDockControlCustom4 = new UIBarDockControlCustom43(this);
				}
				return this.mUIBarDockControlCustom4;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom17 mUIBarDockControlCustom;
		private UIDocumentViewerPrintViewControl1 mUIDocumentViewerPrintViewControl;
		private DXScrollBar mUIVScrollBarScrollBarControl;
		private UIBarDockControlCustom18 mUIBarDockControlCustom1;
		private UIBarDockControlCustom25 mUIBarDockControlCustom2;
		private UIBarDockControlCustom33 mUIBarDockControlCustom3;
		private UIBarDockControlCustom43 mUIBarDockControlCustom4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom17 : DXTestControl
	{
		public UIBarDockControlCustom17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar5 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar5(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		public UIMainMenuMenuBar3 UIMainMenuMenuBar
		{
			get
			{
				if ((this.mUIMainMenuMenuBar == null))
				{
					this.mUIMainMenuMenuBar = new UIMainMenuMenuBar3(this);
				}
				return this.mUIMainMenuMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar5 mUIToolbarMenuBar;
		private UIMainMenuMenuBar3 mUIMainMenuMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar5 : DXMenu
	{
		public UIToolbarMenuBar5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIMultiplePagesBarItem4 UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem4(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		#endregion
		#region Fields
		private UIMultiplePagesBarItem4 mUIMultiplePagesBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem4 : DXMenuItem
	{
		public UIMultiplePagesBarItem4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UICustomPopupBarControMenu7 UICustomPopupBarControMenu
		{
			get
			{
				if ((this.mUICustomPopupBarControMenu == null))
				{
					this.mUICustomPopupBarControMenu = new UICustomPopupBarControMenu7(this);
				}
				return this.mUICustomPopupBarControMenu;
			}
		}
		#endregion
		#region Fields
		private UICustomPopupBarControMenu7 mUICustomPopupBarControMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomPopupBarControMenu7 : DXMenu
	{
		public UICustomPopupBarControMenu7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomPopupBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXTestControl UICustomPopupBarControClient
		{
			get
			{
				if ((this.mUICustomPopupBarControClient == null))
				{
					this.mUICustomPopupBarControClient = new DXTestControl(this);
					#region Search Criteria
					this.mUICustomPopupBarControClient.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomPopupBarControlMultiplePagesControlContainer[0]";
					this.mUICustomPopupBarControClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultiplePagesControlContainer";
					this.mUICustomPopupBarControClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICustomPopupBarControClient.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUICustomPopupBarControClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICustomPopupBarControClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMainMenuMenuBar3 : DXMenu
	{
		public UIMainMenuMenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main Menu";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIViewBarItem UIViewBarItem
		{
			get
			{
				if ((this.mUIViewBarItem == null))
				{
					this.mUIViewBarItem = new UIViewBarItem(this);
				}
				return this.mUIViewBarItem;
			}
		}
		#endregion
		#region Fields
		private UIViewBarItem mUIViewBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIViewBarItem : DXMenuItem
	{
		public UIViewBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&View";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIPageLayoutMenuItem UIPageLayoutMenuItem
		{
			get
			{
				if ((this.mUIPageLayoutMenuItem == null))
				{
					this.mUIPageLayoutMenuItem = new UIPageLayoutMenuItem(this);
				}
				return this.mUIPageLayoutMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIPageLayoutMenuItem mUIPageLayoutMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageLayoutMenuItem : DXMenuItem
	{
		public UIPageLayoutMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&Page Layout";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenuItem UIFacingMenuItem
		{
			get
			{
				if ((this.mUIFacingMenuItem == null))
				{
					this.mUIFacingMenuItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIFacingMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Facing";
					this.mUIFacingMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
					this.mUIFacingMenuItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFacingMenuItem.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIFacingMenuItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIFacingMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl1 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices084PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices084PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices084PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[84]";
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices084PrintControlBrick.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPage0BrickIndices084PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage1BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage1BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage1BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage1BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [1].BrickIndices [0].[108]";
					this.mUIPage1BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage1BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1BrickIndices010PrintControlBrick.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPage1BrickIndices010PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[103]";
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices010PrintControlBrick.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage3BrickIndices067PrintControlBrick
		{
			get
			{
				if ((this.mUIPage3BrickIndices067PrintControlBrick == null))
				{
					this.mUIPage3BrickIndices067PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage3BrickIndices067PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [3].BrickIndices [0].[67]";
					this.mUIPage3BrickIndices067PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage3BrickIndices067PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage3BrickIndices067PrintControlBrick.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPage3BrickIndices067PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices084PrintControlBrick;
		private DXPrintingBrick mUIPage1BrickIndices010PrintControlBrick;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick;
		private DXPrintingBrick mUIPage3BrickIndices067PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom18 : DXTestControl
	{
		public UIBarDockControlCustom18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIStatusBarMenuBar2 UIStatusBarMenuBar
		{
			get
			{
				if ((this.mUIStatusBarMenuBar == null))
				{
					this.mUIStatusBarMenuBar = new UIStatusBarMenuBar2(this);
				}
				return this.mUIStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIStatusBarMenuBar2 mUIStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStatusBarMenuBar2 : DXMenu
	{
		public UIStatusBarMenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Status Bar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPage1of46BarItem
		{
			get
			{
				if ((this.mUIPage1of46BarItem == null))
				{
					this.mUIPage1of46BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of46BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 1 of 46";
					this.mUIPage1of46BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of46BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1of46BarItem.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPage1of46BarItem;
			}
		}
		public DXMenuItem UIPage4of46BarItem
		{
			get
			{
				if ((this.mUIPage4of46BarItem == null))
				{
					this.mUIPage4of46BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage4of46BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 4 of 46";
					this.mUIPage4of46BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage4of46BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage4of46BarItem.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPage4of46BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPage1of46BarItem;
		private DXMenuItem mUIPage4of46BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom25 : DXTestControl
	{
		public UIBarDockControlCustom25(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar6 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar6(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar6 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar6 : DXMenu
	{
		public UIToolbarMenuBar6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIMultiplePagesBarBaseButtonItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarBaseButtonItem == null))
				{
					this.mUIMultiplePagesBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIMultiplePagesBarBaseButtonItem.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIMultiplePagesBarBaseButtonItem;
			}
		}
		public UIMultiplePagesBarItem5 UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem5(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIMultiplePagesBarBaseButtonItem;
		private UIMultiplePagesBarItem5 mUIMultiplePagesBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem5 : DXMenuItem
	{
		public UIMultiplePagesBarItem5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom33 : DXTestControl
	{
		public UIBarDockControlCustom33(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar7 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar7(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar7 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar7 : DXMenu
	{
		public UIToolbarMenuBar7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIMultiplePagesBarItem6 UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem6(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		#endregion
		#region Fields
		private UIMultiplePagesBarItem6 mUIMultiplePagesBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem6 : DXMenuItem
	{
		public UIMultiplePagesBarItem6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom43 : DXTestControl
	{
		public UIBarDockControlCustom43(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar8 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar8(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar8 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar8 : DXMenu
	{
		public UIToolbarMenuBar8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIMultiplePagesBarBaseButtonItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarBaseButtonItem == null))
				{
					this.mUIMultiplePagesBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIMultiplePagesBarBaseButtonItem.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIMultiplePagesBarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIMultiplePagesBarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIProgramManagerWindow : WinWindow
	{
		public UIProgramManagerWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
			this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
			this.WindowTitles.Add("Program Manager");
			#endregion
		}
		#region Properties
		public UIFolderViewWindow UIFolderViewWindow
		{
			get
			{
				if ((this.mUIFolderViewWindow == null))
				{
					this.mUIFolderViewWindow = new UIFolderViewWindow(this);
				}
				return this.mUIFolderViewWindow;
			}
		}
		#endregion
		#region Fields
		private UIFolderViewWindow mUIFolderViewWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFolderViewWindow : WinWindow
	{
		public UIFolderViewWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
			this.WindowTitles.Add("Program Manager");
			#endregion
		}
		#region Properties
		public WinList UIDesktopList
		{
			get
			{
				if ((this.mUIDesktopList == null))
				{
					this.mUIDesktopList = new WinList(this);
					#region Search Criteria
					this.mUIDesktopList.SearchProperties[WinList.PropertyNames.Name] = "Desktop";
					this.mUIDesktopList.WindowTitles.Add("Program Manager");
					#endregion
				}
				return this.mUIDesktopList;
			}
		}
		#endregion
		#region Fields
		private WinList mUIDesktopList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow3 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow3()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - ListView";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client59 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client59(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client59 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client59 : DXTestControl
	{
		public UIPanelControl1Client59(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIGcContainerClient39 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient39(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient39 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient39 : DXTestControl
	{
		public UIGcContainerClient39(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom3 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom3(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom3 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom3 : DXTestControl
	{
		public UIPreviewControlCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client60 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client60(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client60 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client60 : DXTestControl
	{
		public UIPanelControl1Client60(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl2 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl2(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		public UIBarDockControlCustom19 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom19(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl2 mUIDocumentViewerPrintViewControl;
		private UIBarDockControlCustom19 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl2 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices025PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices025PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices025PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[25]";
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices025PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
					#endregion
				}
				return this.mUIPage0BrickIndices025PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices09PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices09PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices09PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[9]";
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices09PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
					#endregion
				}
				return this.mUIPage0BrickIndices09PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices025PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices09PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom19 : DXTestControl
	{
		public UIBarDockControlCustom19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar6 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar6(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar6 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar6 : DXMenu
	{
		public UICustom1MenuBar6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIViewBarEditItem
		{
			get
			{
				if ((this.mUIViewBarEditItem == null))
				{
					this.mUIViewBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIViewBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "View:";
					this.mUIViewBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIViewBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIViewBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
					#endregion
				}
				return this.mUIViewBarEditItem;
			}
		}
		public DXComboBox UIViewComboBox
		{
			get
			{
				if ((this.mUIViewComboBox == null))
				{
					this.mUIViewComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIViewComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "View:";
					this.mUIViewComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIViewComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIViewComboBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
					#endregion
				}
				return this.mUIViewComboBox;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIViewBarEditItem;
		private DXComboBox mUIViewComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow5 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow5()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Labels";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client61 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client61(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client61 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client61 : DXTestControl
	{
		public UIPanelControl1Client61(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIGcContainerClient40 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient40(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient40 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient40 : DXTestControl
	{
		public UIGcContainerClient40(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom4 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom4(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		public UIPreviewControl0Custom UIPreviewControl0Custom
		{
			get
			{
				if ((this.mUIPreviewControl0Custom == null))
				{
					this.mUIPreviewControl0Custom = new UIPreviewControl0Custom(this);
				}
				return this.mUIPreviewControl0Custom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom4 mUIPreviewControlCustom;
		private UIPreviewControl0Custom mUIPreviewControl0Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom4 : DXTestControl
	{
		public UIPreviewControlCustom4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlLabels";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client62 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client62(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client62 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client62 : DXTestControl
	{
		public UIPanelControl1Client62(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIAutoHideContainerClient UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIDockPanelClient UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new UIDockPanelClient(this);
				}
				return this.mUIDockPanelClient;
			}
		}
		public UIAutoHideControlClient UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		public UIBarDockControlCustom20 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom20(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIDocumentViewerPrintViewControl3 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl3(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		public UIBarDockControlCustom110 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom110(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		#endregion
		#region Fields
		private UIAutoHideContainerClient mUIAutoHideContainerClient;
		private UIDockPanelClient mUIDockPanelClient;
		private UIAutoHideControlClient mUIAutoHideControlClient;
		private UIBarDockControlCustom20 mUIBarDockControlCustom;
		private UIDocumentViewerPrintViewControl3 mUIDocumentViewerPrintViewControl;
		private UIBarDockControlCustom110 mUIBarDockControlCustom1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient : DXTestControl
	{
		public UIAutoHideContainerClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXTestControl UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainerDockPanel[0]";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDockPanelClient.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIDockPanelClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDockPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelClient : DXTestControl
	{
		public UIDockPanelClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1DockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		public UIControlContainerCustom UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		private UIControlContainerCustom mUIControlContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom : DXTestControl
	{
		public UIControlContainerCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1DockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient : DXTestControl
	{
		public UIPnlNavigationClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanel2Client UIPanel2Client
		{
			get
			{
				if ((this.mUIPanel2Client == null))
				{
					this.mUIPanel2Client = new UIPanel2Client(this);
				}
				return this.mUIPanel2Client;
			}
		}
		public UIPanel1Client1 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client1(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel2Client mUIPanel2Client;
		private UIPanel1Client1 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel2Client : DXTestControl
	{
		public UIPanel2Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXButton UIBtnNextButton
		{
			get
			{
				if ((this.mUIBtnNextButton == null))
				{
					this.mUIBtnNextButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnNextButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNext";
					this.mUIBtnNextButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnNextButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnNextButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIBtnNextButton;
			}
		}
		public DXButton UIBtnPrevButton
		{
			get
			{
				if ((this.mUIBtnPrevButton == null))
				{
					this.mUIBtnPrevButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnPrevButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPrev";
					this.mUIBtnPrevButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnPrevButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnPrevButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIBtnPrevButton;
			}
		}
		public DXButton UIBtnFirstButton
		{
			get
			{
				if ((this.mUIBtnFirstButton == null))
				{
					this.mUIBtnFirstButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnFirstButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnFirst";
					this.mUIBtnFirstButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnFirstButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnFirstButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIBtnFirstButton;
			}
		}
		public DXButton UIBtnLastButton
		{
			get
			{
				if ((this.mUIBtnLastButton == null))
				{
					this.mUIBtnLastButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnLastButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnLast";
					this.mUIBtnLastButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnLastButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnLastButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIBtnLastButton;
			}
		}
		public DXCheckBox UIChAllRecordsCheckBox
		{
			get
			{
				if ((this.mUIChAllRecordsCheckBox == null))
				{
					this.mUIChAllRecordsCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChAllRecordsCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chAllRecords";
					this.mUIChAllRecordsCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChAllRecordsCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChAllRecordsCheckBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIChAllRecordsCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnNextButton;
		private DXButton mUIBtnPrevButton;
		private DXButton mUIBtnFirstButton;
		private DXButton mUIBtnLastButton;
		private DXCheckBox mUIChAllRecordsCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client1 : DXTestControl
	{
		public UIPanel1Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		public DXTextEdit UITxtSpeciesNameEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNameEdit == null))
				{
					this.mUITxtSpeciesNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesName";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtSpeciesNameEdit;
			}
		}
		public DXCheckBox UIChMarkCheckBox
		{
			get
			{
				if ((this.mUIChMarkCheckBox == null))
				{
					this.mUIChMarkCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chMark";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChMarkCheckBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIChMarkCheckBox;
			}
		}
		public DXTextEdit UITxtNotesEdit
		{
			get
			{
				if ((this.mUITxtNotesEdit == null))
				{
					this.mUITxtNotesEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtNotesEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtNotes";
					this.mUITxtNotesEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITxtNotesEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtNotesEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtNotesEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		private DXTextEdit mUITxtSpeciesNameEdit;
		private DXCheckBox mUIChMarkCheckBox;
		private DXTextEdit mUITxtNotesEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient : DXTestControl
	{
		public UIAutoHideControlClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIDockPanelClient1 UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new UIDockPanelClient1(this);
				}
				return this.mUIDockPanelClient;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelClient1 mUIDockPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelClient1 : DXTestControl
	{
		public UIDockPanelClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom1 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom1 mUIControlContainerCustom;
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom1 : DXTestControl
	{
		public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient1 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient1(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient1 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient1 : DXTestControl
	{
		public UIPnlNavigationClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanel1Client2 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client2(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Client2 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client2 : DXTestControl
	{
		public UIPanel1Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		public DXTextEdit UITxtSpeciesNameEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNameEdit == null))
				{
					this.mUITxtSpeciesNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesName";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtSpeciesNameEdit;
			}
		}
		public DXTextEdit UITxtNotesEdit
		{
			get
			{
				if ((this.mUITxtNotesEdit == null))
				{
					this.mUITxtNotesEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtNotesEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtNotes";
					this.mUITxtNotesEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITxtNotesEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtNotesEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtNotesEdit;
			}
		}
		public DXCheckBox UIChMarkCheckBox
		{
			get
			{
				if ((this.mUIChMarkCheckBox == null))
				{
					this.mUIChMarkCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chMark";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChMarkCheckBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIChMarkCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		private DXTextEdit mUITxtSpeciesNameEdit;
		private DXTextEdit mUITxtNotesEdit;
		private DXCheckBox mUIChMarkCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom20 : DXTestControl
	{
		public UIBarDockControlCustom20(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar7 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar7(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar7 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar7 : DXMenu
	{
		public UICustom1MenuBar7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXMenuItem UIRefreshPreviewBarItem
		{
			get
			{
				if ((this.mUIRefreshPreviewBarItem == null))
				{
					this.mUIRefreshPreviewBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Refresh Preview";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRefreshPreviewBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIRefreshPreviewBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIRefreshPreviewBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl3 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices078PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices078PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices078PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices078PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[78]";
					this.mUIPage0BrickIndices078PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices078PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices078PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices078PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices080PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices080PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices080PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices080PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[80]";
					this.mUIPage0BrickIndices080PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices080PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices080PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices080PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices082PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices082PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices082PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices082PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[82]";
					this.mUIPage0BrickIndices082PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices082PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices082PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices082PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices084PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices084PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices084PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[84]";
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices084PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices084PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices086PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices086PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices086PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices086PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[86]";
					this.mUIPage0BrickIndices086PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices086PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices086PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices086PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices089PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices089PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices089PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices089PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[89]";
					this.mUIPage0BrickIndices089PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices089PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices089PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices089PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices018PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices018PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices018PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices018PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[18]";
					this.mUIPage0BrickIndices018PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices018PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices018PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices018PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices020PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices020PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices020PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices020PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[20]";
					this.mUIPage0BrickIndices020PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices020PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices020PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices020PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices022PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices022PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices022PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices022PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[22]";
					this.mUIPage0BrickIndices022PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices022PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices022PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices022PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices024PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices024PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices024PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices024PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[24]";
					this.mUIPage0BrickIndices024PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices024PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices024PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices024PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices026PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices026PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices026PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices026PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[26]";
					this.mUIPage0BrickIndices026PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices026PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices026PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices026PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices029PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices029PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices029PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices029PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[29]";
					this.mUIPage0BrickIndices029PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices029PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices029PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices029PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices03PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices03PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices03PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[3]";
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices03PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices03PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices05PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices05PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices05PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[5]";
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices05PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices05PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices07PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices07PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices07PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices07PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[7]";
					this.mUIPage0BrickIndices07PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices07PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices07PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices07PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices09PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices09PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices09PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[9]";
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices09PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices09PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11]";
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices011PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices014PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices014PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices014PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices014PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[14]";
					this.mUIPage0BrickIndices014PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices014PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices014PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices014PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices048PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices048PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices048PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices048PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[48]";
					this.mUIPage4BrickIndices048PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices048PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage4BrickIndices048PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices048PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices050PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices050PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices050PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices050PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[50]";
					this.mUIPage4BrickIndices050PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices050PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage4BrickIndices050PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices050PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices052PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices052PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices052PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices052PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[52]";
					this.mUIPage4BrickIndices052PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices052PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage4BrickIndices052PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices052PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices054PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices054PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices054PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices054PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[54]";
					this.mUIPage4BrickIndices054PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices054PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage4BrickIndices054PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices054PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices056PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices056PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices056PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices056PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[56]";
					this.mUIPage4BrickIndices056PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices056PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage4BrickIndices056PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices056PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices059PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices059PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices059PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices059PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[59]";
					this.mUIPage4BrickIndices059PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices059PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage4BrickIndices059PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices059PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices078PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices080PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices082PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices084PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices086PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices089PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices018PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices020PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices022PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices024PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices026PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices029PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices03PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices05PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices07PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices09PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices014PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices048PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices050PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices052PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices054PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices056PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices059PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom110 : DXTestControl
	{
		public UIBarDockControlCustom110(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIStatusBarMenuBar3 UIStatusBarMenuBar
		{
			get
			{
				if ((this.mUIStatusBarMenuBar == null))
				{
					this.mUIStatusBarMenuBar = new UIStatusBarMenuBar3(this);
				}
				return this.mUIStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIStatusBarMenuBar3 mUIStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStatusBarMenuBar3 : DXMenu
	{
		public UIStatusBarMenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Status Bar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPage1of1BarItem
		{
			get
			{
				if ((this.mUIPage1of1BarItem == null))
				{
					this.mUIPage1of1BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 1 of 1";
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1of1BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage1of1BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPage1of1BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControl0Custom : DXTestControl
	{
		public UIPreviewControl0Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlLabels";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client63 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client63(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client63 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client63 : DXTestControl
	{
		public UIPanelControl1Client63(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom26 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom26(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public DXTestControl UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1DockPanel[0]";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIDockPanelClient.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIDockPanelClient;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom26 mUIBarDockControlCustom;
		private DXTestControl mUIDockPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom26 : DXTestControl
	{
		public UIBarDockControlCustom26(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar8 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar8(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar8 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar8 : DXMenu
	{
		public UICustom1MenuBar8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXMenuItem UIRefreshPreviewBarItem
		{
			get
			{
				if ((this.mUIRefreshPreviewBarItem == null))
				{
					this.mUIRefreshPreviewBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Refresh Preview";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRefreshPreviewBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIRefreshPreviewBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIRefreshPreviewBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow6 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow6()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Table";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client64 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client64(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client64 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client64 : DXTestControl
	{
		public UIPanelControl1Client64(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIGcContainerClient41 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient41(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient41 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient41 : DXTestControl
	{
		public UIGcContainerClient41(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom5 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom5(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom5 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom5 : DXTestControl
	{
		public UIPreviewControlCustom5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlTable";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client65 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client65(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client65 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client65 : DXTestControl
	{
		public UIPanelControl1Client65(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIAutoHideContainerClient1 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient1(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient1 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient1(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		public UIDockPanelClient3 UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new UIDockPanelClient3(this);
				}
				return this.mUIDockPanelClient;
			}
		}
		public UIBarDockControlCustom27 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom27(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIDocumentViewerPrintViewControl4 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl4(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIAutoHideContainerClient1 mUIAutoHideContainerClient;
		private UIAutoHideControlClient1 mUIAutoHideControlClient;
		private UIDockPanelClient3 mUIDockPanelClient;
		private UIBarDockControlCustom27 mUIBarDockControlCustom;
		private UIDocumentViewerPrintViewControl4 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient1 : DXTestControl
	{
		public UIAutoHideContainerClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXTestControl UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainerDockPanel[0]";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDockPanelClient.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIDockPanelClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDockPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient1 : DXTestControl
	{
		public UIAutoHideControlClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIDockPanelClient2 UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new UIDockPanelClient2(this);
				}
				return this.mUIDockPanelClient;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelClient2 mUIDockPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelClient2 : DXTestControl
	{
		public UIDockPanelClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelClient3 : DXTestControl
	{
		public UIDockPanelClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1DockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom2 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom2 mUIControlContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom2 : DXTestControl
	{
		public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1DockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient2 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient2(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient2 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient2 : DXTestControl
	{
		public UIPnlNavigationClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPanel1Client3 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client3(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Client3 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client3 : DXTestControl
	{
		public UIPanel1Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		public DXTextEdit UITxtSpeciesNameEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNameEdit == null))
				{
					this.mUITxtSpeciesNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesName";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtSpeciesNameEdit;
			}
		}
		public DXCheckBox UIChMarkCheckBox
		{
			get
			{
				if ((this.mUIChMarkCheckBox == null))
				{
					this.mUIChMarkCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chMark";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChMarkCheckBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIChMarkCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		private DXTextEdit mUITxtSpeciesNameEdit;
		private DXCheckBox mUIChMarkCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom27 : DXTestControl
	{
		public UIBarDockControlCustom27(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar9 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar9(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar9 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar9 : DXMenu
	{
		public UICustom1MenuBar9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXMenuItem UIRefreshPreviewBarItem
		{
			get
			{
				if ((this.mUIRefreshPreviewBarItem == null))
				{
					this.mUIRefreshPreviewBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Refresh Preview";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRefreshPreviewBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIRefreshPreviewBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIRefreshPreviewBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl4 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices025PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices025PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices025PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[5]";
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices025PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices025PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices028PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices028PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices028PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices028PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[8]";
					this.mUIPage0BrickIndices028PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices028PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices028PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices028PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices021PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices021PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices021PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices021PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[11]";
					this.mUIPage0BrickIndices021PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices021PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices021PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices021PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices021PrintControlBrick1
		{
			get
			{
				if ((this.mUIPage0BrickIndices021PrintControlBrick1 == null))
				{
					this.mUIPage0BrickIndices021PrintControlBrick1 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices021PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[14]";
					this.mUIPage0BrickIndices021PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices021PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices021PrintControlBrick1.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices021PrintControlBrick1;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices021PrintControlBrick2
		{
			get
			{
				if ((this.mUIPage0BrickIndices021PrintControlBrick2 == null))
				{
					this.mUIPage0BrickIndices021PrintControlBrick2 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices021PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[17]";
					this.mUIPage0BrickIndices021PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices021PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices021PrintControlBrick2.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices021PrintControlBrick2;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices021PrintControlBrick3
		{
			get
			{
				if ((this.mUIPage0BrickIndices021PrintControlBrick3 == null))
				{
					this.mUIPage0BrickIndices021PrintControlBrick3 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices021PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[1]";
					this.mUIPage0BrickIndices021PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices021PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices021PrintControlBrick3.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices021PrintControlBrick3;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices025PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices028PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices021PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices021PrintControlBrick1;
		private DXPrintingBrick mUIPage0BrickIndices021PrintControlBrick2;
		private DXPrintingBrick mUIPage0BrickIndices021PrintControlBrick3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow7 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow7()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Groups";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client66 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client66(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client66 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client66 : DXTestControl
	{
		public UIPanelControl1Client66(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIGcContainerClient42 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient42(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient42 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient42 : DXTestControl
	{
		public UIGcContainerClient42(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom6 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom6(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom6 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom6 : DXTestControl
	{
		public UIPreviewControlCustom6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlGroups";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client67 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client67(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client67 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client67 : DXTestControl
	{
		public UIPanelControl1Client67(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIAutoHideContainerClient2 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient2(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient2 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient2(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		public UIDockPanelClient5 UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new UIDockPanelClient5(this);
				}
				return this.mUIDockPanelClient;
			}
		}
		public UIBarDockControlCustom28 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom28(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIDocumentViewerPrintViewControl5 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl5(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIAutoHideContainerClient2 mUIAutoHideContainerClient;
		private UIAutoHideControlClient2 mUIAutoHideControlClient;
		private UIDockPanelClient5 mUIDockPanelClient;
		private UIBarDockControlCustom28 mUIBarDockControlCustom;
		private UIDocumentViewerPrintViewControl5 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient2 : DXTestControl
	{
		public UIAutoHideContainerClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXTestControl UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new DXTestControl(this);
					#region Search Criteria
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainerDockPanel[0]";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
					this.mUIDockPanelClient.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDockPanelClient.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIDockPanelClient;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDockPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient2 : DXTestControl
	{
		public UIAutoHideControlClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIDockPanelClient4 UIDockPanelClient
		{
			get
			{
				if ((this.mUIDockPanelClient == null))
				{
					this.mUIDockPanelClient = new UIDockPanelClient4(this);
				}
				return this.mUIDockPanelClient;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelClient4 mUIDockPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelClient4 : DXTestControl
	{
		public UIDockPanelClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelClient5 : DXTestControl
	{
		public UIDockPanelClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1DockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom3 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom3 mUIControlContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom3 : DXTestControl
	{
		public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1DockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient3 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient3(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient3 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient3 : DXTestControl
	{
		public UIPnlNavigationClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPanel1Client4 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client4(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Client4 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client4 : DXTestControl
	{
		public UIPanel1Client4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		public DXTextEdit UITxtSpeciesNameEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNameEdit == null))
				{
					this.mUITxtSpeciesNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesName";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITxtSpeciesNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtSpeciesNameEdit;
			}
		}
		public DXCheckBox UIChMarkCheckBox
		{
			get
			{
				if ((this.mUIChMarkCheckBox == null))
				{
					this.mUIChMarkCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chMark";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChMarkCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIChMarkCheckBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIChMarkCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		private DXTextEdit mUITxtSpeciesNameEdit;
		private DXCheckBox mUIChMarkCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom28 : DXTestControl
	{
		public UIBarDockControlCustom28(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar10 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar10(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar10 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar10 : DXMenu
	{
		public UICustom1MenuBar10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXMenuItem UIRefreshPreviewBarItem
		{
			get
			{
				if ((this.mUIRefreshPreviewBarItem == null))
				{
					this.mUIRefreshPreviewBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Refresh Preview";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIRefreshPreviewBarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRefreshPreviewBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIRefreshPreviewBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIRefreshPreviewBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl5 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[2]";
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices010PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick1
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick1 == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick1 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[3]";
					this.mUIPage2BrickIndices010PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices010PrintControlBrick1.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick1;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick2
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick2 == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick2 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[0]";
					this.mUIPage2BrickIndices010PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices010PrintControlBrick2.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick2;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick3
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick3 == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick3 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[4]";
					this.mUIPage2BrickIndices010PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices010PrintControlBrick3.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick3;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick4
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick4 == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick4 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick4.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[5]";
					this.mUIPage2BrickIndices010PrintControlBrick4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick4.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage2BrickIndices010PrintControlBrick4.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick4;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick1;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick2;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick3;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow8 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow8()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Summaries";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIPanelControl1Client68 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client68(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client68 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client68 : DXTestControl
	{
		public UIPanelControl1Client68(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
			#endregion
		}
		#region Properties
		public UIGcContainerClient43 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient43(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient43 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient43 : DXTestControl
	{
		public UIGcContainerClient43(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom7 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom7(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom7 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom7 : DXTestControl
	{
		public UIPreviewControlCustom7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client69 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client69(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client69 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client69 : DXTestControl
	{
		public UIPanelControl1Client69(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl6 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl6(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl6 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl6 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices035PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices035PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices035PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices035PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[325].[0]";
					this.mUIPage0BrickIndices035PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices035PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices035PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
					#endregion
				}
				return this.mUIPage0BrickIndices035PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices032PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices032PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices032PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices032PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[295].[0]";
					this.mUIPage0BrickIndices032PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices032PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices032PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
					#endregion
				}
				return this.mUIPage0BrickIndices032PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices027PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices027PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices027PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices027PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[240].[0]";
					this.mUIPage0BrickIndices027PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices027PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices027PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Summaries");
					#endregion
				}
				return this.mUIPage0BrickIndices027PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices035PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices032PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices027PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow9 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow9()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Calendar";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client70 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client70(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client70 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client70 : DXTestControl
	{
		public UIPanelControl1Client70(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIGcContainerClient44 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient44(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient44 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient44 : DXTestControl
	{
		public UIGcContainerClient44(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom8 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom8(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom8 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom8 : DXTestControl
	{
		public UIPreviewControlCustom8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client71 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client71(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client71 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client71 : DXTestControl
	{
		public UIPanelControl1Client71(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom29 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom29(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIDocumentViewerPrintViewControl7 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl7(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		public UIBarDockControlCustom111 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom111(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom29 mUIBarDockControlCustom;
		private UIDocumentViewerPrintViewControl7 mUIDocumentViewerPrintViewControl;
		private UIBarDockControlCustom111 mUIBarDockControlCustom1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom29 : DXTestControl
	{
		public UIBarDockControlCustom29(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar12 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar12(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar12 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar12 : DXMenu
	{
		public UICustom1MenuBar12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIMonthYearBarEditItem
		{
			get
			{
				if ((this.mUIMonthYearBarEditItem == null))
				{
					this.mUIMonthYearBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIMonthYearBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Month && Year:";
					this.mUIMonthYearBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIMonthYearBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMonthYearBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIMonthYearBarEditItem;
			}
		}
		public DXDateTimePicker UIMonthYearDateTimePicker
		{
			get
			{
				if ((this.mUIMonthYearDateTimePicker == null))
				{
					this.mUIMonthYearDateTimePicker = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUIMonthYearDateTimePicker.SearchProperties[DXTestControl.PropertyNames.Name] = "Month && Year:";
					this.mUIMonthYearDateTimePicker.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
					this.mUIMonthYearDateTimePicker.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUIMonthYearDateTimePicker;
			}
		}
		public DXMenuEditItem UIPreviewModeBarEditItem
		{
			get
			{
				if ((this.mUIPreviewModeBarEditItem == null))
				{
					this.mUIPreviewModeBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIPreviewModeBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Preview Mode:";
					this.mUIPreviewModeBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIPreviewModeBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPreviewModeBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPreviewModeBarEditItem;
			}
		}
		public DXComboBox UIPreviewModeComboBox
		{
			get
			{
				if ((this.mUIPreviewModeComboBox == null))
				{
					this.mUIPreviewModeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIPreviewModeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Preview Mode:";
					this.mUIPreviewModeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIPreviewModeComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPreviewModeComboBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPreviewModeComboBox;
			}
		}
		public DXMenuEditItem UIOrientationBarEditItem
		{
			get
			{
				if ((this.mUIOrientationBarEditItem == null))
				{
					this.mUIOrientationBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIOrientationBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Orientation:";
					this.mUIOrientationBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIOrientationBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIOrientationBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIOrientationBarEditItem;
			}
		}
		public DXComboBox UIOrientationComboBox
		{
			get
			{
				if ((this.mUIOrientationComboBox == null))
				{
					this.mUIOrientationComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIOrientationComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Orientation:";
					this.mUIOrientationComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIOrientationComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIOrientationComboBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIOrientationComboBox;
			}
		}
		public DXMenuEditItem UIPageSizeBarEditItem
		{
			get
			{
				if ((this.mUIPageSizeBarEditItem == null))
				{
					this.mUIPageSizeBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIPageSizeBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page Size:";
					this.mUIPageSizeBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIPageSizeBarEditItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPageSizeBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPageSizeBarEditItem;
			}
		}
		public DXComboBox UIPageSizeComboBox
		{
			get
			{
				if ((this.mUIPageSizeComboBox == null))
				{
					this.mUIPageSizeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIPageSizeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Page Size:";
					this.mUIPageSizeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIPageSizeComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPageSizeComboBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPageSizeComboBox;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIMonthYearBarEditItem;
		private DXDateTimePicker mUIMonthYearDateTimePicker;
		private DXMenuEditItem mUIPreviewModeBarEditItem;
		private DXComboBox mUIPreviewModeComboBox;
		private DXMenuEditItem mUIOrientationBarEditItem;
		private DXComboBox mUIOrientationComboBox;
		private DXMenuEditItem mUIPageSizeBarEditItem;
		private DXComboBox mUIPageSizeComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl7 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices00PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices00PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices00PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0]";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices00PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage0BrickIndices00PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices062PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices062PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices062PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices062PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[6].[26]";
					this.mUIPage0BrickIndices062PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices062PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices062PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage0BrickIndices062PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices060PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices060PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices060PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices060PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[6].[0]";
					this.mUIPage0BrickIndices060PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices060PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices060PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage0BrickIndices060PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices000PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices000PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices000PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0].[0]";
					this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices000PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage0BrickIndices000PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices002PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices002PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices002PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices002PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0].[26]";
					this.mUIPage0BrickIndices002PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices002PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices002PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage0BrickIndices002PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices00PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices062PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices060PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices000PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices002PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom111 : DXTestControl
	{
		public UIBarDockControlCustom111(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIStatusBarMenuBar4 UIStatusBarMenuBar
		{
			get
			{
				if ((this.mUIStatusBarMenuBar == null))
				{
					this.mUIStatusBarMenuBar = new UIStatusBarMenuBar4(this);
				}
				return this.mUIStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIStatusBarMenuBar4 mUIStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStatusBarMenuBar4 : DXMenu
	{
		public UIStatusBarMenuBar4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Status Bar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPage1of2BarItem
		{
			get
			{
				if ((this.mUIPage1of2BarItem == null))
				{
					this.mUIPage1of2BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of2BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 1 of 2";
					this.mUIPage1of2BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of2BarItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage1of2BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage1of2BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPage1of2BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow10 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow10()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Master-Detail";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIPanelControl1Client72 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client72(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client72 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client72 : DXTestControl
	{
		public UIPanelControl1Client72(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIGcContainerClient45 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient45(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient45 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient45 : DXTestControl
	{
		public UIGcContainerClient45(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom9 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom9(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom9 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom9 : DXTestControl
	{
		public UIPreviewControlCustom9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIMasterDetailControlCustom UIMasterDetailControlCustom
		{
			get
			{
				if ((this.mUIMasterDetailControlCustom == null))
				{
					this.mUIMasterDetailControlCustom = new UIMasterDetailControlCustom(this);
				}
				return this.mUIMasterDetailControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIMasterDetailControlCustom mUIMasterDetailControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMasterDetailControlCustom : DXTestControl
	{
		public UIMasterDetailControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "masterDetailControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MasterDetailControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIPSTabTabList UIPSTabTabList
		{
			get
			{
				if ((this.mUIPSTabTabList == null))
				{
					this.mUIPSTabTabList = new UIPSTabTabList(this);
				}
				return this.mUIPSTabTabList;
			}
		}
		#endregion
		#region Fields
		private UIPSTabTabList mUIPSTabTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPSTabTabList : DXTestControl
	{
		public UIPSTabTabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PSTab";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UITabPage1Client UITabPage1Client
		{
			get
			{
				if ((this.mUITabPage1Client == null))
				{
					this.mUITabPage1Client = new UITabPage1Client(this);
				}
				return this.mUITabPage1Client;
			}
		}
		public UIXtraTabPageClient6 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient6(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		#endregion
		#region Fields
		private UITabPage1Client mUITabPage1Client;
		private UIXtraTabPageClient6 mUIXtraTabPageClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabPage1Client : DXTestControl
	{
		public UITabPage1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl8 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl8(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl8 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl8 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices05PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices05PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices05PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[6]";
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices05PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices05PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices05PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient6 : DXTestControl
	{
		public UIXtraTabPageClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PSTabXtraTabPage[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl9 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl9(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl9 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl9 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[10]";
					this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPage0BrickIndices010PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices010PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices010PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1RibbonSiWindow : WinWindow
	{
		public UINewDocument1RibbonSiWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "New Document 1 - Ribbon Simple Pad";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonControl1Ribbon UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public UIItemWindow7 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow7(this);
				}
				return this.mUIItemWindow;
			}
		}
		public UIBackstageViewControlCustom UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		public UIBackstageViewClientCPane UIBackstageViewClientCPane
		{
			get
			{
				if ((this.mUIBackstageViewClientCPane == null))
				{
					this.mUIBackstageViewClientCPane = new UIBackstageViewClientCPane(this);
				}
				return this.mUIBackstageViewClientCPane;
			}
		}
		public UIRibbonControl1Ribbon1 UIRibbonControl1Ribbon1
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon1 == null))
				{
					this.mUIRibbonControl1Ribbon1 = new UIRibbonControl1Ribbon1(this);
				}
				return this.mUIRibbonControl1Ribbon1;
			}
		}
		public UIRibbonStatusBar1MenuBar UIRibbonStatusBar1MenuBar
		{
			get
			{
				if ((this.mUIRibbonStatusBar1MenuBar == null))
				{
					this.mUIRibbonStatusBar1MenuBar = new UIRibbonStatusBar1MenuBar(this);
				}
				return this.mUIRibbonStatusBar1MenuBar;
			}
		}
		public UINewDocument1Window1 UINewDocument1Window
		{
			get
			{
				if ((this.mUINewDocument1Window == null))
				{
					this.mUINewDocument1Window = new UINewDocument1Window1(this);
				}
				return this.mUINewDocument1Window;
			}
		}
		#endregion
		#region Fields
		private UIRibbonControl1Ribbon mUIRibbonControl1Ribbon;
		private UIItemWindow7 mUIItemWindow;
		private UIBackstageViewControlCustom mUIBackstageViewControlCustom;
		private UIBackstageViewClientCPane mUIBackstageViewClientCPane;
		private UIRibbonControl1Ribbon1 mUIRibbonControl1Ribbon1;
		private UIRibbonStatusBar1MenuBar mUIRibbonStatusBar1MenuBar;
		private UINewDocument1Window1 mUINewDocument1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon : DXRibbon
	{
		public UIRibbonControl1Ribbon(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public UIRibbonQuickAccessTooRibbonBar1 UIRibbonQuickAccessTooRibbonBar
		{
			get
			{
				if ((this.mUIRibbonQuickAccessTooRibbonBar == null))
				{
					this.mUIRibbonQuickAccessTooRibbonBar = new UIRibbonQuickAccessTooRibbonBar1(this);
				}
				return this.mUIRibbonQuickAccessTooRibbonBar;
			}
		}
		public UIPageHeaderToolbarRibbonBar UIPageHeaderToolbarRibbonBar
		{
			get
			{
				if ((this.mUIPageHeaderToolbarRibbonBar == null))
				{
					this.mUIPageHeaderToolbarRibbonBar = new UIPageHeaderToolbarRibbonBar(this);
				}
				return this.mUIPageHeaderToolbarRibbonBar;
			}
		}
		public DXRibbonPage UIRibbonPage2RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage2RibbonPage == null))
				{
					this.mUIRibbonPage2RibbonPage = new DXRibbonPage(this);
					#region Search Criteria
					this.mUIRibbonPage2RibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage2";
					this.mUIRibbonPage2RibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
					this.mUIRibbonPage2RibbonPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonPage2RibbonPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPage2RibbonPage;
			}
		}
		public UIRibbonPage3RibbonPage UIRibbonPage3RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage3RibbonPage == null))
				{
					this.mUIRibbonPage3RibbonPage = new UIRibbonPage3RibbonPage(this);
				}
				return this.mUIRibbonPage3RibbonPage;
			}
		}
		public DXButton UIRibbonApplicationButButton
		{
			get
			{
				if ((this.mUIRibbonApplicationButButton == null))
				{
					this.mUIRibbonApplicationButButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonApplicationButButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonApplicationButButton;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage mUIRibbonPage1RibbonPage;
		private UIRibbonQuickAccessTooRibbonBar1 mUIRibbonQuickAccessTooRibbonBar;
		private UIPageHeaderToolbarRibbonBar mUIPageHeaderToolbarRibbonBar;
		private DXRibbonPage mUIRibbonPage2RibbonPage;
		private UIRibbonPage3RibbonPage mUIRibbonPage3RibbonPage;
		private DXButton mUIRibbonApplicationButButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup3RibbonPageGroup1 UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new UIRibbonPageGroup3RibbonPageGroup1(this);
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup2RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
					this.mUIRibbonPageGroup2RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup2RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonPageGroup2RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		public UIRibbonPageGroup4RibbonPageGroup UIRibbonPageGroup4RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup4RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup4RibbonPageGroup = new UIRibbonPageGroup4RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup4RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup3RibbonPageGroup1 mUIRibbonPageGroup3RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup2RibbonPageGroup;
		private UIRibbonPageGroup4RibbonPageGroup mUIRibbonPageGroup4RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup3RibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup3RibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIFontStyleRibbonItem1 UIFontStyleRibbonItem
		{
			get
			{
				if ((this.mUIFontStyleRibbonItem == null))
				{
					this.mUIFontStyleRibbonItem = new UIFontStyleRibbonItem1(this);
				}
				return this.mUIFontStyleRibbonItem;
			}
		}
		#endregion
		#region Fields
		private UIFontStyleRibbonItem1 mUIFontStyleRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontStyleRibbonItem1 : DXRibbonItem
	{
		public UIFontStyleRibbonItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FontStyle";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIBoldRibbonItem
		{
			get
			{
				if ((this.mUIBoldRibbonItem == null))
				{
					this.mUIBoldRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIBoldRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Bold";
					this.mUIBoldRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIBoldRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBoldRibbonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIBoldRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIBoldRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup4RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup4RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIFindRibbonItem
		{
			get
			{
				if ((this.mUIFindRibbonItem == null))
				{
					this.mUIFindRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIFindRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Find";
					this.mUIFindRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIFindRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIFindRibbonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIFindRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIFindRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonQuickAccessTooRibbonBar1 : DXTestControl
	{
		public UIRibbonQuickAccessTooRibbonBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonQuickAccessToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonQuickAccessToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIBoldRibbonItem
		{
			get
			{
				if ((this.mUIBoldRibbonItem == null))
				{
					this.mUIBoldRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIBoldRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Bold";
					this.mUIBoldRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIBoldRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBoldRibbonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIBoldRibbonItem;
			}
		}
		public DXRibbonItem UIRibbonToolbarPopupItRibbonItem
		{
			get
			{
				if ((this.mUIRibbonToolbarPopupItRibbonItem == null))
				{
					this.mUIRibbonToolbarPopupItRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIRibbonToolbarPopupItRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonToolbarPopupItemLink[0]";
					this.mUIRibbonToolbarPopupItRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIRibbonToolbarPopupItRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonToolbarPopupItRibbonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonToolbarPopupItRibbonItem;
			}
		}
		public DXRibbonItem UIReplaceRibbonItem
		{
			get
			{
				if ((this.mUIReplaceRibbonItem == null))
				{
					this.mUIReplaceRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIReplaceRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "R&eplace...";
					this.mUIReplaceRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIReplaceRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIReplaceRibbonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIReplaceRibbonItem;
			}
		}
		public DXRibbonItem UICustomizeToolbarRibbonItem
		{
			get
			{
				if ((this.mUICustomizeToolbarRibbonItem == null))
				{
					this.mUICustomizeToolbarRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUICustomizeToolbarRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Customize Toolbar";
					this.mUICustomizeToolbarRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUICustomizeToolbarRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICustomizeToolbarRibbonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICustomizeToolbarRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIBoldRibbonItem;
		private DXRibbonItem mUIRibbonToolbarPopupItRibbonItem;
		private DXRibbonItem mUIReplaceRibbonItem;
		private DXRibbonItem mUICustomizeToolbarRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageHeaderToolbarRibbonBar : DXTestControl
	{
		public UIPageHeaderToolbarRibbonBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PageHeaderToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PageHeaderToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIRibbonExpandCollapseRibbonItem
		{
			get
			{
				if ((this.mUIRibbonExpandCollapseRibbonItem == null))
				{
					this.mUIRibbonExpandCollapseRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIRibbonExpandCollapseRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonExpandCollapseItemLink[0]";
					this.mUIRibbonExpandCollapseRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIRibbonExpandCollapseRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonExpandCollapseRibbonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonExpandCollapseRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIRibbonExpandCollapseRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage3RibbonPage : DXRibbonPage
	{
		public UIRibbonPage3RibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRpgFontColorRibbonPageGroup UIRpgFontColorRibbonPageGroup
		{
			get
			{
				if ((this.mUIRpgFontColorRibbonPageGroup == null))
				{
					this.mUIRpgFontColorRibbonPageGroup = new UIRpgFontColorRibbonPageGroup(this);
				}
				return this.mUIRpgFontColorRibbonPageGroup;
			}
		}
		public UIRpgFontRibbonPageGroup UIRpgFontRibbonPageGroup
		{
			get
			{
				if ((this.mUIRpgFontRibbonPageGroup == null))
				{
					this.mUIRpgFontRibbonPageGroup = new UIRpgFontRibbonPageGroup(this);
				}
				return this.mUIRpgFontRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRpgFontColorRibbonPageGroup mUIRpgFontColorRibbonPageGroup;
		private UIRpgFontRibbonPageGroup mUIRpgFontRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpgFontColorRibbonPageGroup : DXRibbonPageGroup
	{
		public UIRpgFontColorRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFontColor";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIColorRibbonGallery UIColorRibbonGallery
		{
			get
			{
				if ((this.mUIColorRibbonGallery == null))
				{
					this.mUIColorRibbonGallery = new UIColorRibbonGallery(this);
				}
				return this.mUIColorRibbonGallery;
			}
		}
		#endregion
		#region Fields
		private UIColorRibbonGallery mUIColorRibbonGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIColorRibbonGallery : DXTestControl
	{
		public UIColorRibbonGallery(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Color";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonGalleryDropDowButton
		{
			get
			{
				if ((this.mUIRibbonGalleryDropDowButton == null))
				{
					this.mUIRibbonGalleryDropDowButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonGalleryDropDowButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonGalleryDropDowButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpgFontRibbonPageGroup : DXRibbonPageGroup
	{
		public UIRpgFontRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFont";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIFontRibbonGallery UIFontRibbonGallery
		{
			get
			{
				if ((this.mUIFontRibbonGallery == null))
				{
					this.mUIFontRibbonGallery = new UIFontRibbonGallery(this);
				}
				return this.mUIFontRibbonGallery;
			}
		}
		#endregion
		#region Fields
		private UIFontRibbonGallery mUIFontRibbonGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontRibbonGallery : DXTestControl
	{
		public UIFontRibbonGallery(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Font";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonGalleryDropDowButton
		{
			get
			{
				if ((this.mUIRibbonGalleryDropDowButton == null))
				{
					this.mUIRibbonGalleryDropDowButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonGalleryDropDowButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonGalleryDropDowButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow7 : WinWindow
	{
		public UIItemWindow7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.MDICLIENT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1RibbonSiClient UINewDocument1RibbonSiClient
		{
			get
			{
				if ((this.mUINewDocument1RibbonSiClient == null))
				{
					this.mUINewDocument1RibbonSiClient = new UINewDocument1RibbonSiClient(this);
				}
				return this.mUINewDocument1RibbonSiClient;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1RibbonSiClient mUINewDocument1RibbonSiClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1RibbonSiClient : WinClient
	{
		public UINewDocument1RibbonSiClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1Window UINewDocument1Window
		{
			get
			{
				if ((this.mUINewDocument1Window == null))
				{
					this.mUINewDocument1Window = new UINewDocument1Window(this);
				}
				return this.mUINewDocument1Window;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1Window mUINewDocument1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Window : WinWindow
	{
		public UINewDocument1Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "New Document 1";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window : WinWindow
	{
		public UIRichTextBox1Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "richTextBox1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom : DXTestControl
	{
		public UIBackstageViewControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIBackstageViewClientCScrollableControl UIBackstageViewClientCScrollableControl
		{
			get
			{
				if ((this.mUIBackstageViewClientCScrollableControl == null))
				{
					this.mUIBackstageViewClientCScrollableControl = new UIBackstageViewClientCScrollableControl(this);
				}
				return this.mUIBackstageViewClientCScrollableControl;
			}
		}
		public UIBackstageViewClientCScrollableControl1 UIBackstageViewClientCScrollableControl1
		{
			get
			{
				if ((this.mUIBackstageViewClientCScrollableControl1 == null))
				{
					this.mUIBackstageViewClientCScrollableControl1 = new UIBackstageViewClientCScrollableControl1(this);
				}
				return this.mUIBackstageViewClientCScrollableControl1;
			}
		}
		public DXTestControl UIPrintTabPage
		{
			get
			{
				if ((this.mUIPrintTabPage == null))
				{
					this.mUIPrintTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIPrintTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "bvTabPrint";
					this.mUIPrintTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIPrintTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPrintTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPrintTabPage;
			}
		}
		public DXTestControl UIExportTabPage
		{
			get
			{
				if ((this.mUIExportTabPage == null))
				{
					this.mUIExportTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIExportTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "bvExport";
					this.mUIExportTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIExportTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIExportTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIExportTabPage;
			}
		}
		public UIBackstageViewClientCScrollableControl2 UIBackstageViewClientCScrollableControl2
		{
			get
			{
				if ((this.mUIBackstageViewClientCScrollableControl2 == null))
				{
					this.mUIBackstageViewClientCScrollableControl2 = new UIBackstageViewClientCScrollableControl2(this);
				}
				return this.mUIBackstageViewClientCScrollableControl2;
			}
		}
		#endregion
		#region Fields
		private UIBackstageViewClientCScrollableControl mUIBackstageViewClientCScrollableControl;
		private UIBackstageViewClientCScrollableControl1 mUIBackstageViewClientCScrollableControl1;
		private DXTestControl mUIPrintTabPage;
		private DXTestControl mUIExportTabPage;
		private UIBackstageViewClientCScrollableControl2 mUIBackstageViewClientCScrollableControl2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCScrollableControl : DXScrollableControl
	{
		public UIBackstageViewClientCScrollableControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXCheckBox UICheckEdit1CheckBox
		{
			get
			{
				if ((this.mUICheckEdit1CheckBox == null))
				{
					this.mUICheckEdit1CheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkEdit1";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
					this.mUICheckEdit1CheckBox.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICheckEdit1CheckBox;
			}
		}
		public DXTextEdit UISpinEdit1Edit
		{
			get
			{
				if ((this.mUISpinEdit1Edit == null))
				{
					this.mUISpinEdit1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "spinEdit1";
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
					this.mUISpinEdit1Edit.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUISpinEdit1Edit;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUICheckEdit1CheckBox;
		private DXTextEdit mUISpinEdit1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCScrollableControl1 : DXScrollableControl
	{
		public UIBackstageViewClientCScrollableControl1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom6 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom6(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom6 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom6 : DXTestControl
	{
		public UILayoutControl1Custom6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIDdbPrinterButton UIDdbPrinterButton
		{
			get
			{
				if ((this.mUIDdbPrinterButton == null))
				{
					this.mUIDdbPrinterButton = new UIDdbPrinterButton(this);
				}
				return this.mUIDdbPrinterButton;
			}
		}
		public DXTextEdit UICopySpinEditEdit
		{
			get
			{
				if ((this.mUICopySpinEditEdit == null))
				{
					this.mUICopySpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUICopySpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "copySpinEdit";
					this.mUICopySpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUICopySpinEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICopySpinEditEdit.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICopySpinEditEdit;
			}
		}
		public UIDdbDuplexButton UIDdbDuplexButton
		{
			get
			{
				if ((this.mUIDdbDuplexButton == null))
				{
					this.mUIDdbDuplexButton = new UIDdbDuplexButton(this);
				}
				return this.mUIDdbDuplexButton;
			}
		}
		public UIDdbCollateButton UIDdbCollateButton
		{
			get
			{
				if ((this.mUIDdbCollateButton == null))
				{
					this.mUIDdbCollateButton = new UIDdbCollateButton(this);
				}
				return this.mUIDdbCollateButton;
			}
		}
		public UIDdbOrientationButton UIDdbOrientationButton
		{
			get
			{
				if ((this.mUIDdbOrientationButton == null))
				{
					this.mUIDdbOrientationButton = new UIDdbOrientationButton(this);
				}
				return this.mUIDdbOrientationButton;
			}
		}
		public UIDdbMarginsButton UIDdbMarginsButton
		{
			get
			{
				if ((this.mUIDdbMarginsButton == null))
				{
					this.mUIDdbMarginsButton = new UIDdbMarginsButton(this);
				}
				return this.mUIDdbMarginsButton;
			}
		}
		public UIDdbPaperSizeButton UIDdbPaperSizeButton
		{
			get
			{
				if ((this.mUIDdbPaperSizeButton == null))
				{
					this.mUIDdbPaperSizeButton = new UIDdbPaperSizeButton(this);
				}
				return this.mUIDdbPaperSizeButton;
			}
		}
		#endregion
		#region Fields
		private UIDdbPrinterButton mUIDdbPrinterButton;
		private DXTextEdit mUICopySpinEditEdit;
		private UIDdbDuplexButton mUIDdbDuplexButton;
		private UIDdbCollateButton mUIDdbCollateButton;
		private UIDdbOrientationButton mUIDdbOrientationButton;
		private UIDdbMarginsButton mUIDdbMarginsButton;
		private UIDdbPaperSizeButton mUIDdbPaperSizeButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDdbPrinterButton : DXButton
	{
		public UIDdbPrinterButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbPrinter";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbPrinterArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDdbDuplexButton : DXButton
	{
		public UIDdbDuplexButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbDuplex";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbDuplexArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDdbCollateButton : DXButton
	{
		public UIDdbCollateButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbCollate";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbCollateArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDdbOrientationButton : DXButton
	{
		public UIDdbOrientationButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbOrientation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbOrientationArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDdbMarginsButton : DXButton
	{
		public UIDdbMarginsButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbMargins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbMarginsArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDdbPaperSizeButton : DXButton
	{
		public UIDdbPaperSizeButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbPaperSize";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbPaperSizeArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCScrollableControl2 : DXScrollableControl
	{
		public UIBackstageViewClientCScrollableControl2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIExportGalleryCustom UIExportGalleryCustom
		{
			get
			{
				if ((this.mUIExportGalleryCustom == null))
				{
					this.mUIExportGalleryCustom = new UIExportGalleryCustom(this);
				}
				return this.mUIExportGalleryCustom;
			}
		}
		#endregion
		#region Fields
		private UIExportGalleryCustom mUIExportGalleryCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportGalleryCustom : DXTestControl
	{
		public UIExportGalleryCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "exportGallery";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIExportGalleryGallery UIExportGalleryGallery
		{
			get
			{
				if ((this.mUIExportGalleryGallery == null))
				{
					this.mUIExportGalleryGallery = new UIExportGalleryGallery(this);
				}
				return this.mUIExportGalleryGallery;
			}
		}
		#endregion
		#region Fields
		private UIExportGalleryGallery mUIExportGalleryGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportGalleryGallery : DXTestControl
	{
		public UIExportGalleryGallery(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "exportGallery";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryControlClient";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIGroup1GalleryItemGroup UIGroup1GalleryItemGroup
		{
			get
			{
				if ((this.mUIGroup1GalleryItemGroup == null))
				{
					this.mUIGroup1GalleryItemGroup = new UIGroup1GalleryItemGroup(this);
				}
				return this.mUIGroup1GalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIGroup1GalleryItemGroup mUIGroup1GalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroup1GalleryItemGroup : DXTestControl
	{
		public UIGroup1GalleryItemGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Group1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIRTFFileGalleryItem
		{
			get
			{
				if ((this.mUIRTFFileGalleryItem == null))
				{
					this.mUIRTFFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIRTFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF File";
					this.mUIRTFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIRTFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRTFFileGalleryItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRTFFileGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIRTFFileGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCPane : WinPane
	{
		public UIBackstageViewClientCPane(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRecentItemsControl1Window UIRecentItemsControl1Window
		{
			get
			{
				if ((this.mUIRecentItemsControl1Window == null))
				{
					this.mUIRecentItemsControl1Window = new UIRecentItemsControl1Window(this);
				}
				return this.mUIRecentItemsControl1Window;
			}
		}
		#endregion
		#region Fields
		private UIRecentItemsControl1Window mUIRecentItemsControl1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRecentItemsControl1Window : WinWindow
	{
		public UIRecentItemsControl1Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIItemWindow8 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow8(this);
				}
				return this.mUIItemWindow;
			}
		}
		#endregion
		#region Fields
		private UIItemWindow8 mUIItemWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow8 : WinWindow
	{
		public UIItemWindow8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinClient UISplitContainer1Client
		{
			get
			{
				if ((this.mUISplitContainer1Client == null))
				{
					this.mUISplitContainer1Client = new WinClient(this);
					#region Search Criteria
					this.mUISplitContainer1Client.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUISplitContainer1Client;
			}
		}
		#endregion
		#region Fields
		private WinClient mUISplitContainer1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon1 : DXRibbon
	{
		public UIRibbonControl1Ribbon1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage3RibbonPage1 UIRibbonPage3RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage3RibbonPage == null))
				{
					this.mUIRibbonPage3RibbonPage = new UIRibbonPage3RibbonPage1(this);
				}
				return this.mUIRibbonPage3RibbonPage;
			}
		}
		public UIRibbonPage1RibbonPage1 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage1(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public UIRibbonPageCategory1RibbonPageCategory UIRibbonPageCategory1RibbonPageCategory
		{
			get
			{
				if ((this.mUIRibbonPageCategory1RibbonPageCategory == null))
				{
					this.mUIRibbonPageCategory1RibbonPageCategory = new UIRibbonPageCategory1RibbonPageCategory(this);
				}
				return this.mUIRibbonPageCategory1RibbonPageCategory;
			}
		}
		public UIRibbonPageCategory1RibbonPageCategory1 UIRibbonPageCategory1RibbonPageCategory1
		{
			get
			{
				if ((this.mUIRibbonPageCategory1RibbonPageCategory1 == null))
				{
					this.mUIRibbonPageCategory1RibbonPageCategory1 = new UIRibbonPageCategory1RibbonPageCategory1(this);
				}
				return this.mUIRibbonPageCategory1RibbonPageCategory1;
			}
		}
		public UIRibbonPage2RibbonPage UIRibbonPage2RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage2RibbonPage == null))
				{
					this.mUIRibbonPage2RibbonPage = new UIRibbonPage2RibbonPage(this);
				}
				return this.mUIRibbonPage2RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage3RibbonPage1 mUIRibbonPage3RibbonPage;
		private UIRibbonPage1RibbonPage1 mUIRibbonPage1RibbonPage;
		private UIRibbonPageCategory1RibbonPageCategory mUIRibbonPageCategory1RibbonPageCategory;
		private UIRibbonPageCategory1RibbonPageCategory1 mUIRibbonPageCategory1RibbonPageCategory1;
		private UIRibbonPage2RibbonPage mUIRibbonPage2RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage3RibbonPage1 : DXRibbonPage
	{
		public UIRibbonPage3RibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRpgFontColorRibbonPageGroup1 UIRpgFontColorRibbonPageGroup
		{
			get
			{
				if ((this.mUIRpgFontColorRibbonPageGroup == null))
				{
					this.mUIRpgFontColorRibbonPageGroup = new UIRpgFontColorRibbonPageGroup1(this);
				}
				return this.mUIRpgFontColorRibbonPageGroup;
			}
		}
		public UIRibbonPageGroup11RibbonPageGroup UIRibbonPageGroup11RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup11RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup11RibbonPageGroup = new UIRibbonPageGroup11RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup11RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRpgFontColorRibbonPageGroup1 mUIRpgFontColorRibbonPageGroup;
		private UIRibbonPageGroup11RibbonPageGroup mUIRibbonPageGroup11RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpgFontColorRibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRpgFontColorRibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFontColor";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIColorRibbonGallery1 UIColorRibbonGallery
		{
			get
			{
				if ((this.mUIColorRibbonGallery == null))
				{
					this.mUIColorRibbonGallery = new UIColorRibbonGallery1(this);
				}
				return this.mUIColorRibbonGallery;
			}
		}
		#endregion
		#region Fields
		private UIColorRibbonGallery1 mUIColorRibbonGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIColorRibbonGallery1 : DXTestControl
	{
		public UIColorRibbonGallery1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Color";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonGalleryDropDowButton
		{
			get
			{
				if ((this.mUIRibbonGalleryDropDowButton == null))
				{
					this.mUIRibbonGalleryDropDowButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonGalleryDropDowButton;
			}
		}
		public DXButton UIRibbonGalleryDownButButton
		{
			get
			{
				if ((this.mUIRibbonGalleryDownButButton == null))
				{
					this.mUIRibbonGalleryDownButButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDownButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDownButton";
					this.mUIRibbonGalleryDownButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDownButton";
					this.mUIRibbonGalleryDownButButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonGalleryDownButButton;
			}
		}
		public DXButton UIRibbonGalleryDownButButton1
		{
			get
			{
				if ((this.mUIRibbonGalleryDownButButton1 == null))
				{
					this.mUIRibbonGalleryDownButButton1 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDownButButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDownButton";
					this.mUIRibbonGalleryDownButButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDownButton";
					this.mUIRibbonGalleryDownButButton1.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonGalleryDownButButton1;
			}
		}
		public UIMainGalleryItemGroup UIMainGalleryItemGroup
		{
			get
			{
				if ((this.mUIMainGalleryItemGroup == null))
				{
					this.mUIMainGalleryItemGroup = new UIMainGalleryItemGroup(this);
				}
				return this.mUIMainGalleryItemGroup;
			}
		}
		public DXButton UIRibbonGalleryUpButtoButton
		{
			get
			{
				if ((this.mUIRibbonGalleryUpButtoButton == null))
				{
					this.mUIRibbonGalleryUpButtoButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryUpButtoButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryUpButton";
					this.mUIRibbonGalleryUpButtoButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryUpButton";
					this.mUIRibbonGalleryUpButtoButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonGalleryUpButtoButton;
			}
		}
		public DXButton UIRibbonGalleryUpButtoButton1
		{
			get
			{
				if ((this.mUIRibbonGalleryUpButtoButton1 == null))
				{
					this.mUIRibbonGalleryUpButtoButton1 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryUpButtoButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryUpButton";
					this.mUIRibbonGalleryUpButtoButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryUpButton";
					this.mUIRibbonGalleryUpButtoButton1.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonGalleryUpButtoButton1;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonGalleryDropDowButton;
		private DXButton mUIRibbonGalleryDownButButton;
		private DXButton mUIRibbonGalleryDownButButton1;
		private UIMainGalleryItemGroup mUIMainGalleryItemGroup;
		private DXButton mUIRibbonGalleryUpButtoButton;
		private DXButton mUIRibbonGalleryUpButtoButton1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMainGalleryItemGroup : DXTestControl
	{
		public UIMainGalleryItemGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryGroup";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIDarkOrangeGalleryItem
		{
			get
			{
				if ((this.mUIDarkOrangeGalleryItem == null))
				{
					this.mUIDarkOrangeGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIDarkOrangeGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "DarkOrange";
					this.mUIDarkOrangeGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryItem";
					this.mUIDarkOrangeGalleryItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDarkOrangeGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDarkOrangeGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup11RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup11RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup11";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UISkinsRibbonGallery UISkinsRibbonGallery
		{
			get
			{
				if ((this.mUISkinsRibbonGallery == null))
				{
					this.mUISkinsRibbonGallery = new UISkinsRibbonGallery(this);
				}
				return this.mUISkinsRibbonGallery;
			}
		}
		#endregion
		#region Fields
		private UISkinsRibbonGallery mUISkinsRibbonGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISkinsRibbonGallery : DXTestControl
	{
		public UISkinsRibbonGallery(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Skins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIStandardSkinsGalleryItemGroup2 UIStandardSkinsGalleryItemGroup
		{
			get
			{
				if ((this.mUIStandardSkinsGalleryItemGroup == null))
				{
					this.mUIStandardSkinsGalleryItemGroup = new UIStandardSkinsGalleryItemGroup2(this);
				}
				return this.mUIStandardSkinsGalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIStandardSkinsGalleryItemGroup2 mUIStandardSkinsGalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStandardSkinsGalleryItemGroup2 : DXTestControl
	{
		public UIStandardSkinsGalleryItemGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Standard Skins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryGroup";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIVS2010GalleryItem
		{
			get
			{
				if ((this.mUIVS2010GalleryItem == null))
				{
					this.mUIVS2010GalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIVS2010GalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Visual Studio 2010";
					this.mUIVS2010GalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryItem";
					this.mUIVS2010GalleryItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIVS2010GalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIVS2010GalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage1 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPageGroup UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup3";
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup3RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup2RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
					this.mUIRibbonPageGroup2RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup2RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPageGroup mUIRibbonPageGroup3RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup2RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageCategory1RibbonPageCategory : DXRibbonPageCategory
	{
		public UIRibbonPageCategory1RibbonPageCategory(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageCategory1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPage UIRibbonPage4RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage4RibbonPage == null))
				{
					this.mUIRibbonPage4RibbonPage = new DXRibbonPage(this);
					#region Search Criteria
					this.mUIRibbonPage4RibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage4";
					this.mUIRibbonPage4RibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
					this.mUIRibbonPage4RibbonPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPage4RibbonPage;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPage mUIRibbonPage4RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageCategory1RibbonPageCategory1 : DXRibbonPageCategory
	{
		public UIRibbonPageCategory1RibbonPageCategory1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageCategory1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage4RibbonPage UIRibbonPage4RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage4RibbonPage == null))
				{
					this.mUIRibbonPage4RibbonPage = new UIRibbonPage4RibbonPage(this);
				}
				return this.mUIRibbonPage4RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage4RibbonPage mUIRibbonPage4RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage4RibbonPage : DXRibbonPage
	{
		public UIRibbonPage4RibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup13RibbonPageGroup UIRibbonPageGroup13RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup13RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup13RibbonPageGroup = new UIRibbonPageGroup13RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup13RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup13RibbonPageGroup mUIRibbonPageGroup13RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup13RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup13RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup13";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIBoldRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIBoldRibbonBaseButtonItem == null))
				{
					this.mUIBoldRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIBoldRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Bold";
					this.mUIBoldRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIBoldRibbonBaseButtonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIBoldRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIBoldRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage2RibbonPage : DXRibbonPage
	{
		public UIRibbonPage2RibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPageGroup UIRibbonPageGroup5RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup5RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup5RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup5RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup5";
					this.mUIRibbonPageGroup5RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup5RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup5RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup6RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup6RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup6RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup6RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup6";
					this.mUIRibbonPageGroup6RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup6RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup6RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPageGroup mUIRibbonPageGroup5RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup6RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonStatusBar1MenuBar : DXMenu
	{
		public UIRibbonStatusBar1MenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBar1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXMenuItem UILine1Position1BarItem
		{
			get
			{
				if ((this.mUILine1Position1BarItem == null))
				{
					this.mUILine1Position1BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUILine1Position1BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "   Line: 1  Position: 1   ";
					this.mUILine1Position1BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUILine1Position1BarItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUILine1Position1BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUILine1Position1BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Window1 : WinWindow
	{
		public UINewDocument1Window1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "frmPad";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1Client UINewDocument1Client
		{
			get
			{
				if ((this.mUINewDocument1Client == null))
				{
					this.mUINewDocument1Client = new UINewDocument1Client(this);
				}
				return this.mUINewDocument1Client;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1Client mUINewDocument1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Client : WinClient
	{
		public UINewDocument1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "New Document 1";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window1 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window1(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window1 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window1 : WinWindow
	{
		public UIRichTextBox1Window1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.RichEdit20W", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow31 : WinWindow
	{
		public UIItemWindow31()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
			#endregion
		}
		#region Properties
		public UIRibbonOneGroupControRibbon2 UIRibbonOneGroupControRibbon
		{
			get
			{
				if ((this.mUIRibbonOneGroupControRibbon == null))
				{
					this.mUIRibbonOneGroupControRibbon = new UIRibbonOneGroupControRibbon2(this);
				}
				return this.mUIRibbonOneGroupControRibbon;
			}
		}
		public UIRibbonMinimizedContrRibbon1 UIRibbonMinimizedContrRibbon
		{
			get
			{
				if ((this.mUIRibbonMinimizedContrRibbon == null))
				{
					this.mUIRibbonMinimizedContrRibbon = new UIRibbonMinimizedContrRibbon1(this);
				}
				return this.mUIRibbonMinimizedContrRibbon;
			}
		}
		public UIRibbonOneGroupControRibbon12 UIRibbonOneGroupControRibbon1
		{
			get
			{
				if ((this.mUIRibbonOneGroupControRibbon1 == null))
				{
					this.mUIRibbonOneGroupControRibbon1 = new UIRibbonOneGroupControRibbon12(this);
				}
				return this.mUIRibbonOneGroupControRibbon1;
			}
		}
		public UIRibbonPopupToolbarCoRibbon1 UIRibbonPopupToolbarCoRibbon
		{
			get
			{
				if ((this.mUIRibbonPopupToolbarCoRibbon == null))
				{
					this.mUIRibbonPopupToolbarCoRibbon = new UIRibbonPopupToolbarCoRibbon1(this);
				}
				return this.mUIRibbonPopupToolbarCoRibbon;
			}
		}
		#endregion
		#region Fields
		private UIRibbonOneGroupControRibbon2 mUIRibbonOneGroupControRibbon;
		private UIRibbonMinimizedContrRibbon1 mUIRibbonMinimizedContrRibbon;
		private UIRibbonOneGroupControRibbon12 mUIRibbonOneGroupControRibbon1;
		private UIRibbonPopupToolbarCoRibbon1 mUIRibbonPopupToolbarCoRibbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonOneGroupControRibbon2 : DXRibbon
	{
		public UIRibbonOneGroupControRibbon2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonOneGroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonOneGroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIItemRibbonPage2 UIItemRibbonPage
		{
			get
			{
				if ((this.mUIItemRibbonPage == null))
				{
					this.mUIItemRibbonPage = new UIItemRibbonPage2(this);
				}
				return this.mUIItemRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIItemRibbonPage2 mUIItemRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPage2 : DXRibbonPage
	{
		public UIItemRibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = null;
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup2RibbonPageGroup3 UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup3(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup2RibbonPageGroup3 mUIRibbonPageGroup2RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup3 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			#endregion
		}
		#region Properties
		public DXRibbonItem UISelectAllRibbonItem
		{
			get
			{
				if ((this.mUISelectAllRibbonItem == null))
				{
					this.mUISelectAllRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUISelectAllRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Select A&ll";
					this.mUISelectAllRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUISelectAllRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUISelectAllRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUISelectAllRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonMinimizedContrRibbon1 : DXRibbon
	{
		public UIRibbonMinimizedContrRibbon1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonMinimizedControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonMinimizedControl";
			#endregion
		}
		#region Properties
		public UIItemRibbonPage3 UIItemRibbonPage
		{
			get
			{
				if ((this.mUIItemRibbonPage == null))
				{
					this.mUIItemRibbonPage = new UIItemRibbonPage3(this);
				}
				return this.mUIItemRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIItemRibbonPage3 mUIItemRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPage3 : DXRibbonPage
	{
		public UIItemRibbonPage3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup5RibbonPageGroup1 UIRibbonPageGroup5RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup5RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup5RibbonPageGroup = new UIRibbonPageGroup5RibbonPageGroup1(this);
				}
				return this.mUIRibbonPageGroup5RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup5RibbonPageGroup1 mUIRibbonPageGroup5RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup5RibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup5RibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIPasteRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteRibbonBaseButtonItem == null))
				{
					this.mUIPasteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIPasteRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIPasteRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonOneGroupControRibbon12 : DXRibbon
	{
		public UIRibbonOneGroupControRibbon12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonOneGroupControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonOneGroupControl";
			#endregion
		}
		#region Properties
		public UIItemRibbonPage4 UIItemRibbonPage
		{
			get
			{
				if ((this.mUIItemRibbonPage == null))
				{
					this.mUIItemRibbonPage = new UIItemRibbonPage4(this);
				}
				return this.mUIItemRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIItemRibbonPage4 mUIItemRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPage4 : DXRibbonPage
	{
		public UIItemRibbonPage4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup2RibbonPageGroup4 UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup4(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup2RibbonPageGroup4 mUIRibbonPageGroup2RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup4 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			#endregion
		}
		#region Properties
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		public DXRibbonButtonItem UIUndoRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIUndoRibbonBaseButtonItem == null))
				{
					this.mUIUndoRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIUndoRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Undo";
					this.mUIUndoRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIUndoRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIPasteRibbonItem;
		private DXRibbonButtonItem mUIUndoRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPopupToolbarCoRibbon1 : DXRibbon
	{
		public UIRibbonPopupToolbarCoRibbon1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPopupToolbarControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPopupToolbarControl";
			#endregion
		}
		#region Properties
		public UIRibbonQuickAccessTooRibbonBar2 UIRibbonQuickAccessTooRibbonBar
		{
			get
			{
				if ((this.mUIRibbonQuickAccessTooRibbonBar == null))
				{
					this.mUIRibbonQuickAccessTooRibbonBar = new UIRibbonQuickAccessTooRibbonBar2(this);
				}
				return this.mUIRibbonQuickAccessTooRibbonBar;
			}
		}
		#endregion
		#region Fields
		private UIRibbonQuickAccessTooRibbonBar2 mUIRibbonQuickAccessTooRibbonBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonQuickAccessTooRibbonBar2 : DXTestControl
	{
		public UIRibbonQuickAccessTooRibbonBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonQuickAccessToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonQuickAccessToolbar";
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIPasteRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteRibbonBaseButtonItem == null))
				{
					this.mUIPasteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					#endregion
				}
				return this.mUIPasteRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIPasteRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1RibbonSiWindow1 : WinWindow
	{
		public UINewDocument1RibbonSiWindow1()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "New Document 1* - Ribbon Simple Pad";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIItemWindow9 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow9(this);
				}
				return this.mUIItemWindow;
			}
		}
		public UIRibbonControl1Ribbon2 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon2(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public DXTestControl UIMdiClientCustom
		{
			get
			{
				if ((this.mUIMdiClientCustom == null))
				{
					this.mUIMdiClientCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIMdiClientCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "MdiClient[0]";
					this.mUIMdiClientCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MdiClient";
					this.mUIMdiClientCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIMdiClientCustom.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIMdiClientCustom;
			}
		}
		public UIBackstageViewControlCustom1 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom1(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		public UIRibbonControl1Ribbon11 UIRibbonControl1Ribbon1
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon1 == null))
				{
					this.mUIRibbonControl1Ribbon1 = new UIRibbonControl1Ribbon11(this);
				}
				return this.mUIRibbonControl1Ribbon1;
			}
		}
		public UIRibbonStatusBar1MenuBar1 UIRibbonStatusBar1MenuBar
		{
			get
			{
				if ((this.mUIRibbonStatusBar1MenuBar == null))
				{
					this.mUIRibbonStatusBar1MenuBar = new UIRibbonStatusBar1MenuBar1(this);
				}
				return this.mUIRibbonStatusBar1MenuBar;
			}
		}
		public UINewDocument1Window3 UINewDocument1Window
		{
			get
			{
				if ((this.mUINewDocument1Window == null))
				{
					this.mUINewDocument1Window = new UINewDocument1Window3(this);
				}
				return this.mUINewDocument1Window;
			}
		}
		public UINewDocument1Window11 UINewDocument1Window1
		{
			get
			{
				if ((this.mUINewDocument1Window1 == null))
				{
					this.mUINewDocument1Window1 = new UINewDocument1Window11(this);
				}
				return this.mUINewDocument1Window1;
			}
		}
		public UIMdiClientTabList UIMdiClientTabList
		{
			get
			{
				if ((this.mUIMdiClientTabList == null))
				{
					this.mUIMdiClientTabList = new UIMdiClientTabList(this);
				}
				return this.mUIMdiClientTabList;
			}
		}
		#endregion
		#region Fields
		private UIItemWindow9 mUIItemWindow;
		private UIRibbonControl1Ribbon2 mUIRibbonControl1Ribbon;
		private DXTestControl mUIMdiClientCustom;
		private UIBackstageViewControlCustom1 mUIBackstageViewControlCustom;
		private UIRibbonControl1Ribbon11 mUIRibbonControl1Ribbon1;
		private UIRibbonStatusBar1MenuBar1 mUIRibbonStatusBar1MenuBar;
		private UINewDocument1Window3 mUINewDocument1Window;
		private UINewDocument1Window11 mUINewDocument1Window1;
		private UIMdiClientTabList mUIMdiClientTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow9 : WinWindow
	{
		public UIItemWindow9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.MDICLIENT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1RibbonSiClient1 UINewDocument1RibbonSiClient
		{
			get
			{
				if ((this.mUINewDocument1RibbonSiClient == null))
				{
					this.mUINewDocument1RibbonSiClient = new UINewDocument1RibbonSiClient1(this);
				}
				return this.mUINewDocument1RibbonSiClient;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1RibbonSiClient1 mUINewDocument1RibbonSiClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1RibbonSiClient1 : WinClient
	{
		public UINewDocument1RibbonSiClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1Window2 UINewDocument1Window
		{
			get
			{
				if ((this.mUINewDocument1Window == null))
				{
					this.mUINewDocument1Window = new UINewDocument1Window2(this);
				}
				return this.mUINewDocument1Window;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1Window2 mUINewDocument1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Window2 : WinWindow
	{
		public UINewDocument1Window2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "New Document 1*";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window2 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window2(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window2 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window2 : WinWindow
	{
		public UIRichTextBox1Window2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "richTextBox1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon2 : DXRibbon
	{
		public UIRibbonControl1Ribbon2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage2 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage2(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public UIRibbonPageCategory1RibbonPageCategory2 UIRibbonPageCategory1RibbonPageCategory
		{
			get
			{
				if ((this.mUIRibbonPageCategory1RibbonPageCategory == null))
				{
					this.mUIRibbonPageCategory1RibbonPageCategory = new UIRibbonPageCategory1RibbonPageCategory2(this);
				}
				return this.mUIRibbonPageCategory1RibbonPageCategory;
			}
		}
		public DXRibbonPage UIRibbonPage2RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage2RibbonPage == null))
				{
					this.mUIRibbonPage2RibbonPage = new DXRibbonPage(this);
					#region Search Criteria
					this.mUIRibbonPage2RibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage2";
					this.mUIRibbonPage2RibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
					this.mUIRibbonPage2RibbonPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonPage2RibbonPage.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPage2RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage2 mUIRibbonPage1RibbonPage;
		private UIRibbonPageCategory1RibbonPageCategory2 mUIRibbonPageCategory1RibbonPageCategory;
		private DXRibbonPage mUIRibbonPage2RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage2 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup3RibbonPageGroup2 UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new UIRibbonPageGroup3RibbonPageGroup2(this);
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		public UIRibbonPageGroup2RibbonPageGroup5 UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup5(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup3RibbonPageGroup2 mUIRibbonPageGroup3RibbonPageGroup;
		private UIRibbonPageGroup2RibbonPageGroup5 mUIRibbonPageGroup2RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup3RibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup3RibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIFontStyleRibbonItem2 UIFontStyleRibbonItem
		{
			get
			{
				if ((this.mUIFontStyleRibbonItem == null))
				{
					this.mUIFontStyleRibbonItem = new UIFontStyleRibbonItem2(this);
				}
				return this.mUIFontStyleRibbonItem;
			}
		}
		#endregion
		#region Fields
		private UIFontStyleRibbonItem2 mUIFontStyleRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFontStyleRibbonItem2 : DXRibbonItem
	{
		public UIFontStyleRibbonItem2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FontStyle";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIItalicRibbonItem
		{
			get
			{
				if ((this.mUIItalicRibbonItem == null))
				{
					this.mUIItalicRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIItalicRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Italic";
					this.mUIItalicRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIItalicRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIItalicRibbonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIItalicRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIItalicRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup5 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPasteRibbonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		public DXButton UIRibbonPageGroup2Button
		{
			get
			{
				if ((this.mUIRibbonPageGroup2Button == null))
				{
					this.mUIRibbonPageGroup2Button = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPageGroup2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
					this.mUIRibbonPageGroup2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGroupCaptionButton";
					this.mUIRibbonPageGroup2Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonPageGroup2Button.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup2Button;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIPasteRibbonItem;
		private DXButton mUIRibbonPageGroup2Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageCategory1RibbonPageCategory2 : DXRibbonPageCategory
	{
		public UIRibbonPageCategory1RibbonPageCategory2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageCategory1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage4RibbonPage1 UIRibbonPage4RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage4RibbonPage == null))
				{
					this.mUIRibbonPage4RibbonPage = new UIRibbonPage4RibbonPage1(this);
				}
				return this.mUIRibbonPage4RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage4RibbonPage1 mUIRibbonPage4RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage4RibbonPage1 : DXRibbonPage
	{
		public UIRibbonPage4RibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup12RibbonPageGroup UIRibbonPageGroup12RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup12RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup12RibbonPageGroup = new UIRibbonPageGroup12RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup12RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup12RibbonPageGroup mUIRibbonPageGroup12RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup12RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup12RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup12";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UICopyRibbonItem
		{
			get
			{
				if ((this.mUICopyRibbonItem == null))
				{
					this.mUICopyRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUICopyRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Copy";
					this.mUICopyRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUICopyRibbonItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICopyRibbonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICopyRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUICopyRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom1 : DXTestControl
	{
		public UIBackstageViewControlCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIBackstageViewClientCScrollableControl3 UIBackstageViewClientCScrollableControl
		{
			get
			{
				if ((this.mUIBackstageViewClientCScrollableControl == null))
				{
					this.mUIBackstageViewClientCScrollableControl = new UIBackstageViewClientCScrollableControl3(this);
				}
				return this.mUIBackstageViewClientCScrollableControl;
			}
		}
		#endregion
		#region Fields
		private UIBackstageViewClientCScrollableControl3 mUIBackstageViewClientCScrollableControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCScrollableControl3 : DXScrollableControl
	{
		public UIBackstageViewClientCScrollableControl3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIExportGalleryCustom1 UIExportGalleryCustom
		{
			get
			{
				if ((this.mUIExportGalleryCustom == null))
				{
					this.mUIExportGalleryCustom = new UIExportGalleryCustom1(this);
				}
				return this.mUIExportGalleryCustom;
			}
		}
		#endregion
		#region Fields
		private UIExportGalleryCustom1 mUIExportGalleryCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportGalleryCustom1 : DXTestControl
	{
		public UIExportGalleryCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "exportGallery";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIExportGalleryGallery1 UIExportGalleryGallery
		{
			get
			{
				if ((this.mUIExportGalleryGallery == null))
				{
					this.mUIExportGalleryGallery = new UIExportGalleryGallery1(this);
				}
				return this.mUIExportGalleryGallery;
			}
		}
		#endregion
		#region Fields
		private UIExportGalleryGallery1 mUIExportGalleryGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportGalleryGallery1 : DXTestControl
	{
		public UIExportGalleryGallery1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "exportGallery";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryControlClient";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIGroup1GalleryItemGroup1 UIGroup1GalleryItemGroup
		{
			get
			{
				if ((this.mUIGroup1GalleryItemGroup == null))
				{
					this.mUIGroup1GalleryItemGroup = new UIGroup1GalleryItemGroup1(this);
				}
				return this.mUIGroup1GalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIGroup1GalleryItemGroup1 mUIGroup1GalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroup1GalleryItemGroup1 : DXTestControl
	{
		public UIGroup1GalleryItemGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Group1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIXLSXFileGalleryItem
		{
			get
			{
				if ((this.mUIXLSXFileGalleryItem == null))
				{
					this.mUIXLSXFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIXLSXFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLSX File";
					this.mUIXLSXFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIXLSXFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIXLSXFileGalleryItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIXLSXFileGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIXLSXFileGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon11 : DXRibbon
	{
		public UIRibbonControl1Ribbon11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage3 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage3(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public UIRibbonQuickAccessTooRibbonBar3 UIRibbonQuickAccessTooRibbonBar
		{
			get
			{
				if ((this.mUIRibbonQuickAccessTooRibbonBar == null))
				{
					this.mUIRibbonQuickAccessTooRibbonBar = new UIRibbonQuickAccessTooRibbonBar3(this);
				}
				return this.mUIRibbonQuickAccessTooRibbonBar;
			}
		}
		public UIRibbonPageCategory1RibbonPageCategory3 UIRibbonPageCategory1RibbonPageCategory
		{
			get
			{
				if ((this.mUIRibbonPageCategory1RibbonPageCategory == null))
				{
					this.mUIRibbonPageCategory1RibbonPageCategory = new UIRibbonPageCategory1RibbonPageCategory3(this);
				}
				return this.mUIRibbonPageCategory1RibbonPageCategory;
			}
		}
		public UIRibbonPage2RibbonPage1 UIRibbonPage2RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage2RibbonPage == null))
				{
					this.mUIRibbonPage2RibbonPage = new UIRibbonPage2RibbonPage1(this);
				}
				return this.mUIRibbonPage2RibbonPage;
			}
		}
		public UIRibbonPage3RibbonPage2 UIRibbonPage3RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage3RibbonPage == null))
				{
					this.mUIRibbonPage3RibbonPage = new UIRibbonPage3RibbonPage2(this);
				}
				return this.mUIRibbonPage3RibbonPage;
			}
		}
		public UIRibbonPage3RibbonPage11 UIRibbonPage3RibbonPage1
		{
			get
			{
				if ((this.mUIRibbonPage3RibbonPage1 == null))
				{
					this.mUIRibbonPage3RibbonPage1 = new UIRibbonPage3RibbonPage11(this);
				}
				return this.mUIRibbonPage3RibbonPage1;
			}
		}
		public DXButton UIRibbonPanelRightScroButton
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton == null))
				{
					this.mUIRibbonPanelRightScroButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton;
			}
		}
		public DXButton UIRibbonPanelRightScroButton1
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton1 == null))
				{
					this.mUIRibbonPanelRightScroButton1 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton1.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton1;
			}
		}
		public DXButton UIRibbonPanelRightScroButton2
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton2 == null))
				{
					this.mUIRibbonPanelRightScroButton2 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton2.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton2;
			}
		}
		public DXButton UIRibbonPanelRightScroButton3
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton3 == null))
				{
					this.mUIRibbonPanelRightScroButton3 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton3.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton3.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton3;
			}
		}
		public DXButton UIRibbonPanelRightScroButton4
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton4 == null))
				{
					this.mUIRibbonPanelRightScroButton4 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton4.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton4.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton4;
			}
		}
		public DXButton UIRibbonPanelRightScroButton5
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton5 == null))
				{
					this.mUIRibbonPanelRightScroButton5 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton5.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton5.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton5;
			}
		}
		public DXButton UIRibbonPanelRightScroButton6
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton6 == null))
				{
					this.mUIRibbonPanelRightScroButton6 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton6.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton6.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton6;
			}
		}
		public DXButton UIRibbonPanelRightScroButton7
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton7 == null))
				{
					this.mUIRibbonPanelRightScroButton7 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton7.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton7.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton7;
			}
		}
		public DXButton UIRibbonPanelRightScroButton8
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton8 == null))
				{
					this.mUIRibbonPanelRightScroButton8 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton8.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton8.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton8;
			}
		}
		public DXButton UIRibbonPanelRightScroButton9
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton9 == null))
				{
					this.mUIRibbonPanelRightScroButton9 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton9.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton9.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton9;
			}
		}
		public DXButton UIRibbonPanelRightScroButton10
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton10 == null))
				{
					this.mUIRibbonPanelRightScroButton10 = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton10.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton10.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton10;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage3 mUIRibbonPage1RibbonPage;
		private UIRibbonQuickAccessTooRibbonBar3 mUIRibbonQuickAccessTooRibbonBar;
		private UIRibbonPageCategory1RibbonPageCategory3 mUIRibbonPageCategory1RibbonPageCategory;
		private UIRibbonPage2RibbonPage1 mUIRibbonPage2RibbonPage;
		private UIRibbonPage3RibbonPage2 mUIRibbonPage3RibbonPage;
		private UIRibbonPage3RibbonPage11 mUIRibbonPage3RibbonPage1;
		private DXButton mUIRibbonPanelRightScroButton;
		private DXButton mUIRibbonPanelRightScroButton1;
		private DXButton mUIRibbonPanelRightScroButton2;
		private DXButton mUIRibbonPanelRightScroButton3;
		private DXButton mUIRibbonPanelRightScroButton4;
		private DXButton mUIRibbonPanelRightScroButton5;
		private DXButton mUIRibbonPanelRightScroButton6;
		private DXButton mUIRibbonPanelRightScroButton7;
		private DXButton mUIRibbonPanelRightScroButton8;
		private DXButton mUIRibbonPanelRightScroButton9;
		private DXButton mUIRibbonPanelRightScroButton10;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage3 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup2RibbonPageGroup6 UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup6(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		public UIItemRibbonPageGroup UIItemRibbonPageGroup
		{
			get
			{
				if ((this.mUIItemRibbonPageGroup == null))
				{
					this.mUIItemRibbonPageGroup = new UIItemRibbonPageGroup(this);
				}
				return this.mUIItemRibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup3";
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup3RibbonPageGroup.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		public UIRibbonPageGroup8RibbonPageGroup UIRibbonPageGroup8RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup8RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup8RibbonPageGroup = new UIRibbonPageGroup8RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup8RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup2RibbonPageGroup6 mUIRibbonPageGroup2RibbonPageGroup;
		private UIItemRibbonPageGroup mUIItemRibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup3RibbonPageGroup;
		private UIRibbonPageGroup8RibbonPageGroup mUIRibbonPageGroup8RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup6 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIPasteRibbonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIPasteRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPageGroup : DXRibbonPageGroup
	{
		public UIItemRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICopyRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICopyRibbonBaseButtonItem == null))
				{
					this.mUICopyRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Copy";
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICopyRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICopyRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cut";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICopyRibbonBaseButtonItem;
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup8RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup8RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup8";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cut";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonQuickAccessTooRibbonBar3 : DXTestControl
	{
		public UIRibbonQuickAccessTooRibbonBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonQuickAccessToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonQuickAccessToolbar";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIRibbonToolbarPopupItRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIRibbonToolbarPopupItRibbonBaseButtonItem == null))
				{
					this.mUIRibbonToolbarPopupItRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIRibbonToolbarPopupItRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonToolbarPopupItemLink[0]";
					this.mUIRibbonToolbarPopupItRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIRibbonToolbarPopupItRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonToolbarPopupItRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UICustomizeToolbarRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICustomizeToolbarRibbonBaseButtonItem == null))
				{
					this.mUICustomizeToolbarRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICustomizeToolbarRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Customize Toolbar";
					this.mUICustomizeToolbarRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICustomizeToolbarRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICustomizeToolbarRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIRibbonToolbarPopupItRibbonBaseButtonItem;
		private DXRibbonButtonItem mUICustomizeToolbarRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageCategory1RibbonPageCategory3 : DXRibbonPageCategory
	{
		public UIRibbonPageCategory1RibbonPageCategory3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageCategory1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage4RibbonPage2 UIRibbonPage4RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage4RibbonPage == null))
				{
					this.mUIRibbonPage4RibbonPage = new UIRibbonPage4RibbonPage2(this);
				}
				return this.mUIRibbonPage4RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage4RibbonPage2 mUIRibbonPage4RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage4RibbonPage2 : DXRibbonPage
	{
		public UIRibbonPage4RibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup12RibbonPageGroup1 UIRibbonPageGroup12RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup12RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup12RibbonPageGroup = new UIRibbonPageGroup12RibbonPageGroup1(this);
				}
				return this.mUIRibbonPageGroup12RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup12RibbonPageGroup1 mUIRibbonPageGroup12RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup12RibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup12RibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup12";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cu&t";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage2RibbonPage1 : DXRibbonPage
	{
		public UIRibbonPage2RibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup5RibbonPageGroup2 UIRibbonPageGroup5RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup5RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup5RibbonPageGroup = new UIRibbonPageGroup5RibbonPageGroup2(this);
				}
				return this.mUIRibbonPageGroup5RibbonPageGroup;
			}
		}
		public UIItemRibbonPageGroup1 UIItemRibbonPageGroup
		{
			get
			{
				if ((this.mUIItemRibbonPageGroup == null))
				{
					this.mUIItemRibbonPageGroup = new UIItemRibbonPageGroup1(this);
				}
				return this.mUIItemRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup5RibbonPageGroup2 mUIRibbonPageGroup5RibbonPageGroup;
		private UIItemRibbonPageGroup1 mUIItemRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup5RibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup5RibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIPasteRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIPasteRibbonBaseButtonItem == null))
				{
					this.mUIPasteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Paste";
					this.mUIPasteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIPasteRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPasteRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIPasteRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIItemRibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICopyRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICopyRibbonBaseButtonItem == null))
				{
					this.mUICopyRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Copy";
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICopyRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICopyRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICopyRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage3RibbonPage2 : DXRibbonPage
	{
		public UIRibbonPage3RibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIItemRibbonPageGroup2 UIItemRibbonPageGroup
		{
			get
			{
				if ((this.mUIItemRibbonPageGroup == null))
				{
					this.mUIItemRibbonPageGroup = new UIItemRibbonPageGroup2(this);
				}
				return this.mUIItemRibbonPageGroup;
			}
		}
		public UIRibbonPageGroup3RibbonPageGroup3 UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new UIRibbonPageGroup3RibbonPageGroup3(this);
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemRibbonPageGroup2 mUIItemRibbonPageGroup;
		private UIRibbonPageGroup3RibbonPageGroup3 mUIRibbonPageGroup3RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIItemRibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIPasteRibbonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cut";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUIPasteRibbonItem;
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup3RibbonPageGroup3 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup3RibbonPageGroup3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cut";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage3RibbonPage11 : DXRibbonPage
	{
		public UIRibbonPage3RibbonPage11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIItemRibbonPageGroup3 UIItemRibbonPageGroup
		{
			get
			{
				if ((this.mUIItemRibbonPageGroup == null))
				{
					this.mUIItemRibbonPageGroup = new UIItemRibbonPageGroup3(this);
				}
				return this.mUIItemRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIItemRibbonPageGroup3 mUIItemRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemRibbonPageGroup3 : DXRibbonPageGroup
	{
		public UIItemRibbonPageGroup3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICopyRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICopyRibbonBaseButtonItem == null))
				{
					this.mUICopyRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Copy";
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICopyRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICopyRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICopyRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonStatusBar1MenuBar1 : DXMenu
	{
		public UIRibbonStatusBar1MenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBar1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXMenuItem UILine3Position23BarItem
		{
			get
			{
				if ((this.mUILine3Position23BarItem == null))
				{
					this.mUILine3Position23BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUILine3Position23BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "   Line: 3  Position: 23   ";
					this.mUILine3Position23BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUILine3Position23BarItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUILine3Position23BarItem;
			}
		}
		public DXMenuItem UILine2Position16BarItem
		{
			get
			{
				if ((this.mUILine2Position16BarItem == null))
				{
					this.mUILine2Position16BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUILine2Position16BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "   Line: 2  Position: 16   ";
					this.mUILine2Position16BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUILine2Position16BarItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUILine2Position16BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUILine3Position23BarItem;
		private DXMenuItem mUILine2Position16BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Window3 : WinWindow
	{
		public UINewDocument1Window3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "frmPad";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1Client1 UINewDocument1Client
		{
			get
			{
				if ((this.mUINewDocument1Client == null))
				{
					this.mUINewDocument1Client = new UINewDocument1Client1(this);
				}
				return this.mUINewDocument1Client;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1Client1 mUINewDocument1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Client1 : WinClient
	{
		public UINewDocument1Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "New Document 1*";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window3 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window3(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window3 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window3 : WinWindow
	{
		public UIRichTextBox1Window3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.RichEdit20W", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Window11 : DXWindow
	{
		public UINewDocument1Window11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties["ControlName"] = "frmPad";
			this.SearchProperties[DXTestControl.PropertyNames.ControlType] = "Window";
			this.SearchConfigurations.Add(SearchConfiguration.VisibleOnly);
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1Client2 UINewDocument1Client
		{
			get
			{
				if ((this.mUINewDocument1Client == null))
				{
					this.mUINewDocument1Client = new UINewDocument1Client2(this);
				}
				return this.mUINewDocument1Client;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1Client2 mUINewDocument1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Client2 : DXTestControl
	{
		public UINewDocument1Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "New Document 1*";
			this.SearchProperties[DXTestControl.PropertyNames.ControlType] = "Client";
			this.SearchConfigurations.Add(SearchConfiguration.VisibleOnly);
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window4 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window4(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window4 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window4 : DXWindow
	{
		public UIRichTextBox1Window4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.RichEdit20W", PropertyExpressionOperator.Contains));
			this.SearchProperties[DXTestControl.PropertyNames.ControlType] = "Window";
			this.SearchConfigurations.Add(SearchConfiguration.VisibleOnly);
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTextEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.SearchProperties[DXTestControl.PropertyNames.ControlType] = "Edit";
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMdiClientTabList : DXTestControl
	{
		public UIMdiClientTabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MdiClient[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MdiClient";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument1Window4 UINewDocument1Window
		{
			get
			{
				if ((this.mUINewDocument1Window == null))
				{
					this.mUINewDocument1Window = new UINewDocument1Window4(this);
				}
				return this.mUINewDocument1Window;
			}
		}
		#endregion
		#region Fields
		private UINewDocument1Window4 mUINewDocument1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1Window4 : DXWindow
	{
		public UINewDocument1Window4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "New Document 1*";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Custom UIRichTextBox1Custom
		{
			get
			{
				if ((this.mUIRichTextBox1Custom == null))
				{
					this.mUIRichTextBox1Custom = new UIRichTextBox1Custom(this);
				}
				return this.mUIRichTextBox1Custom;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Custom mUIRichTextBox1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Custom : DXTestControl
	{
		public UIRichTextBox1Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "richTextBox1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RichTextBox";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIReplaceWindow : WinWindow
	{
		public UIReplaceWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Replace";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Replace");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFind";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXTextEdit UITextEditEdit1
		{
			get
			{
				if ((this.mUITextEditEdit1 == null))
				{
					this.mUITextEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "txtReplace";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit1.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUITextEditEdit1;
			}
		}
		public DXCheckBox UIPropertyReadingErrorCheckBox
		{
			get
			{
				if ((this.mUIPropertyReadingErrorCheckBox == null))
				{
					this.mUIPropertyReadingErrorCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIPropertyReadingErrorCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chWholeword";
					this.mUIPropertyReadingErrorCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIPropertyReadingErrorCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIPropertyReadingErrorCheckBox.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUIPropertyReadingErrorCheckBox;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnReplaceAll";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditEdit;
		private DXTextEdit mUITextEditEdit1;
		private DXCheckBox mUIPropertyReadingErrorCheckBox;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonSimplePadWindow : WinWindow
	{
		public UIRibbonSimplePadWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Ribbon Simple Pad";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Simple Pad");
			this.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIBackstageViewControlCustom2 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom2(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		public UIRibbonControl1Ribbon3 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon3(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public UIItemWindow10 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow10(this);
				}
				return this.mUIItemWindow;
			}
		}
		public UIRibbonControl1Ribbon12 UIRibbonControl1Ribbon1
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon1 == null))
				{
					this.mUIRibbonControl1Ribbon1 = new UIRibbonControl1Ribbon12(this);
				}
				return this.mUIRibbonControl1Ribbon1;
			}
		}
		public UIRibbonStatusBar1MenuBar2 UIRibbonStatusBar1MenuBar
		{
			get
			{
				if ((this.mUIRibbonStatusBar1MenuBar == null))
				{
					this.mUIRibbonStatusBar1MenuBar = new UIRibbonStatusBar1MenuBar2(this);
				}
				return this.mUIRibbonStatusBar1MenuBar;
			}
		}
		public UINewDocument2Window2 UINewDocument2Window
		{
			get
			{
				if ((this.mUINewDocument2Window == null))
				{
					this.mUINewDocument2Window = new UINewDocument2Window2(this);
				}
				return this.mUINewDocument2Window;
			}
		}
		#endregion
		#region Fields
		private UIBackstageViewControlCustom2 mUIBackstageViewControlCustom;
		private UIRibbonControl1Ribbon3 mUIRibbonControl1Ribbon;
		private UIItemWindow10 mUIItemWindow;
		private UIRibbonControl1Ribbon12 mUIRibbonControl1Ribbon1;
		private UIRibbonStatusBar1MenuBar2 mUIRibbonStatusBar1MenuBar;
		private UINewDocument2Window2 mUINewDocument2Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom2 : DXTestControl
	{
		public UIBackstageViewControlCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UICloseTabPage
		{
			get
			{
				if ((this.mUICloseTabPage == null))
				{
					this.mUICloseTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUICloseTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "bvItemClose";
					this.mUICloseTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUICloseTabPage.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUICloseTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICloseTabPage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICloseTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon3 : DXRibbon
	{
		public UIRibbonControl1Ribbon3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonApplicationButButton
		{
			get
			{
				if ((this.mUIRibbonApplicationButButton == null))
				{
					this.mUIRibbonApplicationButButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIRibbonApplicationButButton.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonApplicationButButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonApplicationButButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow10 : WinWindow
	{
		public UIItemWindow10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.MDICLIENT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument2RibbonSiClient UINewDocument2RibbonSiClient
		{
			get
			{
				if ((this.mUINewDocument2RibbonSiClient == null))
				{
					this.mUINewDocument2RibbonSiClient = new UINewDocument2RibbonSiClient(this);
				}
				return this.mUINewDocument2RibbonSiClient;
			}
		}
		#endregion
		#region Fields
		private UINewDocument2RibbonSiClient mUINewDocument2RibbonSiClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument2RibbonSiClient : WinClient
	{
		public UINewDocument2RibbonSiClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument2Window UINewDocument2Window
		{
			get
			{
				if ((this.mUINewDocument2Window == null))
				{
					this.mUINewDocument2Window = new UINewDocument2Window(this);
				}
				return this.mUINewDocument2Window;
			}
		}
		public UINewDocument2Window1 UINewDocument2Window1
		{
			get
			{
				if ((this.mUINewDocument2Window1 == null))
				{
					this.mUINewDocument2Window1 = new UINewDocument2Window1(this);
				}
				return this.mUINewDocument2Window1;
			}
		}
		#endregion
		#region Fields
		private UINewDocument2Window mUINewDocument2Window;
		private UINewDocument2Window1 mUINewDocument2Window1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument2Window : WinWindow
	{
		public UINewDocument2Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "New Document 2";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window5 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window5(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window5 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window5 : WinWindow
	{
		public UIRichTextBox1Window5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "richTextBox1";
			this.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument2Window1 : WinWindow
	{
		public UINewDocument2Window1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "New Document 2*";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window6 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window6(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window6 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window6 : WinWindow
	{
		public UIRichTextBox1Window6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "richTextBox1";
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon12 : DXRibbon
	{
		public UIRibbonControl1Ribbon12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage4 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage4(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public DXButton UIRibbonApplicationButButton
		{
			get
			{
				if ((this.mUIRibbonApplicationButButton == null))
				{
					this.mUIRibbonApplicationButButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonApplicationButButton;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage4 mUIRibbonPage1RibbonPage;
		private DXButton mUIRibbonApplicationButButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage4 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup1RibbonPageGroup UIRibbonPageGroup1RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup1RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup1RibbonPageGroup = new UIRibbonPageGroup1RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup1RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup1RibbonPageGroup mUIRibbonPageGroup1RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup1RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup1RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UINewRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUINewRibbonBaseButtonItem == null))
				{
					this.mUINewRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUINewRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "New";
					this.mUINewRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUINewRibbonBaseButtonItem.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUINewRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUINewRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonStatusBar1MenuBar2 : DXMenu
	{
		public UIRibbonStatusBar1MenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBar1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
			this.WindowTitles.Add("Ribbon Simple Pad");
			this.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXMenuItem UILine0Position0BarItem
		{
			get
			{
				if ((this.mUILine0Position0BarItem == null))
				{
					this.mUILine0Position0BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUILine0Position0BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "   Line: 0  Position: 0   ";
					this.mUILine0Position0BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUILine0Position0BarItem.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUILine0Position0BarItem;
			}
		}
		public DXMenuItem UILine1Position1BarItem
		{
			get
			{
				if ((this.mUILine1Position1BarItem == null))
				{
					this.mUILine1Position1BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUILine1Position1BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "   Line: 1  Position: 1   ";
					this.mUILine1Position1BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUILine1Position1BarItem.WindowTitles.Add("New Document 2 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUILine1Position1BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUILine0Position0BarItem;
		private DXMenuItem mUILine1Position1BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument2Window2 : WinWindow
	{
		public UINewDocument2Window2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "frmPad";
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UINewDocument2Client UINewDocument2Client
		{
			get
			{
				if ((this.mUINewDocument2Client == null))
				{
					this.mUINewDocument2Client = new UINewDocument2Client(this);
				}
				return this.mUINewDocument2Client;
			}
		}
		#endregion
		#region Fields
		private UINewDocument2Client mUINewDocument2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument2Client : WinClient
	{
		public UINewDocument2Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "New Document 2*";
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window7 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window7(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window7 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window7 : WinWindow
	{
		public UIRichTextBox1Window7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.RichEdit20W", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("New Document 2* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocument1rtfRibbonSiWindow : WinWindow
	{
		public UIDocument1rtfRibbonSiWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Document1.rtf - Ribbon Simple Pad";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Document1.rtf - Ribbon Simple Pad");
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIBackstageViewControlCustom3 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom3(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		public UIItemWindow14 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow14(this);
				}
				return this.mUIItemWindow;
			}
		}
		public UIDocument1rtfWindow2 UIDocument1rtfWindow
		{
			get
			{
				if ((this.mUIDocument1rtfWindow == null))
				{
					this.mUIDocument1rtfWindow = new UIDocument1rtfWindow2(this);
				}
				return this.mUIDocument1rtfWindow;
			}
		}
		#endregion
		#region Fields
		private UIBackstageViewControlCustom3 mUIBackstageViewControlCustom;
		private UIItemWindow14 mUIItemWindow;
		private UIDocument1rtfWindow2 mUIDocument1rtfWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom3 : DXTestControl
	{
		public UIBackstageViewControlCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIBackstageViewClientCScrollableControl4 UIBackstageViewClientCScrollableControl
		{
			get
			{
				if ((this.mUIBackstageViewClientCScrollableControl == null))
				{
					this.mUIBackstageViewClientCScrollableControl = new UIBackstageViewClientCScrollableControl4(this);
				}
				return this.mUIBackstageViewClientCScrollableControl;
			}
		}
		#endregion
		#region Fields
		private UIBackstageViewClientCScrollableControl4 mUIBackstageViewClientCScrollableControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCScrollableControl4 : DXScrollableControl
	{
		public UIBackstageViewClientCScrollableControl4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIAppMenuFileLabelCustom
		{
			get
			{
				if ((this.mUIAppMenuFileLabelCustom == null))
				{
					this.mUIAppMenuFileLabelCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2AppMenuFileLabel[0]";
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AppMenuFileLabel";
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
					this.mUIAppMenuFileLabelCustom.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIAppMenuFileLabelCustom;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAppMenuFileLabelCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow14 : WinWindow
	{
		public UIItemWindow14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.MDICLIENT", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Document1.rtf - Ribbon Simple Pad");
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIDocument1rtfRibbonSiClient UIDocument1rtfRibbonSiClient
		{
			get
			{
				if ((this.mUIDocument1rtfRibbonSiClient == null))
				{
					this.mUIDocument1rtfRibbonSiClient = new UIDocument1rtfRibbonSiClient(this);
				}
				return this.mUIDocument1rtfRibbonSiClient;
			}
		}
		#endregion
		#region Fields
		private UIDocument1rtfRibbonSiClient mUIDocument1rtfRibbonSiClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocument1rtfRibbonSiClient : WinClient
	{
		public UIDocument1rtfRibbonSiClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Document1.rtf - Ribbon Simple Pad");
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIDocument1rtfWindow UIDocument1rtfWindow
		{
			get
			{
				if ((this.mUIDocument1rtfWindow == null))
				{
					this.mUIDocument1rtfWindow = new UIDocument1rtfWindow(this);
				}
				return this.mUIDocument1rtfWindow;
			}
		}
		public UIDocument1rtfWindow1 UIDocument1rtfWindow1
		{
			get
			{
				if ((this.mUIDocument1rtfWindow1 == null))
				{
					this.mUIDocument1rtfWindow1 = new UIDocument1rtfWindow1(this);
				}
				return this.mUIDocument1rtfWindow1;
			}
		}
		#endregion
		#region Fields
		private UIDocument1rtfWindow mUIDocument1rtfWindow;
		private UIDocument1rtfWindow1 mUIDocument1rtfWindow1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocument1rtfWindow : WinWindow
	{
		public UIDocument1rtfWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Document1.rtf";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Document1.rtf - Ribbon Simple Pad");
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window8 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window8(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window8 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window8 : WinWindow
	{
		public UIRichTextBox1Window8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "richTextBox1";
			this.WindowTitles.Add("Document1.rtf - Ribbon Simple Pad");
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("Document1.rtf - Ribbon Simple Pad");
					this.mUIRichTextBox1Edit.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocument1rtfWindow1 : WinWindow
	{
		public UIDocument1rtfWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Document1.rtf*";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window9 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window9(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window9 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window9 : WinWindow
	{
		public UIRichTextBox1Window9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "richTextBox1";
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocument1rtfWindow2 : WinWindow
	{
		public UIDocument1rtfWindow2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "frmPad";
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIDocument1rtfClient UIDocument1rtfClient
		{
			get
			{
				if ((this.mUIDocument1rtfClient == null))
				{
					this.mUIDocument1rtfClient = new UIDocument1rtfClient(this);
				}
				return this.mUIDocument1rtfClient;
			}
		}
		#endregion
		#region Fields
		private UIDocument1rtfClient mUIDocument1rtfClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocument1rtfClient : WinClient
	{
		public UIDocument1rtfClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "Document1.rtf*";
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRichTextBox1Window10 UIRichTextBox1Window
		{
			get
			{
				if ((this.mUIRichTextBox1Window == null))
				{
					this.mUIRichTextBox1Window = new UIRichTextBox1Window10(this);
				}
				return this.mUIRichTextBox1Window;
			}
		}
		#endregion
		#region Fields
		private UIRichTextBox1Window10 mUIRichTextBox1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRichTextBox1Window10 : WinWindow
	{
		public UIRichTextBox1Window10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.RichEdit20W", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public WinEdit UIRichTextBox1Edit
		{
			get
			{
				if ((this.mUIRichTextBox1Edit == null))
				{
					this.mUIRichTextBox1Edit = new WinEdit(this);
					#region Search Criteria
					this.mUIRichTextBox1Edit.WindowTitles.Add("Document1.rtf* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRichTextBox1Edit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIRichTextBox1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportWindow : WinWindow
	{
		public UIExportWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Export...";
			this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
			this.WindowTitles.Add("Export...");
			#endregion
		}
		#region Properties
		public UIExportTitleBar UIExportTitleBar
		{
			get
			{
				if ((this.mUIExportTitleBar == null))
				{
					this.mUIExportTitleBar = new UIExportTitleBar(this);
				}
				return this.mUIExportTitleBar;
			}
		}
		#endregion
		#region Fields
		private UIExportTitleBar mUIExportTitleBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportTitleBar : WinTitleBar
	{
		public UIExportTitleBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Export...");
			#endregion
		}
		#region Properties
		public WinButton UICloseButton
		{
			get
			{
				if ((this.mUICloseButton == null))
				{
					this.mUICloseButton = new WinButton(this);
					#region Search Criteria
					this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
					this.mUICloseButton.WindowTitles.Add("Export...");
					#endregion
				}
				return this.mUICloseButton;
			}
		}
		#endregion
		#region Fields
		private WinButton mUICloseButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow41 : WinWindow
	{
		public UIItemWindow41()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "The Ribbon";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonCustomizationFWindow : WinWindow
	{
		public UIRibbonCustomizationFWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Ribbon Customization Form";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIRightPanelPane UIRightPanelPane
		{
			get
			{
				if ((this.mUIRightPanelPane == null))
				{
					this.mUIRightPanelPane = new UIRightPanelPane(this);
				}
				return this.mUIRightPanelPane;
			}
		}
		public UISubstratePanelClient UISubstratePanelClient
		{
			get
			{
				if ((this.mUISubstratePanelClient == null))
				{
					this.mUISubstratePanelClient = new UISubstratePanelClient(this);
				}
				return this.mUISubstratePanelClient;
			}
		}
		public UILeftPanelPane UILeftPanelPane
		{
			get
			{
				if ((this.mUILeftPanelPane == null))
				{
					this.mUILeftPanelPane = new UILeftPanelPane(this);
				}
				return this.mUILeftPanelPane;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public WinTitleBar UIRibbonCustomizationFTitleBar
		{
			get
			{
				if ((this.mUIRibbonCustomizationFTitleBar == null))
				{
					this.mUIRibbonCustomizationFTitleBar = new WinTitleBar(this);
					#region Search Criteria
					this.mUIRibbonCustomizationFTitleBar.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIRibbonCustomizationFTitleBar;
			}
		}
		public UISubstratePanelClient1 UISubstratePanelClient1
		{
			get
			{
				if ((this.mUISubstratePanelClient1 == null))
				{
					this.mUISubstratePanelClient1 = new UISubstratePanelClient1(this);
				}
				return this.mUISubstratePanelClient1;
			}
		}
		#endregion
		#region Fields
		private UIRightPanelPane mUIRightPanelPane;
		private UISubstratePanelClient mUISubstratePanelClient;
		private UILeftPanelPane mUILeftPanelPane;
		private DXButton mUISimpleButtonButton;
		private WinTitleBar mUIRibbonCustomizationFTitleBar;
		private UISubstratePanelClient1 mUISubstratePanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightPanelPane : WinPane
	{
		public UIRightPanelPane(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "rightPanel";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIRightTreeViewWindow UIRightTreeViewWindow
		{
			get
			{
				if ((this.mUIRightTreeViewWindow == null))
				{
					this.mUIRightTreeViewWindow = new UIRightTreeViewWindow(this);
				}
				return this.mUIRightTreeViewWindow;
			}
		}
		#endregion
		#region Fields
		private UIRightTreeViewWindow mUIRightTreeViewWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightTreeViewWindow : WinWindow
	{
		public UIRightTreeViewWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SysTreeView32", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIRightTreeViewTree UIRightTreeViewTree
		{
			get
			{
				if ((this.mUIRightTreeViewTree == null))
				{
					this.mUIRightTreeViewTree = new UIRightTreeViewTree(this);
				}
				return this.mUIRightTreeViewTree;
			}
		}
		#endregion
		#region Fields
		private UIRightTreeViewTree mUIRightTreeViewTree;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightTreeViewTree : WinTree
	{
		public UIRightTreeViewTree(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIUnassignedPagesCheckBoxTreeItem UIUnassignedPagesCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIUnassignedPagesCheckBoxTreeItem == null))
				{
					this.mUIUnassignedPagesCheckBoxTreeItem = new UIUnassignedPagesCheckBoxTreeItem(this);
				}
				return this.mUIUnassignedPagesCheckBoxTreeItem;
			}
		}
		public UITestCategoryCustomCheckBoxTreeItem UITestCategoryCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUITestCategoryCustomCheckBoxTreeItem == null))
				{
					this.mUITestCategoryCustomCheckBoxTreeItem = new UITestCategoryCustomCheckBoxTreeItem(this);
				}
				return this.mUITestCategoryCustomCheckBoxTreeItem;
			}
		}
		public WinCheckBoxTreeItem UISelectionCheckBoxTreeItem
		{
			get
			{
				if ((this.mUISelectionCheckBoxTreeItem == null))
				{
					this.mUISelectionCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUISelectionCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Selection";
					this.mUISelectionCheckBoxTreeItem.SearchProperties["Value"] = "0";
					this.mUISelectionCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUISelectionCheckBoxTreeItem;
			}
		}
		public UINewCategoryCustomCheckBoxTreeItem UINewCategoryCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUINewCategoryCustomCheckBoxTreeItem == null))
				{
					this.mUINewCategoryCustomCheckBoxTreeItem = new UINewCategoryCustomCheckBoxTreeItem(this);
				}
				return this.mUINewCategoryCustomCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private UIUnassignedPagesCheckBoxTreeItem mUIUnassignedPagesCheckBoxTreeItem;
		private UITestCategoryCustomCheckBoxTreeItem mUITestCategoryCustomCheckBoxTreeItem;
		private WinCheckBoxTreeItem mUISelectionCheckBoxTreeItem;
		private UINewCategoryCustomCheckBoxTreeItem mUINewCategoryCustomCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUnassignedPagesCheckBoxTreeItem : WinCheckBoxTreeItem
	{
		public UIUnassignedPagesCheckBoxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "(Unassigned Pages)";
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinCheckBoxTreeItem UINewTabCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUINewTabCustomCheckBoxTreeItem == null))
				{
					this.mUINewTabCustomCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUINewTabCustomCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "New Tab (Custom)";
					this.mUINewTabCustomCheckBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUINewTabCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewTabCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewTabCustomCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewTabCustomCheckBoxTreeItem;
			}
		}
		public UITestTabCustomCheckBoxTreeItem UITestTabCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUITestTabCustomCheckBoxTreeItem == null))
				{
					this.mUITestTabCustomCheckBoxTreeItem = new UITestTabCustomCheckBoxTreeItem(this);
				}
				return this.mUITestTabCustomCheckBoxTreeItem;
			}
		}
		public UIHomeCheckBoxTreeItem UIHomeCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIHomeCheckBoxTreeItem == null))
				{
					this.mUIHomeCheckBoxTreeItem = new UIHomeCheckBoxTreeItem(this);
				}
				return this.mUIHomeCheckBoxTreeItem;
			}
		}
		public UIGalleryPageCheckBoxTreeItem UIGalleryPageCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIGalleryPageCheckBoxTreeItem == null))
				{
					this.mUIGalleryPageCheckBoxTreeItem = new UIGalleryPageCheckBoxTreeItem(this);
				}
				return this.mUIGalleryPageCheckBoxTreeItem;
			}
		}
		public WinCheckBoxTreeItem UIAlternativePageCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIAlternativePageCheckBoxTreeItem == null))
				{
					this.mUIAlternativePageCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUIAlternativePageCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Alternative Page";
					this.mUIAlternativePageCheckBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUIAlternativePageCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIAlternativePageCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIAlternativePageCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIAlternativePageCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinCheckBoxTreeItem mUINewTabCustomCheckBoxTreeItem;
		private UITestTabCustomCheckBoxTreeItem mUITestTabCustomCheckBoxTreeItem;
		private UIHomeCheckBoxTreeItem mUIHomeCheckBoxTreeItem;
		private UIGalleryPageCheckBoxTreeItem mUIGalleryPageCheckBoxTreeItem;
		private WinCheckBoxTreeItem mUIAlternativePageCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITestTabCustomCheckBoxTreeItem : WinCheckBoxTreeItem
	{
		public UITestTabCustomCheckBoxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Test Tab (Custom)";
			this.SearchProperties["Value"] = "1";
			this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
			this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinTreeItem UINewGroupCustomTreeItem
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem == null))
				{
					this.mUINewGroupCustomTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "New Group", PropertyExpressionOperator.Contains));
					this.mUINewGroupCustomTreeItem.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem;
			}
		}
		public WinCheckBoxTreeItem UITestGroupCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUITestGroupCustomCheckBoxTreeItem == null))
				{
					this.mUITestGroupCustomCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUITestGroupCustomCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Test Group (Custom)";
					this.mUITestGroupCustomCheckBoxTreeItem.SearchProperties["Value"] = "2";
					this.mUITestGroupCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUITestGroupCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUITestGroupCustomCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUITestGroupCustomCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUINewGroupCustomTreeItem;
		private WinCheckBoxTreeItem mUITestGroupCustomCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIHomeCheckBoxTreeItem : WinCheckBoxTreeItem
	{
		public UIHomeCheckBoxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Home";
			this.SearchProperties["Value"] = "1";
			this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
			this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinTreeItem UINewGroupCustomTreeItem
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem == null))
				{
					this.mUINewGroupCustomTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem;
			}
		}
		public WinCheckBoxTreeItem UITestGroupCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUITestGroupCustomCheckBoxTreeItem == null))
				{
					this.mUITestGroupCustomCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUITestGroupCustomCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Test Group (Custom)";
					this.mUITestGroupCustomCheckBoxTreeItem.SearchProperties["Value"] = "2";
					this.mUITestGroupCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUITestGroupCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUITestGroupCustomCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUITestGroupCustomCheckBoxTreeItem;
			}
		}
		public WinTreeItem UINewGroupCustomTreeItem1
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem1 == null))
				{
					this.mUINewGroupCustomTreeItem1 = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem1.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem1.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem1.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem1.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem1;
			}
		}
		public WinTreeItem UINewGroupCustomTreeItem2
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem2 == null))
				{
					this.mUINewGroupCustomTreeItem2 = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem2.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem2.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem2.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem2.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem2;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUINewGroupCustomTreeItem;
		private WinCheckBoxTreeItem mUITestGroupCustomCheckBoxTreeItem;
		private WinTreeItem mUINewGroupCustomTreeItem1;
		private WinTreeItem mUINewGroupCustomTreeItem2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryPageCheckBoxTreeItem : WinCheckBoxTreeItem
	{
		public UIGalleryPageCheckBoxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Gallery Page";
			this.SearchProperties["Value"] = "1";
			this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
			this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinTreeItem UINewGroupCustomTreeItem
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem == null))
				{
					this.mUINewGroupCustomTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUINewGroupCustomTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITestCategoryCustomCheckBoxTreeItem : WinCheckBoxTreeItem
	{
		public UITestCategoryCustomCheckBoxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Test Category (Custom)";
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinCheckBoxTreeItem UINewTabCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUINewTabCustomCheckBoxTreeItem == null))
				{
					this.mUINewTabCustomCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUINewTabCustomCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "New Tab (Custom)";
					this.mUINewTabCustomCheckBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUINewTabCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewTabCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewTabCustomCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewTabCustomCheckBoxTreeItem;
			}
		}
		public UITestTabCustomCheckBoxTreeItem1 UITestTabCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUITestTabCustomCheckBoxTreeItem == null))
				{
					this.mUITestTabCustomCheckBoxTreeItem = new UITestTabCustomCheckBoxTreeItem1(this);
				}
				return this.mUITestTabCustomCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinCheckBoxTreeItem mUINewTabCustomCheckBoxTreeItem;
		private UITestTabCustomCheckBoxTreeItem1 mUITestTabCustomCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITestTabCustomCheckBoxTreeItem1 : WinCheckBoxTreeItem
	{
		public UITestTabCustomCheckBoxTreeItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Test Tab (Custom)";
			this.SearchProperties["Value"] = "1";
			this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
			this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinTreeItem UINewGroupCustomTreeItem
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem == null))
				{
					this.mUINewGroupCustomTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUINewGroupCustomTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewCategoryCustomCheckBoxTreeItem : WinCheckBoxTreeItem
	{
		public UINewCategoryCustomCheckBoxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "New Category (Custom)";
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinCheckBoxTreeItem UINewTabCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUINewTabCustomCheckBoxTreeItem == null))
				{
					this.mUINewTabCustomCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUINewTabCustomCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "New Tab (Custom)";
					this.mUINewTabCustomCheckBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUINewTabCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewTabCustomCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewTabCustomCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUINewTabCustomCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinCheckBoxTreeItem mUINewTabCustomCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISubstratePanelClient : DXTestControl
	{
		public UISubstratePanelClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "substratePanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client73 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client73(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UILeftHeaderPanelClient UILeftHeaderPanelClient
		{
			get
			{
				if ((this.mUILeftHeaderPanelClient == null))
				{
					this.mUILeftHeaderPanelClient = new UILeftHeaderPanelClient(this);
				}
				return this.mUILeftHeaderPanelClient;
			}
		}
		public UIMiddlePanelClient UIMiddlePanelClient
		{
			get
			{
				if ((this.mUIMiddlePanelClient == null))
				{
					this.mUIMiddlePanelClient = new UIMiddlePanelClient(this);
				}
				return this.mUIMiddlePanelClient;
			}
		}
		public UIRibbonCustomizationUCustom UIRibbonCustomizationUCustom
		{
			get
			{
				if ((this.mUIRibbonCustomizationUCustom == null))
				{
					this.mUIRibbonCustomizationUCustom = new UIRibbonCustomizationUCustom(this);
				}
				return this.mUIRibbonCustomizationUCustom;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client73 mUIPanelControl1Client;
		private UILeftHeaderPanelClient mUILeftHeaderPanelClient;
		private UIMiddlePanelClient mUIMiddlePanelClient;
		private UIRibbonCustomizationUCustom mUIRibbonCustomizationUCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client73 : DXTestControl
	{
		public UIPanelControl1Client73(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnNewCategoryButton
		{
			get
			{
				if ((this.mUIBtnNewCategoryButton == null))
				{
					this.mUIBtnNewCategoryButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnNewCategoryButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewCategory";
					this.mUIBtnNewCategoryButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnNewCategoryButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnNewCategoryButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnNewCategoryButton;
			}
		}
		public DXButton UIBtnRenameButton
		{
			get
			{
				if ((this.mUIBtnRenameButton == null))
				{
					this.mUIBtnRenameButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRename";
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnRenameButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnRenameButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnNewCategoryButton;
		private DXButton mUIBtnRenameButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftHeaderPanelClient : DXTestControl
	{
		public UILeftHeaderPanelClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "leftHeaderPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public DXComboBox UICbeCommandsComboBox
		{
			get
			{
				if ((this.mUICbeCommandsComboBox == null))
				{
					this.mUICbeCommandsComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeCommands";
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICbeCommandsComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbeCommandsComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMiddlePanelClient : DXTestControl
	{
		public UIMiddlePanelClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "middlePanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnAddItemButton
		{
			get
			{
				if ((this.mUIBtnAddItemButton == null))
				{
					this.mUIBtnAddItemButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddItem";
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnAddItemButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnAddItemButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnAddItemButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonCustomizationUCustom : DXTestControl
	{
		public UIRibbonCustomizationUCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonCustomizationUserControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonCustomizationUserControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client74 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client74(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UILeftHeaderPanelClient1 UILeftHeaderPanelClient
		{
			get
			{
				if ((this.mUILeftHeaderPanelClient == null))
				{
					this.mUILeftHeaderPanelClient = new UILeftHeaderPanelClient1(this);
				}
				return this.mUILeftHeaderPanelClient;
			}
		}
		public UIMiddlePanelClient1 UIMiddlePanelClient
		{
			get
			{
				if ((this.mUIMiddlePanelClient == null))
				{
					this.mUIMiddlePanelClient = new UIMiddlePanelClient1(this);
				}
				return this.mUIMiddlePanelClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client74 mUIPanelControl1Client;
		private UILeftHeaderPanelClient1 mUILeftHeaderPanelClient;
		private UIMiddlePanelClient1 mUIMiddlePanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client74 : DXTestControl
	{
		public UIPanelControl1Client74(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnNewTabButton
		{
			get
			{
				if ((this.mUIBtnNewTabButton == null))
				{
					this.mUIBtnNewTabButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnNewTabButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewTab";
					this.mUIBtnNewTabButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnNewTabButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnNewTabButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnNewTabButton;
			}
		}
		public DXButton UIBtnRenameButton
		{
			get
			{
				if ((this.mUIBtnRenameButton == null))
				{
					this.mUIBtnRenameButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRename";
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnRenameButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnRenameButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnNewTabButton;
		private DXButton mUIBtnRenameButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftHeaderPanelClient1 : DXTestControl
	{
		public UILeftHeaderPanelClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "leftHeaderPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public DXComboBox UICbeCommandsComboBox
		{
			get
			{
				if ((this.mUICbeCommandsComboBox == null))
				{
					this.mUICbeCommandsComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeCommands";
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					#endregion
				}
				return this.mUICbeCommandsComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbeCommandsComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMiddlePanelClient1 : DXTestControl
	{
		public UIMiddlePanelClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "middlePanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnAddItemButton
		{
			get
			{
				if ((this.mUIBtnAddItemButton == null))
				{
					this.mUIBtnAddItemButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddItem";
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUIBtnAddItemButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnAddItemButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnAddItemButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftPanelPane : WinPane
	{
		public UILeftPanelPane(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "leftPanel";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UILeftTreeViewWindow UILeftTreeViewWindow
		{
			get
			{
				if ((this.mUILeftTreeViewWindow == null))
				{
					this.mUILeftTreeViewWindow = new UILeftTreeViewWindow(this);
				}
				return this.mUILeftTreeViewWindow;
			}
		}
		#endregion
		#region Fields
		private UILeftTreeViewWindow mUILeftTreeViewWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftTreeViewWindow : WinWindow
	{
		public UILeftTreeViewWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SysTreeView32", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UILeftTreeViewTree UILeftTreeViewTree
		{
			get
			{
				if ((this.mUILeftTreeViewTree == null))
				{
					this.mUILeftTreeViewTree = new UILeftTreeViewTree(this);
				}
				return this.mUILeftTreeViewTree;
			}
		}
		#endregion
		#region Fields
		private UILeftTreeViewTree mUILeftTreeViewTree;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftTreeViewTree : WinTree
	{
		public UILeftTreeViewTree(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public WinTreeItem UICopyTreeItem
		{
			get
			{
				if ((this.mUICopyTreeItem == null))
				{
					this.mUICopyTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUICopyTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Copy", PropertyExpressionOperator.Contains));
					this.mUICopyTreeItem.SearchProperties["Value"] = "0";
					this.mUICopyTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUICopyTreeItem;
			}
		}
		public WinTreeItem UICutTreeItem
		{
			get
			{
				if ((this.mUICutTreeItem == null))
				{
					this.mUICutTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUICutTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Cut", PropertyExpressionOperator.Contains));
					this.mUICutTreeItem.SearchProperties["Value"] = "0";
					this.mUICutTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUICutTreeItem;
			}
		}
		public WinTreeItem UIPasteTreeItem
		{
			get
			{
				if ((this.mUIPasteTreeItem == null))
				{
					this.mUIPasteTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUIPasteTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Paste", PropertyExpressionOperator.Contains));
					this.mUIPasteTreeItem.SearchProperties["Value"] = "0";
					this.mUIPasteTreeItem.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIPasteTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUICopyTreeItem;
		private WinTreeItem mUICutTreeItem;
		private WinTreeItem mUIPasteTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISubstratePanelClient1 : DXTestControl
	{
		public UISubstratePanelClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "substratePanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIRibbonCustomizationUCustom1 UIRibbonCustomizationUCustom
		{
			get
			{
				if ((this.mUIRibbonCustomizationUCustom == null))
				{
					this.mUIRibbonCustomizationUCustom = new UIRibbonCustomizationUCustom1(this);
				}
				return this.mUIRibbonCustomizationUCustom;
			}
		}
		#endregion
		#region Fields
		private UIRibbonCustomizationUCustom1 mUIRibbonCustomizationUCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonCustomizationUCustom1 : DXTestControl
	{
		public UIRibbonCustomizationUCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonCustomizationUserControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonCustomizationUserControl";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client75 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client75(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UILeftHeaderPanelClient2 UILeftHeaderPanelClient
		{
			get
			{
				if ((this.mUILeftHeaderPanelClient == null))
				{
					this.mUILeftHeaderPanelClient = new UILeftHeaderPanelClient2(this);
				}
				return this.mUILeftHeaderPanelClient;
			}
		}
		public UILeftHeaderPanelClient11 UILeftHeaderPanelClient1
		{
			get
			{
				if ((this.mUILeftHeaderPanelClient1 == null))
				{
					this.mUILeftHeaderPanelClient1 = new UILeftHeaderPanelClient11(this);
				}
				return this.mUILeftHeaderPanelClient1;
			}
		}
		public UIMiddlePanelClient2 UIMiddlePanelClient
		{
			get
			{
				if ((this.mUIMiddlePanelClient == null))
				{
					this.mUIMiddlePanelClient = new UIMiddlePanelClient2(this);
				}
				return this.mUIMiddlePanelClient;
			}
		}
		public UIRightUpDownPanelClient UIRightUpDownPanelClient
		{
			get
			{
				if ((this.mUIRightUpDownPanelClient == null))
				{
					this.mUIRightUpDownPanelClient = new UIRightUpDownPanelClient(this);
				}
				return this.mUIRightUpDownPanelClient;
			}
		}
		public UIRightUpDownPanelClient1 UIRightUpDownPanelClient1
		{
			get
			{
				if ((this.mUIRightUpDownPanelClient1 == null))
				{
					this.mUIRightUpDownPanelClient1 = new UIRightUpDownPanelClient1(this);
				}
				return this.mUIRightUpDownPanelClient1;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client75 mUIPanelControl1Client;
		private UILeftHeaderPanelClient2 mUILeftHeaderPanelClient;
		private UILeftHeaderPanelClient11 mUILeftHeaderPanelClient1;
		private UIMiddlePanelClient2 mUIMiddlePanelClient;
		private UIRightUpDownPanelClient mUIRightUpDownPanelClient;
		private UIRightUpDownPanelClient1 mUIRightUpDownPanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client75 : DXTestControl
	{
		public UIPanelControl1Client75(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnRenameButton
		{
			get
			{
				if ((this.mUIBtnRenameButton == null))
				{
					this.mUIBtnRenameButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRename";
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnRenameButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnRenameButton;
			}
		}
		public DXButton UIBtnNewCategoryButton
		{
			get
			{
				if ((this.mUIBtnNewCategoryButton == null))
				{
					this.mUIBtnNewCategoryButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnNewCategoryButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewCategory";
					this.mUIBtnNewCategoryButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnNewCategoryButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnNewCategoryButton;
			}
		}
		public DXButton UIBtnNewTabButton
		{
			get
			{
				if ((this.mUIBtnNewTabButton == null))
				{
					this.mUIBtnNewTabButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnNewTabButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewTab";
					this.mUIBtnNewTabButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnNewTabButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnNewTabButton;
			}
		}
		public DXButton UIBtnNewGroupButton
		{
			get
			{
				if ((this.mUIBtnNewGroupButton == null))
				{
					this.mUIBtnNewGroupButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnNewGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewGroup";
					this.mUIBtnNewGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnNewGroupButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnNewGroupButton;
			}
		}
		public UIResetOptonsDropDownBButton UIResetOptonsDropDownBButton
		{
			get
			{
				if ((this.mUIResetOptonsDropDownBButton == null))
				{
					this.mUIResetOptonsDropDownBButton = new UIResetOptonsDropDownBButton(this);
				}
				return this.mUIResetOptonsDropDownBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnRenameButton;
		private DXButton mUIBtnNewCategoryButton;
		private DXButton mUIBtnNewTabButton;
		private DXButton mUIBtnNewGroupButton;
		private UIResetOptonsDropDownBButton mUIResetOptonsDropDownBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIResetOptonsDropDownBButton : DXButton
	{
		public UIResetOptonsDropDownBButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "resetOptonsDropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "resetOptonsDropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftHeaderPanelClient2 : DXTestControl
	{
		public UILeftHeaderPanelClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "leftHeaderPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public DXComboBox UICbeCommandsComboBox
		{
			get
			{
				if ((this.mUICbeCommandsComboBox == null))
				{
					this.mUICbeCommandsComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeCommands";
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUICbeCommandsComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbeCommandsComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftHeaderPanelClient11 : DXTestControl
	{
		public UILeftHeaderPanelClient11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "leftHeaderPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public DXComboBox UICbeCommandsComboBox
		{
			get
			{
				if ((this.mUICbeCommandsComboBox == null))
				{
					this.mUICbeCommandsComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeCommands";
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUICbeCommandsComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbeCommandsComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMiddlePanelClient2 : DXTestControl
	{
		public UIMiddlePanelClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "middlePanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnAddItemButton
		{
			get
			{
				if ((this.mUIBtnAddItemButton == null))
				{
					this.mUIBtnAddItemButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddItem";
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnAddItemButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnAddItemButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnAddItemButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightUpDownPanelClient : DXTestControl
	{
		public UIRightUpDownPanelClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rightUpDownPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnUpButton
		{
			get
			{
				if ((this.mUIBtnUpButton == null))
				{
					this.mUIBtnUpButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnUpButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUp";
					this.mUIBtnUpButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnUpButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnUpButton;
			}
		}
		public DXButton UIBtnDownButton
		{
			get
			{
				if ((this.mUIBtnDownButton == null))
				{
					this.mUIBtnDownButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnDownButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDown";
					this.mUIBtnDownButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnDownButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnDownButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnUpButton;
		private DXButton mUIBtnDownButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightUpDownPanelClient1 : DXTestControl
	{
		public UIRightUpDownPanelClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rightUpDownPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
			this.WindowTitles.Add("Ribbon Customization Form");
			#endregion
		}
		#region Properties
		public DXButton UIBtnUpButton
		{
			get
			{
				if ((this.mUIBtnUpButton == null))
				{
					this.mUIBtnUpButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnUpButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUp";
					this.mUIBtnUpButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnUpButton.WindowTitles.Add("Ribbon Customization Form");
					#endregion
				}
				return this.mUIBtnUpButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnUpButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRenameWindow : WinWindow
	{
		public UIRenameWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Rename";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Rename");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teName";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUITextEditEdit.WindowTitles.Add("Rename");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "1";
					this.mUISimpleButtonButton.WindowTitles.Add("Rename");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXTextEdit UITextEditEdit1
		{
			get
			{
				if ((this.mUITextEditEdit1 == null))
				{
					this.mUITextEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "teName";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit1.WindowTitles.Add("Rename");
					#endregion
				}
				return this.mUITextEditEdit1;
			}
		}
		public DXButton UISimpleButtonButton1
		{
			get
			{
				if ((this.mUISimpleButtonButton1 == null))
				{
					this.mUISimpleButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
					this.mUISimpleButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton1.WindowTitles.Add("Rename");
					#endregion
				}
				return this.mUISimpleButtonButton1;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditEdit;
		private DXButton mUISimpleButtonButton;
		private DXTextEdit mUITextEditEdit1;
		private DXButton mUISimpleButtonButton1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITestProject10MicrosoWindow : WinWindow
	{
		public UITestProject10MicrosoWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "TestProject10 - Microsoft Visual Studio (Administrator)";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public UITabGroupST003ae79031TabList UITabGroupST003ae79031TabList
		{
			get
			{
				if ((this.mUITabGroupST003ae79031TabList == null))
				{
					this.mUITabGroupST003ae79031TabList = new UITabGroupST003ae79031TabList(this);
				}
				return this.mUITabGroupST003ae79031TabList;
			}
		}
		#endregion
		#region Fields
		private UITabGroupST003ae79031TabList mUITabGroupST003ae79031TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabGroupST003ae79031TabList : WpfTabList
	{
		public UITabGroupST003ae79031TabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "TabGroup|ST:0:0:{3ae79031-e1bc-11d0-8f78-00a0c9110057}|ST:0:0:{eefa5220-e298-11d0" +
				"-8f78-00a0c9110057}|ST:0:0:{3addf8e2-81cc-41a0-9785-dbd2d86064bd}";
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public UISolutionExplorerTabPage UISolutionExplorerTabPage
		{
			get
			{
				if ((this.mUISolutionExplorerTabPage == null))
				{
					this.mUISolutionExplorerTabPage = new UISolutionExplorerTabPage(this);
				}
				return this.mUISolutionExplorerTabPage;
			}
		}
		#endregion
		#region Fields
		private UISolutionExplorerTabPage mUISolutionExplorerTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISolutionExplorerTabPage : WpfTabPage
	{
		public UISolutionExplorerTabPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "TAB_ST:0:0:{3ae79031-e1bc-11d0-8f78-00a0c9110057}";
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public UISolutionExplorerPane UISolutionExplorerPane
		{
			get
			{
				if ((this.mUISolutionExplorerPane == null))
				{
					this.mUISolutionExplorerPane = new UISolutionExplorerPane(this);
				}
				return this.mUISolutionExplorerPane;
			}
		}
		#endregion
		#region Fields
		private UISolutionExplorerPane mUISolutionExplorerPane;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISolutionExplorerPane : WpfPane
	{
		public UISolutionExplorerPane(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ViewPresenter";
			this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ST:0:0:{3ae79031-e1bc-11d0-8f78-00a0c9110057}";
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public UISolutionExplorerPane1 UISolutionExplorerPane1
		{
			get
			{
				if ((this.mUISolutionExplorerPane1 == null))
				{
					this.mUISolutionExplorerPane1 = new UISolutionExplorerPane1(this);
				}
				return this.mUISolutionExplorerPane1;
			}
		}
		#endregion
		#region Fields
		private UISolutionExplorerPane1 mUISolutionExplorerPane1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISolutionExplorerPane1 : WpfPane
	{
		public UISolutionExplorerPane1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.GenericPane";
			this.SearchProperties[WpfPane.PropertyNames.Name] = "Solution Explorer";
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public UISolutionExplorerWindow UISolutionExplorerWindow
		{
			get
			{
				if ((this.mUISolutionExplorerWindow == null))
				{
					this.mUISolutionExplorerWindow = new UISolutionExplorerWindow(this);
				}
				return this.mUISolutionExplorerWindow;
			}
		}
		#endregion
		#region Fields
		private UISolutionExplorerWindow mUISolutionExplorerWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISolutionExplorerWindow : WinWindow
	{
		public UISolutionExplorerWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Solution Explorer";
			this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SysTreeView32";
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public UISolutionExplorerTree UISolutionExplorerTree
		{
			get
			{
				if ((this.mUISolutionExplorerTree == null))
				{
					this.mUISolutionExplorerTree = new UISolutionExplorerTree(this);
				}
				return this.mUISolutionExplorerTree;
			}
		}
		#endregion
		#region Fields
		private UISolutionExplorerTree mUISolutionExplorerTree;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISolutionExplorerTree : WinTree
	{
		public UISolutionExplorerTree(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public UISolutionTestProject1TreeItem UISolutionTestProject1TreeItem
		{
			get
			{
				if ((this.mUISolutionTestProject1TreeItem == null))
				{
					this.mUISolutionTestProject1TreeItem = new UISolutionTestProject1TreeItem(this);
				}
				return this.mUISolutionTestProject1TreeItem;
			}
		}
		#endregion
		#region Fields
		private UISolutionTestProject1TreeItem mUISolutionTestProject1TreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISolutionTestProject1TreeItem : WinTreeItem
	{
		public UISolutionTestProject1TreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Solution \'TestProject10\' (1 project)";
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
			#endregion
		}
		#region Properties
		public WinTreeItem UISolutionItemsTreeItem
		{
			get
			{
				if ((this.mUISolutionItemsTreeItem == null))
				{
					this.mUISolutionItemsTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUISolutionItemsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Solution Items";
					this.mUISolutionItemsTreeItem.SearchProperties["Value"] = "1";
					this.mUISolutionItemsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUISolutionItemsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUISolutionItemsTreeItem.WindowTitles.Add("TestProject10 - Microsoft Visual Studio (Administrator)");
					#endregion
				}
				return this.mUISolutionItemsTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUISolutionItemsTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow121 : WinWindow
	{
		public UIItemWindow121()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
			this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
			#endregion
		}
		#region Properties
		public UIContextMenu UIContextMenu
		{
			get
			{
				if ((this.mUIContextMenu == null))
				{
					this.mUIContextMenu = new UIContextMenu(this);
				}
				return this.mUIContextMenu;
			}
		}
		public UIAddorRemoveButtonsMenuItem4 UIAddorRemoveButtonsMenuItem
		{
			get
			{
				if ((this.mUIAddorRemoveButtonsMenuItem == null))
				{
					this.mUIAddorRemoveButtonsMenuItem = new UIAddorRemoveButtonsMenuItem4(this);
				}
				return this.mUIAddorRemoveButtonsMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIContextMenu mUIContextMenu;
		private UIAddorRemoveButtonsMenuItem4 mUIAddorRemoveButtonsMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIContextMenu : WinMenu
	{
		public UIContextMenu(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
			#endregion
		}
		#region Properties
		public WinMenuItem UIResetonlyselectedRibMenuItem
		{
			get
			{
				if ((this.mUIResetonlyselectedRibMenuItem == null))
				{
					this.mUIResetonlyselectedRibMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUIResetonlyselectedRibMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Reset only selected Ribbon tab";
					#endregion
				}
				return this.mUIResetonlyselectedRibMenuItem;
			}
		}
		public WinMenuItem UIResetallcustomizatioMenuItem
		{
			get
			{
				if ((this.mUIResetallcustomizatioMenuItem == null))
				{
					this.mUIResetallcustomizatioMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUIResetallcustomizatioMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Reset all customizations";
					#endregion
				}
				return this.mUIResetallcustomizatioMenuItem;
			}
		}
		public WinMenuItem UINewGroupMenuItem
		{
			get
			{
				if ((this.mUINewGroupMenuItem == null))
				{
					this.mUINewGroupMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUINewGroupMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "New Group";
					#endregion
				}
				return this.mUINewGroupMenuItem;
			}
		}
		public WinMenuItem UINewTabMenuItem
		{
			get
			{
				if ((this.mUINewTabMenuItem == null))
				{
					this.mUINewTabMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUINewTabMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "New Tab";
					#endregion
				}
				return this.mUINewTabMenuItem;
			}
		}
		public WinMenuItem UINewCategoryMenuItem
		{
			get
			{
				if ((this.mUINewCategoryMenuItem == null))
				{
					this.mUINewCategoryMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUINewCategoryMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "New Category";
					#endregion
				}
				return this.mUINewCategoryMenuItem;
			}
		}
		public WinMenuItem UIShowMoreButtonsMenuItem
		{
			get
			{
				if ((this.mUIShowMoreButtonsMenuItem == null))
				{
					this.mUIShowMoreButtonsMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUIShowMoreButtonsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Show More Buttons";
					#endregion
				}
				return this.mUIShowMoreButtonsMenuItem;
			}
		}
		public WinMenuItem UIShowFewerButtonsMenuItem
		{
			get
			{
				if ((this.mUIShowFewerButtonsMenuItem == null))
				{
					this.mUIShowFewerButtonsMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUIShowFewerButtonsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Show Fewer Buttons";
					#endregion
				}
				return this.mUIShowFewerButtonsMenuItem;
			}
		}
		#endregion
		#region Fields
		private WinMenuItem mUIResetonlyselectedRibMenuItem;
		private WinMenuItem mUIResetallcustomizatioMenuItem;
		private WinMenuItem mUINewGroupMenuItem;
		private WinMenuItem mUINewTabMenuItem;
		private WinMenuItem mUINewCategoryMenuItem;
		private WinMenuItem mUIShowMoreButtonsMenuItem;
		private WinMenuItem mUIShowFewerButtonsMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddorRemoveButtonsMenuItem4 : WinMenuItem
	{
		public UIAddorRemoveButtonsMenuItem4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Add or Remove Buttons";
			#endregion
		}
		#region Properties
		public WinMenuItem UICalendarMenuItem
		{
			get
			{
				if ((this.mUICalendarMenuItem == null))
				{
					this.mUICalendarMenuItem = new WinMenuItem(this);
					#region Search Criteria
					this.mUICalendarMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Calendar";
					this.mUICalendarMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					#endregion
				}
				return this.mUICalendarMenuItem;
			}
		}
		#endregion
		#region Fields
		private WinMenuItem mUICalendarMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRTFExportOptionsWindow1 : DXWindow
	{
		public UIRTFExportOptionsWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF Export Options";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LinesForm";
			this.WindowTitles.Add("RTF Export Options");
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF Export OptionsComboBoxEdit[0]";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox.WindowTitles.Add("RTF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		public DXComboBox UIComboBoxEditComboBox1
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox1 == null))
				{
					this.mUIComboBoxEditComboBox1 = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF Export OptionsComboBoxEdit[1]";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditComboBox1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIComboBoxEditComboBox1.WindowTitles.Add("RTF Export Options");
					#endregion
				}
				return this.mUIComboBoxEditComboBox1;
			}
		}
		public DXCheckBox UIExportwatermarksCheckBox
		{
			get
			{
				if ((this.mUIExportwatermarksCheckBox == null))
				{
					this.mUIExportwatermarksCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIExportwatermarksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF Export OptionsCheckEdit[0]";
					this.mUIExportwatermarksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIExportwatermarksCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIExportwatermarksCheckBox.WindowTitles.Add("RTF Export Options");
					#endregion
				}
				return this.mUIExportwatermarksCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		private DXComboBox mUIComboBoxEditComboBox1;
		private DXCheckBox mUIExportwatermarksCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow11 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow11()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - DataGrid";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "frmMain";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client76 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client76(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client76 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client76 : DXTestControl
	{
		public UIPanelControl1Client76(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIGcContainerClient46 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient46(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient46 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient46 : DXTestControl
	{
		public UIGcContainerClient46(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom10 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom10(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom10 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom10 : DXTestControl
	{
		public UIPreviewControlCustom10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client77 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client77(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client77 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client77 : DXTestControl
	{
		public UIPanelControl1Client77(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom30 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom30(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom30 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom30 : DXTestControl
	{
		public UIBarDockControlCustom30(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar9 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar9(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar9 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar9 : DXMenu
	{
		public UIToolbarMenuBar9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIHeaderAndFooterBarBaseButtonItem
		{
			get
			{
				if ((this.mUIHeaderAndFooterBarBaseButtonItem == null))
				{
					this.mUIHeaderAndFooterBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIHeaderAndFooterBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Header And Footer";
					this.mUIHeaderAndFooterBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIHeaderAndFooterBarBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHeaderAndFooterBarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIHeaderAndFooterBarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIHeaderandFooterWindow1 : DXWindow
	{
		public UIHeaderandFooterWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Header and Footer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HeaderFooterForm";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom34 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom34(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIBarDockControlCustom112 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom112(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom34 mUIBarDockControlCustom;
		private UIBarDockControlCustom112 mUIBarDockControlCustom1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom34 : DXTestControl
	{
		public UIBarDockControlCustom34(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Header and FooterBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar13 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar13(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar13 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar13 : DXMenu
	{
		public UICustom1MenuBar13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIBarButtonItemLink0BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink0BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink0BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink0BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIBarButtonItemLink0BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink0BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink0BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink1BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink1BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink1BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
					this.mUIBarButtonItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink1BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink1BarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIBarButtonItemLink0BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink1BarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom112 : DXTestControl
	{
		public UIBarDockControlCustom112(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Header and FooterBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public UICustom1MenuBar14 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar14(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar14 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar14 : DXMenu
	{
		public UICustom1MenuBar14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIBarButtonItemLink2BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink2BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink2BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink3BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink3BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink3BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink3BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink3BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink4BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink4BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink4BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[4]";
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink4BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink4BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink1BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink1BarBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink1BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
					this.mUIBarCheckItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarCheckItemLink1BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarCheckItemLink1BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink2BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink2BarBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[2]";
					this.mUIBarCheckItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarCheckItemLink2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarCheckItemLink2BarBaseButtonItem;
			}
		}
		public DXMenuEditItem UIBarEditItemLink0BarEditItem
		{
			get
			{
				if ((this.mUIBarEditItemLink0BarEditItem == null))
				{
					this.mUIBarEditItemLink0BarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIBarEditItemLink0BarEditItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarEditItemLink0BarEditItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIBarButtonItemLink2BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink3BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink4BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink1BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink2BarBaseButtonItem;
		private DXMenuEditItem mUIBarEditItemLink0BarEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow24 : WinWindow
	{
		public UIXtraGridFeaturesDemoWindow24()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Cell Selection";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client78 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client78(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client78 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client78 : DXTestControl
	{
		public UIPanelControl1Client78(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIGcContainerClient47 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient47(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient47 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient47 : DXTestControl
	{
		public UIGcContainerClient47(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UICellSelectionCustom2 UICellSelectionCustom
		{
			get
			{
				if ((this.mUICellSelectionCustom == null))
				{
					this.mUICellSelectionCustom = new UICellSelectionCustom2(this);
				}
				return this.mUICellSelectionCustom;
			}
		}
		#endregion
		#region Fields
		private UICellSelectionCustom2 mUICellSelectionCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICellSelectionCustom2 : DXTestControl
	{
		public UICellSelectionCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CellSelection";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CellSelection";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public DXGrid UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new DXGrid(this);
					#region Search Criteria
					this.mUIGridControl1Table.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
					this.mUIGridControl1Table.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
					this.mUIGridControl1Table.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private DXGrid mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewWindow1 : DXWindow
	{
		public UIPreviewWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Preview";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom35 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom35(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIBarDockControlCustom113 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom113(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom35 mUIBarDockControlCustom;
		private UIBarDockControlCustom113 mUIBarDockControlCustom1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom35 : DXTestControl
	{
		public UIBarDockControlCustom35(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar10 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar10(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar10 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar10 : DXMenu
	{
		public UIToolbarMenuBar10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIMultiplePagesBarBaseButtonItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarBaseButtonItem == null))
				{
					this.mUIMultiplePagesBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
					this.mUIMultiplePagesBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIMultiplePagesBarBaseButtonItem.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIMultiplePagesBarBaseButtonItem;
			}
		}
		public UIMultiplePagesBarItem7 UIMultiplePagesBarItem
		{
			get
			{
				if ((this.mUIMultiplePagesBarItem == null))
				{
					this.mUIMultiplePagesBarItem = new UIMultiplePagesBarItem7(this);
				}
				return this.mUIMultiplePagesBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIMultiplePagesBarBaseButtonItem;
		private UIMultiplePagesBarItem7 mUIMultiplePagesBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiplePagesBarItem7 : DXMenuItem
	{
		public UIMultiplePagesBarItem7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multiple Pages";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenu UIPopupContainerBarConMenu
		{
			get
			{
				if ((this.mUIPopupContainerBarConMenu == null))
				{
					this.mUIPopupContainerBarConMenu = new DXMenu(this);
					#region Search Criteria
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
					this.mUIPopupContainerBarConMenu.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPopupContainerBarConMenu;
			}
		}
		#endregion
		#region Fields
		private DXMenu mUIPopupContainerBarConMenu;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom113 : DXTestControl
	{
		public UIBarDockControlCustom113(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public UIStatusBarMenuBar5 UIStatusBarMenuBar
		{
			get
			{
				if ((this.mUIStatusBarMenuBar == null))
				{
					this.mUIStatusBarMenuBar = new UIStatusBarMenuBar5(this);
				}
				return this.mUIStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIStatusBarMenuBar5 mUIStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStatusBarMenuBar5 : DXMenu
	{
		public UIStatusBarMenuBar5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Status Bar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Preview");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPage7of46BarItem
		{
			get
			{
				if ((this.mUIPage7of46BarItem == null))
				{
					this.mUIPage7of46BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage7of46BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page 7 of 46";
					this.mUIPage7of46BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage7of46BarItem.WindowTitles.Add("Preview");
					#endregion
				}
				return this.mUIPage7of46BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPage7of46BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow12 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow12()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - DataGrid";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client79 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client79(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIRibbonControl1Ribbon4 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon4(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public UIPrintControlWindow UIPrintControlWindow
		{
			get
			{
				if ((this.mUIPrintControlWindow == null))
				{
					this.mUIPrintControlWindow = new UIPrintControlWindow(this);
				}
				return this.mUIPrintControlWindow;
			}
		}
		public UIRibbonStatusBarMenuBar UIRibbonStatusBarMenuBar
		{
			get
			{
				if ((this.mUIRibbonStatusBarMenuBar == null))
				{
					this.mUIRibbonStatusBarMenuBar = new UIRibbonStatusBarMenuBar(this);
				}
				return this.mUIRibbonStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client79 mUIPanelControl1Client;
		private UIRibbonControl1Ribbon4 mUIRibbonControl1Ribbon;
		private UIPrintControlWindow mUIPrintControlWindow;
		private UIRibbonStatusBarMenuBar mUIRibbonStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client79 : DXTestControl
	{
		public UIPanelControl1Client79(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIGcContainerClient48 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient48(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient48 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient48 : DXTestControl
	{
		public UIGcContainerClient48(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom11 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom11(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom11 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom11 : DXTestControl
	{
		public UIPreviewControlCustom11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client80 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client80(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIDocumentViewerPrintViewControl11 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl11(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		public DXDockPanel UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new DXDockPanel(this);
					#region Search Criteria
					this.mUIDockPanelDockPanel.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]";
					this.mUIDockPanelDockPanel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
					this.mUIDockPanelDockPanel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIDockPanelDockPanel.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		public UIFindPanelClient UIFindPanelClient
		{
			get
			{
				if ((this.mUIFindPanelClient == null))
				{
					this.mUIFindPanelClient = new UIFindPanelClient(this);
				}
				return this.mUIFindPanelClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client80 mUIPanelControl1Client;
		private UIDocumentViewerPrintViewControl11 mUIDocumentViewerPrintViewControl;
		private DXDockPanel mUIDockPanelDockPanel;
		private UIFindPanelClient mUIFindPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client80 : DXTestControl
	{
		public UIPanelControl1Client80(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom36 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom36(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public DXScrollBar UIVScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIVScrollBarScrollBarControl == null))
				{
					this.mUIVScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "vScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VScrollBar";
					this.mUIVScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIVScrollBarScrollBarControl.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIVScrollBarScrollBarControl;
			}
		}
		public UIDocumentViewerPrintViewControl10 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl10(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom36 mUIBarDockControlCustom;
		private DXScrollBar mUIVScrollBarScrollBarControl;
		private UIDocumentViewerPrintViewControl10 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom36 : DXTestControl
	{
		public UIBarDockControlCustom36(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar11 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar11(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar11 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar11 : DXMenu
	{
		public UIToolbarMenuBar11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIHeaderAndFooterBarBaseButtonItem
		{
			get
			{
				if ((this.mUIHeaderAndFooterBarBaseButtonItem == null))
				{
					this.mUIHeaderAndFooterBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIHeaderAndFooterBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Header And Footer";
					this.mUIHeaderAndFooterBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIHeaderAndFooterBarBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHeaderAndFooterBarBaseButtonItem;
			}
		}
		public UIExportDocumentBarItem1 UIExportDocumentBarItem
		{
			get
			{
				if ((this.mUIExportDocumentBarItem == null))
				{
					this.mUIExportDocumentBarItem = new UIExportDocumentBarItem1(this);
				}
				return this.mUIExportDocumentBarItem;
			}
		}
		public UIBarCustomizationItemBarItem2 UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new UIBarCustomizationItemBarItem2(this);
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		public DXMenuBaseButtonItem UIPageSetupBarBaseButtonItem
		{
			get
			{
				if ((this.mUIPageSetupBarBaseButtonItem == null))
				{
					this.mUIPageSetupBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIPageSetupBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[5]";
					this.mUIPageSetupBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIPageSetupBarBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPageSetupBarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIHeaderAndFooterBarBaseButtonItem;
		private UIExportDocumentBarItem1 mUIExportDocumentBarItem;
		private UIBarCustomizationItemBarItem2 mUIBarCustomizationItemBarItem;
		private DXMenuBaseButtonItem mUIPageSetupBarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportDocumentBarItem1 : DXMenuItem
	{
		public UIExportDocumentBarItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[19]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXButton UIBarItemOpenArrowButton
		{
			get
			{
				if ((this.mUIBarItemOpenArrowButton == null))
				{
					this.mUIBarItemOpenArrowButton = new DXButton(this);
					#region Search Criteria
					this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[19]";
					this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItemOpenArrow";
					this.mUIBarItemOpenArrowButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIBarItemOpenArrowButton;
			}
		}
		public DXMenuBaseButtonItem UICSVFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICSVFileMenuBaseButtonItem == null))
				{
					this.mUICSVFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICSVFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[6]";
					this.mUICSVFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUICSVFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUICSVFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIHTMLFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIHTMLFileMenuBaseButtonItem == null))
				{
					this.mUIHTMLFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIHTMLFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
					this.mUIHTMLFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIHTMLFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHTMLFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIRTFFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIRTFFileMenuBaseButtonItem == null))
				{
					this.mUIRTFFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIRTFFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[3]";
					this.mUIRTFFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIRTFFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIRTFFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIImageFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIImageFileMenuBaseButtonItem == null))
				{
					this.mUIImageFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIImageFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[8]";
					this.mUIImageFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIImageFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIImageFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIXLSFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIXLSFileMenuBaseButtonItem == null))
				{
					this.mUIXLSFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIXLSFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[4]";
					this.mUIXLSFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIXLSFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIXLSFileMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBarItemOpenArrowButton;
		private DXMenuBaseButtonItem mUICSVFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIHTMLFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIRTFFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIImageFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIXLSFileMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarCustomizationItemBarItem2 : DXMenuItem
	{
		public UIBarCustomizationItemBarItem2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIExportDocumentMenuItem UIExportDocumentMenuItem
		{
			get
			{
				if ((this.mUIExportDocumentMenuItem == null))
				{
					this.mUIExportDocumentMenuItem = new UIExportDocumentMenuItem(this);
				}
				return this.mUIExportDocumentMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIExportDocumentMenuItem mUIExportDocumentMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportDocumentMenuItem : DXMenuItem
	{
		public UIExportDocumentMenuItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXButton UIBarItemOpenArrowButton
		{
			get
			{
				if ((this.mUIBarItemOpenArrowButton == null))
				{
					this.mUIBarItemOpenArrowButton = new DXButton(this);
					#region Search Criteria
					this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItemOpenArrow";
					this.mUIBarItemOpenArrowButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIBarItemOpenArrowButton;
			}
		}
		public DXMenuBaseButtonItem UICSVFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUICSVFileMenuBaseButtonItem == null))
				{
					this.mUICSVFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICSVFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[6]";
					this.mUICSVFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUICSVFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUICSVFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink1MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink1MenuBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
					this.mUIBarCheckItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIBarCheckItemLink1MenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIBarCheckItemLink1MenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIRTFFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIRTFFileMenuBaseButtonItem == null))
				{
					this.mUIRTFFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIRTFFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[3]";
					this.mUIRTFFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIRTFFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIRTFFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIXLSFileMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIXLSFileMenuBaseButtonItem == null))
				{
					this.mUIXLSFileMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIXLSFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[4]";
					this.mUIXLSFileMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIXLSFileMenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIXLSFileMenuBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink8MenuBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink8MenuBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink8MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink8MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[8]";
					this.mUIBarCheckItemLink8MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIBarCheckItemLink8MenuBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIBarCheckItemLink8MenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBarItemOpenArrowButton;
		private DXMenuBaseButtonItem mUICSVFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink1MenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIRTFFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIXLSFileMenuBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink8MenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl10 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices06PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices06PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices06PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices06PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[6]";
					this.mUIPage0BrickIndices06PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices06PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices06PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11]";
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices07PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices07PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices07PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices07PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[7]";
					this.mUIPage0BrickIndices07PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices07PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices07PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[10]";
					this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices010PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices010PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices06PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices07PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices010PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl11 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11]";
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices025PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices025PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices025PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[25]";
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices025PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices025PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices026PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices026PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices026PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices026PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[26]";
					this.mUIPage0BrickIndices026PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices026PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices026PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices00PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices00PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices00PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0]";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices00PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices00PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage1BrickIndices000PrintControlBrick
		{
			get
			{
				if ((this.mUIPage1BrickIndices000PrintControlBrick == null))
				{
					this.mUIPage1BrickIndices000PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage1BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [1].BrickIndices [0].[0].[0]";
					this.mUIPage1BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage1BrickIndices000PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage1BrickIndices000PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices08PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices08PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices08PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices08PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[8]";
					this.mUIPage0BrickIndices08PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices08PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices08PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices020PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices020PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices020PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices020PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[20]";
					this.mUIPage0BrickIndices020PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices020PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage0BrickIndices020PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices025PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices026PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices00PrintControlBrick;
		private DXPrintingBrick mUIPage1BrickIndices000PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices08PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices020PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindPanelClient : DXTestControl
	{
		public UIFindPanelClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlFindPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIFindControlCustom1 UIFindControlCustom
		{
			get
			{
				if ((this.mUIFindControlCustom == null))
				{
					this.mUIFindControlCustom = new UIFindControlCustom1(this);
				}
				return this.mUIFindControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIFindControlCustom1 mUIFindControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindControlCustom1 : DXTestControl
	{
		public UIFindControlCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public UIDdBtnParametersButton UIDdBtnParametersButton
		{
			get
			{
				if ((this.mUIDdBtnParametersButton == null))
				{
					this.mUIDdBtnParametersButton = new UIDdBtnParametersButton(this);
				}
				return this.mUIDdBtnParametersButton;
			}
		}
		public DXButton UINextButton
		{
			get
			{
				if ((this.mUINextButton == null))
				{
					this.mUINextButton = new DXButton(this);
					#region Search Criteria
					this.mUINextButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnFindNext";
					this.mUINextButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUINextButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUINextButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditEdit;
		private UIDdBtnParametersButton mUIDdBtnParametersButton;
		private DXButton mUINextButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDdBtnParametersButton : DXButton
	{
		public UIDdBtnParametersButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddBtnParameters";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddBtnParametersArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon4 : DXRibbon
	{
		public UIRibbonControl1Ribbon4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIRpMainRibbonPage UIRpMainRibbonPage
		{
			get
			{
				if ((this.mUIRpMainRibbonPage == null))
				{
					this.mUIRpMainRibbonPage = new UIRpMainRibbonPage(this);
				}
				return this.mUIRpMainRibbonPage;
			}
		}
		public UIRibbonPageActionsRibbonPage UIRibbonPageActionsRibbonPage
		{
			get
			{
				if ((this.mUIRibbonPageActionsRibbonPage == null))
				{
					this.mUIRibbonPageActionsRibbonPage = new UIRibbonPageActionsRibbonPage(this);
				}
				return this.mUIRibbonPageActionsRibbonPage;
			}
		}
		public UIRibbonPage1RibbonPage5 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage5(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRpMainRibbonPage mUIRpMainRibbonPage;
		private UIRibbonPageActionsRibbonPage mUIRibbonPageActionsRibbonPage;
		private UIRibbonPage1RibbonPage5 mUIRibbonPage1RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpMainRibbonPage : DXRibbonPage
	{
		public UIRpMainRibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIRpgAppearanceRibbonPageGroup UIRpgAppearanceRibbonPageGroup
		{
			get
			{
				if ((this.mUIRpgAppearanceRibbonPageGroup == null))
				{
					this.mUIRpgAppearanceRibbonPageGroup = new UIRpgAppearanceRibbonPageGroup(this);
				}
				return this.mUIRpgAppearanceRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRpgAppearanceRibbonPageGroup mUIRpgAppearanceRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpgAppearanceRibbonPageGroup : DXRibbonPageGroup
	{
		public UIRpgAppearanceRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgAppearance";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UISkinsRibbonGallery1 UISkinsRibbonGallery
		{
			get
			{
				if ((this.mUISkinsRibbonGallery == null))
				{
					this.mUISkinsRibbonGallery = new UISkinsRibbonGallery1(this);
				}
				return this.mUISkinsRibbonGallery;
			}
		}
		#endregion
		#region Fields
		private UISkinsRibbonGallery1 mUISkinsRibbonGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISkinsRibbonGallery1 : DXTestControl
	{
		public UISkinsRibbonGallery1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Skins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonGalleryDropDowButton
		{
			get
			{
				if ((this.mUIRibbonGalleryDropDowButton == null))
				{
					this.mUIRibbonGalleryDropDowButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIRibbonGalleryDropDowButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonGalleryDropDowButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageActionsRibbonPage : DXRibbonPage
	{
		public UIRibbonPageActionsRibbonPage(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageActions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIRibbonGroupActionsRibbonPageGroup UIRibbonGroupActionsRibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonGroupActionsRibbonPageGroup == null))
				{
					this.mUIRibbonGroupActionsRibbonPageGroup = new UIRibbonGroupActionsRibbonPageGroup(this);
				}
				return this.mUIRibbonGroupActionsRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonGroupActionsRibbonPageGroup mUIRibbonGroupActionsRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonGroupActionsRibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonGroupActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonGroupActions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXRibbonItem UICategoriesRibbonItem
		{
			get
			{
				if ((this.mUICategoriesRibbonItem == null))
				{
					this.mUICategoriesRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUICategoriesRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barListTables";
					this.mUICategoriesRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUICategoriesRibbonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUICategoriesRibbonItem;
			}
		}
		public DXRibbonButtonItem UIRefreshRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIRefreshRibbonBaseButtonItem == null))
				{
					this.mUIRefreshRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiRefresh";
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIRefreshRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIRefreshRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonItem mUICategoriesRibbonItem;
		private DXRibbonButtonItem mUIRefreshRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage5 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIPrintPreviewRibbonPaRibbonPageGroup1 UIPrintPreviewRibbonPaRibbonPageGroup
		{
			get
			{
				if ((this.mUIPrintPreviewRibbonPaRibbonPageGroup == null))
				{
					this.mUIPrintPreviewRibbonPaRibbonPageGroup = new UIPrintPreviewRibbonPaRibbonPageGroup1(this);
				}
				return this.mUIPrintPreviewRibbonPaRibbonPageGroup;
			}
		}
		public UIPrintPreviewRibbonPaRibbonPageGroup11 UIPrintPreviewRibbonPaRibbonPageGroup1
		{
			get
			{
				if ((this.mUIPrintPreviewRibbonPaRibbonPageGroup1 == null))
				{
					this.mUIPrintPreviewRibbonPaRibbonPageGroup1 = new UIPrintPreviewRibbonPaRibbonPageGroup11(this);
				}
				return this.mUIPrintPreviewRibbonPaRibbonPageGroup1;
			}
		}
		public UIPageGroupPageSetupRibbonPageGroup UIPageGroupPageSetupRibbonPageGroup
		{
			get
			{
				if ((this.mUIPageGroupPageSetupRibbonPageGroup == null))
				{
					this.mUIPageGroupPageSetupRibbonPageGroup = new UIPageGroupPageSetupRibbonPageGroup(this);
				}
				return this.mUIPageGroupPageSetupRibbonPageGroup;
			}
		}
		public UIPrintPreviewRibbonPaRibbonPageGroup2 UIPrintPreviewRibbonPaRibbonPageGroup2
		{
			get
			{
				if ((this.mUIPrintPreviewRibbonPaRibbonPageGroup2 == null))
				{
					this.mUIPrintPreviewRibbonPaRibbonPageGroup2 = new UIPrintPreviewRibbonPaRibbonPageGroup2(this);
				}
				return this.mUIPrintPreviewRibbonPaRibbonPageGroup2;
			}
		}
		public UIPrintPreviewRibbonPaRibbonPageGroup3 UIPrintPreviewRibbonPaRibbonPageGroup3
		{
			get
			{
				if ((this.mUIPrintPreviewRibbonPaRibbonPageGroup3 == null))
				{
					this.mUIPrintPreviewRibbonPaRibbonPageGroup3 = new UIPrintPreviewRibbonPaRibbonPageGroup3(this);
				}
				return this.mUIPrintPreviewRibbonPaRibbonPageGroup3;
			}
		}
		#endregion
		#region Fields
		private UIPrintPreviewRibbonPaRibbonPageGroup1 mUIPrintPreviewRibbonPaRibbonPageGroup;
		private UIPrintPreviewRibbonPaRibbonPageGroup11 mUIPrintPreviewRibbonPaRibbonPageGroup1;
		private UIPageGroupPageSetupRibbonPageGroup mUIPageGroupPageSetupRibbonPageGroup;
		private UIPrintPreviewRibbonPaRibbonPageGroup2 mUIPrintPreviewRibbonPaRibbonPageGroup2;
		private UIPrintPreviewRibbonPaRibbonPageGroup3 mUIPrintPreviewRibbonPaRibbonPageGroup3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintPreviewRibbonPaRibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIPrintPreviewRibbonPaRibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewRibbonPageGroup5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIManyPagesRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIManyPagesRibbonBaseButtonItem == null))
				{
					this.mUIManyPagesRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIManyPagesRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem20";
					this.mUIManyPagesRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIManyPagesRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIManyPagesRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIZoomInRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIZoomInRibbonBaseButtonItem == null))
				{
					this.mUIZoomInRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIZoomInRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem14";
					this.mUIZoomInRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIZoomInRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomInRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIHandToolRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIHandToolRibbonBaseButtonItem == null))
				{
					this.mUIHandToolRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIHandToolRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem11";
					this.mUIHandToolRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIHandToolRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHandToolRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIZoomRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIZoomRibbonBaseButtonItem == null))
				{
					this.mUIZoomRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIZoomRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem15";
					this.mUIZoomRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIZoomRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIZoomOutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIZoomOutRibbonBaseButtonItem == null))
				{
					this.mUIZoomOutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIZoomOutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem13";
					this.mUIZoomOutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIZoomOutRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomOutRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIMagnifierRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIMagnifierRibbonBaseButtonItem == null))
				{
					this.mUIMagnifierRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIMagnifierRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem12";
					this.mUIMagnifierRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIMagnifierRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIMagnifierRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIManyPagesRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIZoomInRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIHandToolRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIZoomRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIZoomOutRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIMagnifierRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintPreviewRibbonPaRibbonPageGroup11 : DXRibbonPageGroup
	{
		public UIPrintPreviewRibbonPaRibbonPageGroup11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewRibbonPageGroup4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIFindRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIFindRibbonBaseButtonItem == null))
				{
					this.mUIFindRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIFindRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem3";
					this.mUIFindRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIFindRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIFindRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UINextPageRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUINextPageRibbonBaseButtonItem == null))
				{
					this.mUINextPageRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUINextPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem18";
					this.mUINextPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUINextPageRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUINextPageRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UILastPageRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUILastPageRibbonBaseButtonItem == null))
				{
					this.mUILastPageRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUILastPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem19";
					this.mUILastPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUILastPageRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUILastPageRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIFirstPageRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIFirstPageRibbonBaseButtonItem == null))
				{
					this.mUIFirstPageRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIFirstPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem16";
					this.mUIFirstPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIFirstPageRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIFirstPageRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIPreviousPageRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIPreviousPageRibbonBaseButtonItem == null))
				{
					this.mUIPreviousPageRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIPreviousPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem17";
					this.mUIPreviousPageRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIPreviousPageRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPreviousPageRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIFindRibbonBaseButtonItem;
		private DXRibbonButtonItem mUINextPageRibbonBaseButtonItem;
		private DXRibbonButtonItem mUILastPageRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIFirstPageRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIPreviousPageRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageGroupPageSetupRibbonPageGroup : DXRibbonPageGroup
	{
		public UIPageGroupPageSetupRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pageGroupPageSetup";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIHeaderFooterRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIHeaderFooterRibbonBaseButtonItem == null))
				{
					this.mUIHeaderFooterRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIHeaderFooterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem8";
					this.mUIHeaderFooterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIHeaderFooterRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIHeaderFooterRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIScaleRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIScaleRibbonBaseButtonItem == null))
				{
					this.mUIScaleRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIScaleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem9";
					this.mUIScaleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIScaleRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIScaleRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIHeaderFooterRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIScaleRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintPreviewRibbonPaRibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIPrintPreviewRibbonPaRibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewRibbonPageGroup6";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIWatermarkRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIWatermarkRibbonBaseButtonItem == null))
				{
					this.mUIWatermarkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIWatermarkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem22";
					this.mUIWatermarkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIWatermarkRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIWatermarkRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIWatermarkRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintPreviewRibbonPaRibbonPageGroup3 : DXRibbonPageGroup
	{
		public UIPrintPreviewRibbonPaRibbonPageGroup3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewRibbonPageGroup7";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIExportToRibbonItem UIExportToRibbonItem
		{
			get
			{
				if ((this.mUIExportToRibbonItem == null))
				{
					this.mUIExportToRibbonItem = new UIExportToRibbonItem(this);
				}
				return this.mUIExportToRibbonItem;
			}
		}
		#endregion
		#region Fields
		private UIExportToRibbonItem mUIExportToRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportToRibbonItem : DXRibbonItem
	{
		public UIExportToRibbonItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem23";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXButton UIPrintPreviewBarItem2Button
		{
			get
			{
				if ((this.mUIPrintPreviewBarItem2Button == null))
				{
					this.mUIPrintPreviewBarItem2Button = new DXButton(this);
					#region Search Criteria
					this.mUIPrintPreviewBarItem2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem23";
					this.mUIPrintPreviewBarItem2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItemDrop";
					this.mUIPrintPreviewBarItem2Button.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPrintPreviewBarItem2Button;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPrintPreviewBarItem2Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintControlWindow : WinWindow
	{
		public UIPrintControlWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "printControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIItemWindow15 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow15(this);
				}
				return this.mUIItemWindow;
			}
		}
		#endregion
		#region Fields
		private UIItemWindow15 mUIItemWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow15 : WinWindow
	{
		public UIItemWindow15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Dock Top";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public UIToolbarMenuBar12 UIToolbarMenuBar
		{
			get
			{
				if ((this.mUIToolbarMenuBar == null))
				{
					this.mUIToolbarMenuBar = new UIToolbarMenuBar12(this);
				}
				return this.mUIToolbarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIToolbarMenuBar12 mUIToolbarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIToolbarMenuBar12 : DXMenu
	{
		public UIToolbarMenuBar12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Toolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIWatermarkBarBaseButtonItem
		{
			get
			{
				if ((this.mUIWatermarkBarBaseButtonItem == null))
				{
					this.mUIWatermarkBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIWatermarkBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Watermark...";
					this.mUIWatermarkBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIWatermarkBarBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIWatermarkBarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIWatermarkBarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonStatusBarMenuBar : DXMenu
	{
		public UIRibbonStatusBarMenuBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPage3of46BarItem
		{
			get
			{
				if ((this.mUIPage3of46BarItem == null))
				{
					this.mUIPage3of46BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage3of46BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewStaticItem1";
					this.mUIPage3of46BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage3of46BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIPage3of46BarItem;
			}
		}
		public DXMenuItem UIItem150BarItem
		{
			get
			{
				if ((this.mUIItem150BarItem == null))
				{
					this.mUIItem150BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIItem150BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewStaticItem2";
					this.mUIItem150BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIItem150BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIItem150BarItem;
			}
		}
		public DXMenuItem UIZoomTrackBarEditItemBarItem
		{
			get
			{
				if ((this.mUIZoomTrackBarEditItemBarItem == null))
				{
					this.mUIZoomTrackBarEditItemBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIZoomTrackBarEditItemBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "zoomTrackBarEditItem1";
					this.mUIZoomTrackBarEditItemBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIZoomTrackBarEditItemBarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIZoomTrackBarEditItemBarItem;
			}
		}
		public UIZoomTrackBarControlTrackBar UIZoomTrackBarControlTrackBar
		{
			get
			{
				if ((this.mUIZoomTrackBarControlTrackBar == null))
				{
					this.mUIZoomTrackBarControlTrackBar = new UIZoomTrackBarControlTrackBar(this);
				}
				return this.mUIZoomTrackBarControlTrackBar;
			}
		}
		public DXTestControl UISizeGripCustom
		{
			get
			{
				if ((this.mUISizeGripCustom == null))
				{
					this.mUISizeGripCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUISizeGripCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "SizeGrip";
					this.mUISizeGripCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SizeGrip";
					this.mUISizeGripCustom.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUISizeGripCustom;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPage3of46BarItem;
		private DXMenuItem mUIItem150BarItem;
		private DXMenuItem mUIZoomTrackBarEditItemBarItem;
		private UIZoomTrackBarControlTrackBar mUIZoomTrackBarControlTrackBar;
		private DXTestControl mUISizeGripCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIZoomTrackBarControlTrackBar : DXTrackBar
	{
		public UIZoomTrackBarControlTrackBar(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBarZoomTrackBarControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ZoomTrackBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButtonButton
		{
			get
			{
				if ((this.mUIEditorButtonButton == null))
				{
					this.mUIEditorButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBarZoomTrackBarControl[0]ZoomOut";
					this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIEditorButtonButton;
			}
		}
		public DXButton UIEditorButtonButton1
		{
			get
			{
				if ((this.mUIEditorButtonButton1 == null))
				{
					this.mUIEditorButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBarZoomTrackBarControl[0]ZoomIn";
					this.mUIEditorButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton1.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIEditorButtonButton1;
			}
		}
		public DXButton UIEditorButtonButton2
		{
			get
			{
				if ((this.mUIEditorButtonButton2 == null))
				{
					this.mUIEditorButtonButton2 = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBarZoomTrackBarControl[0]ZoomIn";
					this.mUIEditorButtonButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton2.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIEditorButtonButton2;
			}
		}
		public DXButton UIEditorButtonButton3
		{
			get
			{
				if ((this.mUIEditorButtonButton3 == null))
				{
					this.mUIEditorButtonButton3 = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton3.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBarZoomTrackBarControl[0]ZoomIn";
					this.mUIEditorButtonButton3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton3.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIEditorButtonButton3;
			}
		}
		public DXButton UIEditorButtonButton4
		{
			get
			{
				if ((this.mUIEditorButtonButton4 == null))
				{
					this.mUIEditorButtonButton4 = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButtonButton4.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBarZoomTrackBarControl[0]ZoomIn";
					this.mUIEditorButtonButton4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButtonButton4.WindowTitles.Add("XtraPrinting Features Demo (C# code) - DataGrid");
					#endregion
				}
				return this.mUIEditorButtonButton4;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButtonButton;
		private DXButton mUIEditorButtonButton1;
		private DXButton mUIEditorButtonButton2;
		private DXButton mUIEditorButtonButton3;
		private DXButton mUIEditorButtonButton4;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIHeaderandFooterWindow2 : DXWindow
	{
		public UIHeaderandFooterWindow2()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Header and Footer";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXCheckBox UIFooterCheckEditCheckBox
		{
			get
			{
				if ((this.mUIFooterCheckEditCheckBox == null))
				{
					this.mUIFooterCheckEditCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIFooterCheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "footerCheckEdit";
					this.mUIFooterCheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIFooterCheckEditCheckBox.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIFooterCheckEditCheckBox;
			}
		}
		public DXTextEdit UITbFoot1Edit
		{
			get
			{
				if ((this.mUITbFoot1Edit == null))
				{
					this.mUITbFoot1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot1";
					this.mUITbFoot1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot1Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot1Edit;
			}
		}
		public UIBarDockControlCustom37 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom37(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public DXTextEdit UITbFoot2Edit
		{
			get
			{
				if ((this.mUITbFoot2Edit == null))
				{
					this.mUITbFoot2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot2";
					this.mUITbFoot2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot2Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot2Edit;
			}
		}
		public DXTextEdit UITbFoot3Edit
		{
			get
			{
				if ((this.mUITbFoot3Edit == null))
				{
					this.mUITbFoot3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFoot3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFoot3";
					this.mUITbFoot3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbFoot3Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbFoot3Edit;
			}
		}
		public DXTextEdit UITbHead2Edit
		{
			get
			{
				if ((this.mUITbHead2Edit == null))
				{
					this.mUITbHead2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead2";
					this.mUITbHead2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead2Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead2Edit;
			}
		}
		public DXTextEdit UITbHead3Edit
		{
			get
			{
				if ((this.mUITbHead3Edit == null))
				{
					this.mUITbHead3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead3";
					this.mUITbHead3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead3Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead3Edit;
			}
		}
		public DXTextEdit UITbHead1Edit
		{
			get
			{
				if ((this.mUITbHead1Edit == null))
				{
					this.mUITbHead1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbHead1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbHead1";
					this.mUITbHead1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITbHead1Edit.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUITbHead1Edit;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIFooterCheckEditCheckBox;
		private DXTextEdit mUITbFoot1Edit;
		private UIBarDockControlCustom37 mUIBarDockControlCustom;
		private DXTextEdit mUITbFoot2Edit;
		private DXTextEdit mUITbFoot3Edit;
		private DXTextEdit mUITbHead2Edit;
		private DXTextEdit mUITbHead3Edit;
		private DXTextEdit mUITbHead1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom37 : DXTestControl
	{
		public UIBarDockControlCustom37(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar15 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar15(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar15 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar15 : DXMenu
	{
		public UICustom1MenuBar15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Header and Footer");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIBarButtonItemLink1BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink1BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink1BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
					this.mUIBarButtonItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink1BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink1BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink2BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink2BarBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[2]";
					this.mUIBarCheckItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarCheckItemLink2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarCheckItemLink2BarBaseButtonItem;
			}
		}
		public DXMenuEditItem UIBarEditItemLink0BarEditItem
		{
			get
			{
				if ((this.mUIBarEditItemLink0BarEditItem == null))
				{
					this.mUIBarEditItemLink0BarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIBarEditItemLink0BarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIBarEditItemLink0BarEditItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarEditItemLink0BarEditItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink0BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink0BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink0BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink0BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
					this.mUIBarButtonItemLink0BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink0BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink0BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink2BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink2BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
					this.mUIBarButtonItemLink2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink2BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink3BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink3BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink3BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
					this.mUIBarButtonItemLink3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink3BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink3BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItemLink4BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItemLink4BarBaseButtonItem == null))
				{
					this.mUIBarButtonItemLink4BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[4]";
					this.mUIBarButtonItemLink4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItemLink4BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItemLink4BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarCheckItemLink1BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarCheckItemLink1BarBaseButtonItem == null))
				{
					this.mUIBarCheckItemLink1BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarCheckItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
					this.mUIBarCheckItemLink1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarCheckItemLink1BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarCheckItemLink1BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItem1BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItem1BarBaseButtonItem == null))
				{
					this.mUIBarButtonItem1BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItem1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItem1";
					this.mUIBarButtonItem1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItem1BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItem1BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItem2BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItem2BarBaseButtonItem == null))
				{
					this.mUIBarButtonItem2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItem2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItem2";
					this.mUIBarButtonItem2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItem2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItem2BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItem4BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItem4BarBaseButtonItem == null))
				{
					this.mUIBarButtonItem4BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItem4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItem4";
					this.mUIBarButtonItem4BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItem4BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItem4BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItem3BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItem3BarBaseButtonItem == null))
				{
					this.mUIBarButtonItem3BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItem3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItem3";
					this.mUIBarButtonItem3BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItem3BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItem3BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UICheckItem1BarBaseButtonItem
		{
			get
			{
				if ((this.mUICheckItem1BarBaseButtonItem == null))
				{
					this.mUICheckItem1BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICheckItem1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "checkItem1";
					this.mUICheckItem1BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUICheckItem1BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUICheckItem1BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UICheckItem2BarBaseButtonItem
		{
			get
			{
				if ((this.mUICheckItem2BarBaseButtonItem == null))
				{
					this.mUICheckItem2BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUICheckItem2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "checkItem2";
					this.mUICheckItem2BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUICheckItem2BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUICheckItem2BarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIBarButtonItem6BarBaseButtonItem
		{
			get
			{
				if ((this.mUIBarButtonItem6BarBaseButtonItem == null))
				{
					this.mUIBarButtonItem6BarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIBarButtonItem6BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItem6";
					this.mUIBarButtonItem6BarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIBarButtonItem6BarBaseButtonItem.WindowTitles.Add("Header and Footer");
					#endregion
				}
				return this.mUIBarButtonItem6BarBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIBarButtonItemLink1BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink2BarBaseButtonItem;
		private DXMenuEditItem mUIBarEditItemLink0BarEditItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink0BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink2BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink3BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItemLink4BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarCheckItemLink1BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItem1BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItem2BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItem4BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItem3BarBaseButtonItem;
		private DXMenuBaseButtonItem mUICheckItem1BarBaseButtonItem;
		private DXMenuBaseButtonItem mUICheckItem2BarBaseButtonItem;
		private DXMenuBaseButtonItem mUIBarButtonItem6BarBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISimplePadCDemoWindow1 : DXWindow
	{
		public UISimplePadCDemoWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SimplePad (C# Demo)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom38 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom38(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom38 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom38 : DXTestControl
	{
		public UIBarDockControlCustom38(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFormatMenuBar5 UIFormatMenuBar
		{
			get
			{
				if ((this.mUIFormatMenuBar == null))
				{
					this.mUIFormatMenuBar = new UIFormatMenuBar5(this);
				}
				return this.mUIFormatMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIFormatMenuBar5 mUIFormatMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuBar5 : DXMenu
	{
		public UIFormatMenuBar5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIItalicBarBaseButtonItem
		{
			get
			{
				if ((this.mUIItalicBarBaseButtonItem == null))
				{
					this.mUIItalicBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIItalicBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Italic";
					this.mUIItalicBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIItalicBarBaseButtonItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIItalicBarBaseButtonItem;
			}
		}
		public DXMenuBaseButtonItem UIUnderlineBarBaseButtonItem
		{
			get
			{
				if ((this.mUIUnderlineBarBaseButtonItem == null))
				{
					this.mUIUnderlineBarBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIUnderlineBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Underline";
					this.mUIUnderlineBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
					this.mUIUnderlineBarBaseButtonItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIUnderlineBarBaseButtonItem;
			}
		}
		public UIBarCustomizationItemBarItem3 UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new UIBarCustomizationItemBarItem3(this);
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIItalicBarBaseButtonItem;
		private DXMenuBaseButtonItem mUIUnderlineBarBaseButtonItem;
		private UIBarCustomizationItemBarItem3 mUIBarCustomizationItemBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarCustomizationItemBarItem3 : DXMenuItem
	{
		public UIBarCustomizationItemBarItem3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIAddorRemoveButtonsMenuItem5 UIAddorRemoveButtonsMenuItem
		{
			get
			{
				if ((this.mUIAddorRemoveButtonsMenuItem == null))
				{
					this.mUIAddorRemoveButtonsMenuItem = new UIAddorRemoveButtonsMenuItem5(this);
				}
				return this.mUIAddorRemoveButtonsMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIAddorRemoveButtonsMenuItem5 mUIAddorRemoveButtonsMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddorRemoveButtonsMenuItem5 : DXMenuItem
	{
		public UIAddorRemoveButtonsMenuItem5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "&Add or Remove Buttons";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public UIFormatMenuItem1 UIFormatMenuItem
		{
			get
			{
				if ((this.mUIFormatMenuItem == null))
				{
					this.mUIFormatMenuItem = new UIFormatMenuItem1(this);
				}
				return this.mUIFormatMenuItem;
			}
		}
		#endregion
		#region Fields
		private UIFormatMenuItem1 mUIFormatMenuItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatMenuItem1 : DXMenuItem
	{
		public UIFormatMenuItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
			this.WindowTitles.Add("SimplePad (C# Demo)");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIResetToolbarMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIResetToolbarMenuBaseButtonItem == null))
				{
					this.mUIResetToolbarMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIResetToolbarMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Reset Toolbar";
					this.mUIResetToolbarMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIResetToolbarMenuBaseButtonItem.WindowTitles.Add("SimplePad (C# Demo)");
					#endregion
				}
				return this.mUIResetToolbarMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIResetToolbarMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIWindowsForms10WindowWindow : DXWindow
	{
		public UIWindowsForms10WindowWindow()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Customization";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public UIXtraTabControlTabList10 UIXtraTabControlTabList
		{
			get
			{
				if ((this.mUIXtraTabControlTabList == null))
				{
					this.mUIXtraTabControlTabList = new UIXtraTabControlTabList10(this);
				}
				return this.mUIXtraTabControlTabList;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btClose";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUISimpleButtonButton.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControlTabList10 mUIXtraTabControlTabList;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControlTabList10 : DXTestControl
	{
		public UIXtraTabControlTabList10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public UIXtraTabPageClient7 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient7(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPageClient7 mUIXtraTabPageClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient7 : DXTestControl
	{
		public UIXtraTabPageClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpToolbars";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("Customization");
			#endregion
		}
		#region Properties
		public DXCheckedListBox UICheckedListBoxControCheckedListBox
		{
			get
			{
				if ((this.mUICheckedListBoxControCheckedListBox == null))
				{
					this.mUICheckedListBoxControCheckedListBox = new DXCheckedListBox(this);
					#region Search Criteria
					this.mUICheckedListBoxControCheckedListBox.SearchProperties[DXTestControl.PropertyNames.Name] = "toolBarsList";
					this.mUICheckedListBoxControCheckedListBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxControl";
					this.mUICheckedListBoxControCheckedListBox.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUICheckedListBoxControCheckedListBox;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btResetBar";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Customization");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXCheckedListBox mUICheckedListBoxControCheckedListBox;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIApplicationUIWindow1 : DXWindow
	{
		public UIApplicationUIWindow1()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Application UI Layout Controls Demo (C# code)", PropertyExpressionOperator.Contains));
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPcMainClient3 UIPcMainClient
		{
			get
			{
				if ((this.mUIPcMainClient == null))
				{
					this.mUIPcMainClient = new UIPcMainClient3(this);
				}
				return this.mUIPcMainClient;
			}
		}
		public UIGcNavigationsClient4 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient4(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		#endregion
		#region Fields
		private UIPcMainClient3 mUIPcMainClient;
		private UIGcNavigationsClient4 mUIGcNavigationsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPcMainClient3 : DXTestControl
	{
		public UIPcMainClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient49 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient49(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient49 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient49 : DXTestControl
	{
		public UIGcContainerClient49(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIEditorItemsCustom3 UIEditorItemsCustom
		{
			get
			{
				if ((this.mUIEditorItemsCustom == null))
				{
					this.mUIEditorItemsCustom = new UIEditorItemsCustom3(this);
				}
				return this.mUIEditorItemsCustom;
			}
		}
		public UIBarLinkContainerItemCustom UIBarLinkContainerItemCustom
		{
			get
			{
				if ((this.mUIBarLinkContainerItemCustom == null))
				{
					this.mUIBarLinkContainerItemCustom = new UIBarLinkContainerItemCustom(this);
				}
				return this.mUIBarLinkContainerItemCustom;
			}
		}
		public UIContextTabsCustom UIContextTabsCustom
		{
			get
			{
				if ((this.mUIContextTabsCustom == null))
				{
					this.mUIContextTabsCustom = new UIContextTabsCustom(this);
				}
				return this.mUIContextTabsCustom;
			}
		}
		public UICustomHeaderButtonsCustom UICustomHeaderButtonsCustom
		{
			get
			{
				if ((this.mUICustomHeaderButtonsCustom == null))
				{
					this.mUICustomHeaderButtonsCustom = new UICustomHeaderButtonsCustom(this);
				}
				return this.mUICustomHeaderButtonsCustom;
			}
		}
		#endregion
		#region Fields
		private UIEditorItemsCustom3 mUIEditorItemsCustom;
		private UIBarLinkContainerItemCustom mUIBarLinkContainerItemCustom;
		private UIContextTabsCustom mUIContextTabsCustom;
		private UICustomHeaderButtonsCustom mUICustomHeaderButtonsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorItemsCustom3 : DXTestControl
	{
		public UIEditorItemsCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItems";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorItems";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIBarDockControlCustom39 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom39(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		public UIBarDockControlCustom114 UIBarDockControlCustom1
		{
			get
			{
				if ((this.mUIBarDockControlCustom1 == null))
				{
					this.mUIBarDockControlCustom1 = new UIBarDockControlCustom114(this);
				}
				return this.mUIBarDockControlCustom1;
			}
		}
		public UIBarDockControlCustom210 UIBarDockControlCustom2
		{
			get
			{
				if ((this.mUIBarDockControlCustom2 == null))
				{
					this.mUIBarDockControlCustom2 = new UIBarDockControlCustom210(this);
				}
				return this.mUIBarDockControlCustom2;
			}
		}
		#endregion
		#region Fields
		private UIBarDockControlCustom39 mUIBarDockControlCustom;
		private UIBarDockControlCustom114 mUIBarDockControlCustom1;
		private UIBarDockControlCustom210 mUIBarDockControlCustom2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom39 : DXTestControl
	{
		public UIBarDockControlCustom39(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar16 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar16(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		public UICustom2MenuBar3 UICustom2MenuBar
		{
			get
			{
				if ((this.mUICustom2MenuBar == null))
				{
					this.mUICustom2MenuBar = new UICustom2MenuBar3(this);
				}
				return this.mUICustom2MenuBar;
			}
		}
		public UICustom3MenuBar1 UICustom3MenuBar
		{
			get
			{
				if ((this.mUICustom3MenuBar == null))
				{
					this.mUICustom3MenuBar = new UICustom3MenuBar1(this);
				}
				return this.mUICustom3MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar16 mUICustom1MenuBar;
		private UICustom2MenuBar3 mUICustom2MenuBar;
		private UICustom3MenuBar1 mUICustom3MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar16 : DXMenu
	{
		public UICustom1MenuBar16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UICalcEditBarEditItem
		{
			get
			{
				if ((this.mUICalcEditBarEditItem == null))
				{
					this.mUICalcEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUICalcEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Calc Edit:";
					this.mUICalcEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUICalcEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICalcEditBarEditItem;
			}
		}
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Calc Edit:";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		public DXMenuItem UIBarCustomizationItemBarItem
		{
			get
			{
				if ((this.mUIBarCustomizationItemBarItem == null))
				{
					this.mUIBarCustomizationItemBarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCustomizationItem";
					this.mUIBarCustomizationItemBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIBarCustomizationItemBarItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIBarCustomizationItemBarItem;
			}
		}
		public DXMenuEditItem UICheckEditBarEditItem
		{
			get
			{
				if ((this.mUICheckEditBarEditItem == null))
				{
					this.mUICheckEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUICheckEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Check Edit: ";
					this.mUICheckEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUICheckEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICheckEditBarEditItem;
			}
		}
		public DXCheckBox UICheckEditCheckBox
		{
			get
			{
				if ((this.mUICheckEditCheckBox == null))
				{
					this.mUICheckEditCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Check Edit: ";
					this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEditCheckBox.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICheckEditCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUICalcEditBarEditItem;
		private DXPopupEdit mUICalcEditPopupEdit;
		private DXMenuItem mUIBarCustomizationItemBarItem;
		private DXMenuEditItem mUICheckEditBarEditItem;
		private DXCheckBox mUICheckEditCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom2MenuBar3 : DXMenu
	{
		public UICustom2MenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIComboBoxBarEditItem
		{
			get
			{
				if ((this.mUIComboBoxBarEditItem == null))
				{
					this.mUIComboBoxBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIComboBoxBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Combo Box:";
					this.mUIComboBoxBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIComboBoxBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIComboBoxBarEditItem;
			}
		}
		public DXComboBox UIComboBoxComboBox
		{
			get
			{
				if ((this.mUIComboBoxComboBox == null))
				{
					this.mUIComboBoxComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Combo Box:";
					this.mUIComboBoxComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxComboBox.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIComboBoxComboBox;
			}
		}
		public DXMenuEditItem UIDateEditBarEditItem
		{
			get
			{
				if ((this.mUIDateEditBarEditItem == null))
				{
					this.mUIDateEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIDateEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Date Edit:";
					this.mUIDateEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIDateEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIDateEditBarEditItem;
			}
		}
		public DXDateTimePicker UIDateEditDateTimePicker
		{
			get
			{
				if ((this.mUIDateEditDateTimePicker == null))
				{
					this.mUIDateEditDateTimePicker = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.Name] = "Date Edit:";
					this.mUIDateEditDateTimePicker.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
					this.mUIDateEditDateTimePicker.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIDateEditDateTimePicker;
			}
		}
		public DXMenuEditItem UIColorEditBarEditItem
		{
			get
			{
				if ((this.mUIColorEditBarEditItem == null))
				{
					this.mUIColorEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIColorEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Color Edit";
					this.mUIColorEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIColorEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIColorEditBarEditItem;
			}
		}
		public DXColorEdit UIColorEditColorEdit
		{
			get
			{
				if ((this.mUIColorEditColorEdit == null))
				{
					this.mUIColorEditColorEdit = new DXColorEdit(this);
					#region Search Criteria
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Color Edit";
					this.mUIColorEditColorEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorEdit";
					this.mUIColorEditColorEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIColorEditColorEdit;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIComboBoxBarEditItem;
		private DXComboBox mUIComboBoxComboBox;
		private DXMenuEditItem mUIDateEditBarEditItem;
		private DXDateTimePicker mUIDateEditDateTimePicker;
		private DXMenuEditItem mUIColorEditBarEditItem;
		private DXColorEdit mUIColorEditColorEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom3MenuBar1 : DXMenu
	{
		public UICustom3MenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIMemoExEditBarEditItem
		{
			get
			{
				if ((this.mUIMemoExEditBarEditItem == null))
				{
					this.mUIMemoExEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIMemoExEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:";
					this.mUIMemoExEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIMemoExEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIMemoExEditBarEditItem;
			}
		}
		public UIMemoExEditPopupEdit1 UIMemoExEditPopupEdit
		{
			get
			{
				if ((this.mUIMemoExEditPopupEdit == null))
				{
					this.mUIMemoExEditPopupEdit = new UIMemoExEditPopupEdit1(this);
				}
				return this.mUIMemoExEditPopupEdit;
			}
		}
		public DXMenuEditItem UIPickImageBarEditItem
		{
			get
			{
				if ((this.mUIPickImageBarEditItem == null))
				{
					this.mUIPickImageBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIPickImageBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Pick Image:";
					this.mUIPickImageBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIPickImageBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPickImageBarEditItem;
			}
		}
		public DXComboBox UIPickImageComboBox
		{
			get
			{
				if ((this.mUIPickImageComboBox == null))
				{
					this.mUIPickImageComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIPickImageComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Pick Image:";
					this.mUIPickImageComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIPickImageComboBox.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPickImageComboBox;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIMemoExEditBarEditItem;
		private UIMemoExEditPopupEdit1 mUIMemoExEditPopupEdit;
		private DXMenuEditItem mUIPickImageBarEditItem;
		private DXComboBox mUIPickImageComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExEditPopupEdit1 : DXPopupEdit
	{
		public UIMemoExEditPopupEdit1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExEdit";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMemoExPopupFormWindow2 UIMemoExPopupFormWindow
		{
			get
			{
				if ((this.mUIMemoExPopupFormWindow == null))
				{
					this.mUIMemoExPopupFormWindow = new UIMemoExPopupFormWindow2(this);
				}
				return this.mUIMemoExPopupFormWindow;
			}
		}
		#endregion
		#region Fields
		private UIMemoExPopupFormWindow2 mUIMemoExPopupFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExPopupFormWindow2 : DXWindow
	{
		public UIMemoExPopupFormWindow2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:PopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExPopupForm";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:PopupFormMemoEdit[0]";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit:PopupFormSimpleButton[0]";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom114 : DXTestControl
	{
		public UIBarDockControlCustom114(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom4MenuBar2 UICustom4MenuBar
		{
			get
			{
				if ((this.mUICustom4MenuBar == null))
				{
					this.mUICustom4MenuBar = new UICustom4MenuBar2(this);
				}
				return this.mUICustom4MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom4MenuBar2 mUICustom4MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom4MenuBar2 : DXMenu
	{
		public UICustom4MenuBar2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UISpinEditBarEditItem
		{
			get
			{
				if ((this.mUISpinEditBarEditItem == null))
				{
					this.mUISpinEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUISpinEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin Edit:";
					this.mUISpinEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUISpinEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditBarEditItem;
			}
		}
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin Edit:";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXMenuEditItem UITextEditBarEditItem
		{
			get
			{
				if ((this.mUITextEditBarEditItem == null))
				{
					this.mUITextEditBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUITextEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Text Edit:";
					this.mUITextEditBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUITextEditBarEditItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUITextEditBarEditItem;
			}
		}
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Text Edit:";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUISpinEditBarEditItem;
		private DXTextEdit mUISpinEditEdit;
		private DXMenuEditItem mUITextEditBarEditItem;
		private DXTextEdit mUITextEditEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom210 : DXTestControl
	{
		public UIBarDockControlCustom210(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "EditorItemsBarDockControl[2]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom4MenuBar3 UICustom4MenuBar
		{
			get
			{
				if ((this.mUICustom4MenuBar == null))
				{
					this.mUICustom4MenuBar = new UICustom4MenuBar3(this);
				}
				return this.mUICustom4MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom4MenuBar3 mUICustom4MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom4MenuBar3 : DXMenu
	{
		public UICustom4MenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin Edit:";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarLinkContainerItemCustom : DXTestControl
	{
		public UIBarLinkContainerItemCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarLinkContainerItem";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarLinkContainerItem";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICheckedListBox1CheckedListBox UICheckedListBox1CheckedListBox
		{
			get
			{
				if ((this.mUICheckedListBox1CheckedListBox == null))
				{
					this.mUICheckedListBox1CheckedListBox = new UICheckedListBox1CheckedListBox(this);
				}
				return this.mUICheckedListBox1CheckedListBox;
			}
		}
		public UIBarDockControlCustom40 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom40(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UICheckedListBox1CheckedListBox mUICheckedListBox1CheckedListBox;
		private UIBarDockControlCustom40 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICheckedListBox1CheckedListBox : DXCheckedListBox
	{
		public UICheckedListBox1CheckedListBox(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "checkedListBox1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXCheckBox UIPasteCheckBox
		{
			get
			{
				if ((this.mUIPasteCheckBox == null))
				{
					this.mUIPasteCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIPasteCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkedListBox1Item[1]";
					this.mUIPasteCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
					this.mUIPasteCheckBox.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPasteCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIPasteCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom40 : DXTestControl
	{
		public UIBarDockControlCustom40(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarLinkContainerItemBarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar17 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar17(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar17 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar17 : DXMenu
	{
		public UICustom1MenuBar17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIBarLinkContainerItemBarItem UIBarLinkContainerItemBarItem
		{
			get
			{
				if ((this.mUIBarLinkContainerItemBarItem == null))
				{
					this.mUIBarLinkContainerItemBarItem = new UIBarLinkContainerItemBarItem(this);
				}
				return this.mUIBarLinkContainerItemBarItem;
			}
		}
		#endregion
		#region Fields
		private UIBarLinkContainerItemBarItem mUIBarLinkContainerItemBarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarLinkContainerItemBarItem : DXMenuItem
	{
		public UIBarLinkContainerItemBarItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarLinkContainerItem";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMenuBaseButtonItem UIClearMenuBaseButtonItem
		{
			get
			{
				if ((this.mUIClearMenuBaseButtonItem == null))
				{
					this.mUIClearMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
					#region Search Criteria
					this.mUIClearMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Clear";
					this.mUIClearMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
					this.mUIClearMenuBaseButtonItem.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIClearMenuBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuBaseButtonItem mUIClearMenuBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIContextTabsCustom : DXTestControl
	{
		public UIContextTabsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ContextTabs";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ContextTabs";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPreviewRibbonsWithFoCustom UIPreviewRibbonsWithFoCustom
		{
			get
			{
				if ((this.mUIPreviewRibbonsWithFoCustom == null))
				{
					this.mUIPreviewRibbonsWithFoCustom = new UIPreviewRibbonsWithFoCustom(this);
				}
				return this.mUIPreviewRibbonsWithFoCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewRibbonsWithFoCustom mUIPreviewRibbonsWithFoCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewRibbonsWithFoCustom : DXTestControl
	{
		public UIPreviewRibbonsWithFoCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "previewRibbonsWithForm1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewRibbonsWithForm";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIItemWindow16 UIItemWindow
		{
			get
			{
				if ((this.mUIItemWindow == null))
				{
					this.mUIItemWindow = new UIItemWindow16(this);
				}
				return this.mUIItemWindow;
			}
		}
		#endregion
		#region Fields
		private UIItemWindow16 mUIItemWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow16 : DXWindow
	{
		public UIItemWindow16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPreviewRibbonCustom UIPreviewRibbonCustom
		{
			get
			{
				if ((this.mUIPreviewRibbonCustom == null))
				{
					this.mUIPreviewRibbonCustom = new UIPreviewRibbonCustom(this);
				}
				return this.mUIPreviewRibbonCustom;
			}
		}
		public UIRibbonControl1Ribbon5 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon5(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIPreviewRibbonCustom mUIPreviewRibbonCustom;
		private UIRibbonControl1Ribbon5 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewRibbonCustom : DXTestControl
	{
		public UIPreviewRibbonCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "previewRibbon";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "previewRibbon";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButton1Button
		{
			get
			{
				if ((this.mUISimpleButton1Button == null))
				{
					this.mUISimpleButton1Button = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton1";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButton1Button.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISimpleButton1Button;
			}
		}
		public DXButton UISimpleButton2Button
		{
			get
			{
				if ((this.mUISimpleButton2Button == null))
				{
					this.mUISimpleButton2Button = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButton2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton2";
					this.mUISimpleButton2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButton2Button.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUISimpleButton2Button;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButton1Button;
		private DXButton mUISimpleButton2Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon5 : DXRibbon
	{
		public UIRibbonControl1Ribbon5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXRibbonPage UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new DXRibbonPage(this);
					#region Search Criteria
					this.mUIRibbonPage1RibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage1";
					this.mUIRibbonPage1RibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
					this.mUIRibbonPage1RibbonPage.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public DXRibbonPage UIRibbonPage0RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage0RibbonPage == null))
				{
					this.mUIRibbonPage0RibbonPage = new DXRibbonPage(this);
					#region Search Criteria
					this.mUIRibbonPage0RibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage0";
					this.mUIRibbonPage0RibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
					this.mUIRibbonPage0RibbonPage.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIRibbonPage0RibbonPage;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPage mUIRibbonPage1RibbonPage;
		private DXRibbonPage mUIRibbonPage0RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomHeaderButtonsCustom : DXTestControl
	{
		public UICustomHeaderButtonsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomHeaderButtons";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomHeaderButtons";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom7 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom7(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom7 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom7 : DXTestControl
	{
		public UILayoutControl1Custom7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIActionDockPanelCustom UIActionDockPanelCustom
		{
			get
			{
				if ((this.mUIActionDockPanelCustom == null))
				{
					this.mUIActionDockPanelCustom = new UIActionDockPanelCustom(this);
				}
				return this.mUIActionDockPanelCustom;
			}
		}
		public DXRadioGroup UIRgTemplatesButtonRadioGroup
		{
			get
			{
				if ((this.mUIRgTemplatesButtonRadioGroup == null))
				{
					this.mUIRgTemplatesButtonRadioGroup = new DXRadioGroup(this);
					#region Search Criteria
					this.mUIRgTemplatesButtonRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgTemplatesButton";
					this.mUIRgTemplatesButtonRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
					this.mUIRgTemplatesButtonRadioGroup.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIRgTemplatesButtonRadioGroup;
			}
		}
		#endregion
		#region Fields
		private UIActionDockPanelCustom mUIActionDockPanelCustom;
		private DXRadioGroup mUIRgTemplatesButtonRadioGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIActionDockPanelCustom : DXTestControl
	{
		public UIActionDockPanelCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "actionDockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ActionDockPanel";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIDockPanel1Client UIDockPanel1Client
		{
			get
			{
				if ((this.mUIDockPanel1Client == null))
				{
					this.mUIDockPanel1Client = new UIDockPanel1Client(this);
				}
				return this.mUIDockPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIDockPanel1Client mUIDockPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanel1Client : DXTestControl
	{
		public UIDockPanel1Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UICustomHeaderButtonButton
		{
			get
			{
				if ((this.mUICustomHeaderButtonButton == null))
				{
					this.mUICustomHeaderButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUICustomHeaderButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomHeaderButton";
					this.mUICustomHeaderButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUICustomHeaderButtonButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICustomHeaderButtonButton;
			}
		}
		public UIDockPanel2_ContainerCustom UIDockPanel2_ContainerCustom
		{
			get
			{
				if ((this.mUIDockPanel2_ContainerCustom == null))
				{
					this.mUIDockPanel2_ContainerCustom = new UIDockPanel2_ContainerCustom(this);
				}
				return this.mUIDockPanel2_ContainerCustom;
			}
		}
		public DXButton UIPushbuttonButton
		{
			get
			{
				if ((this.mUIPushbuttonButton == null))
				{
					this.mUIPushbuttonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPushbuttonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Push button";
					this.mUIPushbuttonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPushbuttonButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIPushbuttonButton;
			}
		}
		public DXButton UICheckButtonButton
		{
			get
			{
				if ((this.mUICheckButtonButton == null))
				{
					this.mUICheckButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUICheckButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Check Button";
					this.mUICheckButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUICheckButtonButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICheckButtonButton;
			}
		}
		public DXButton UIImageButton
		{
			get
			{
				if ((this.mUIImageButton == null))
				{
					this.mUIImageButton = new DXButton(this);
					#region Search Criteria
					this.mUIImageButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Image";
					this.mUIImageButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIImageButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIImageButton;
			}
		}
		public DXButton UIGlyphsButton
		{
			get
			{
				if ((this.mUIGlyphsButton == null))
				{
					this.mUIGlyphsButton = new DXButton(this);
					#region Search Criteria
					this.mUIGlyphsButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Glyphs";
					this.mUIGlyphsButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIGlyphsButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIGlyphsButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUICustomHeaderButtonButton;
		private UIDockPanel2_ContainerCustom mUIDockPanel2_ContainerCustom;
		private DXButton mUIPushbuttonButton;
		private DXButton mUICheckButtonButton;
		private DXButton mUIImageButton;
		private DXButton mUIGlyphsButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanel2_ContainerCustom : DXTestControl
	{
		public UIDockPanel2_ContainerCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel2_Container";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom8 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom8(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom8 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom8 : DXTestControl
	{
		public UILayoutControl1Custom8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMeActionsEdit
		{
			get
			{
				if ((this.mUIMeActionsEdit == null))
				{
					this.mUIMeActionsEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMeActionsEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "meActions";
					this.mUIMeActionsEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMeActionsEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIMeActionsEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMeActionsEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient4 : DXTestControl
	{
		public UIGcNavigationsClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXListBox UIListBoxControl1List
		{
			get
			{
				if ((this.mUIListBoxControl1List == null))
				{
					this.mUIListBoxControl1List = new DXListBox(this);
					#region Search Criteria
					this.mUIListBoxControl1List.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControl1";
					this.mUIListBoxControl1List.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
					this.mUIListBoxControl1List.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIListBoxControl1List;
			}
		}
		public UINavBarControl1NavBar3 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar3(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private DXListBox mUIListBoxControl1List;
		private UINavBarControl1NavBar3 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar3 : DXTestControl
	{
		public UINavBarControl1NavBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMultiPurposeComponenNavBarGroup UIMultiPurposeComponenNavBarGroup
		{
			get
			{
				if ((this.mUIMultiPurposeComponenNavBarGroup == null))
				{
					this.mUIMultiPurposeComponenNavBarGroup = new UIMultiPurposeComponenNavBarGroup(this);
				}
				return this.mUIMultiPurposeComponenNavBarGroup;
			}
		}
		public UIDockingUINavBarGroup UIDockingUINavBarGroup
		{
			get
			{
				if ((this.mUIDockingUINavBarGroup == null))
				{
					this.mUIDockingUINavBarGroup = new UIDockingUINavBarGroup(this);
				}
				return this.mUIDockingUINavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIMultiPurposeComponenNavBarGroup mUIMultiPurposeComponenNavBarGroup;
		private UIDockingUINavBarGroup mUIDockingUINavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiPurposeComponenNavBarGroup : DXTestControl
	{
		public UIMultiPurposeComponenNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multi-Purpose Components";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIAlertControlNavBarLink
		{
			get
			{
				if ((this.mUIAlertControlNavBarLink == null))
				{
					this.mUIAlertControlNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIAlertControlNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Alert Control";
					this.mUIAlertControlNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIAlertControlNavBarLink.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUIAlertControlNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAlertControlNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockingUINavBarGroup : DXTestControl
	{
		public UIDockingUINavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Docking UI";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UICustomHeaderButtonsNavBarLink
		{
			get
			{
				if ((this.mUICustomHeaderButtonsNavBarLink == null))
				{
					this.mUICustomHeaderButtonsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICustomHeaderButtonsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom Header Buttons";
					this.mUICustomHeaderButtonsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICustomHeaderButtonsNavBarLink.WindowTitles.Add("Application UI Layout Controls Demo (C# code)");
					#endregion
				}
				return this.mUICustomHeaderButtonsNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICustomHeaderButtonsNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1RibbonSiWindow11 : DXWindow
	{
		public UINewDocument1RibbonSiWindow11()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "New Document 1* - Ribbon Simple Pad";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonControl1Ribbon6 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon6(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public UIRibbonStatusBar1MenuBar3 UIRibbonStatusBar1MenuBar
		{
			get
			{
				if ((this.mUIRibbonStatusBar1MenuBar == null))
				{
					this.mUIRibbonStatusBar1MenuBar = new UIRibbonStatusBar1MenuBar3(this);
				}
				return this.mUIRibbonStatusBar1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UIRibbonControl1Ribbon6 mUIRibbonControl1Ribbon;
		private UIRibbonStatusBar1MenuBar3 mUIRibbonStatusBar1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon6 : DXRibbon
	{
		public UIRibbonControl1Ribbon6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage2RibbonPage2 UIRibbonPage2RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage2RibbonPage == null))
				{
					this.mUIRibbonPage2RibbonPage = new UIRibbonPage2RibbonPage2(this);
				}
				return this.mUIRibbonPage2RibbonPage;
			}
		}
		public UIRibbonPage0RibbonPage2 UIRibbonPage0RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage0RibbonPage == null))
				{
					this.mUIRibbonPage0RibbonPage = new UIRibbonPage0RibbonPage2(this);
				}
				return this.mUIRibbonPage0RibbonPage;
			}
		}
		public UIRibbonPage1RibbonPage6 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage6(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public UIRibbonPage3RibbonPage3 UIRibbonPage3RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage3RibbonPage == null))
				{
					this.mUIRibbonPage3RibbonPage = new UIRibbonPage3RibbonPage3(this);
				}
				return this.mUIRibbonPage3RibbonPage;
			}
		}
		public UIRibbonPageCategory1RibbonPageCategory4 UIRibbonPageCategory1RibbonPageCategory
		{
			get
			{
				if ((this.mUIRibbonPageCategory1RibbonPageCategory == null))
				{
					this.mUIRibbonPageCategory1RibbonPageCategory = new UIRibbonPageCategory1RibbonPageCategory4(this);
				}
				return this.mUIRibbonPageCategory1RibbonPageCategory;
			}
		}
		public DXButton UIRibbonApplicationButButton
		{
			get
			{
				if ((this.mUIRibbonApplicationButButton == null))
				{
					this.mUIRibbonApplicationButButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonApplicationButButton;
			}
		}
		public UIBackstageViewControlCustom4 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom4(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		public UIRibbonQuickAccessTooRibbonBar4 UIRibbonQuickAccessTooRibbonBar
		{
			get
			{
				if ((this.mUIRibbonQuickAccessTooRibbonBar == null))
				{
					this.mUIRibbonQuickAccessTooRibbonBar = new UIRibbonQuickAccessTooRibbonBar4(this);
				}
				return this.mUIRibbonQuickAccessTooRibbonBar;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage2RibbonPage2 mUIRibbonPage2RibbonPage;
		private UIRibbonPage0RibbonPage2 mUIRibbonPage0RibbonPage;
		private UIRibbonPage1RibbonPage6 mUIRibbonPage1RibbonPage;
		private UIRibbonPage3RibbonPage3 mUIRibbonPage3RibbonPage;
		private UIRibbonPageCategory1RibbonPageCategory4 mUIRibbonPageCategory1RibbonPageCategory;
		private DXButton mUIRibbonApplicationButButton;
		private UIBackstageViewControlCustom4 mUIBackstageViewControlCustom;
		private UIRibbonQuickAccessTooRibbonBar4 mUIRibbonQuickAccessTooRibbonBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage2RibbonPage2 : DXRibbonPage
	{
		public UIRibbonPage2RibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup0RibbonPageGroup UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new UIRibbonPageGroup0RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup0RibbonPageGroup mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup0RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup0RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup0";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cut";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage0RibbonPage2 : DXRibbonPage
	{
		public UIRibbonPage0RibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage0";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup0RibbonPageGroup1 UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new UIRibbonPageGroup0RibbonPageGroup1(this);
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup0RibbonPageGroup1 mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup0RibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup0RibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup0";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cut";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage6 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup2RibbonPageGroup7 UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup7(this);
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup2RibbonPageGroup7 mUIRibbonPageGroup2RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup2RibbonPageGroup7 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup2RibbonPageGroup7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICopyRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICopyRibbonBaseButtonItem == null))
				{
					this.mUICopyRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "&Copy";
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICopyRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICopyRibbonBaseButtonItem;
			}
		}
		public DXRibbonItem UIPasteRibbonItem
		{
			get
			{
				if ((this.mUIPasteRibbonItem == null))
				{
					this.mUIPasteRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Paste";
					this.mUIPasteRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIPasteRibbonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPasteRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICopyRibbonBaseButtonItem;
		private DXRibbonItem mUIPasteRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage3RibbonPage3 : DXRibbonPage
	{
		public UIRibbonPage3RibbonPage3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup0RibbonPageGroup2 UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new UIRibbonPageGroup0RibbonPageGroup2(this);
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup0RibbonPageGroup2 mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup0RibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup0RibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup0";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cut";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageCategory1RibbonPageCategory4 : DXRibbonPageCategory
	{
		public UIRibbonPageCategory1RibbonPageCategory4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageCategory1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage0RibbonPage3 UIRibbonPage0RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage0RibbonPage == null))
				{
					this.mUIRibbonPage0RibbonPage = new UIRibbonPage0RibbonPage3(this);
				}
				return this.mUIRibbonPage0RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage0RibbonPage3 mUIRibbonPage0RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage0RibbonPage3 : DXRibbonPage
	{
		public UIRibbonPage0RibbonPage3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPageGroup0RibbonPageGroup3 UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new UIRibbonPageGroup0RibbonPageGroup3(this);
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageGroup0RibbonPageGroup3 mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup0RibbonPageGroup3 : DXRibbonPageGroup
	{
		public UIRibbonPageGroup0RibbonPageGroup3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup12";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UICutRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICutRibbonBaseButtonItem == null))
				{
					this.mUICutRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Cu&t";
					this.mUICutRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICutRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICutRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UICopyRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUICopyRibbonBaseButtonItem == null))
				{
					this.mUICopyRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "iCopy";
					this.mUICopyRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUICopyRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICopyRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUICutRibbonBaseButtonItem;
		private DXRibbonButtonItem mUICopyRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom4 : DXTestControl
	{
		public UIBackstageViewControlCustom4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UICloseTabPage
		{
			get
			{
				if ((this.mUICloseTabPage == null))
				{
					this.mUICloseTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUICloseTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
					this.mUICloseTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUICloseTabPage.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICloseTabPage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICloseTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonQuickAccessTooRibbonBar4 : DXTestControl
	{
		public UIRibbonQuickAccessTooRibbonBar4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonQuickAccessToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonQuickAccessToolbar";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIReplaceRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIReplaceRibbonBaseButtonItem == null))
				{
					this.mUIReplaceRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIReplaceRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "R&eplace...";
					this.mUIReplaceRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIReplaceRibbonBaseButtonItem.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIReplaceRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIReplaceRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonStatusBar1MenuBar3 : DXMenu
	{
		public UIRibbonStatusBar1MenuBar3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBar1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
			this.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UISizeGripCustom
		{
			get
			{
				if ((this.mUISizeGripCustom == null))
				{
					this.mUISizeGripCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUISizeGripCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "SizeGrip";
					this.mUISizeGripCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SizeGrip";
					this.mUISizeGripCustom.WindowTitles.Add("New Document 1* - Ribbon Simple Pad");
					#endregion
				}
				return this.mUISizeGripCustom;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUISizeGripCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow51 : DXWindow
	{
		public UIItemWindow51()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Find";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Find");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXComboBox UICmbFindComboBox
		{
			get
			{
				if ((this.mUICmbFindComboBox == null))
				{
					this.mUICmbFindComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICmbFindComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cmbFind";
					this.mUICmbFindComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICmbFindComboBox.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUICmbFindComboBox;
			}
		}
		public DXCheckBox UIChbWholeWordCheckBox
		{
			get
			{
				if ((this.mUIChbWholeWordCheckBox == null))
				{
					this.mUIChbWholeWordCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChbWholeWordCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbWholeWord";
					this.mUIChbWholeWordCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChbWholeWordCheckBox.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUIChbWholeWordCheckBox;
			}
		}
		public DXButton UIFindNextButton
		{
			get
			{
				if ((this.mUIFindNextButton == null))
				{
					this.mUIFindNextButton = new DXButton(this);
					#region Search Criteria
					this.mUIFindNextButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnFind";
					this.mUIFindNextButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIFindNextButton.WindowTitles.Add("Find");
					#endregion
				}
				return this.mUIFindNextButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButtonButton;
		private DXComboBox mUICmbFindComboBox;
		private DXCheckBox mUIChbWholeWordCheckBox;
		private DXButton mUIFindNextButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow13 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow13()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Calendar";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client81 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client81(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIRibbonControl1Ribbon7 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon7(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client81 mUIPanelControl1Client;
		private UIRibbonControl1Ribbon7 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client81 : DXTestControl
	{
		public UIPanelControl1Client81(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIGcContainerClient50 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient50(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient50 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient50 : DXTestControl
	{
		public UIGcContainerClient50(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom12 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom12(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		public UICalendarModuleCustom UICalendarModuleCustom
		{
			get
			{
				if ((this.mUICalendarModuleCustom == null))
				{
					this.mUICalendarModuleCustom = new UICalendarModuleCustom(this);
				}
				return this.mUICalendarModuleCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom12 mUIPreviewControlCustom;
		private UICalendarModuleCustom mUICalendarModuleCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom12 : DXTestControl
	{
		public UIPreviewControlCustom12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client82 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client82(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client82 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client82 : DXTestControl
	{
		public UIPanelControl1Client82(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl12 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl12(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		public UIBarDockControlCustom44 UIBarDockControlCustom
		{
			get
			{
				if ((this.mUIBarDockControlCustom == null))
				{
					this.mUIBarDockControlCustom = new UIBarDockControlCustom44(this);
				}
				return this.mUIBarDockControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl12 mUIDocumentViewerPrintViewControl;
		private UIBarDockControlCustom44 mUIBarDockControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl12 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices00PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices00PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices00PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0]";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices00PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage0BrickIndices00PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices00PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBarDockControlCustom44 : DXTestControl
	{
		public UIBarDockControlCustom44(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1BarDockControl[3]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UICustom1MenuBar18 UICustom1MenuBar
		{
			get
			{
				if ((this.mUICustom1MenuBar == null))
				{
					this.mUICustom1MenuBar = new UICustom1MenuBar18(this);
				}
				return this.mUICustom1MenuBar;
			}
		}
		#endregion
		#region Fields
		private UICustom1MenuBar18 mUICustom1MenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustom1MenuBar18 : DXMenu
	{
		public UICustom1MenuBar18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom 1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public DXMenuEditItem UIMonthYearBarEditItem
		{
			get
			{
				if ((this.mUIMonthYearBarEditItem == null))
				{
					this.mUIMonthYearBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIMonthYearBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Month && Year:";
					this.mUIMonthYearBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIMonthYearBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIMonthYearBarEditItem;
			}
		}
		public DXMenuEditItem UIPreviewModeBarEditItem
		{
			get
			{
				if ((this.mUIPreviewModeBarEditItem == null))
				{
					this.mUIPreviewModeBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIPreviewModeBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Preview Mode:";
					this.mUIPreviewModeBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIPreviewModeBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPreviewModeBarEditItem;
			}
		}
		public DXMenuEditItem UIOrientationBarEditItem
		{
			get
			{
				if ((this.mUIOrientationBarEditItem == null))
				{
					this.mUIOrientationBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIOrientationBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Orientation:";
					this.mUIOrientationBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIOrientationBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIOrientationBarEditItem;
			}
		}
		public DXMenuEditItem UIPageSizeBarEditItem
		{
			get
			{
				if ((this.mUIPageSizeBarEditItem == null))
				{
					this.mUIPageSizeBarEditItem = new DXMenuEditItem(this);
					#region Search Criteria
					this.mUIPageSizeBarEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Page Size:";
					this.mUIPageSizeBarEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarEditItem";
					this.mUIPageSizeBarEditItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPageSizeBarEditItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuEditItem mUIMonthYearBarEditItem;
		private DXMenuEditItem mUIPreviewModeBarEditItem;
		private DXMenuEditItem mUIOrientationBarEditItem;
		private DXMenuEditItem mUIPageSizeBarEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICalendarModuleCustom : DXTestControl
	{
		public UICalendarModuleCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CalendarModule";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalendarModule";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl13 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl13(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl13 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl13 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices000PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices000PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices000PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0].[0]";
					this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices000PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPage0BrickIndices000PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices000PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon7 : DXRibbon
	{
		public UIRibbonControl1Ribbon7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIRibbonPageActionsRibbonPage1 UIRibbonPageActionsRibbonPage
		{
			get
			{
				if ((this.mUIRibbonPageActionsRibbonPage == null))
				{
					this.mUIRibbonPageActionsRibbonPage = new UIRibbonPageActionsRibbonPage1(this);
				}
				return this.mUIRibbonPageActionsRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageActionsRibbonPage1 mUIRibbonPageActionsRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageActionsRibbonPage1 : DXRibbonPage
	{
		public UIRibbonPageActionsRibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageActions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public UIRibbonGroupActionsRibbonPageGroup1 UIRibbonGroupActionsRibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonGroupActionsRibbonPageGroup == null))
				{
					this.mUIRibbonGroupActionsRibbonPageGroup = new UIRibbonGroupActionsRibbonPageGroup1(this);
				}
				return this.mUIRibbonGroupActionsRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonGroupActionsRibbonPageGroup1 mUIRibbonGroupActionsRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonGroupActionsRibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRibbonGroupActionsRibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonGroupActions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UILandscapeRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUILandscapeRibbonBaseButtonItem == null))
				{
					this.mUILandscapeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUILandscapeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bchLandscape";
					this.mUILandscapeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUILandscapeRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUILandscapeRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIPortraitRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIPortraitRibbonBaseButtonItem == null))
				{
					this.mUIPortraitRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIPortraitRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bchPortrait";
					this.mUIPortraitRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIPortraitRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIPortraitRibbonBaseButtonItem;
			}
		}
		public DXRibbonButtonItem UIMonthViewRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIMonthViewRibbonBaseButtonItem == null))
				{
					this.mUIMonthViewRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIMonthViewRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bchPreviewMode";
					this.mUIMonthViewRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIMonthViewRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIMonthViewRibbonBaseButtonItem;
			}
		}
		public DXRibbonItem UIFullPageRibbonItem
		{
			get
			{
				if ((this.mUIFullPageRibbonItem == null))
				{
					this.mUIFullPageRibbonItem = new DXRibbonItem(this);
					#region Search Criteria
					this.mUIFullPageRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bePageSize";
					this.mUIFullPageRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
					this.mUIFullPageRibbonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Calendar");
					#endregion
				}
				return this.mUIFullPageRibbonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUILandscapeRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIPortraitRibbonBaseButtonItem;
		private DXRibbonButtonItem mUIMonthViewRibbonBaseButtonItem;
		private DXRibbonItem mUIFullPageRibbonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow14 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow14()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Master-Detail";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client83 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client83(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client83 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client83 : DXTestControl
	{
		public UIPanelControl1Client83(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIGcContainerClient51 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient51(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient51 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient51 : DXTestControl
	{
		public UIGcContainerClient51(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom13 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom13(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom13 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom13 : DXTestControl
	{
		public UIPreviewControlCustom13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIMasterDetailControlCustom1 UIMasterDetailControlCustom
		{
			get
			{
				if ((this.mUIMasterDetailControlCustom == null))
				{
					this.mUIMasterDetailControlCustom = new UIMasterDetailControlCustom1(this);
				}
				return this.mUIMasterDetailControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIMasterDetailControlCustom1 mUIMasterDetailControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMasterDetailControlCustom1 : DXTestControl
	{
		public UIMasterDetailControlCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "masterDetailControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MasterDetailControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIPSTabTabList1 UIPSTabTabList
		{
			get
			{
				if ((this.mUIPSTabTabList == null))
				{
					this.mUIPSTabTabList = new UIPSTabTabList1(this);
				}
				return this.mUIPSTabTabList;
			}
		}
		#endregion
		#region Fields
		private UIPSTabTabList1 mUIPSTabTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPSTabTabList1 : DXTestControl
	{
		public UIPSTabTabList1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PSTab";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIXtraTabPageClient8 UIXtraTabPageClient
		{
			get
			{
				if ((this.mUIXtraTabPageClient == null))
				{
					this.mUIXtraTabPageClient = new UIXtraTabPageClient8(this);
				}
				return this.mUIXtraTabPageClient;
			}
		}
		public UITabPage1Client1 UITabPage1Client
		{
			get
			{
				if ((this.mUITabPage1Client == null))
				{
					this.mUITabPage1Client = new UITabPage1Client1(this);
				}
				return this.mUITabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPageClient8 mUIXtraTabPageClient;
		private UITabPage1Client1 mUITabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPageClient8 : DXTestControl
	{
		public UIXtraTabPageClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PSTabXtraTabPage[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl14 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl14(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl14 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl14 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices201PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices201PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices201PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices201PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [2].[0].[1]";
					this.mUIPage0BrickIndices201PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices201PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices201PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices201PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabPage1Client1 : DXTestControl
	{
		public UITabPage1Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl15 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl15(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl15 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl15 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices06PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices06PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices06PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices06PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[6]";
					this.mUIPage0BrickIndices06PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices06PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices06PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices201PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices201PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices201PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices201PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [2].[0].[1]";
					this.mUIPage0BrickIndices201PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices201PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices201PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices09PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices09PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices09PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[9]";
					this.mUIPage0BrickIndices09PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices09PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices09PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices200PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices200PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices200PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices200PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [2].[0].[0]";
					this.mUIPage0BrickIndices200PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices200PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices200PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices08PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices08PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices08PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices08PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[8]";
					this.mUIPage0BrickIndices08PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices08PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Master-Detail");
					#endregion
				}
				return this.mUIPage0BrickIndices08PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices06PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices201PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices09PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices200PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices08PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewDocument1RibbonSiWindow2 : DXWindow
	{
		public UINewDocument1RibbonSiWindow2()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "New Document 1 - Ribbon Simple Pad";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonControl1Ribbon8 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon8(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public DXMenu UIRibbonStatusBar1MenuBar
		{
			get
			{
				if ((this.mUIRibbonStatusBar1MenuBar == null))
				{
					this.mUIRibbonStatusBar1MenuBar = new DXMenu(this);
					#region Search Criteria
					this.mUIRibbonStatusBar1MenuBar.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBar1";
					this.mUIRibbonStatusBar1MenuBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
					this.mUIRibbonStatusBar1MenuBar.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonStatusBar1MenuBar;
			}
		}
		public UIBackstageViewControlCustom6 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom6(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIRibbonControl1Ribbon8 mUIRibbonControl1Ribbon;
		private DXMenu mUIRibbonStatusBar1MenuBar;
		private UIBackstageViewControlCustom6 mUIBackstageViewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon8 : DXRibbon
	{
		public UIRibbonControl1Ribbon8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage7 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage7(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		public UIRibbonPage3RibbonPage4 UIRibbonPage3RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage3RibbonPage == null))
				{
					this.mUIRibbonPage3RibbonPage = new UIRibbonPage3RibbonPage4(this);
				}
				return this.mUIRibbonPage3RibbonPage;
			}
		}
		public DXRibbonPageCategory UIItemRibbonPageCategory
		{
			get
			{
				if ((this.mUIItemRibbonPageCategory == null))
				{
					this.mUIItemRibbonPageCategory = new DXRibbonPageCategory(this);
					#region Search Criteria
					this.mUIItemRibbonPageCategory.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
					this.mUIItemRibbonPageCategory.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIItemRibbonPageCategory;
			}
		}
		public UIRibbonPage0RibbonPage4 UIRibbonPage0RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage0RibbonPage == null))
				{
					this.mUIRibbonPage0RibbonPage = new UIRibbonPage0RibbonPage4(this);
				}
				return this.mUIRibbonPage0RibbonPage;
			}
		}
		public UIRibbonPage2RibbonPage3 UIRibbonPage2RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage2RibbonPage == null))
				{
					this.mUIRibbonPage2RibbonPage = new UIRibbonPage2RibbonPage3(this);
				}
				return this.mUIRibbonPage2RibbonPage;
			}
		}
		public DXButton UIRibbonPanelRightScroButton
		{
			get
			{
				if ((this.mUIRibbonPanelRightScroButton == null))
				{
					this.mUIRibbonPanelRightScroButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonPanelRightScroButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPanelRightScrollButton";
					this.mUIRibbonPanelRightScroButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPanelRightScroButton;
			}
		}
		public DXButton UIRibbonApplicationButButton
		{
			get
			{
				if ((this.mUIRibbonApplicationButButton == null))
				{
					this.mUIRibbonApplicationButButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonApplicationButButton;
			}
		}
		public UIRibbonPageCategory1RibbonPageCategory5 UIRibbonPageCategory1RibbonPageCategory
		{
			get
			{
				if ((this.mUIRibbonPageCategory1RibbonPageCategory == null))
				{
					this.mUIRibbonPageCategory1RibbonPageCategory = new UIRibbonPageCategory1RibbonPageCategory5(this);
				}
				return this.mUIRibbonPageCategory1RibbonPageCategory;
			}
		}
		public UIBackstageViewControlCustom5 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom5(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		public UIPageHeaderToolbarRibbonBar1 UIPageHeaderToolbarRibbonBar
		{
			get
			{
				if ((this.mUIPageHeaderToolbarRibbonBar == null))
				{
					this.mUIPageHeaderToolbarRibbonBar = new UIPageHeaderToolbarRibbonBar1(this);
				}
				return this.mUIPageHeaderToolbarRibbonBar;
			}
		}
		public UIImageComboBoxEditComboBox UIImageComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEditComboBox == null))
				{
					this.mUIImageComboBoxEditComboBox = new UIImageComboBoxEditComboBox(this);
				}
				return this.mUIImageComboBoxEditComboBox;
			}
		}
		public UIRibbonQuickAccessTooRibbonBar5 UIRibbonQuickAccessTooRibbonBar
		{
			get
			{
				if ((this.mUIRibbonQuickAccessTooRibbonBar == null))
				{
					this.mUIRibbonQuickAccessTooRibbonBar = new UIRibbonQuickAccessTooRibbonBar5(this);
				}
				return this.mUIRibbonQuickAccessTooRibbonBar;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage7 mUIRibbonPage1RibbonPage;
		private UIRibbonPage3RibbonPage4 mUIRibbonPage3RibbonPage;
		private DXRibbonPageCategory mUIItemRibbonPageCategory;
		private UIRibbonPage0RibbonPage4 mUIRibbonPage0RibbonPage;
		private UIRibbonPage2RibbonPage3 mUIRibbonPage2RibbonPage;
		private DXButton mUIRibbonPanelRightScroButton;
		private DXButton mUIRibbonApplicationButButton;
		private UIRibbonPageCategory1RibbonPageCategory5 mUIRibbonPageCategory1RibbonPageCategory;
		private UIBackstageViewControlCustom5 mUIBackstageViewControlCustom;
		private UIPageHeaderToolbarRibbonBar1 mUIPageHeaderToolbarRibbonBar;
		private UIImageComboBoxEditComboBox mUIImageComboBoxEditComboBox;
		private UIRibbonQuickAccessTooRibbonBar5 mUIRibbonQuickAccessTooRibbonBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage7 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPageGroup UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup3";
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup3RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup2RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup2RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup2RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
					this.mUIRibbonPageGroup2RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup2RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup2RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup8RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup8RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup8RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup8RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup8";
					this.mUIRibbonPageGroup8RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup8RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup8RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup7RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup7RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup7RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup7RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup7";
					this.mUIRibbonPageGroup7RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup7RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup7RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup13RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup13RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup13RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup13RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup13";
					this.mUIRibbonPageGroup13RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup13RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup13RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup12RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup12RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup12RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup12RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup12";
					this.mUIRibbonPageGroup12RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup12RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup12RibbonPageGroup;
			}
		}
		public UIRibbonPageGroup9RibbonPageGroup UIRibbonPageGroup9RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup(this);
				}
				return this.mUIRibbonPageGroup9RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPageGroup mUIRibbonPageGroup3RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup2RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup8RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup7RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup13RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup12RibbonPageGroup;
		private UIRibbonPageGroup9RibbonPageGroup mUIRibbonPageGroup9RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageGroup9RibbonPageGroup : DXRibbonPageGroup
	{
		public UIRibbonPageGroup9RibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIExitRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIExitRibbonBaseButtonItem == null))
				{
					this.mUIExitRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIExitRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "iExit";
					this.mUIExitRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIExitRibbonBaseButtonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIExitRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIExitRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage3RibbonPage4 : DXRibbonPage
	{
		public UIRibbonPage3RibbonPage4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPageGroup UIRibbonPageGroup3RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup3RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup3RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup3";
					this.mUIRibbonPageGroup3RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup3RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup3RibbonPageGroup;
			}
		}
		public DXRibbonPageGroup UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup0";
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup0RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPageGroup mUIRibbonPageGroup3RibbonPageGroup;
		private DXRibbonPageGroup mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage0RibbonPage4 : DXRibbonPage
	{
		public UIRibbonPage0RibbonPage4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage0";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPageGroup UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup0";
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup0RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPageGroup mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage2RibbonPage3 : DXRibbonPage
	{
		public UIRibbonPage2RibbonPage3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPageGroup UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonPageGroup0";
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup0RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPageGroup mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageCategory1RibbonPageCategory5 : DXRibbonPageCategory
	{
		public UIRibbonPageCategory1RibbonPageCategory5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageCategory1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonPage0RibbonPage5 UIRibbonPage0RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage0RibbonPage == null))
				{
					this.mUIRibbonPage0RibbonPage = new UIRibbonPage0RibbonPage5(this);
				}
				return this.mUIRibbonPage0RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage0RibbonPage5 mUIRibbonPage0RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage0RibbonPage5 : DXRibbonPage
	{
		public UIRibbonPage0RibbonPage5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonPageGroup UIRibbonPageGroup0RibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonPageGroup0RibbonPageGroup == null))
				{
					this.mUIRibbonPageGroup0RibbonPageGroup = new DXRibbonPageGroup(this);
					#region Search Criteria
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup12";
					this.mUIRibbonPageGroup0RibbonPageGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
					this.mUIRibbonPageGroup0RibbonPageGroup.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonPageGroup0RibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private DXRibbonPageGroup mUIRibbonPageGroup0RibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom5 : DXTestControl
	{
		public UIBackstageViewControlCustom5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIBackstageViewClientCCustom UIBackstageViewClientCCustom
		{
			get
			{
				if ((this.mUIBackstageViewClientCCustom == null))
				{
					this.mUIBackstageViewClientCCustom = new UIBackstageViewClientCCustom(this);
				}
				return this.mUIBackstageViewClientCCustom;
			}
		}
		public DXTestControl UIDocument1rtfTabPage
		{
			get
			{
				if ((this.mUIDocument1rtfTabPage == null))
				{
					this.mUIDocument1rtfTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIDocument1rtfTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Document1.rtf";
					this.mUIDocument1rtfTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIDocument1rtfTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDocument1rtfTabPage;
			}
		}
		public DXTestControl UIPrintTabPage
		{
			get
			{
				if ((this.mUIPrintTabPage == null))
				{
					this.mUIPrintTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIPrintTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Print";
					this.mUIPrintTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIPrintTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPrintTabPage;
			}
		}
		#endregion
		#region Fields
		private UIBackstageViewClientCCustom mUIBackstageViewClientCCustom;
		private DXTestControl mUIDocument1rtfTabPage;
		private DXTestControl mUIPrintTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCCustom : DXTestControl
	{
		public UIBackstageViewClientCCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXCheckBox UICheckEdit1CheckBox
		{
			get
			{
				if ((this.mUICheckEdit1CheckBox == null))
				{
					this.mUICheckEdit1CheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkEdit1";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
					this.mUICheckEdit1CheckBox.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICheckEdit1CheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUICheckEdit1CheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageHeaderToolbarRibbonBar1 : DXTestControl
	{
		public UIPageHeaderToolbarRibbonBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PageHeaderToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PageHeaderToolbar";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonEditItem UIBarEditItemLink0RibbonEditItem
		{
			get
			{
				if ((this.mUIBarEditItemLink0RibbonEditItem == null))
				{
					this.mUIBarEditItemLink0RibbonEditItem = new DXRibbonEditItem(this);
					#region Search Criteria
					this.mUIBarEditItemLink0RibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[0]";
					this.mUIBarEditItemLink0RibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
					this.mUIBarEditItemLink0RibbonEditItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIBarEditItemLink0RibbonEditItem;
			}
		}
		public DXRibbonEditItem UIBiStyleRibbonEditItem
		{
			get
			{
				if ((this.mUIBiStyleRibbonEditItem == null))
				{
					this.mUIBiStyleRibbonEditItem = new DXRibbonEditItem(this);
					#region Search Criteria
					this.mUIBiStyleRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biStyle";
					this.mUIBiStyleRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
					this.mUIBiStyleRibbonEditItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIBiStyleRibbonEditItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonEditItem mUIBarEditItemLink0RibbonEditItem;
		private DXRibbonEditItem mUIBiStyleRibbonEditItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIImageComboBoxEditComboBox : DXComboBox
	{
		public UIImageComboBoxEditComboBox(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1ImageComboBoxEdit[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIPopupImageComboBoxEdWindow UIPopupImageComboBoxEdWindow
		{
			get
			{
				if ((this.mUIPopupImageComboBoxEdWindow == null))
				{
					this.mUIPopupImageComboBoxEdWindow = new UIPopupImageComboBoxEdWindow(this);
				}
				return this.mUIPopupImageComboBoxEdWindow;
			}
		}
		#endregion
		#region Fields
		private UIPopupImageComboBoxEdWindow mUIPopupImageComboBoxEdWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupImageComboBoxEdWindow : DXWindow
	{
		public UIPopupImageComboBoxEdWindow(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1ImageComboBoxEdit[0]PopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupImageComboBoxEditListBoxForm";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIPopupImageComboBoxEdList UIPopupImageComboBoxEdList
		{
			get
			{
				if ((this.mUIPopupImageComboBoxEdList == null))
				{
					this.mUIPopupImageComboBoxEdList = new UIPopupImageComboBoxEdList(this);
				}
				return this.mUIPopupImageComboBoxEdList;
			}
		}
		#endregion
		#region Fields
		private UIPopupImageComboBoxEdList mUIPopupImageComboBoxEdList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupImageComboBoxEdList : DXListBox
	{
		public UIPopupImageComboBoxEdList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1ImageComboBoxEdit[0]PopupFormPopupImageComboBoxEditListBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupImageComboBoxEditListBox";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXListBoxItem UIOffice2010ListItem
		{
			get
			{
				if ((this.mUIOffice2010ListItem == null))
				{
					this.mUIOffice2010ListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIOffice2010ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1ImageComboBoxEdit[0]PopupFormPopupImageComboBoxEditListBox[0]Item[1" +
						"]";
					this.mUIOffice2010ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupImageComboBoxEditListBoxItem";
					this.mUIOffice2010ListItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIOffice2010ListItem;
			}
		}
		public DXListBoxItem UIOffice2013ListItem
		{
			get
			{
				if ((this.mUIOffice2013ListItem == null))
				{
					this.mUIOffice2013ListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIOffice2013ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1ImageComboBoxEdit[0]PopupFormPopupImageComboBoxEditListBox[0]Item[2" +
						"]";
					this.mUIOffice2013ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupImageComboBoxEditListBoxItem";
					this.mUIOffice2013ListItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIOffice2013ListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUIOffice2010ListItem;
		private DXListBoxItem mUIOffice2013ListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonQuickAccessTooRibbonBar5 : DXTestControl
	{
		public UIRibbonQuickAccessTooRibbonBar5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonQuickAccessToolbar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonQuickAccessToolbar";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIIExitRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIIExitRibbonBaseButtonItem == null))
				{
					this.mUIIExitRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIIExitRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "iExit";
					this.mUIIExitRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIIExitRibbonBaseButtonItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIIExitRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIIExitRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom6 : DXTestControl
	{
		public UIBackstageViewControlCustom6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UICloseTabPage
		{
			get
			{
				if ((this.mUICloseTabPage == null))
				{
					this.mUICloseTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUICloseTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
					this.mUICloseTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUICloseTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICloseTabPage;
			}
		}
		public DXTestControl UIPrintTabPage
		{
			get
			{
				if ((this.mUIPrintTabPage == null))
				{
					this.mUIPrintTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIPrintTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Print";
					this.mUIPrintTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIPrintTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIPrintTabPage;
			}
		}
		public DXTestControl UIExportTabPage
		{
			get
			{
				if ((this.mUIExportTabPage == null))
				{
					this.mUIExportTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIExportTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Export";
					this.mUIExportTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIExportTabPage.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIExportTabPage;
			}
		}
		public UIBackstageViewClientCCustom1 UIBackstageViewClientCCustom
		{
			get
			{
				if ((this.mUIBackstageViewClientCCustom == null))
				{
					this.mUIBackstageViewClientCCustom = new UIBackstageViewClientCCustom1(this);
				}
				return this.mUIBackstageViewClientCCustom;
			}
		}
		public UIBackstageViewClientCCustom11 UIBackstageViewClientCCustom1
		{
			get
			{
				if ((this.mUIBackstageViewClientCCustom1 == null))
				{
					this.mUIBackstageViewClientCCustom1 = new UIBackstageViewClientCCustom11(this);
				}
				return this.mUIBackstageViewClientCCustom1;
			}
		}
		public UIBackstageViewClientCCustom2 UIBackstageViewClientCCustom2
		{
			get
			{
				if ((this.mUIBackstageViewClientCCustom2 == null))
				{
					this.mUIBackstageViewClientCCustom2 = new UIBackstageViewClientCCustom2(this);
				}
				return this.mUIBackstageViewClientCCustom2;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICloseTabPage;
		private DXTestControl mUIPrintTabPage;
		private DXTestControl mUIExportTabPage;
		private UIBackstageViewClientCCustom1 mUIBackstageViewClientCCustom;
		private UIBackstageViewClientCCustom11 mUIBackstageViewClientCCustom1;
		private UIBackstageViewClientCCustom2 mUIBackstageViewClientCCustom2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCCustom1 : DXTestControl
	{
		public UIBackstageViewClientCCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIExportGalleryCustom2 UIExportGalleryCustom
		{
			get
			{
				if ((this.mUIExportGalleryCustom == null))
				{
					this.mUIExportGalleryCustom = new UIExportGalleryCustom2(this);
				}
				return this.mUIExportGalleryCustom;
			}
		}
		#endregion
		#region Fields
		private UIExportGalleryCustom2 mUIExportGalleryCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportGalleryCustom2 : DXTestControl
	{
		public UIExportGalleryCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "exportGallery";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIExportGalleryGallery2 UIExportGalleryGallery
		{
			get
			{
				if ((this.mUIExportGalleryGallery == null))
				{
					this.mUIExportGalleryGallery = new UIExportGalleryGallery2(this);
				}
				return this.mUIExportGalleryGallery;
			}
		}
		#endregion
		#region Fields
		private UIExportGalleryGallery2 mUIExportGalleryGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIExportGalleryGallery2 : DXTestControl
	{
		public UIExportGalleryGallery2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "exportGallery";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryControlClient";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIGroup1GalleryItemGroup2 UIGroup1GalleryItemGroup
		{
			get
			{
				if ((this.mUIGroup1GalleryItemGroup == null))
				{
					this.mUIGroup1GalleryItemGroup = new UIGroup1GalleryItemGroup2(this);
				}
				return this.mUIGroup1GalleryItemGroup;
			}
		}
		#endregion
		#region Fields
		private UIGroup1GalleryItemGroup2 mUIGroup1GalleryItemGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroup1GalleryItemGroup2 : DXTestControl
	{
		public UIGroup1GalleryItemGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Group1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIRTFFileGalleryItem
		{
			get
			{
				if ((this.mUIRTFFileGalleryItem == null))
				{
					this.mUIRTFFileGalleryItem = new DXTestControl(this);
					#region Search Criteria
					this.mUIRTFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "RTF File";
					this.mUIRTFFileGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
					this.mUIRTFFileGalleryItem.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRTFFileGalleryItem;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIRTFFileGalleryItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCCustom11 : DXTestControl
	{
		public UIBackstageViewClientCCustom11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXCheckBox UICheckEdit1CheckBox
		{
			get
			{
				if ((this.mUICheckEdit1CheckBox == null))
				{
					this.mUICheckEdit1CheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkEdit1";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
					this.mUICheckEdit1CheckBox.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUICheckEdit1CheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUICheckEdit1CheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCCustom2 : DXTestControl
	{
		public UIBackstageViewClientCCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEdit1Edit
		{
			get
			{
				if ((this.mUISpinEdit1Edit == null))
				{
					this.mUISpinEdit1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "spinEdit1";
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
					this.mUISpinEdit1Edit.WindowTitles.Add("New Document 1 - Ribbon Simple Pad");
					#endregion
				}
				return this.mUISpinEdit1Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEdit1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonCustomizationWindow : WinWindow
	{
		public UIRibbonCustomizationWindow()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "Ribbon Customization";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UIRightPanelPane1 UIRightPanelPane
		{
			get
			{
				if ((this.mUIRightPanelPane == null))
				{
					this.mUIRightPanelPane = new UIRightPanelPane1(this);
				}
				return this.mUIRightPanelPane;
			}
		}
		public UILeftPanelPane1 UILeftPanelPane
		{
			get
			{
				if ((this.mUILeftPanelPane == null))
				{
					this.mUILeftPanelPane = new UILeftPanelPane1(this);
				}
				return this.mUILeftPanelPane;
			}
		}
		#endregion
		#region Fields
		private UIRightPanelPane1 mUIRightPanelPane;
		private UILeftPanelPane1 mUILeftPanelPane;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightPanelPane1 : WinPane
	{
		public UIRightPanelPane1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "rightPanel";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UIRightTreeViewWindow1 UIRightTreeViewWindow
		{
			get
			{
				if ((this.mUIRightTreeViewWindow == null))
				{
					this.mUIRightTreeViewWindow = new UIRightTreeViewWindow1(this);
				}
				return this.mUIRightTreeViewWindow;
			}
		}
		#endregion
		#region Fields
		private UIRightTreeViewWindow1 mUIRightTreeViewWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightTreeViewWindow1 : WinWindow
	{
		public UIRightTreeViewWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SysTreeView32", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UIRightTreeViewTree1 UIRightTreeViewTree
		{
			get
			{
				if ((this.mUIRightTreeViewTree == null))
				{
					this.mUIRightTreeViewTree = new UIRightTreeViewTree1(this);
				}
				return this.mUIRightTreeViewTree;
			}
		}
		#endregion
		#region Fields
		private UIRightTreeViewTree1 mUIRightTreeViewTree;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRightTreeViewTree1 : WinTree
	{
		public UIRightTreeViewTree1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UIUnassignedPagesCheckBoxTreeItem1 UIUnassignedPagesCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIUnassignedPagesCheckBoxTreeItem == null))
				{
					this.mUIUnassignedPagesCheckBoxTreeItem = new UIUnassignedPagesCheckBoxTreeItem1(this);
				}
				return this.mUIUnassignedPagesCheckBoxTreeItem;
			}
		}
		public WinCheckBoxTreeItem UISelectionCheckBoxTreeItem
		{
			get
			{
				if ((this.mUISelectionCheckBoxTreeItem == null))
				{
					this.mUISelectionCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUISelectionCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Selection";
					this.mUISelectionCheckBoxTreeItem.SearchProperties["Value"] = "0";
					this.mUISelectionCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUISelectionCheckBoxTreeItem;
			}
		}
		public UINewCategoryCustomCheckBoxTreeItem1 UINewCategoryCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUINewCategoryCustomCheckBoxTreeItem == null))
				{
					this.mUINewCategoryCustomCheckBoxTreeItem = new UINewCategoryCustomCheckBoxTreeItem1(this);
				}
				return this.mUINewCategoryCustomCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private UIUnassignedPagesCheckBoxTreeItem1 mUIUnassignedPagesCheckBoxTreeItem;
		private WinCheckBoxTreeItem mUISelectionCheckBoxTreeItem;
		private UINewCategoryCustomCheckBoxTreeItem1 mUINewCategoryCustomCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUnassignedPagesCheckBoxTreeItem1 : WinCheckBoxTreeItem
	{
		public UIUnassignedPagesCheckBoxTreeItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "(Unassigned Pages)";
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UIGalleryPageCheckBoxTreeItem1 UIGalleryPageCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIGalleryPageCheckBoxTreeItem == null))
				{
					this.mUIGalleryPageCheckBoxTreeItem = new UIGalleryPageCheckBoxTreeItem1(this);
				}
				return this.mUIGalleryPageCheckBoxTreeItem;
			}
		}
		public WinCheckBoxTreeItem UIAlternativePageCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIAlternativePageCheckBoxTreeItem == null))
				{
					this.mUIAlternativePageCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUIAlternativePageCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Alternative Page";
					this.mUIAlternativePageCheckBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUIAlternativePageCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIAlternativePageCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIAlternativePageCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUIAlternativePageCheckBoxTreeItem;
			}
		}
		public WinCheckBoxTreeItem UIHomeCheckBoxTreeItem
		{
			get
			{
				if ((this.mUIHomeCheckBoxTreeItem == null))
				{
					this.mUIHomeCheckBoxTreeItem = new WinCheckBoxTreeItem(this);
					#region Search Criteria
					this.mUIHomeCheckBoxTreeItem.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Home";
					this.mUIHomeCheckBoxTreeItem.SearchProperties["Value"] = "1";
					this.mUIHomeCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUIHomeCheckBoxTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUIHomeCheckBoxTreeItem.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUIHomeCheckBoxTreeItem;
			}
		}
		public UINewTabCustomCheckBoxTreeItem UINewTabCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUINewTabCustomCheckBoxTreeItem == null))
				{
					this.mUINewTabCustomCheckBoxTreeItem = new UINewTabCustomCheckBoxTreeItem(this);
				}
				return this.mUINewTabCustomCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private UIGalleryPageCheckBoxTreeItem1 mUIGalleryPageCheckBoxTreeItem;
		private WinCheckBoxTreeItem mUIAlternativePageCheckBoxTreeItem;
		private WinCheckBoxTreeItem mUIHomeCheckBoxTreeItem;
		private UINewTabCustomCheckBoxTreeItem mUINewTabCustomCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGalleryPageCheckBoxTreeItem1 : WinCheckBoxTreeItem
	{
		public UIGalleryPageCheckBoxTreeItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "Gallery Page";
			this.SearchProperties["Value"] = "1";
			this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
			this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public WinTreeItem UINewGroupCustomTreeItem
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem == null))
				{
					this.mUINewGroupCustomTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUINewGroupCustomTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewTabCustomCheckBoxTreeItem : WinCheckBoxTreeItem
	{
		public UINewTabCustomCheckBoxTreeItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "New Tab (Custom)";
			this.SearchProperties["Value"] = "1";
			this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
			this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public WinTreeItem UINewGroupCustomTreeItem
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem == null))
				{
					this.mUINewGroupCustomTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUINewGroupCustomTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewCategoryCustomCheckBoxTreeItem1 : WinCheckBoxTreeItem
	{
		public UINewCategoryCustomCheckBoxTreeItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "New Category (Custom)";
			this.SearchProperties["Value"] = "0";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UINewTabCustomCheckBoxTreeItem1 UINewTabCustomCheckBoxTreeItem
		{
			get
			{
				if ((this.mUINewTabCustomCheckBoxTreeItem == null))
				{
					this.mUINewTabCustomCheckBoxTreeItem = new UINewTabCustomCheckBoxTreeItem1(this);
				}
				return this.mUINewTabCustomCheckBoxTreeItem;
			}
		}
		#endregion
		#region Fields
		private UINewTabCustomCheckBoxTreeItem1 mUINewTabCustomCheckBoxTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewTabCustomCheckBoxTreeItem1 : WinCheckBoxTreeItem
	{
		public UINewTabCustomCheckBoxTreeItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinCheckBoxTreeItem.PropertyNames.Name] = "New Tab (Custom)";
			this.SearchProperties["Value"] = "1";
			this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
			this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public WinTreeItem UINewGroupCustomTreeItem
		{
			get
			{
				if ((this.mUINewGroupCustomTreeItem == null))
				{
					this.mUINewGroupCustomTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUINewGroupCustomTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "New Group (Custom)";
					this.mUINewGroupCustomTreeItem.SearchProperties["Value"] = "2";
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
					this.mUINewGroupCustomTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
					this.mUINewGroupCustomTreeItem.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUINewGroupCustomTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUINewGroupCustomTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftPanelPane1 : WinPane
	{
		public UILeftPanelPane1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinControl.PropertyNames.Name] = "leftPanel";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UILeftTreeViewWindow1 UILeftTreeViewWindow
		{
			get
			{
				if ((this.mUILeftTreeViewWindow == null))
				{
					this.mUILeftTreeViewWindow = new UILeftTreeViewWindow1(this);
				}
				return this.mUILeftTreeViewWindow;
			}
		}
		#endregion
		#region Fields
		private UILeftTreeViewWindow1 mUILeftTreeViewWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftTreeViewWindow1 : WinWindow
	{
		public UILeftTreeViewWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SysTreeView32", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UILeftTreeViewTree1 UILeftTreeViewTree
		{
			get
			{
				if ((this.mUILeftTreeViewTree == null))
				{
					this.mUILeftTreeViewTree = new UILeftTreeViewTree1(this);
				}
				return this.mUILeftTreeViewTree;
			}
		}
		#endregion
		#region Fields
		private UILeftTreeViewTree1 mUILeftTreeViewTree;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftTreeViewTree1 : WinTree
	{
		public UILeftTreeViewTree1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public WinTreeItem UICutTreeItem
		{
			get
			{
				if ((this.mUICutTreeItem == null))
				{
					this.mUICutTreeItem = new WinTreeItem(this);
					#region Search Criteria
					this.mUICutTreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "Cut", PropertyExpressionOperator.Contains));
					this.mUICutTreeItem.SearchProperties["Value"] = "0";
					this.mUICutTreeItem.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUICutTreeItem;
			}
		}
		#endregion
		#region Fields
		private WinTreeItem mUICutTreeItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonCustomizationWindow1 : DXWindow
	{
		public UIRibbonCustomizationWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ribbon Customization";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UISubstratePanelClient2 UISubstratePanelClient
		{
			get
			{
				if ((this.mUISubstratePanelClient == null))
				{
					this.mUISubstratePanelClient = new UISubstratePanelClient2(this);
				}
				return this.mUISubstratePanelClient;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private UISubstratePanelClient2 mUISubstratePanelClient;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISubstratePanelClient2 : DXTestControl
	{
		public UISubstratePanelClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "substratePanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UIRibbonCustomizationUCustom2 UIRibbonCustomizationUCustom
		{
			get
			{
				if ((this.mUIRibbonCustomizationUCustom == null))
				{
					this.mUIRibbonCustomizationUCustom = new UIRibbonCustomizationUCustom2(this);
				}
				return this.mUIRibbonCustomizationUCustom;
			}
		}
		#endregion
		#region Fields
		private UIRibbonCustomizationUCustom2 mUIRibbonCustomizationUCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonCustomizationUCustom2 : DXTestControl
	{
		public UIRibbonCustomizationUCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonCustomizationUserControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonCustomizationUserControl";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UIMiddlePanelClient3 UIMiddlePanelClient
		{
			get
			{
				if ((this.mUIMiddlePanelClient == null))
				{
					this.mUIMiddlePanelClient = new UIMiddlePanelClient3(this);
				}
				return this.mUIMiddlePanelClient;
			}
		}
		public UIPanelControl1Client84 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client84(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UILeftHeaderPanelClient3 UILeftHeaderPanelClient
		{
			get
			{
				if ((this.mUILeftHeaderPanelClient == null))
				{
					this.mUILeftHeaderPanelClient = new UILeftHeaderPanelClient3(this);
				}
				return this.mUILeftHeaderPanelClient;
			}
		}
		#endregion
		#region Fields
		private UIMiddlePanelClient3 mUIMiddlePanelClient;
		private UIPanelControl1Client84 mUIPanelControl1Client;
		private UILeftHeaderPanelClient3 mUILeftHeaderPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMiddlePanelClient3 : DXTestControl
	{
		public UIMiddlePanelClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "middlePanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public DXButton UIBtnUpButton
		{
			get
			{
				if ((this.mUIBtnUpButton == null))
				{
					this.mUIBtnUpButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnUpButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUp";
					this.mUIBtnUpButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnUpButton.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUIBtnUpButton;
			}
		}
		public DXButton UIBtnDownButton
		{
			get
			{
				if ((this.mUIBtnDownButton == null))
				{
					this.mUIBtnDownButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnDownButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDown";
					this.mUIBtnDownButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnDownButton.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUIBtnDownButton;
			}
		}
		public DXButton UIBtnAddItemButton
		{
			get
			{
				if ((this.mUIBtnAddItemButton == null))
				{
					this.mUIBtnAddItemButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddItem";
					this.mUIBtnAddItemButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnAddItemButton.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUIBtnAddItemButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIBtnUpButton;
		private DXButton mUIBtnDownButton;
		private DXButton mUIBtnAddItemButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client84 : DXTestControl
	{
		public UIPanelControl1Client84(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public UINewOptionsDropDownBuButton UINewOptionsDropDownBuButton
		{
			get
			{
				if ((this.mUINewOptionsDropDownBuButton == null))
				{
					this.mUINewOptionsDropDownBuButton = new UINewOptionsDropDownBuButton(this);
				}
				return this.mUINewOptionsDropDownBuButton;
			}
		}
		public DXButton UIBtnRenameButton
		{
			get
			{
				if ((this.mUIBtnRenameButton == null))
				{
					this.mUIBtnRenameButton = new DXButton(this);
					#region Search Criteria
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRename";
					this.mUIBtnRenameButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIBtnRenameButton.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUIBtnRenameButton;
			}
		}
		#endregion
		#region Fields
		private UINewOptionsDropDownBuButton mUINewOptionsDropDownBuButton;
		private DXButton mUIBtnRenameButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINewOptionsDropDownBuButton : DXButton
	{
		public UINewOptionsDropDownBuButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "newOptionsDropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.WindowTitles.Add("Ribbon Customization");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "newOptionsDropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("Ribbon Customization");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILeftHeaderPanelClient3 : DXTestControl
	{
		public UILeftHeaderPanelClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "leftHeaderPanel";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public DXComboBox UICbeCommandsComboBox
		{
			get
			{
				if ((this.mUICbeCommandsComboBox == null))
				{
					this.mUICbeCommandsComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeCommands";
					this.mUICbeCommandsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUICbeCommandsComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbeCommandsComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow61 : DXWindow
	{
		public UIItemWindow61()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Rename";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Rename");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teName";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.WindowTitles.Add("Rename");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Rename");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditEdit;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow25 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow25()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UIGcNavigationsClient5 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient5(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		#endregion
		#region Fields
		private UIGcNavigationsClient5 mUIGcNavigationsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient5 : DXTestControl
	{
		public UIGcNavigationsClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar4 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar4(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar4 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar4 : DXTestControl
	{
		public UINavBarControl1NavBar4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public UIFilteringNavBarGroup1 UIFilteringNavBarGroup
		{
			get
			{
				if ((this.mUIFilteringNavBarGroup == null))
				{
					this.mUIFilteringNavBarGroup = new UIFilteringNavBarGroup1(this);
				}
				return this.mUIFilteringNavBarGroup;
			}
		}
		public UILayoutFeaturesNavBarGroup1 UILayoutFeaturesNavBarGroup
		{
			get
			{
				if ((this.mUILayoutFeaturesNavBarGroup == null))
				{
					this.mUILayoutFeaturesNavBarGroup = new UILayoutFeaturesNavBarGroup1(this);
				}
				return this.mUILayoutFeaturesNavBarGroup;
			}
		}
		public UIGridViewsNavBarGroup UIGridViewsNavBarGroup
		{
			get
			{
				if ((this.mUIGridViewsNavBarGroup == null))
				{
					this.mUIGridViewsNavBarGroup = new UIGridViewsNavBarGroup(this);
				}
				return this.mUIGridViewsNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIFilteringNavBarGroup1 mUIFilteringNavBarGroup;
		private UILayoutFeaturesNavBarGroup1 mUILayoutFeaturesNavBarGroup;
		private UIGridViewsNavBarGroup mUIGridViewsNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilteringNavBarGroup1 : DXTestControl
	{
		public UIFilteringNavBarGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Filtering";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIFindPanelupdatedNavBarLink
		{
			get
			{
				if ((this.mUIFindPanelupdatedNavBarLink == null))
				{
					this.mUIFindPanelupdatedNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIFindPanelupdatedNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Find Panel";
					this.mUIFindPanelupdatedNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIFindPanelupdatedNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIFindPanelupdatedNavBarLink;
			}
		}
		public DXTestControl UIMRUFilterListNavBarLink
		{
			get
			{
				if ((this.mUIMRUFilterListNavBarLink == null))
				{
					this.mUIMRUFilterListNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMRUFilterListNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "MRU Filter List";
					this.mUIMRUFilterListNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMRUFilterListNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIMRUFilterListNavBarLink;
			}
		}
		public DXTestControl UIAdvancedFilterControNavBarLink
		{
			get
			{
				if ((this.mUIAdvancedFilterControNavBarLink == null))
				{
					this.mUIAdvancedFilterControNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIAdvancedFilterControNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Advanced Filter Control";
					this.mUIAdvancedFilterControNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIAdvancedFilterControNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIAdvancedFilterControNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIFindPanelupdatedNavBarLink;
		private DXTestControl mUIMRUFilterListNavBarLink;
		private DXTestControl mUIAdvancedFilterControNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutFeaturesNavBarGroup1 : DXTestControl
	{
		public UILayoutFeaturesNavBarGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UI Customization";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UISplitPresentationNavBarLink
		{
			get
			{
				if ((this.mUISplitPresentationNavBarLink == null))
				{
					this.mUISplitPresentationNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISplitPresentationNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Split Presentation View";
					this.mUISplitPresentationNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISplitPresentationNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUISplitPresentationNavBarLink;
			}
		}
		public DXTestControl UICellSelectionNavBarLink
		{
			get
			{
				if ((this.mUICellSelectionNavBarLink == null))
				{
					this.mUICellSelectionNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICellSelectionNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Cell Selection";
					this.mUICellSelectionNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICellSelectionNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUICellSelectionNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUISplitPresentationNavBarLink;
		private DXTestControl mUICellSelectionNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridViewsNavBarGroup : DXTestControl
	{
		public UIGridViewsNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Grid Views";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UISplitPresentationVieNavBarLink
		{
			get
			{
				if ((this.mUISplitPresentationVieNavBarLink == null))
				{
					this.mUISplitPresentationVieNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISplitPresentationVieNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Split Presentation View";
					this.mUISplitPresentationVieNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISplitPresentationVieNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUISplitPresentationVieNavBarLink;
			}
		}
		public DXTestControl UIBandedViewsNavBarLink
		{
			get
			{
				if ((this.mUIBandedViewsNavBarLink == null))
				{
					this.mUIBandedViewsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIBandedViewsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Banded Views";
					this.mUIBandedViewsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIBandedViewsNavBarLink.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code)");
					#endregion
				}
				return this.mUIBandedViewsNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUISplitPresentationVieNavBarLink;
		private DXTestControl mUIBandedViewsNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocument1rtfRibbonSiWindow1 : DXWindow
	{
		public UIDocument1rtfRibbonSiWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ribbon Simple Pad";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public UIRibbonControl1Ribbon9 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon9(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public UIBackstageViewControlCustom8 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom8(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIRibbonControl1Ribbon9 mUIRibbonControl1Ribbon;
		private UIBackstageViewControlCustom8 mUIBackstageViewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon9 : DXRibbon
	{
		public UIRibbonControl1Ribbon9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonApplicationButButton
		{
			get
			{
				if ((this.mUIRibbonApplicationButButton == null))
				{
					this.mUIRibbonApplicationButButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonApplicationButton";
					this.mUIRibbonApplicationButButton.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRibbonApplicationButButton;
			}
		}
		public UIBackstageViewControlCustom7 UIBackstageViewControlCustom
		{
			get
			{
				if ((this.mUIBackstageViewControlCustom == null))
				{
					this.mUIBackstageViewControlCustom = new UIBackstageViewControlCustom7(this);
				}
				return this.mUIBackstageViewControlCustom;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonApplicationButButton;
		private UIBackstageViewControlCustom7 mUIBackstageViewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom7 : DXTestControl
	{
		public UIBackstageViewControlCustom7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIRecentTabPage
		{
			get
			{
				if ((this.mUIRecentTabPage == null))
				{
					this.mUIRecentTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIRecentTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Recent";
					this.mUIRecentTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIRecentTabPage.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIRecentTabPage;
			}
		}
		public UIBackstageViewClientCCustom3 UIBackstageViewClientCCustom
		{
			get
			{
				if ((this.mUIBackstageViewClientCCustom == null))
				{
					this.mUIBackstageViewClientCCustom = new UIBackstageViewClientCCustom3(this);
				}
				return this.mUIBackstageViewClientCCustom;
			}
		}
		public DXTestControl UIDocument1rtfTabPage
		{
			get
			{
				if ((this.mUIDocument1rtfTabPage == null))
				{
					this.mUIDocument1rtfTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIDocument1rtfTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Document1.rtf";
					this.mUIDocument1rtfTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIDocument1rtfTabPage.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDocument1rtfTabPage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIRecentTabPage;
		private UIBackstageViewClientCCustom3 mUIBackstageViewClientCCustom;
		private DXTestControl mUIDocument1rtfTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCCustom3 : DXTestControl
	{
		public UIBackstageViewClientCCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIAppMenuFileLabelCustom
		{
			get
			{
				if ((this.mUIAppMenuFileLabelCustom == null))
				{
					this.mUIAppMenuFileLabelCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2AppMenuFileLabel[0]";
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AppMenuFileLabel";
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
					this.mUIAppMenuFileLabelCustom.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIAppMenuFileLabelCustom;
			}
		}
		public DXCheckBox UICheckEdit1CheckBox
		{
			get
			{
				if ((this.mUICheckEdit1CheckBox == null))
				{
					this.mUICheckEdit1CheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkEdit1";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEdit1CheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
					this.mUICheckEdit1CheckBox.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUICheckEdit1CheckBox;
			}
		}
		public DXTextEdit UISpinEdit1Edit
		{
			get
			{
				if ((this.mUISpinEdit1Edit == null))
				{
					this.mUISpinEdit1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "spinEdit1";
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEdit1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
					this.mUISpinEdit1Edit.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUISpinEdit1Edit;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAppMenuFileLabelCustom;
		private DXCheckBox mUICheckEdit1CheckBox;
		private DXTextEdit mUISpinEdit1Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewControlCustom8 : DXTestControl
	{
		public UIBackstageViewControlCustom8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIDocument1rtfTabPage
		{
			get
			{
				if ((this.mUIDocument1rtfTabPage == null))
				{
					this.mUIDocument1rtfTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIDocument1rtfTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "Document1.rtf";
					this.mUIDocument1rtfTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewControlItem";
					this.mUIDocument1rtfTabPage.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIDocument1rtfTabPage;
			}
		}
		public UIBackstageViewClientCCustom4 UIBackstageViewClientCCustom
		{
			get
			{
				if ((this.mUIBackstageViewClientCCustom == null))
				{
					this.mUIBackstageViewClientCCustom = new UIBackstageViewClientCCustom4(this);
				}
				return this.mUIBackstageViewClientCCustom;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDocument1rtfTabPage;
		private UIBackstageViewClientCCustom4 mUIBackstageViewClientCCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIBackstageViewClientCCustom4 : DXTestControl
	{
		public UIBackstageViewClientCCustom4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BackstageViewClientControl";
			this.WindowTitles.Add("Ribbon Simple Pad");
			#endregion
		}
		#region Properties
		public DXTestControl UIAppMenuFileLabelCustom
		{
			get
			{
				if ((this.mUIAppMenuFileLabelCustom == null))
				{
					this.mUIAppMenuFileLabelCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "backstageViewClientControl2AppMenuFileLabel[0]";
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AppMenuFileLabel";
					this.mUIAppMenuFileLabelCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
					this.mUIAppMenuFileLabelCustom.WindowTitles.Add("Ribbon Simple Pad");
					#endregion
				}
				return this.mUIAppMenuFileLabelCustom;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAppMenuFileLabelCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow26 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow26()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Find Panel";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client85 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client85(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client85 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client85 : DXTestControl
	{
		public UIPanelControl1Client85(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIGcContainerClient52 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient52(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient52 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient52 : DXTestControl
	{
		public UIGcContainerClient52(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIFindFilterCustom1 UIFindFilterCustom
		{
			get
			{
				if ((this.mUIFindFilterCustom == null))
				{
					this.mUIFindFilterCustom = new UIFindFilterCustom1(this);
				}
				return this.mUIFindFilterCustom;
			}
		}
		#endregion
		#region Fields
		private UIFindFilterCustom1 mUIFindFilterCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindFilterCustom1 : DXTestControl
	{
		public UIFindFilterCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindFilter";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindFilter";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom9 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom9(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		public UIPanelControl1Client87 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client87(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom9 mUILayoutControl1Custom;
		private UIPanelControl1Client87 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom9 : DXTestControl
	{
		public UILayoutControl1Custom9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client86 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client86(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UILayoutControlGroup1LayoutGroup1 UILayoutControlGroup1LayoutGroup
		{
			get
			{
				if ((this.mUILayoutControlGroup1LayoutGroup == null))
				{
					this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup1(this);
				}
				return this.mUILayoutControlGroup1LayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client86 mUIPanelControl1Client;
		private UILayoutControlGroup1LayoutGroup1 mUILayoutControlGroup1LayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client86 : DXTestControl
	{
		public UIPanelControl1Client86(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			#endregion
		}
		#region Properties
		public UIUcFindOptions1Custom1 UIUcFindOptions1Custom
		{
			get
			{
				if ((this.mUIUcFindOptions1Custom == null))
				{
					this.mUIUcFindOptions1Custom = new UIUcFindOptions1Custom1(this);
				}
				return this.mUIUcFindOptions1Custom;
			}
		}
		#endregion
		#region Fields
		private UIUcFindOptions1Custom1 mUIUcFindOptions1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUcFindOptions1Custom1 : DXTestControl
	{
		public UIUcFindOptions1Custom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ucFindOptions1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ucFindOptions";
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom10 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom10(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom10 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom10 : DXTestControl
	{
		public UILayoutControl1Custom10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			#endregion
		}
		#region Properties
		public DXComboBox UICbFindFilterColumnsComboBox
		{
			get
			{
				if ((this.mUICbFindFilterColumnsComboBox == null))
				{
					this.mUICbFindFilterColumnsComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbFindFilterColumnsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbFindFilterColumns";
					this.mUICbFindFilterColumnsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					#endregion
				}
				return this.mUICbFindFilterColumnsComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbFindFilterColumnsComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlGroup1LayoutGroup1 : DXBaseLayoutItem
	{
		public UILayoutControlGroup1LayoutGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILayoutControlItem1LayoutControlItem UILayoutControlItem1LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem1LayoutControlItem == null))
				{
					this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem(this);
				}
				return this.mUILayoutControlItem1LayoutControlItem;
			}
		}
		public DXBaseLayoutItem UIEmptySpaceItem1LayoutControlItem
		{
			get
			{
				if ((this.mUIEmptySpaceItem1LayoutControlItem == null))
				{
					this.mUIEmptySpaceItem1LayoutControlItem = new DXBaseLayoutItem(this);
					#region Search Criteria
					this.mUIEmptySpaceItem1LayoutControlItem.SearchProperties[DXTestControl.PropertyNames.Name] = "emptySpaceItem1";
					this.mUIEmptySpaceItem1LayoutControlItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
					this.mUIEmptySpaceItem1LayoutControlItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUIEmptySpaceItem1LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem1LayoutControlItem mUILayoutControlItem1LayoutControlItem;
		private DXBaseLayoutItem mUIEmptySpaceItem1LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem1LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem1LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIGridControl1Table26 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table26(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table26 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table26 : DXGrid
	{
		public UIGridControl1Table26(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIFindControlCustom2 UIFindControlCustom
		{
			get
			{
				if ((this.mUIFindControlCustom == null))
				{
					this.mUIFindControlCustom = new UIFindControlCustom2(this);
				}
				return this.mUIFindControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIFindControlCustom2 mUIFindControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindControlCustom2 : DXTestControl
	{
		public UIFindControlCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom11 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom11(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom11 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom11 : DXTestControl
	{
		public UILayoutControl1Custom11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILcGroupMainLayoutGroup UILcGroupMainLayoutGroup
		{
			get
			{
				if ((this.mUILcGroupMainLayoutGroup == null))
				{
					this.mUILcGroupMainLayoutGroup = new UILcGroupMainLayoutGroup(this);
				}
				return this.mUILcGroupMainLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UILcGroupMainLayoutGroup mUILcGroupMainLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILcGroupMainLayoutGroup : DXBaseLayoutItem
	{
		public UILcGroupMainLayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcGroupMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public DXBaseLayoutItem UILciClearButtonLayoutControlItem
		{
			get
			{
				if ((this.mUILciClearButtonLayoutControlItem == null))
				{
					this.mUILciClearButtonLayoutControlItem = new DXBaseLayoutItem(this);
					#region Search Criteria
					this.mUILciClearButtonLayoutControlItem.SearchProperties[DXTestControl.PropertyNames.Name] = "lciClearButton";
					this.mUILciClearButtonLayoutControlItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
					this.mUILciClearButtonLayoutControlItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUILciClearButtonLayoutControlItem;
			}
		}
		public UILciFindLayoutControlItem UILciFindLayoutControlItem
		{
			get
			{
				if ((this.mUILciFindLayoutControlItem == null))
				{
					this.mUILciFindLayoutControlItem = new UILciFindLayoutControlItem(this);
				}
				return this.mUILciFindLayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private DXBaseLayoutItem mUILciClearButtonLayoutControlItem;
		private UILciFindLayoutControlItem mUILciFindLayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILciFindLayoutControlItem : DXBaseLayoutItem
	{
		public UILciFindLayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFind";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public DXMRUEdit UITeFindMRUEdit
		{
			get
			{
				if ((this.mUITeFindMRUEdit == null))
				{
					this.mUITeFindMRUEdit = new DXMRUEdit(this);
					#region Search Criteria
					this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
					this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MRUEdit";
					this.mUITeFindMRUEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUITeFindMRUEdit;
			}
		}
		#endregion
		#region Fields
		private DXMRUEdit mUITeFindMRUEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client87 : DXTestControl
	{
		public UIPanelControl1Client87(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIGridControl1Table27 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table27(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table27 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table27 : DXGrid
	{
		public UIGridControl1Table27(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UIFindControlCustom3 UIFindControlCustom
		{
			get
			{
				if ((this.mUIFindControlCustom == null))
				{
					this.mUIFindControlCustom = new UIFindControlCustom3(this);
				}
				return this.mUIFindControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIFindControlCustom3 mUIFindControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFindControlCustom3 : DXTestControl
	{
		public UIFindControlCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom12 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom12(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom12 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom12 : DXTestControl
	{
		public UILayoutControl1Custom12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILcGroupMainLayoutGroup1 UILcGroupMainLayoutGroup
		{
			get
			{
				if ((this.mUILcGroupMainLayoutGroup == null))
				{
					this.mUILcGroupMainLayoutGroup = new UILcGroupMainLayoutGroup1(this);
				}
				return this.mUILcGroupMainLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UILcGroupMainLayoutGroup1 mUILcGroupMainLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILcGroupMainLayoutGroup1 : DXBaseLayoutItem
	{
		public UILcGroupMainLayoutGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcGroupMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public UILciFindLayoutControlItem1 UILciFindLayoutControlItem
		{
			get
			{
				if ((this.mUILciFindLayoutControlItem == null))
				{
					this.mUILciFindLayoutControlItem = new UILciFindLayoutControlItem1(this);
				}
				return this.mUILciFindLayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILciFindLayoutControlItem1 mUILciFindLayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILciFindLayoutControlItem1 : DXBaseLayoutItem
	{
		public UILciFindLayoutControlItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFind";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
			#endregion
		}
		#region Properties
		public DXMRUEdit UITeFindMRUEdit
		{
			get
			{
				if ((this.mUITeFindMRUEdit == null))
				{
					this.mUITeFindMRUEdit = new DXMRUEdit(this);
					#region Search Criteria
					this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
					this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MRUEdit";
					this.mUITeFindMRUEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Find Panel");
					#endregion
				}
				return this.mUITeFindMRUEdit;
			}
		}
		#endregion
		#region Fields
		private DXMRUEdit mUITeFindMRUEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow27 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow27()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client88 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client88(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client88 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client88 : DXTestControl
	{
		public UIPanelControl1Client88(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIGcContainerClient53 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient53(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient53 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient53 : DXTestControl
	{
		public UIGcContainerClient53(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIFilterControlCustom1 UIFilterControlCustom
		{
			get
			{
				if ((this.mUIFilterControlCustom == null))
				{
					this.mUIFilterControlCustom = new UIFilterControlCustom1(this);
				}
				return this.mUIFilterControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIFilterControlCustom1 mUIFilterControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterControlCustom1 : DXTestControl
	{
		public UIFilterControlCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FilterControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList28 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList28(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList28 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList28 : DXTestControl
	{
		public UIXtraTabControl1TabList28(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client27 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client27(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client27 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client27 : DXTestControl
	{
		public UIXtraTabPage1Client27(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl5 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl5(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl5 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl5 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient7 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient7(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		public UISplitGroupPanelClient14 UISplitGroupPanelClient1
		{
			get
			{
				if ((this.mUISplitGroupPanelClient1 == null))
				{
					this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient14(this);
				}
				return this.mUISplitGroupPanelClient1;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient7 mUISplitGroupPanelClient;
		private UISplitGroupPanelClient14 mUISplitGroupPanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient7 : DXTestControl
	{
		public UISplitGroupPanelClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIFilterControl1FilterControl1 UIFilterControl1FilterControl
		{
			get
			{
				if ((this.mUIFilterControl1FilterControl == null))
				{
					this.mUIFilterControl1FilterControl = new UIFilterControl1FilterControl1(this);
				}
				return this.mUIFilterControl1FilterControl;
			}
		}
		public UIPanelControl1Client89 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client89(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIFilterControl1FilterControl1 mUIFilterControl1FilterControl;
		private UIPanelControl1Client89 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilterControl1FilterControl1 : DXFilterControl
	{
		public UIFilterControl1FilterControl1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FilterControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXTextEdit UISpinEditEdit
		{
			get
			{
				if ((this.mUISpinEditEdit == null))
				{
					this.mUISpinEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1SpinEditNode3Element2";
					this.mUISpinEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISpinEditEdit;
			}
		}
		public DXTextEdit UISpinEditEdit1
		{
			get
			{
				if ((this.mUISpinEditEdit1 == null))
				{
					this.mUISpinEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1SpinEditNode3Element3";
					this.mUISpinEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISpinEditEdit1;
			}
		}
		public DXTextEdit UISpinEditEdit2
		{
			get
			{
				if ((this.mUISpinEditEdit2 == null))
				{
					this.mUISpinEditEdit2 = new DXTextEdit(this);
					#region Search Criteria
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "filterControl1SpinEditNode3Element4";
					this.mUISpinEditEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISpinEditEdit2.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISpinEditEdit2;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISpinEditEdit;
		private DXTextEdit mUISpinEditEdit1;
		private DXTextEdit mUISpinEditEdit2;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client89 : DXTestControl
	{
		public UIPanelControl1Client89(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXButton UISbApplyButton
		{
			get
			{
				if ((this.mUISbApplyButton == null))
				{
					this.mUISbApplyButton = new DXButton(this);
					#region Search Criteria
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbApply";
					this.mUISbApplyButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISbApplyButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUISbApplyButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISbApplyButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient14 : DXTestControl
	{
		public UISplitGroupPanelClient14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public UIGridControl1Table28 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table28(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table28 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table28 : DXGrid
	{
		public UIGridControl1Table28(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
			#endregion
		}
		#region Properties
		public DXTestControl UIGridControlFilterPanText
		{
			get
			{
				if ((this.mUIGridControlFilterPanText == null))
				{
					this.mUIGridControlFilterPanText = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanelText[View]gridView1";
					this.mUIGridControlFilterPanText.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanelText";
					this.mUIGridControlFilterPanText.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridControlFilterPanText;
			}
		}
		public DXColumnHeader UIGridColumnProductColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnProductColumnHeader == null))
				{
					this.mUIGridColumnProductColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnProductColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumnProduct";
					this.mUIGridColumnProductColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnProductColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnProductColumnHeader;
			}
		}
		public DXColumnHeader UIGridColumnQuantityColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnQuantityColumnHeader == null))
				{
					this.mUIGridColumnQuantityColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnQuantityColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumnQuantity";
					this.mUIGridColumnQuantityColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnQuantityColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnQuantityColumnHeader;
			}
		}
		public DXColumnHeader UIGridColumnDiscountColumnHeader
		{
			get
			{
				if ((this.mUIGridColumnDiscountColumnHeader == null))
				{
					this.mUIGridColumnDiscountColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumnDiscountColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumnDiscount";
					this.mUIGridColumnDiscountColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumnDiscountColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Advanced Filter Control");
					#endregion
				}
				return this.mUIGridColumnDiscountColumnHeader;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIGridControlFilterPanText;
		private DXColumnHeader mUIGridColumnProductColumnHeader;
		private DXColumnHeader mUIGridColumnQuantityColumnHeader;
		private DXColumnHeader mUIGridColumnDiscountColumnHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow28 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow28()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
				"and Expressions)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client90 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client90(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client90 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client90 : DXTestControl
	{
		public UIPanelControl1Client90(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient54 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient54(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient54 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient54 : DXTestControl
	{
		public UIGcContainerClient54(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIStyleConditionsCustom2 UIStyleConditionsCustom
		{
			get
			{
				if ((this.mUIStyleConditionsCustom == null))
				{
					this.mUIStyleConditionsCustom = new UIStyleConditionsCustom2(this);
				}
				return this.mUIStyleConditionsCustom;
			}
		}
		#endregion
		#region Fields
		private UIStyleConditionsCustom2 mUIStyleConditionsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStyleConditionsCustom2 : DXTestControl
	{
		public UIStyleConditionsCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "StyleConditions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StyleConditions";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList29 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList29(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList29 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList29 : DXTestControl
	{
		public UIXtraTabControl1TabList29(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client28 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client28(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client28 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client28 : DXTestControl
	{
		public UIXtraTabPage1Client28(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client91 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client91(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client91 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client91 : DXTestControl
	{
		public UIPanelControl1Client91(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public UIPanelControl2Client2 UIPanelControl2Client
		{
			get
			{
				if ((this.mUIPanelControl2Client == null))
				{
					this.mUIPanelControl2Client = new UIPanelControl2Client2(this);
				}
				return this.mUIPanelControl2Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl2Client2 mUIPanelControl2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl2Client2 : DXTestControl
	{
		public UIPanelControl2Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
					"and Expressions)");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButton1Button
		{
			get
			{
				if ((this.mUISimpleButton1Button == null))
				{
					this.mUISimpleButton1Button = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton1";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButton1Button.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Conditional Formatting (Cell Values " +
							"and Expressions)");
					#endregion
				}
				return this.mUISimpleButton1Button;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButton1Button;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIStyleFormatConditionWindow1 : DXWindow
	{
		public UIStyleFormatConditionWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Style Conditional Formatting (Cell Values and Expressions) Editor for the [Produc" +
				"t Name] column";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Produc" +
					"t Name] column");
			#endregion
		}
		#region Properties
		public UIPanelControl2Client3 UIPanelControl2Client
		{
			get
			{
				if ((this.mUIPanelControl2Client == null))
				{
					this.mUIPanelControl2Client = new UIPanelControl2Client3(this);
				}
				return this.mUIPanelControl2Client;
			}
		}
		public UIFormatItemListList2 UIFormatItemListList
		{
			get
			{
				if ((this.mUIFormatItemListList == null))
				{
					this.mUIFormatItemListList = new UIFormatItemListList2(this);
				}
				return this.mUIFormatItemListList;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl2Client3 mUIPanelControl2Client;
		private UIFormatItemListList2 mUIFormatItemListList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl2Client3 : DXTestControl
	{
		public UIPanelControl2Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbConditionComboBox
		{
			get
			{
				if ((this.mUIIcbConditionComboBox == null))
				{
					this.mUIIcbConditionComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbConditionComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbCondition";
					this.mUIIcbConditionComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbConditionComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					#endregion
				}
				return this.mUIIcbConditionComboBox;
			}
		}
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2TextEdit[0]";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUITextEditEdit.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Produc" +
							"t Name] column");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXTextEdit UITextEditEdit1
		{
			get
			{
				if ((this.mUITextEditEdit1 == null))
				{
					this.mUITextEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2TextEdit[1]";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUITextEditEdit1.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Produc" +
							"t Name] column");
					#endregion
				}
				return this.mUITextEditEdit1;
			}
		}
		public DXCheckBox UICeRowCheckBox
		{
			get
			{
				if ((this.mUICeRowCheckBox == null))
				{
					this.mUICeRowCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICeRowCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceRow";
					this.mUICeRowCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICeRowCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUICeRowCheckBox.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Produc" +
							"t Name] column");
					#endregion
				}
				return this.mUICeRowCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbConditionComboBox;
		private DXTextEdit mUITextEditEdit;
		private DXTextEdit mUITextEditEdit1;
		private DXCheckBox mUICeRowCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatItemListList2 : DXListBox
	{
		public UIFormatItemListList2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemList";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
			this.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Produc" +
					"t Name] column");
			#endregion
		}
		#region Properties
		public DXListBoxItem UINotBetween1040ListItem
		{
			get
			{
				if ((this.mUINotBetween1040ListItem == null))
				{
					this.mUINotBetween1040ListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUINotBetween1040ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemListItem[0]";
					this.mUINotBetween1040ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUINotBetween1040ListItem.WindowTitles.Add("Style Conditional Formatting (Cell Values and Expressions) Editor for the [Produc" +
							"t Name] column");
					#endregion
				}
				return this.mUINotBetween1040ListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUINotBetween1040ListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow29 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow29()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client92 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client92(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client92 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client92 : DXTestControl
	{
		public UIPanelControl1Client92(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIGcContainerClient55 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient55(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient55 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient55 : DXTestControl
	{
		public UIGcContainerClient55(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIUnboundExpressionCustom2 UIUnboundExpressionCustom
		{
			get
			{
				if ((this.mUIUnboundExpressionCustom == null))
				{
					this.mUIUnboundExpressionCustom = new UIUnboundExpressionCustom2(this);
				}
				return this.mUIUnboundExpressionCustom;
			}
		}
		#endregion
		#region Fields
		private UIUnboundExpressionCustom2 mUIUnboundExpressionCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUnboundExpressionCustom2 : DXTestControl
	{
		public UIUnboundExpressionCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnboundExpression";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "UnboundExpression";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client93 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client93(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGridControl1Table29 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table29(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client93 mUIPanelControl1Client;
		private UIGridControl1Table29 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client93 : DXTestControl
	{
		public UIPanelControl1Client93(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public DXButton UISimpleButton1Button
		{
			get
			{
				if ((this.mUISimpleButton1Button == null))
				{
					this.mUISimpleButton1Button = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton1";
					this.mUISimpleButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButton1Button.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUISimpleButton1Button;
			}
		}
		public DXComboBox UIImageComboBoxEdit1ComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEdit1ComboBox == null))
				{
					this.mUIImageComboBoxEdit1ComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEdit1ComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "imageComboBoxEdit1";
					this.mUIImageComboBoxEdit1ComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEdit1ComboBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIImageComboBoxEdit1ComboBox;
			}
		}
		#endregion
		#region Fields
		private DXButton mUISimpleButton1Button;
		private DXComboBox mUIImageComboBoxEdit1ComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table29 : DXGrid
	{
		public UIGridControl1Table29(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
			#endregion
		}
		#region Properties
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]gridView1[Row]0[Column]gridColumn6";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Unbound Expressions");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		#endregion
		#region Fields
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow71 : DXWindow
	{
		public UIItemWindow71()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Expression editor";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Expression editor");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "expressionEdit";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.WindowTitles.Add("Expression editor");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Expression editor");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUISimpleButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow30 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow30()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client94 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client94(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client94 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client94 : DXTestControl
	{
		public UIPanelControl1Client94(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIGcContainerClient56 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient56(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient56 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient56 : DXTestControl
	{
		public UIGcContainerClient56(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIMultiEditorsCustom1 UIMultiEditorsCustom
		{
			get
			{
				if ((this.mUIMultiEditorsCustom == null))
				{
					this.mUIMultiEditorsCustom = new UIMultiEditorsCustom1(this);
				}
				return this.mUIMultiEditorsCustom;
			}
		}
		#endregion
		#region Fields
		private UIMultiEditorsCustom1 mUIMultiEditorsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiEditorsCustom1 : DXTestControl
	{
		public UIMultiEditorsCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MultiEditors";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MultiEditors";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public UIGridControl1Table30 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table30(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table30 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table30 : DXGrid
	{
		public UIGridControl1Table30(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
			#endregion
		}
		#region Properties
		public DXTestControl UIRow9ColumngridColumnProgressBar
		{
			get
			{
				if ((this.mUIRow9ColumngridColumnProgressBar == null))
				{
					this.mUIRow9ColumngridColumnProgressBar = new DXTestControl(this);
					#region Search Criteria
					this.mUIRow9ColumngridColumnProgressBar.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1ProgressBarControl[View]gridView1[Row]9[Column]gridColumn3";
					this.mUIRow9ColumngridColumnProgressBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ProgressBarControl";
					this.mUIRow9ColumngridColumnProgressBar.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Dynamically Assigned Editors");
					#endregion
				}
				return this.mUIRow9ColumngridColumnProgressBar;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIRow9ColumngridColumnProgressBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow31 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow31()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - MRU Filter List";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIPanelControl1Client95 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client95(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client95 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client95 : DXTestControl
	{
		public UIPanelControl1Client95(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			#endregion
		}
		#region Properties
		public UIGcContainerClient57 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient57(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient57 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient57 : DXTestControl
	{
		public UIGcContainerClient57(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public UIFilteringCustom3 UIFilteringCustom
		{
			get
			{
				if ((this.mUIFilteringCustom == null))
				{
					this.mUIFilteringCustom = new UIFilteringCustom3(this);
				}
				return this.mUIFilteringCustom;
			}
		}
		#endregion
		#region Fields
		private UIFilteringCustom3 mUIFilteringCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFilteringCustom3 : DXTestControl
	{
		public UIFilteringCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Filtering";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "Filtering";
			#endregion
		}
		#region Properties
		public DXGrid UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new DXGrid(this);
					#region Search Criteria
					this.mUIGridControl1Table.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
					this.mUIGridControl1Table.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
					#endregion
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private DXGrid mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraEditorsTutorialsWindow1 : DXWindow
	{
		public UIXtraEditorsTutorialsWindow1()
		{
			#region Search Criteria
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "The XtraEditors Suite Demo (C# code)", PropertyExpressionOperator.Contains));
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPcMainClient4 UIPcMainClient
		{
			get
			{
				if ((this.mUIPcMainClient == null))
				{
					this.mUIPcMainClient = new UIPcMainClient4(this);
				}
				return this.mUIPcMainClient;
			}
		}
		public DXButton UIWhatsthisButton
		{
			get
			{
				if ((this.mUIWhatsthisButton == null))
				{
					this.mUIWhatsthisButton = new DXButton(this);
					#region Search Criteria
					this.mUIWhatsthisButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnWhatsThis";
					this.mUIWhatsthisButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIWhatsthisButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIWhatsthisButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIWhatsthisButton;
			}
		}
		public UIGcNavigationsClient6 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient6(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		#endregion
		#region Fields
		private UIPcMainClient4 mUIPcMainClient;
		private DXButton mUIWhatsthisButton;
		private UIGcNavigationsClient6 mUIGcNavigationsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPcMainClient4 : DXTestControl
	{
		public UIPcMainClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient58 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient58(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient58 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient58 : DXTestControl
	{
		public UIGcContainerClient58(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIModuleDateEditCustom1 UIModuleDateEditCustom
		{
			get
			{
				if ((this.mUIModuleDateEditCustom == null))
				{
					this.mUIModuleDateEditCustom = new UIModuleDateEditCustom1(this);
				}
				return this.mUIModuleDateEditCustom;
			}
		}
		public UIModuleZoomTrackBarCustom1 UIModuleZoomTrackBarCustom
		{
			get
			{
				if ((this.mUIModuleZoomTrackBarCustom == null))
				{
					this.mUIModuleZoomTrackBarCustom = new UIModuleZoomTrackBarCustom1(this);
				}
				return this.mUIModuleZoomTrackBarCustom;
			}
		}
		public UIModuleCalcEditCustom1 UIModuleCalcEditCustom
		{
			get
			{
				if ((this.mUIModuleCalcEditCustom == null))
				{
					this.mUIModuleCalcEditCustom = new UIModuleCalcEditCustom1(this);
				}
				return this.mUIModuleCalcEditCustom;
			}
		}
		public UIModuleColorEditCustom1 UIModuleColorEditCustom
		{
			get
			{
				if ((this.mUIModuleColorEditCustom == null))
				{
					this.mUIModuleColorEditCustom = new UIModuleColorEditCustom1(this);
				}
				return this.mUIModuleColorEditCustom;
			}
		}
		public UIModuleComboBoxEditCustom1 UIModuleComboBoxEditCustom
		{
			get
			{
				if ((this.mUIModuleComboBoxEditCustom == null))
				{
					this.mUIModuleComboBoxEditCustom = new UIModuleComboBoxEditCustom1(this);
				}
				return this.mUIModuleComboBoxEditCustom;
			}
		}
		public UIModuleImageComboBoxECustom1 UIModuleImageComboBoxECustom
		{
			get
			{
				if ((this.mUIModuleImageComboBoxECustom == null))
				{
					this.mUIModuleImageComboBoxECustom = new UIModuleImageComboBoxECustom1(this);
				}
				return this.mUIModuleImageComboBoxECustom;
			}
		}
		public UIModuleLookUpEditCustom1 UIModuleLookUpEditCustom
		{
			get
			{
				if ((this.mUIModuleLookUpEditCustom == null))
				{
					this.mUIModuleLookUpEditCustom = new UIModuleLookUpEditCustom1(this);
				}
				return this.mUIModuleLookUpEditCustom;
			}
		}
		public UIModuleMemoExEditCustom1 UIModuleMemoExEditCustom
		{
			get
			{
				if ((this.mUIModuleMemoExEditCustom == null))
				{
					this.mUIModuleMemoExEditCustom = new UIModuleMemoExEditCustom1(this);
				}
				return this.mUIModuleMemoExEditCustom;
			}
		}
		public UIModuleMRUEditCustom1 UIModuleMRUEditCustom
		{
			get
			{
				if ((this.mUIModuleMRUEditCustom == null))
				{
					this.mUIModuleMRUEditCustom = new UIModuleMRUEditCustom1(this);
				}
				return this.mUIModuleMRUEditCustom;
			}
		}
		public UIModulePopupContainerCustom1 UIModulePopupContainerCustom
		{
			get
			{
				if ((this.mUIModulePopupContainerCustom == null))
				{
					this.mUIModulePopupContainerCustom = new UIModulePopupContainerCustom1(this);
				}
				return this.mUIModulePopupContainerCustom;
			}
		}
		public UIModuleCheckedComboBoCustom1 UIModuleCheckedComboBoCustom
		{
			get
			{
				if ((this.mUIModuleCheckedComboBoCustom == null))
				{
					this.mUIModuleCheckedComboBoCustom = new UIModuleCheckedComboBoCustom1(this);
				}
				return this.mUIModuleCheckedComboBoCustom;
			}
		}
		public UIModuleDropDownButtonCustom UIModuleDropDownButtonCustom
		{
			get
			{
				if ((this.mUIModuleDropDownButtonCustom == null))
				{
					this.mUIModuleDropDownButtonCustom = new UIModuleDropDownButtonCustom(this);
				}
				return this.mUIModuleDropDownButtonCustom;
			}
		}
		public UIModuleNavigatorCustom UIModuleNavigatorCustom
		{
			get
			{
				if ((this.mUIModuleNavigatorCustom == null))
				{
					this.mUIModuleNavigatorCustom = new UIModuleNavigatorCustom(this);
				}
				return this.mUIModuleNavigatorCustom;
			}
		}
		public UIModuleListBoxCustom UIModuleListBoxCustom
		{
			get
			{
				if ((this.mUIModuleListBoxCustom == null))
				{
					this.mUIModuleListBoxCustom = new UIModuleListBoxCustom(this);
				}
				return this.mUIModuleListBoxCustom;
			}
		}
		public UIModuleMaskBoxCustom UIModuleMaskBoxCustom
		{
			get
			{
				if ((this.mUIModuleMaskBoxCustom == null))
				{
					this.mUIModuleMaskBoxCustom = new UIModuleMaskBoxCustom(this);
				}
				return this.mUIModuleMaskBoxCustom;
			}
		}
		public UIUcOverviewPageCustom UIUcOverviewPageCustom
		{
			get
			{
				if ((this.mUIUcOverviewPageCustom == null))
				{
					this.mUIUcOverviewPageCustom = new UIUcOverviewPageCustom(this);
				}
				return this.mUIUcOverviewPageCustom;
			}
		}
		#endregion
		#region Fields
		private UIModuleDateEditCustom1 mUIModuleDateEditCustom;
		private UIModuleZoomTrackBarCustom1 mUIModuleZoomTrackBarCustom;
		private UIModuleCalcEditCustom1 mUIModuleCalcEditCustom;
		private UIModuleColorEditCustom1 mUIModuleColorEditCustom;
		private UIModuleComboBoxEditCustom1 mUIModuleComboBoxEditCustom;
		private UIModuleImageComboBoxECustom1 mUIModuleImageComboBoxECustom;
		private UIModuleLookUpEditCustom1 mUIModuleLookUpEditCustom;
		private UIModuleMemoExEditCustom1 mUIModuleMemoExEditCustom;
		private UIModuleMRUEditCustom1 mUIModuleMRUEditCustom;
		private UIModulePopupContainerCustom1 mUIModulePopupContainerCustom;
		private UIModuleCheckedComboBoCustom1 mUIModuleCheckedComboBoCustom;
		private UIModuleDropDownButtonCustom mUIModuleDropDownButtonCustom;
		private UIModuleNavigatorCustom mUIModuleNavigatorCustom;
		private UIModuleListBoxCustom mUIModuleListBoxCustom;
		private UIModuleMaskBoxCustom mUIModuleMaskBoxCustom;
		private UIUcOverviewPageCustom mUIUcOverviewPageCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleDateEditCustom1 : DXTestControl
	{
		public UIModuleDateEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleDateEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleDateEdit";
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList30 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList30(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList30 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList30 : DXTestControl
	{
		public UIXtraTabControl1TabList30(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client29 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client29(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client29 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client29 : DXTestControl
	{
		public UIXtraTabPage1Client29(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			#endregion
		}
		#region Properties
		public UIPanelControl1Client96 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client96(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client96 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client96 : DXTestControl
	{
		public UIPanelControl1Client96(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public DXDateTimePicker UIDateEditSampleDateTimeEdit
		{
			get
			{
				if ((this.mUIDateEditSampleDateTimeEdit == null))
				{
					this.mUIDateEditSampleDateTimeEdit = new DXDateTimePicker(this);
					#region Search Criteria
					this.mUIDateEditSampleDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "dateEditSample";
					this.mUIDateEditSampleDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
					#endregion
				}
				return this.mUIDateEditSampleDateTimeEdit;
			}
		}
		#endregion
		#region Fields
		private DXDateTimePicker mUIDateEditSampleDateTimeEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleZoomTrackBarCustom1 : DXTestControl
	{
		public UIModuleZoomTrackBarCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleZoomTrackBar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleZoomTrackBar";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList31 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList31(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList31 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList31 : DXTestControl
	{
		public UIXtraTabControl1TabList31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client30 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client30(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client30 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client30 : DXTestControl
	{
		public UIXtraTabPage1Client30(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGroupControl3Client3 UIGroupControl3Client
		{
			get
			{
				if ((this.mUIGroupControl3Client == null))
				{
					this.mUIGroupControl3Client = new UIGroupControl3Client3(this);
				}
				return this.mUIGroupControl3Client;
			}
		}
		#endregion
		#region Fields
		private UIGroupControl3Client3 mUIGroupControl3Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl3Client3 : DXTestControl
	{
		public UIGroupControl3Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTrackBar UIZoomTrackBarControl1TrackBar
		{
			get
			{
				if ((this.mUIZoomTrackBarControl1TrackBar == null))
				{
					this.mUIZoomTrackBarControl1TrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUIZoomTrackBarControl1TrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "zoomTrackBarControl1";
					this.mUIZoomTrackBarControl1TrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ZoomTrackBarControl";
					this.mUIZoomTrackBarControl1TrackBar.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIZoomTrackBarControl1TrackBar;
			}
		}
		#endregion
		#region Fields
		private DXTrackBar mUIZoomTrackBarControl1TrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleCalcEditCustom1 : DXTestControl
	{
		public UIModuleCalcEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleCalcEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleCalcEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList32 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList32(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList32 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList32 : DXTestControl
	{
		public UIXtraTabControl1TabList32(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client31 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client31(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client31 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client31 : DXTestControl
	{
		public UIXtraTabPage1Client31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client97 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client97(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client97 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client97 : DXTestControl
	{
		public UIPanelControl1Client97(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXPopupEdit UICalcEditSamplePopupEdit
		{
			get
			{
				if ((this.mUICalcEditSamplePopupEdit == null))
				{
					this.mUICalcEditSamplePopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditSamplePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "calcEditSample";
					this.mUICalcEditSamplePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditSamplePopupEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICalcEditSamplePopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUICalcEditSamplePopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleColorEditCustom1 : DXTestControl
	{
		public UIModuleColorEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleColorEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleColorEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList33 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList33(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList33 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList33 : DXTestControl
	{
		public UIXtraTabControl1TabList33(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client32 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client32(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client32 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client32 : DXTestControl
	{
		public UIXtraTabPage1Client32(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client98 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client98(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client98 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client98 : DXTestControl
	{
		public UIPanelControl1Client98(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXColorEdit UIColorEditSampleColorEdit
		{
			get
			{
				if ((this.mUIColorEditSampleColorEdit == null))
				{
					this.mUIColorEditSampleColorEdit = new DXColorEdit(this);
					#region Search Criteria
					this.mUIColorEditSampleColorEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "colorEditSample";
					this.mUIColorEditSampleColorEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColorEdit";
					this.mUIColorEditSampleColorEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIColorEditSampleColorEdit;
			}
		}
		#endregion
		#region Fields
		private DXColorEdit mUIColorEditSampleColorEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleComboBoxEditCustom1 : DXTestControl
	{
		public UIModuleComboBoxEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleComboBoxEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList34 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList34(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList34 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList34 : DXTestControl
	{
		public UIXtraTabControl1TabList34(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client33 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client33(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client33 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client33 : DXTestControl
	{
		public UIXtraTabPage1Client33(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client99 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client99(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client99 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client99 : DXTestControl
	{
		public UIPanelControl1Client99(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditSampleComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditSampleComboBox == null))
				{
					this.mUIComboBoxEditSampleComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "comboBoxEditSample";
					this.mUIComboBoxEditSampleComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUIComboBoxEditSampleComboBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIComboBoxEditSampleComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditSampleComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleImageComboBoxECustom1 : DXTestControl
	{
		public UIModuleImageComboBoxECustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleImageComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleImageComboBoxEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList35 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList35(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList35 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList35 : DXTestControl
	{
		public UIXtraTabControl1TabList35(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client34 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client34(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client34 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client34 : DXTestControl
	{
		public UIXtraTabPage1Client34(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client100 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client100(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client100 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client100 : DXTestControl
	{
		public UIPanelControl1Client100(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXComboBox UIImageComboBoxEditSamComboBox
		{
			get
			{
				if ((this.mUIImageComboBoxEditSamComboBox == null))
				{
					this.mUIImageComboBoxEditSamComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIImageComboBoxEditSamComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "imageComboBoxEditSample";
					this.mUIImageComboBoxEditSamComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIImageComboBoxEditSamComboBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIImageComboBoxEditSamComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIImageComboBoxEditSamComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleLookUpEditCustom1 : DXTestControl
	{
		public UIModuleLookUpEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleLookUpEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleLookUpEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList36 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList36(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList36 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList36 : DXTestControl
	{
		public UIXtraTabControl1TabList36(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client35 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client35(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client35 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client35 : DXTestControl
	{
		public UIXtraTabPage1Client35(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client101 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client101(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client101 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client101 : DXTestControl
	{
		public UIPanelControl1Client101(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXPopupEdit UILookUpEdit1PopupEdit
		{
			get
			{
				if ((this.mUILookUpEdit1PopupEdit == null))
				{
					this.mUILookUpEdit1PopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUILookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lookUpEdit1";
					this.mUILookUpEdit1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					this.mUILookUpEdit1PopupEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUILookUpEdit1PopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUILookUpEdit1PopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleMemoExEditCustom1 : DXTestControl
	{
		public UIModuleMemoExEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleMemoExEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleMemoExEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList37 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList37(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList37 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList37 : DXTestControl
	{
		public UIXtraTabControl1TabList37(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client36 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client36(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client36 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client36 : DXTestControl
	{
		public UIXtraTabPage1Client36(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client102 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client102(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client102 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client102 : DXTestControl
	{
		public UIPanelControl1Client102(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMemoExEditSamplePopupEdit UIMemoExEditSamplePopupEdit
		{
			get
			{
				if ((this.mUIMemoExEditSamplePopupEdit == null))
				{
					this.mUIMemoExEditSamplePopupEdit = new UIMemoExEditSamplePopupEdit(this);
				}
				return this.mUIMemoExEditSamplePopupEdit;
			}
		}
		#endregion
		#region Fields
		private UIMemoExEditSamplePopupEdit mUIMemoExEditSamplePopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExEditSamplePopupEdit : DXPopupEdit
	{
		public UIMemoExEditSamplePopupEdit(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMemoExPopupFormWindow3 UIMemoExPopupFormWindow
		{
			get
			{
				if ((this.mUIMemoExPopupFormWindow == null))
				{
					this.mUIMemoExPopupFormWindow = new UIMemoExPopupFormWindow3(this);
				}
				return this.mUIMemoExPopupFormWindow;
			}
		}
		#endregion
		#region Fields
		private UIMemoExPopupFormWindow3 mUIMemoExPopupFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExPopupFormWindow3 : DXWindow
	{
		public UIMemoExPopupFormWindow3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExPopupForm";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormMemoEdit[0]";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormSimpleButton[0]";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIOKButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleMRUEditCustom1 : DXTestControl
	{
		public UIModuleMRUEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleMRUEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleMRUEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList38 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList38(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList38 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList38 : DXTestControl
	{
		public UIXtraTabControl1TabList38(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client37 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client37(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client37 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client37 : DXTestControl
	{
		public UIXtraTabPage1Client37(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client103 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client103(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client103 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client103 : DXTestControl
	{
		public UIPanelControl1Client103(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXMRUEdit UIMruEditSampleMRUEdit
		{
			get
			{
				if ((this.mUIMruEditSampleMRUEdit == null))
				{
					this.mUIMruEditSampleMRUEdit = new DXMRUEdit(this);
					#region Search Criteria
					this.mUIMruEditSampleMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "mruEditSample";
					this.mUIMruEditSampleMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MRUEdit";
					this.mUIMruEditSampleMRUEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMruEditSampleMRUEdit;
			}
		}
		#endregion
		#region Fields
		private DXMRUEdit mUIMruEditSampleMRUEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModulePopupContainerCustom1 : DXTestControl
	{
		public UIModulePopupContainerCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModulePopupContainerEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModulePopupContainerEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList39 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList39(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList39 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList39 : DXTestControl
	{
		public UIXtraTabControl1TabList39(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client38 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client38(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client38 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client38 : DXTestControl
	{
		public UIXtraTabPage1Client38(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client104 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client104(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client104 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client104 : DXTestControl
	{
		public UIPanelControl1Client104(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPopupContainerEditSaPopupEdit UIPopupContainerEditSaPopupEdit
		{
			get
			{
				if ((this.mUIPopupContainerEditSaPopupEdit == null))
				{
					this.mUIPopupContainerEditSaPopupEdit = new UIPopupContainerEditSaPopupEdit(this);
				}
				return this.mUIPopupContainerEditSaPopupEdit;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerEditSaPopupEdit mUIPopupContainerEditSaPopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerEditSaPopupEdit : DXPopupEdit
	{
		public UIPopupContainerEditSaPopupEdit(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPopupContainerFormWindow1 UIPopupContainerFormWindow
		{
			get
			{
				if ((this.mUIPopupContainerFormWindow == null))
				{
					this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow1(this);
				}
				return this.mUIPopupContainerFormWindow;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerFormWindow1 mUIPopupContainerFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerFormWindow1 : DXWindow
	{
		public UIPopupContainerFormWindow1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSamplePopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPopupContainerControClient1 UIPopupContainerControClient
		{
			get
			{
				if ((this.mUIPopupContainerControClient == null))
				{
					this.mUIPopupContainerControClient = new UIPopupContainerControClient1(this);
				}
				return this.mUIPopupContainerControClient;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerControClient1 mUIPopupContainerControClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerControClient1 : DXTestControl
	{
		public UIPopupContainerControClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerControlSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl6 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl6(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl6 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl6 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient8 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient8(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		public UISplitGroupPanelClient15 UISplitGroupPanelClient1
		{
			get
			{
				if ((this.mUISplitGroupPanelClient1 == null))
				{
					this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient15(this);
				}
				return this.mUISplitGroupPanelClient1;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient8 mUISplitGroupPanelClient;
		private UISplitGroupPanelClient15 mUISplitGroupPanelClient1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient8 : DXTestControl
	{
		public UISplitGroupPanelClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXListBox UIIlbFontList
		{
			get
			{
				if ((this.mUIIlbFontList == null))
				{
					this.mUIIlbFontList = new DXListBox(this);
					#region Search Criteria
					this.mUIIlbFontList.SearchProperties[DXTestControl.PropertyNames.Name] = "ilbFont";
					this.mUIIlbFontList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageListBoxControl";
					this.mUIIlbFontList.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIIlbFontList;
			}
		}
		#endregion
		#region Fields
		private DXListBox mUIIlbFontList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient15 : DXTestControl
	{
		public UISplitGroupPanelClient15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXCheckedListBox UIClbStyleCheckedListBox
		{
			get
			{
				if ((this.mUIClbStyleCheckedListBox == null))
				{
					this.mUIClbStyleCheckedListBox = new DXCheckedListBox(this);
					#region Search Criteria
					this.mUIClbStyleCheckedListBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbStyle";
					this.mUIClbStyleCheckedListBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxControl";
					this.mUIClbStyleCheckedListBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIClbStyleCheckedListBox;
			}
		}
		public DXTextEdit UISeSizeEdit
		{
			get
			{
				if ((this.mUISeSizeEdit == null))
				{
					this.mUISeSizeEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISeSizeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "seSize";
					this.mUISeSizeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISeSizeEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUISeSizeEdit;
			}
		}
		#endregion
		#region Fields
		private DXCheckedListBox mUIClbStyleCheckedListBox;
		private DXTextEdit mUISeSizeEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleCheckedComboBoCustom1 : DXTestControl
	{
		public UIModuleCheckedComboBoCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleCheckedComboBoxEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleCheckedComboBoxEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList40 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList40(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList40 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList40 : DXTestControl
	{
		public UIXtraTabControl1TabList40(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client39 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client39(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client39 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client39 : DXTestControl
	{
		public UIXtraTabPage1Client39(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client105 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client105(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client105 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client105 : DXTestControl
	{
		public UIPanelControl1Client105(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXCheckedComboBox UICheckedComboBoxEditSCheckedComboBox
		{
			get
			{
				if ((this.mUICheckedComboBoxEditSCheckedComboBox == null))
				{
					this.mUICheckedComboBoxEditSCheckedComboBox = new DXCheckedComboBox(this);
					#region Search Criteria
					this.mUICheckedComboBoxEditSCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkedComboBoxEditSample";
					this.mUICheckedComboBoxEditSCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedComboBoxEdit";
					this.mUICheckedComboBoxEditSCheckedComboBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICheckedComboBoxEditSCheckedComboBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckedComboBox mUICheckedComboBoxEditSCheckedComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleDropDownButtonCustom : DXTestControl
	{
		public UIModuleDropDownButtonCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleDropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleDropDownButton";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList41 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList41(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList41 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList41 : DXTestControl
	{
		public UIXtraTabControl1TabList41(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client40 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client40(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client40 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client40 : DXTestControl
	{
		public UIXtraTabPage1Client40(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcSampleClient1 UIGcSampleClient
		{
			get
			{
				if ((this.mUIGcSampleClient == null))
				{
					this.mUIGcSampleClient = new UIGcSampleClient1(this);
				}
				return this.mUIGcSampleClient;
			}
		}
		public UIGroupControl5Client UIGroupControl5Client
		{
			get
			{
				if ((this.mUIGroupControl5Client == null))
				{
					this.mUIGroupControl5Client = new UIGroupControl5Client(this);
				}
				return this.mUIGroupControl5Client;
			}
		}
		public UIGroupControl2Client1 UIGroupControl2Client
		{
			get
			{
				if ((this.mUIGroupControl2Client == null))
				{
					this.mUIGroupControl2Client = new UIGroupControl2Client1(this);
				}
				return this.mUIGroupControl2Client;
			}
		}
		#endregion
		#region Fields
		private UIGcSampleClient1 mUIGcSampleClient;
		private UIGroupControl5Client mUIGroupControl5Client;
		private UIGroupControl2Client1 mUIGroupControl2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcSampleClient1 : DXTestControl
	{
		public UIGcSampleClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIDropDownButtonButton UIDropDownButtonButton
		{
			get
			{
				if ((this.mUIDropDownButtonButton == null))
				{
					this.mUIDropDownButtonButton = new UIDropDownButtonButton(this);
				}
				return this.mUIDropDownButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIDropDownButtonButton mUIDropDownButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDropDownButtonButton : DXButton
	{
		public UIDropDownButtonButton(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "sampleDropDownButton";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIDropDownButtonArrowBButton
		{
			get
			{
				if ((this.mUIDropDownButtonArrowBButton == null))
				{
					this.mUIDropDownButtonArrowBButton = new DXButton(this);
					#region Search Criteria
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sampleDropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
					this.mUIDropDownButtonArrowBButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDropDownButtonArrowBButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIDropDownButtonArrowBButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl5Client : DXTestControl
	{
		public UIGroupControl5Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMeFiringEventsEdit
		{
			get
			{
				if ((this.mUIMeFiringEventsEdit == null))
				{
					this.mUIMeFiringEventsEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMeFiringEventsEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "meFiringEvents";
					this.mUIMeFiringEventsEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMeFiringEventsEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMeFiringEventsEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMeFiringEventsEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl2Client1 : DXTestControl
	{
		public UIGroupControl2Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbDropDownControlComboBox
		{
			get
			{
				if ((this.mUIIcbDropDownControlComboBox == null))
				{
					this.mUIIcbDropDownControlComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbDropDownControlComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbDropDownControl";
					this.mUIIcbDropDownControlComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					#endregion
				}
				return this.mUIIcbDropDownControlComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbDropDownControlComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleNavigatorCustom : DXTestControl
	{
		public UIModuleNavigatorCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleNavigator";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleNavigator";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList42 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList42(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList42 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList42 : DXTestControl
	{
		public UIXtraTabControl1TabList42(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client41 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client41(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client41 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client41 : DXTestControl
	{
		public UIXtraTabPage1Client41(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGroupControl5Client1 UIGroupControl5Client
		{
			get
			{
				if ((this.mUIGroupControl5Client == null))
				{
					this.mUIGroupControl5Client = new UIGroupControl5Client1(this);
				}
				return this.mUIGroupControl5Client;
			}
		}
		public UIPanelControl1Client106 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client106(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIGroupControl5Client1 mUIGroupControl5Client;
		private UIPanelControl1Client106 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl5Client1 : DXTestControl
	{
		public UIGroupControl5Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMeFiringEventsEdit
		{
			get
			{
				if ((this.mUIMeFiringEventsEdit == null))
				{
					this.mUIMeFiringEventsEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMeFiringEventsEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "meFiringEvents";
					this.mUIMeFiringEventsEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMeFiringEventsEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMeFiringEventsEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMeFiringEventsEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client106 : DXTestControl
	{
		public UIPanelControl1Client106(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIDataNavigatorSampleClient UIDataNavigatorSampleClient
		{
			get
			{
				if ((this.mUIDataNavigatorSampleClient == null))
				{
					this.mUIDataNavigatorSampleClient = new UIDataNavigatorSampleClient(this);
				}
				return this.mUIDataNavigatorSampleClient;
			}
		}
		#endregion
		#region Fields
		private UIDataNavigatorSampleClient mUIDataNavigatorSampleClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDataNavigatorSampleClient : DXTestControl
	{
		public UIDataNavigatorSampleClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DataNavigator";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UINavigatorButtonButton
		{
			get
			{
				if ((this.mUINavigatorButtonButton == null))
				{
					this.mUINavigatorButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[3]";
					this.mUINavigatorButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton;
			}
		}
		public DXButton UINavigatorButtonButton1
		{
			get
			{
				if ((this.mUINavigatorButtonButton1 == null))
				{
					this.mUINavigatorButtonButton1 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[4]";
					this.mUINavigatorButtonButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton1.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton1;
			}
		}
		public DXButton UINavigatorButtonButton2
		{
			get
			{
				if ((this.mUINavigatorButtonButton2 == null))
				{
					this.mUINavigatorButtonButton2 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[6]";
					this.mUINavigatorButtonButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton2.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton2;
			}
		}
		public DXButton UINavigatorButtonButton3
		{
			get
			{
				if ((this.mUINavigatorButtonButton3 == null))
				{
					this.mUINavigatorButtonButton3 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton3.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[5]";
					this.mUINavigatorButtonButton3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton3.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton3;
			}
		}
		public DXButton UINavigatorButtonButton4
		{
			get
			{
				if ((this.mUINavigatorButtonButton4 == null))
				{
					this.mUINavigatorButtonButton4 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton4.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[7]";
					this.mUINavigatorButtonButton4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton4.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton4;
			}
		}
		public DXButton UINavigatorButtonButton5
		{
			get
			{
				if ((this.mUINavigatorButtonButton5 == null))
				{
					this.mUINavigatorButtonButton5 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton5.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[8]";
					this.mUINavigatorButtonButton5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton5.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton5;
			}
		}
		public DXButton UINavigatorButtonButton6
		{
			get
			{
				if ((this.mUINavigatorButtonButton6 == null))
				{
					this.mUINavigatorButtonButton6 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton6.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[9]";
					this.mUINavigatorButtonButton6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton6.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton6;
			}
		}
		public DXButton UINavigatorButtonButton7
		{
			get
			{
				if ((this.mUINavigatorButtonButton7 == null))
				{
					this.mUINavigatorButtonButton7 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton7.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[10]";
					this.mUINavigatorButtonButton7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton7.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton7;
			}
		}
		public DXButton UINavigatorButtonButton8
		{
			get
			{
				if ((this.mUINavigatorButtonButton8 == null))
				{
					this.mUINavigatorButtonButton8 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton8.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[11]";
					this.mUINavigatorButtonButton8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton8.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton8;
			}
		}
		public DXButton UINavigatorButtonButton9
		{
			get
			{
				if ((this.mUINavigatorButtonButton9 == null))
				{
					this.mUINavigatorButtonButton9 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton9.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[2]";
					this.mUINavigatorButtonButton9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton9.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton9;
			}
		}
		public DXButton UINavigatorButtonButton10
		{
			get
			{
				if ((this.mUINavigatorButtonButton10 == null))
				{
					this.mUINavigatorButtonButton10 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton10.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[1]";
					this.mUINavigatorButtonButton10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton10.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton10;
			}
		}
		public DXButton UINavigatorButtonButton11
		{
			get
			{
				if ((this.mUINavigatorButtonButton11 == null))
				{
					this.mUINavigatorButtonButton11 = new DXButton(this);
					#region Search Criteria
					this.mUINavigatorButtonButton11.SearchProperties[DXTestControl.PropertyNames.Name] = "dataNavigatorSampleButton[0]";
					this.mUINavigatorButtonButton11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigatorButton";
					this.mUINavigatorButtonButton11.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigatorButtonButton11;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigatorButtonButton;
		private DXButton mUINavigatorButtonButton1;
		private DXButton mUINavigatorButtonButton2;
		private DXButton mUINavigatorButtonButton3;
		private DXButton mUINavigatorButtonButton4;
		private DXButton mUINavigatorButtonButton5;
		private DXButton mUINavigatorButtonButton6;
		private DXButton mUINavigatorButtonButton7;
		private DXButton mUINavigatorButtonButton8;
		private DXButton mUINavigatorButtonButton9;
		private DXButton mUINavigatorButtonButton10;
		private DXButton mUINavigatorButtonButton11;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleListBoxCustom : DXTestControl
	{
		public UIModuleListBoxCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleListBox";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleListBox";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList43 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList43(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		public UIXtraTabControl2TabList UIXtraTabControl2TabList
		{
			get
			{
				if ((this.mUIXtraTabControl2TabList == null))
				{
					this.mUIXtraTabControl2TabList = new UIXtraTabControl2TabList(this);
				}
				return this.mUIXtraTabControl2TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList43 mUIXtraTabControl1TabList;
		private UIXtraTabControl2TabList mUIXtraTabControl2TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList43 : DXTestControl
	{
		public UIXtraTabControl1TabList43(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client42 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client42(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1PageHeader1";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		public UIXtraTabPage2Client6 UIXtraTabPage2Client
		{
			get
			{
				if ((this.mUIXtraTabPage2Client == null))
				{
					this.mUIXtraTabPage2Client = new UIXtraTabPage2Client6(this);
				}
				return this.mUIXtraTabPage2Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client42 mUIXtraTabPage1Client;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		private UIXtraTabPage2Client6 mUIXtraTabPage2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client42 : DXTestControl
	{
		public UIXtraTabPage1Client42(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIListBoxControlSampleList UIListBoxControlSampleList
		{
			get
			{
				if ((this.mUIListBoxControlSampleList == null))
				{
					this.mUIListBoxControlSampleList = new UIListBoxControlSampleList(this);
				}
				return this.mUIListBoxControlSampleList;
			}
		}
		#endregion
		#region Fields
		private UIListBoxControlSampleList mUIListBoxControlSampleList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListBoxControlSampleList : DXListBox
	{
		public UIListBoxControlSampleList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXListBoxItem UIAngolaListItem
		{
			get
			{
				if ((this.mUIAngolaListItem == null))
				{
					this.mUIAngolaListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIAngolaListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[5]";
					this.mUIAngolaListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIAngolaListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIAngolaListItem;
			}
		}
		public DXListBoxItem UIUnitedStatesimageusListItem
		{
			get
			{
				if ((this.mUIUnitedStatesimageusListItem == null))
				{
					this.mUIUnitedStatesimageusListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIUnitedStatesimageusListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[0]";
					this.mUIUnitedStatesimageusListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIUnitedStatesimageusListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIUnitedStatesimageusListItem;
			}
		}
		public DXListBoxItem UIAustraliaListItem
		{
			get
			{
				if ((this.mUIAustraliaListItem == null))
				{
					this.mUIAustraliaListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIAustraliaListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[12]";
					this.mUIAustraliaListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIAustraliaListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIAustraliaListItem;
			}
		}
		public DXListBoxItem UIChadListItem
		{
			get
			{
				if ((this.mUIChadListItem == null))
				{
					this.mUIChadListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIChadListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[41]";
					this.mUIChadListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIChadListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIChadListItem;
			}
		}
		public DXListBoxItem UICongoListItem
		{
			get
			{
				if ((this.mUICongoListItem == null))
				{
					this.mUICongoListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUICongoListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[46]";
					this.mUICongoListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUICongoListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICongoListItem;
			}
		}
		public DXListBoxItem UIArubanethListItem
		{
			get
			{
				if ((this.mUIArubanethListItem == null))
				{
					this.mUIArubanethListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIArubanethListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[11]";
					this.mUIArubanethListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIArubanethListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIArubanethListItem;
			}
		}
		public DXListBoxItem UIBelizeListItem
		{
			get
			{
				if ((this.mUIBelizeListItem == null))
				{
					this.mUIBelizeListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIBelizeListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[22]";
					this.mUIBelizeListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIBelizeListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIBelizeListItem;
			}
		}
		public DXListBoxItem UIArmeniaimageamListItem
		{
			get
			{
				if ((this.mUIArmeniaimageamListItem == null))
				{
					this.mUIArmeniaimageamListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIArmeniaimageamListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleItem[10]";
					this.mUIArmeniaimageamListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUIArmeniaimageamListItem.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIArmeniaimageamListItem;
			}
		}
		public DXScrollBar UIHScrollBarScrollBarControl
		{
			get
			{
				if ((this.mUIHScrollBarScrollBarControl == null))
				{
					this.mUIHScrollBarScrollBarControl = new DXScrollBar(this);
					#region Search Criteria
					this.mUIHScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "listBoxControlSampleHScrollBar";
					this.mUIHScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HScrollBar";
					this.mUIHScrollBarScrollBarControl.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIHScrollBarScrollBarControl;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUIAngolaListItem;
		private DXListBoxItem mUIUnitedStatesimageusListItem;
		private DXListBoxItem mUIAustraliaListItem;
		private DXListBoxItem mUIChadListItem;
		private DXListBoxItem mUICongoListItem;
		private DXListBoxItem mUIArubanethListItem;
		private DXListBoxItem mUIBelizeListItem;
		private DXListBoxItem mUIArmeniaimageamListItem;
		private DXScrollBar mUIHScrollBarScrollBarControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage2Client6 : DXTestControl
	{
		public UIXtraTabPage2Client6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UICheckedListBoxControCheckedListBox UICheckedListBoxControCheckedListBox
		{
			get
			{
				if ((this.mUICheckedListBoxControCheckedListBox == null))
				{
					this.mUICheckedListBoxControCheckedListBox = new UICheckedListBoxControCheckedListBox(this);
				}
				return this.mUICheckedListBoxControCheckedListBox;
			}
		}
		public UIPanelControl3Client1 UIPanelControl3Client
		{
			get
			{
				if ((this.mUIPanelControl3Client == null))
				{
					this.mUIPanelControl3Client = new UIPanelControl3Client1(this);
				}
				return this.mUIPanelControl3Client;
			}
		}
		#endregion
		#region Fields
		private UICheckedListBoxControCheckedListBox mUICheckedListBoxControCheckedListBox;
		private UIPanelControl3Client1 mUIPanelControl3Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICheckedListBoxControCheckedListBox : DXCheckedListBox
	{
		public UICheckedListBoxControCheckedListBox(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "checkedListBoxControlSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXCheckBox UIChefAntonsGumboMixCheckBox
		{
			get
			{
				if ((this.mUIChefAntonsGumboMixCheckBox == null))
				{
					this.mUIChefAntonsGumboMixCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChefAntonsGumboMixCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkedListBoxControlSampleItem[4]";
					this.mUIChefAntonsGumboMixCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
					this.mUIChefAntonsGumboMixCheckBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIChefAntonsGumboMixCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIChefAntonsGumboMixCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl3Client1 : DXTestControl
	{
		public UIPanelControl3Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIInvertCheckedItemsButton
		{
			get
			{
				if ((this.mUIInvertCheckedItemsButton == null))
				{
					this.mUIInvertCheckedItemsButton = new DXButton(this);
					#region Search Criteria
					this.mUIInvertCheckedItemsButton.SearchProperties[DXTestControl.PropertyNames.Name] = "seInvert";
					this.mUIInvertCheckedItemsButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIInvertCheckedItemsButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIInvertCheckedItemsButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIInvertCheckedItemsButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl2TabList : DXTestControl
	{
		public UIXtraTabControl2TabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtraTabPage5Client UIXtraTabPage5Client
		{
			get
			{
				if ((this.mUIXtraTabPage5Client == null))
				{
					this.mUIXtraTabPage5Client = new UIXtraTabPage5Client(this);
				}
				return this.mUIXtraTabPage5Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage5Client mUIXtraTabPage5Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage5Client : DXTestControl
	{
		public UIXtraTabPage5Client(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGroupControl1Client2 UIGroupControl1Client
		{
			get
			{
				if ((this.mUIGroupControl1Client == null))
				{
					this.mUIGroupControl1Client = new UIGroupControl1Client2(this);
				}
				return this.mUIGroupControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIGroupControl1Client2 mUIGroupControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl1Client2 : DXTestControl
	{
		public UIGroupControl1Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbSelectionModeComboBox
		{
			get
			{
				if ((this.mUIIcbSelectionModeComboBox == null))
				{
					this.mUIIcbSelectionModeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbSelectionModeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbSelectionMode";
					this.mUIIcbSelectionModeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					#endregion
				}
				return this.mUIIcbSelectionModeComboBox;
			}
		}
		public DXComboBox UIIcbHighlightedItemStComboBox
		{
			get
			{
				if ((this.mUIIcbHighlightedItemStComboBox == null))
				{
					this.mUIIcbHighlightedItemStComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbHighlightedItemStComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbHighlightedItemStyle";
					this.mUIIcbHighlightedItemStComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbHighlightedItemStComboBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIIcbHighlightedItemStComboBox;
			}
		}
		public DXTextEdit UISeColumnWidthEdit
		{
			get
			{
				if ((this.mUISeColumnWidthEdit == null))
				{
					this.mUISeColumnWidthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISeColumnWidthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "seColumnWidth";
					this.mUISeColumnWidthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISeColumnWidthEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUISeColumnWidthEdit;
			}
		}
		public DXCheckBox UICeIncrementalSearchCheckBox
		{
			get
			{
				if ((this.mUICeIncrementalSearchCheckBox == null))
				{
					this.mUICeIncrementalSearchCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICeIncrementalSearchCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceIncrementalSearch";
					this.mUICeIncrementalSearchCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICeIncrementalSearchCheckBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICeIncrementalSearchCheckBox;
			}
		}
		public DXCheckBox UICeMultiColumnCheckBox
		{
			get
			{
				if ((this.mUICeMultiColumnCheckBox == null))
				{
					this.mUICeMultiColumnCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICeMultiColumnCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceMultiColumn";
					this.mUICeMultiColumnCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICeMultiColumnCheckBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICeMultiColumnCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbSelectionModeComboBox;
		private DXComboBox mUIIcbHighlightedItemStComboBox;
		private DXTextEdit mUISeColumnWidthEdit;
		private DXCheckBox mUICeIncrementalSearchCheckBox;
		private DXCheckBox mUICeMultiColumnCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleMaskBoxCustom : DXTestControl
	{
		public UIModuleMaskBoxCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleMaskBox";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleMaskBox";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtcMainTabList UIXtcMainTabList
		{
			get
			{
				if ((this.mUIXtcMainTabList == null))
				{
					this.mUIXtcMainTabList = new UIXtcMainTabList(this);
				}
				return this.mUIXtcMainTabList;
			}
		}
		#endregion
		#region Fields
		private UIXtcMainTabList mUIXtcMainTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtcMainTabList : DXTestControl
	{
		public UIXtcMainTabList(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtcMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIXtpNumericClient UIXtpNumericClient
		{
			get
			{
				if ((this.mUIXtpNumericClient == null))
				{
					this.mUIXtpNumericClient = new UIXtpNumericClient(this);
				}
				return this.mUIXtpNumericClient;
			}
		}
		public UIXtpDateTimeClient UIXtpDateTimeClient
		{
			get
			{
				if ((this.mUIXtpDateTimeClient == null))
				{
					this.mUIXtpDateTimeClient = new UIXtpDateTimeClient(this);
				}
				return this.mUIXtpDateTimeClient;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtcMainPageHeader0";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage1
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage1 == null))
				{
					this.mUIXtraTabControlHeaderTabPage1 = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.Name] = "xtcMainPageHeader2";
					this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage1.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage1;
			}
		}
		public UIXtpRegExClient UIXtpRegExClient
		{
			get
			{
				if ((this.mUIXtpRegExClient == null))
				{
					this.mUIXtpRegExClient = new UIXtpRegExClient(this);
				}
				return this.mUIXtpRegExClient;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage2
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage2 == null))
				{
					this.mUIXtraTabControlHeaderTabPage2 = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage2.SearchProperties[DXTestControl.PropertyNames.Name] = "xtcMainPageHeader3";
					this.mUIXtraTabControlHeaderTabPage2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage2.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage2;
			}
		}
		public UIXtpSimpleClient UIXtpSimpleClient
		{
			get
			{
				if ((this.mUIXtpSimpleClient == null))
				{
					this.mUIXtpSimpleClient = new UIXtpSimpleClient(this);
				}
				return this.mUIXtpSimpleClient;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage3
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage3 == null))
				{
					this.mUIXtraTabControlHeaderTabPage3 = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage3.SearchProperties[DXTestControl.PropertyNames.Name] = "xtcMainPageHeader4";
					this.mUIXtraTabControlHeaderTabPage3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage3.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage3;
			}
		}
		public UIXtpRegularClient UIXtpRegularClient
		{
			get
			{
				if ((this.mUIXtpRegularClient == null))
				{
					this.mUIXtpRegularClient = new UIXtpRegularClient(this);
				}
				return this.mUIXtpRegularClient;
			}
		}
		#endregion
		#region Fields
		private UIXtpNumericClient mUIXtpNumericClient;
		private UIXtpDateTimeClient mUIXtpDateTimeClient;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		private DXTestControl mUIXtraTabControlHeaderTabPage1;
		private UIXtpRegExClient mUIXtpRegExClient;
		private DXTestControl mUIXtraTabControlHeaderTabPage2;
		private UIXtpSimpleClient mUIXtpSimpleClient;
		private DXTestControl mUIXtraTabControlHeaderTabPage3;
		private UIXtpRegularClient mUIXtpRegularClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtpNumericClient : DXTestControl
	{
		public UIXtpNumericClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpNumeric";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UITeNumeric1Edit
		{
			get
			{
				if ((this.mUITeNumeric1Edit == null))
				{
					this.mUITeNumeric1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeNumeric1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teNumeric1";
					this.mUITeNumeric1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeNumeric1Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeNumeric1Edit;
			}
		}
		public DXTextEdit UITeNumeric2Edit
		{
			get
			{
				if ((this.mUITeNumeric2Edit == null))
				{
					this.mUITeNumeric2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeNumeric2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teNumeric2";
					this.mUITeNumeric2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeNumeric2Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeNumeric2Edit;
			}
		}
		public DXTextEdit UITeNumeric3Edit
		{
			get
			{
				if ((this.mUITeNumeric3Edit == null))
				{
					this.mUITeNumeric3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeNumeric3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teNumeric3";
					this.mUITeNumeric3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeNumeric3Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeNumeric3Edit;
			}
		}
		public DXTextEdit UITeNumeric4Edit
		{
			get
			{
				if ((this.mUITeNumeric4Edit == null))
				{
					this.mUITeNumeric4Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeNumeric4Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teNumeric4";
					this.mUITeNumeric4Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeNumeric4Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeNumeric4Edit;
			}
		}
		public DXTextEdit UITeNumeric5Edit
		{
			get
			{
				if ((this.mUITeNumeric5Edit == null))
				{
					this.mUITeNumeric5Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeNumeric5Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teNumeric5";
					this.mUITeNumeric5Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeNumeric5Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeNumeric5Edit;
			}
		}
		public DXTextEdit UITeNumeric6Edit
		{
			get
			{
				if ((this.mUITeNumeric6Edit == null))
				{
					this.mUITeNumeric6Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeNumeric6Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teNumeric6";
					this.mUITeNumeric6Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeNumeric6Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeNumeric6Edit;
			}
		}
		public DXTextEdit UITeNumeric7Edit
		{
			get
			{
				if ((this.mUITeNumeric7Edit == null))
				{
					this.mUITeNumeric7Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeNumeric7Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teNumeric7";
					this.mUITeNumeric7Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeNumeric7Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeNumeric7Edit;
			}
		}
		public DXTextEdit UITextEdit10Edit
		{
			get
			{
				if ((this.mUITextEdit10Edit == null))
				{
					this.mUITextEdit10Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit10Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit10";
					this.mUITextEdit10Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit10Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit10Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITeNumeric1Edit;
		private DXTextEdit mUITeNumeric2Edit;
		private DXTextEdit mUITeNumeric3Edit;
		private DXTextEdit mUITeNumeric4Edit;
		private DXTextEdit mUITeNumeric5Edit;
		private DXTextEdit mUITeNumeric6Edit;
		private DXTextEdit mUITeNumeric7Edit;
		private DXTextEdit mUITextEdit10Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtpDateTimeClient : DXTestControl
	{
		public UIXtpDateTimeClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpDateTime";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UITeDateTime1Edit
		{
			get
			{
				if ((this.mUITeDateTime1Edit == null))
				{
					this.mUITeDateTime1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime1";
					this.mUITeDateTime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime1Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime1Edit;
			}
		}
		public DXTextEdit UITeDateTime2Edit
		{
			get
			{
				if ((this.mUITeDateTime2Edit == null))
				{
					this.mUITeDateTime2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime2";
					this.mUITeDateTime2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime2Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime2Edit;
			}
		}
		public DXTextEdit UITeDateTime3Edit
		{
			get
			{
				if ((this.mUITeDateTime3Edit == null))
				{
					this.mUITeDateTime3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime3";
					this.mUITeDateTime3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime3Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime3Edit;
			}
		}
		public DXTextEdit UITeDateTime4Edit
		{
			get
			{
				if ((this.mUITeDateTime4Edit == null))
				{
					this.mUITeDateTime4Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime4Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime4";
					this.mUITeDateTime4Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime4Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime4Edit;
			}
		}
		public DXTextEdit UITeDateTime5Edit
		{
			get
			{
				if ((this.mUITeDateTime5Edit == null))
				{
					this.mUITeDateTime5Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime5Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime5";
					this.mUITeDateTime5Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime5Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime5Edit;
			}
		}
		public DXTextEdit UITeDateTime6Edit
		{
			get
			{
				if ((this.mUITeDateTime6Edit == null))
				{
					this.mUITeDateTime6Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime6Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime6";
					this.mUITeDateTime6Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime6Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime6Edit;
			}
		}
		public DXTextEdit UITeDateTime7Edit
		{
			get
			{
				if ((this.mUITeDateTime7Edit == null))
				{
					this.mUITeDateTime7Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime7Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime7";
					this.mUITeDateTime7Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime7Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime7Edit;
			}
		}
		public DXTextEdit UITeDateTime8Edit
		{
			get
			{
				if ((this.mUITeDateTime8Edit == null))
				{
					this.mUITeDateTime8Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeDateTime8Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teDateTime8";
					this.mUITeDateTime8Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeDateTime8Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeDateTime8Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITeDateTime1Edit;
		private DXTextEdit mUITeDateTime2Edit;
		private DXTextEdit mUITeDateTime3Edit;
		private DXTextEdit mUITeDateTime4Edit;
		private DXTextEdit mUITeDateTime5Edit;
		private DXTextEdit mUITeDateTime6Edit;
		private DXTextEdit mUITeDateTime7Edit;
		private DXTextEdit mUITeDateTime8Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtpRegExClient : DXTestControl
	{
		public UIXtpRegExClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpRegEx";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEdit1Edit
		{
			get
			{
				if ((this.mUITextEdit1Edit == null))
				{
					this.mUITextEdit1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit1";
					this.mUITextEdit1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit1Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit1Edit;
			}
		}
		public DXTextEdit UITextEdit2Edit
		{
			get
			{
				if ((this.mUITextEdit2Edit == null))
				{
					this.mUITextEdit2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit2";
					this.mUITextEdit2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit2Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit2Edit;
			}
		}
		public DXTextEdit UITextEdit3Edit
		{
			get
			{
				if ((this.mUITextEdit3Edit == null))
				{
					this.mUITextEdit3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit3";
					this.mUITextEdit3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit3Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit3Edit;
			}
		}
		public DXTextEdit UITextEdit6Edit
		{
			get
			{
				if ((this.mUITextEdit6Edit == null))
				{
					this.mUITextEdit6Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit6Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit6";
					this.mUITextEdit6Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit6Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit6Edit;
			}
		}
		public DXTextEdit UITextEdit5Edit
		{
			get
			{
				if ((this.mUITextEdit5Edit == null))
				{
					this.mUITextEdit5Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit5Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit5";
					this.mUITextEdit5Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit5Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit5Edit;
			}
		}
		public DXTextEdit UITextEdit4Edit
		{
			get
			{
				if ((this.mUITextEdit4Edit == null))
				{
					this.mUITextEdit4Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit4Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit4";
					this.mUITextEdit4Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit4Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit4Edit;
			}
		}
		public DXTextEdit UITextEdit9Edit
		{
			get
			{
				if ((this.mUITextEdit9Edit == null))
				{
					this.mUITextEdit9Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit9Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit9";
					this.mUITextEdit9Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit9Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit9Edit;
			}
		}
		public DXTextEdit UITextEdit8Edit
		{
			get
			{
				if ((this.mUITextEdit8Edit == null))
				{
					this.mUITextEdit8Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit8Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit8";
					this.mUITextEdit8Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit8Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit8Edit;
			}
		}
		public DXTextEdit UITextEdit7Edit
		{
			get
			{
				if ((this.mUITextEdit7Edit == null))
				{
					this.mUITextEdit7Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEdit7Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEdit7";
					this.mUITextEdit7Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEdit7Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEdit7Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEdit1Edit;
		private DXTextEdit mUITextEdit2Edit;
		private DXTextEdit mUITextEdit3Edit;
		private DXTextEdit mUITextEdit6Edit;
		private DXTextEdit mUITextEdit5Edit;
		private DXTextEdit mUITextEdit4Edit;
		private DXTextEdit mUITextEdit9Edit;
		private DXTextEdit mUITextEdit8Edit;
		private DXTextEdit mUITextEdit7Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtpSimpleClient : DXTestControl
	{
		public UIXtpSimpleClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpSimple";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UITeSimple1Edit
		{
			get
			{
				if ((this.mUITeSimple1Edit == null))
				{
					this.mUITeSimple1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple1";
					this.mUITeSimple1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple1Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple1Edit;
			}
		}
		public DXTextEdit UITeSimple2Edit
		{
			get
			{
				if ((this.mUITeSimple2Edit == null))
				{
					this.mUITeSimple2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple2";
					this.mUITeSimple2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple2Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple2Edit;
			}
		}
		public DXTextEdit UITeSimple3Edit
		{
			get
			{
				if ((this.mUITeSimple3Edit == null))
				{
					this.mUITeSimple3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple3";
					this.mUITeSimple3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple3Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple3Edit;
			}
		}
		public DXTextEdit UITeSimple4Edit
		{
			get
			{
				if ((this.mUITeSimple4Edit == null))
				{
					this.mUITeSimple4Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple4Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple4";
					this.mUITeSimple4Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple4Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple4Edit;
			}
		}
		public DXTextEdit UITeSimple5Edit
		{
			get
			{
				if ((this.mUITeSimple5Edit == null))
				{
					this.mUITeSimple5Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple5Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple5";
					this.mUITeSimple5Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple5Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple5Edit;
			}
		}
		public DXTextEdit UITeSimple6Edit
		{
			get
			{
				if ((this.mUITeSimple6Edit == null))
				{
					this.mUITeSimple6Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple6Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple6";
					this.mUITeSimple6Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple6Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple6Edit;
			}
		}
		public DXTextEdit UITeSimple7Edit
		{
			get
			{
				if ((this.mUITeSimple7Edit == null))
				{
					this.mUITeSimple7Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple7Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple7";
					this.mUITeSimple7Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple7Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple7Edit;
			}
		}
		public DXTextEdit UITeSimple8Edit
		{
			get
			{
				if ((this.mUITeSimple8Edit == null))
				{
					this.mUITeSimple8Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeSimple8Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teSimple8";
					this.mUITeSimple8Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeSimple8Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeSimple8Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITeSimple1Edit;
		private DXTextEdit mUITeSimple2Edit;
		private DXTextEdit mUITeSimple3Edit;
		private DXTextEdit mUITeSimple4Edit;
		private DXTextEdit mUITeSimple5Edit;
		private DXTextEdit mUITeSimple6Edit;
		private DXTextEdit mUITeSimple7Edit;
		private DXTextEdit mUITeSimple8Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtpRegularClient : DXTestControl
	{
		public UIXtpRegularClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpRegular";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTextEdit UITeRegular1Edit
		{
			get
			{
				if ((this.mUITeRegular1Edit == null))
				{
					this.mUITeRegular1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular1";
					this.mUITeRegular1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular1Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular1Edit;
			}
		}
		public DXTextEdit UITeRegular1_1Edit
		{
			get
			{
				if ((this.mUITeRegular1_1Edit == null))
				{
					this.mUITeRegular1_1Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular1_1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular1_1";
					this.mUITeRegular1_1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular1_1Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular1_1Edit;
			}
		}
		public DXTextEdit UITeRegular2Edit
		{
			get
			{
				if ((this.mUITeRegular2Edit == null))
				{
					this.mUITeRegular2Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular2";
					this.mUITeRegular2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular2Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular2Edit;
			}
		}
		public DXTextEdit UITeRegular3Edit
		{
			get
			{
				if ((this.mUITeRegular3Edit == null))
				{
					this.mUITeRegular3Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular3";
					this.mUITeRegular3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular3Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular3Edit;
			}
		}
		public DXTextEdit UITeRegular4Edit
		{
			get
			{
				if ((this.mUITeRegular4Edit == null))
				{
					this.mUITeRegular4Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular4Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular4";
					this.mUITeRegular4Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular4Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular4Edit;
			}
		}
		public DXTextEdit UITeRegular5Edit
		{
			get
			{
				if ((this.mUITeRegular5Edit == null))
				{
					this.mUITeRegular5Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular5Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular5";
					this.mUITeRegular5Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular5Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular5Edit;
			}
		}
		public DXTextEdit UITeRegular6Edit
		{
			get
			{
				if ((this.mUITeRegular6Edit == null))
				{
					this.mUITeRegular6Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular6Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular6";
					this.mUITeRegular6Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular6Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular6Edit;
			}
		}
		public DXTextEdit UITeRegular7Edit
		{
			get
			{
				if ((this.mUITeRegular7Edit == null))
				{
					this.mUITeRegular7Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular7Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular7";
					this.mUITeRegular7Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular7Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular7Edit;
			}
		}
		public DXTextEdit UITeRegular8Edit
		{
			get
			{
				if ((this.mUITeRegular8Edit == null))
				{
					this.mUITeRegular8Edit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITeRegular8Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "teRegular8";
					this.mUITeRegular8Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITeRegular8Edit.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITeRegular8Edit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITeRegular1Edit;
		private DXTextEdit mUITeRegular1_1Edit;
		private DXTextEdit mUITeRegular2Edit;
		private DXTextEdit mUITeRegular3Edit;
		private DXTextEdit mUITeRegular4Edit;
		private DXTextEdit mUITeRegular5Edit;
		private DXTextEdit mUITeRegular6Edit;
		private DXTextEdit mUITeRegular7Edit;
		private DXTextEdit mUITeRegular8Edit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUcOverviewPageCustom : DXTestControl
	{
		public UIUcOverviewPageCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ucOverviewPage";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "About";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom13 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom13(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom13 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom13 : DXTestControl
	{
		public UILayoutControl1Custom13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControlGroup1LayoutGroup2 UILayoutControlGroup1LayoutGroup
		{
			get
			{
				if ((this.mUILayoutControlGroup1LayoutGroup == null))
				{
					this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup2(this);
				}
				return this.mUILayoutControlGroup1LayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlGroup1LayoutGroup2 mUILayoutControlGroup1LayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlGroup1LayoutGroup2 : DXBaseLayoutItem
	{
		public UILayoutControlGroup1LayoutGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem4LayoutControlItem == null))
				{
					this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
				}
				return this.mUILayoutControlItem4LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIPeAwardImage
		{
			get
			{
				if ((this.mUIPeAwardImage == null))
				{
					this.mUIPeAwardImage = new DXTestControl(this);
					#region Search Criteria
					this.mUIPeAwardImage.SearchProperties[DXTestControl.PropertyNames.Name] = "peAward";
					this.mUIPeAwardImage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PictureEdit";
					this.mUIPeAwardImage.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIPeAwardImage;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIPeAwardImage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient6 : DXTestControl
	{
		public UIGcNavigationsClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar5 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar5(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar5 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar5 : DXTestControl
	{
		public UINavBarControl1NavBar5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIEditorswithoutTextboNavBarGroup UIEditorswithoutTextboNavBarGroup
		{
			get
			{
				if ((this.mUIEditorswithoutTextboNavBarGroup == null))
				{
					this.mUIEditorswithoutTextboNavBarGroup = new UIEditorswithoutTextboNavBarGroup(this);
				}
				return this.mUIEditorswithoutTextboNavBarGroup;
			}
		}
		public UIMultiPurposeNavBarGroup UIMultiPurposeNavBarGroup
		{
			get
			{
				if ((this.mUIMultiPurposeNavBarGroup == null))
				{
					this.mUIMultiPurposeNavBarGroup = new UIMultiPurposeNavBarGroup(this);
				}
				return this.mUIMultiPurposeNavBarGroup;
			}
		}
		public UIEditorswithDropdownsNavBarGroup UIEditorswithDropdownsNavBarGroup
		{
			get
			{
				if ((this.mUIEditorswithDropdownsNavBarGroup == null))
				{
					this.mUIEditorswithDropdownsNavBarGroup = new UIEditorswithDropdownsNavBarGroup(this);
				}
				return this.mUIEditorswithDropdownsNavBarGroup;
			}
		}
		public UIEditorswithTextboxesNavBarGroup UIEditorswithTextboxesNavBarGroup
		{
			get
			{
				if ((this.mUIEditorswithTextboxesNavBarGroup == null))
				{
					this.mUIEditorswithTextboxesNavBarGroup = new UIEditorswithTextboxesNavBarGroup(this);
				}
				return this.mUIEditorswithTextboxesNavBarGroup;
			}
		}
		public UISpinUpDownEditorsNavBarGroup UISpinUpDownEditorsNavBarGroup
		{
			get
			{
				if ((this.mUISpinUpDownEditorsNavBarGroup == null))
				{
					this.mUISpinUpDownEditorsNavBarGroup = new UISpinUpDownEditorsNavBarGroup(this);
				}
				return this.mUISpinUpDownEditorsNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIEditorswithoutTextboNavBarGroup mUIEditorswithoutTextboNavBarGroup;
		private UIMultiPurposeNavBarGroup mUIMultiPurposeNavBarGroup;
		private UIEditorswithDropdownsNavBarGroup mUIEditorswithDropdownsNavBarGroup;
		private UIEditorswithTextboxesNavBarGroup mUIEditorswithTextboxesNavBarGroup;
		private UISpinUpDownEditorsNavBarGroup mUISpinUpDownEditorsNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorswithoutTextboNavBarGroup : DXTestControl
	{
		public UIEditorswithoutTextboNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Editors without Textboxes";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UICheckEditNavBarLink
		{
			get
			{
				if ((this.mUICheckEditNavBarLink == null))
				{
					this.mUICheckEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICheckEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Check Edit";
					this.mUICheckEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICheckEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICheckEditNavBarLink;
			}
		}
		public DXTestControl UIMarqueeProgressBarNavBarLink
		{
			get
			{
				if ((this.mUIMarqueeProgressBarNavBarLink == null))
				{
					this.mUIMarqueeProgressBarNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMarqueeProgressBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Marquee Progress Bar";
					this.mUIMarqueeProgressBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMarqueeProgressBarNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMarqueeProgressBarNavBarLink;
			}
		}
		public DXTestControl UIRadioGroupNavBarLink
		{
			get
			{
				if ((this.mUIRadioGroupNavBarLink == null))
				{
					this.mUIRadioGroupNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIRadioGroupNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Radio Group";
					this.mUIRadioGroupNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIRadioGroupNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIRadioGroupNavBarLink;
			}
		}
		public DXTestControl UITrackBarNavBarLink
		{
			get
			{
				if ((this.mUITrackBarNavBarLink == null))
				{
					this.mUITrackBarNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUITrackBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Track Bar";
					this.mUITrackBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUITrackBarNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITrackBarNavBarLink;
			}
		}
		public DXTestControl UIRangeTrackBarNavBarLink
		{
			get
			{
				if ((this.mUIRangeTrackBarNavBarLink == null))
				{
					this.mUIRangeTrackBarNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIRangeTrackBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Range Track Bar";
					this.mUIRangeTrackBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIRangeTrackBarNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIRangeTrackBarNavBarLink;
			}
		}
		public DXTestControl UIZoomTrackBarNavBarLink
		{
			get
			{
				if ((this.mUIZoomTrackBarNavBarLink == null))
				{
					this.mUIZoomTrackBarNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIZoomTrackBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Zoom Track Bar";
					this.mUIZoomTrackBarNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIZoomTrackBarNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIZoomTrackBarNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUICheckEditNavBarLink;
		private DXTestControl mUIMarqueeProgressBarNavBarLink;
		private DXTestControl mUIRadioGroupNavBarLink;
		private DXTestControl mUITrackBarNavBarLink;
		private DXTestControl mUIRangeTrackBarNavBarLink;
		private DXTestControl mUIZoomTrackBarNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMultiPurposeNavBarGroup : DXTestControl
	{
		public UIMultiPurposeNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Multi-Purpose";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIDropDownButtonNavBarLink
		{
			get
			{
				if ((this.mUIDropDownButtonNavBarLink == null))
				{
					this.mUIDropDownButtonNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIDropDownButtonNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Drop Down Button";
					this.mUIDropDownButtonNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIDropDownButtonNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDropDownButtonNavBarLink;
			}
		}
		public DXTestControl UIDataNavigatorNavBarLink
		{
			get
			{
				if ((this.mUIDataNavigatorNavBarLink == null))
				{
					this.mUIDataNavigatorNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIDataNavigatorNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Data Navigator";
					this.mUIDataNavigatorNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIDataNavigatorNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDataNavigatorNavBarLink;
			}
		}
		public DXTestControl UIMaskBoxNavBarLink
		{
			get
			{
				if ((this.mUIMaskBoxNavBarLink == null))
				{
					this.mUIMaskBoxNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMaskBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Mask Box";
					this.mUIMaskBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMaskBoxNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMaskBoxNavBarLink;
			}
		}
		public DXTestControl UIListBoxNavBarLink
		{
			get
			{
				if ((this.mUIListBoxNavBarLink == null))
				{
					this.mUIListBoxNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIListBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "List Box";
					this.mUIListBoxNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIListBoxNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIListBoxNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIDropDownButtonNavBarLink;
		private DXTestControl mUIDataNavigatorNavBarLink;
		private DXTestControl mUIMaskBoxNavBarLink;
		private DXTestControl mUIListBoxNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorswithDropdownsNavBarGroup : DXTestControl
	{
		public UIEditorswithDropdownsNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Editors with Dropdowns";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIFontEditNavBarLink
		{
			get
			{
				if ((this.mUIFontEditNavBarLink == null))
				{
					this.mUIFontEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIFontEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Font Edit";
					this.mUIFontEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIFontEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIFontEditNavBarLink;
			}
		}
		public DXTestControl UICalcEditNavBarLink
		{
			get
			{
				if ((this.mUICalcEditNavBarLink == null))
				{
					this.mUICalcEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICalcEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Calc Edit";
					this.mUICalcEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICalcEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICalcEditNavBarLink;
			}
		}
		public DXTestControl UIColorEditNavBarLink
		{
			get
			{
				if ((this.mUIColorEditNavBarLink == null))
				{
					this.mUIColorEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIColorEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Color Edit";
					this.mUIColorEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIColorEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIColorEditNavBarLink;
			}
		}
		public DXTestControl UIComboboxEditNavBarLink
		{
			get
			{
				if ((this.mUIComboboxEditNavBarLink == null))
				{
					this.mUIComboboxEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIComboboxEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Combobox Edit";
					this.mUIComboboxEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIComboboxEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIComboboxEditNavBarLink;
			}
		}
		public DXTestControl UIDateEditNavBarLink
		{
			get
			{
				if ((this.mUIDateEditNavBarLink == null))
				{
					this.mUIDateEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIDateEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Date Edit";
					this.mUIDateEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIDateEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDateEditNavBarLink;
			}
		}
		public DXTestControl UIImageComboboxEditNavBarLink
		{
			get
			{
				if ((this.mUIImageComboboxEditNavBarLink == null))
				{
					this.mUIImageComboboxEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIImageComboboxEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Image Combobox Edit";
					this.mUIImageComboboxEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIImageComboboxEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIImageComboboxEditNavBarLink;
			}
		}
		public DXTestControl UILookUpEditNavBarLink
		{
			get
			{
				if ((this.mUILookUpEditNavBarLink == null))
				{
					this.mUILookUpEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUILookUpEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "LookUp Edit";
					this.mUILookUpEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUILookUpEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUILookUpEditNavBarLink;
			}
		}
		public DXTestControl UIMemoExEditNavBarLink
		{
			get
			{
				if ((this.mUIMemoExEditNavBarLink == null))
				{
					this.mUIMemoExEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMemoExEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "MemoEx Edit";
					this.mUIMemoExEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMemoExEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMemoExEditNavBarLink;
			}
		}
		public DXTestControl UIMRUEditNavBarLink
		{
			get
			{
				if ((this.mUIMRUEditNavBarLink == null))
				{
					this.mUIMRUEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMRUEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "MRU Edit";
					this.mUIMRUEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMRUEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMRUEditNavBarLink;
			}
		}
		public DXTestControl UIPopupContainerEditNavBarLink
		{
			get
			{
				if ((this.mUIPopupContainerEditNavBarLink == null))
				{
					this.mUIPopupContainerEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIPopupContainerEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Popup Container Edit";
					this.mUIPopupContainerEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIPopupContainerEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIPopupContainerEditNavBarLink;
			}
		}
		public DXTestControl UICheckedComboboxEditNavBarLink
		{
			get
			{
				if ((this.mUICheckedComboboxEditNavBarLink == null))
				{
					this.mUICheckedComboboxEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICheckedComboboxEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Checked Combobox Edit";
					this.mUICheckedComboboxEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICheckedComboboxEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUICheckedComboboxEditNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIFontEditNavBarLink;
		private DXTestControl mUICalcEditNavBarLink;
		private DXTestControl mUIColorEditNavBarLink;
		private DXTestControl mUIComboboxEditNavBarLink;
		private DXTestControl mUIDateEditNavBarLink;
		private DXTestControl mUIImageComboboxEditNavBarLink;
		private DXTestControl mUILookUpEditNavBarLink;
		private DXTestControl mUIMemoExEditNavBarLink;
		private DXTestControl mUIMRUEditNavBarLink;
		private DXTestControl mUIPopupContainerEditNavBarLink;
		private DXTestControl mUICheckedComboboxEditNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIEditorswithTextboxesNavBarGroup : DXTestControl
	{
		public UIEditorswithTextboxesNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Editors with Textboxes";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIButtonEditNavBarLink
		{
			get
			{
				if ((this.mUIButtonEditNavBarLink == null))
				{
					this.mUIButtonEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIButtonEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Button Edit";
					this.mUIButtonEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIButtonEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIButtonEditNavBarLink;
			}
		}
		public DXTestControl UITextEditNavBarLink
		{
			get
			{
				if ((this.mUITextEditNavBarLink == null))
				{
					this.mUITextEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUITextEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Text Edit";
					this.mUITextEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUITextEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITextEditNavBarLink;
			}
		}
		public DXTestControl UIMemoEditNavBarLink
		{
			get
			{
				if ((this.mUIMemoEditNavBarLink == null))
				{
					this.mUIMemoEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMemoEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Memo Edit";
					this.mUIMemoEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMemoEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUIMemoEditNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIButtonEditNavBarLink;
		private DXTestControl mUITextEditNavBarLink;
		private DXTestControl mUIMemoEditNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISpinUpDownEditorsNavBarGroup : DXTestControl
	{
		public UISpinUpDownEditorsNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin (Up/Down) Editors";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UISpinEditNavBarLink
		{
			get
			{
				if ((this.mUISpinEditNavBarLink == null))
				{
					this.mUISpinEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUISpinEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Spin Edit";
					this.mUISpinEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUISpinEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUISpinEditNavBarLink;
			}
		}
		public DXTestControl UITimeEditNavBarLink
		{
			get
			{
				if ((this.mUITimeEditNavBarLink == null))
				{
					this.mUITimeEditNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUITimeEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Time Edit";
					this.mUITimeEditNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUITimeEditNavBarLink.WindowTitles.Add("The XtraEditors Suite Demo (C# code)");
					#endregion
				}
				return this.mUITimeEditNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUISpinEditNavBarLink;
		private DXTestControl mUITimeEditNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow15 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow15()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client107 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client107(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIRibbonControl1Ribbon10 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon10(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client107 mUIPanelControl1Client;
		private UIRibbonControl1Ribbon10 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client107 : DXTestControl
	{
		public UIPanelControl1Client107(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient59 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient59(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient59 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient59 : DXTestControl
	{
		public UIGcContainerClient59(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom14 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom14(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom14 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom14 : DXTestControl
	{
		public UIPreviewControlCustom14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlLabels";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client108 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client108(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIAutoHideContainerClient4 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient4(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient4 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient4(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		public UIDockPanelDockPanel2 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel2(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		public UIDocumentViewerPrintViewControl17 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl17(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client108 mUIPanelControl1Client;
		private UIAutoHideContainerClient4 mUIAutoHideContainerClient;
		private UIAutoHideControlClient4 mUIAutoHideControlClient;
		private UIDockPanelDockPanel2 mUIDockPanelDockPanel;
		private UIDocumentViewerPrintViewControl17 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client108 : DXTestControl
	{
		public UIPanelControl1Client108(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIAutoHideContainerClient3 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient3(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient3 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient3(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		public UIDocumentViewerPrintViewControl16 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl16(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIAutoHideContainerClient3 mUIAutoHideContainerClient;
		private UIAutoHideControlClient3 mUIAutoHideControlClient;
		private UIDocumentViewerPrintViewControl16 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient3 : DXTestControl
	{
		public UIAutoHideContainerClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UINavigationButton
		{
			get
			{
				if ((this.mUINavigationButton == null))
				{
					this.mUINavigationButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Navigation";
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
					this.mUINavigationButton.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUINavigationButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigationButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient3 : DXTestControl
	{
		public UIAutoHideControlClient3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel mUIDockPanelDockPanel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel : DXDockPanel
	{
		public UIDockPanelDockPanel(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl16 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[10]";
					this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices010PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices010PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11]";
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices013PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices013PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices013PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices013PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[13]";
					this.mUIPage0BrickIndices013PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices013PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices013PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices014PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices014PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices014PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices014PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[14]";
					this.mUIPage0BrickIndices014PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices014PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices014PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices21PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices21PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices21PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices21PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [2].[1]";
					this.mUIPage0BrickIndices21PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices21PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices21PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices010PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices013PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices014PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices21PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient4 : DXTestControl
	{
		public UIAutoHideContainerClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXButton UINavigationButton
		{
			get
			{
				if ((this.mUINavigationButton == null))
				{
					this.mUINavigationButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Navigation";
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
					this.mUINavigationButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUINavigationButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigationButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient4 : DXTestControl
	{
		public UIAutoHideControlClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel1 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel1(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel1 mUIDockPanelDockPanel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel1 : DXDockPanel
	{
		public UIDockPanelDockPanel1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel2 : DXDockPanel
	{
		public UIDockPanelDockPanel2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom4 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom4(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom4 mUIControlContainerCustom;
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom4 : DXTestControl
	{
		public UIControlContainerCustom4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient4 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient4(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient4 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient4 : DXTestControl
	{
		public UIPnlNavigationClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanel2Client1 UIPanel2Client
		{
			get
			{
				if ((this.mUIPanel2Client == null))
				{
					this.mUIPanel2Client = new UIPanel2Client1(this);
				}
				return this.mUIPanel2Client;
			}
		}
		public UIPanel1Client5 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client5(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel2Client1 mUIPanel2Client;
		private UIPanel1Client5 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel2Client1 : DXTestControl
	{
		public UIPanel2Client1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXButton UINextButton
		{
			get
			{
				if ((this.mUINextButton == null))
				{
					this.mUINextButton = new DXButton(this);
					#region Search Criteria
					this.mUINextButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNext";
					this.mUINextButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUINextButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUINextButton;
			}
		}
		public DXButton UIFirstButton
		{
			get
			{
				if ((this.mUIFirstButton == null))
				{
					this.mUIFirstButton = new DXButton(this);
					#region Search Criteria
					this.mUIFirstButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnFirst";
					this.mUIFirstButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIFirstButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIFirstButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINextButton;
		private DXButton mUIFirstButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client5 : DXTestControl
	{
		public UIPanel1Client5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl17 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices03PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices03PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices03PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[3]";
					this.mUIPage0BrickIndices03PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices03PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices03PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices05PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices05PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices05PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[5]";
					this.mUIPage0BrickIndices05PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices05PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices05PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices07PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices07PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices07PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices07PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[7]";
					this.mUIPage0BrickIndices07PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices07PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices07PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices03PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices05PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices07PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon10 : DXRibbon
	{
		public UIRibbonControl1Ribbon10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage8 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage8(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage8 mUIRibbonPage1RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage8 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPageGroupDocumentRibbonPageGroup UIPageGroupDocumentRibbonPageGroup
		{
			get
			{
				if ((this.mUIPageGroupDocumentRibbonPageGroup == null))
				{
					this.mUIPageGroupDocumentRibbonPageGroup = new UIPageGroupDocumentRibbonPageGroup(this);
				}
				return this.mUIPageGroupDocumentRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIPageGroupDocumentRibbonPageGroup mUIPageGroupDocumentRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageGroupDocumentRibbonPageGroup : DXRibbonPageGroup
	{
		public UIPageGroupDocumentRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pageGroupDocument";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIRefreshRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIRefreshRibbonBaseButtonItem == null))
				{
					this.mUIRefreshRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiRefresh";
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIRefreshRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIRefreshRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIRefreshRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow16 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow16()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Groups";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client109 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client109(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIRibbonControl1Ribbon13 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon13(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client109 mUIPanelControl1Client;
		private UIRibbonControl1Ribbon13 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client109 : DXTestControl
	{
		public UIPanelControl1Client109(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIGcContainerClient60 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient60(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient60 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient60 : DXTestControl
	{
		public UIGcContainerClient60(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom15 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom15(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom15 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom15 : DXTestControl
	{
		public UIPreviewControlCustom15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlGroups";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client117 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client117(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIAutoHideContainerClient6 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient6(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient6 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient6(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		public UIDockPanelDockPanel5 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel5(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		public UIDocumentViewerPrintViewControl18 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl18(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client117 mUIPanelControl1Client;
		private UIAutoHideContainerClient6 mUIAutoHideContainerClient;
		private UIAutoHideControlClient6 mUIAutoHideControlClient;
		private UIDockPanelDockPanel5 mUIDockPanelDockPanel;
		private UIDocumentViewerPrintViewControl18 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client117 : DXTestControl
	{
		public UIPanelControl1Client117(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIAutoHideContainerClient5 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient5(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient5 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient5(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		#endregion
		#region Fields
		private UIAutoHideContainerClient5 mUIAutoHideContainerClient;
		private UIAutoHideControlClient5 mUIAutoHideControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient5 : DXTestControl
	{
		public UIAutoHideContainerClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXButton UINavigationButton
		{
			get
			{
				if ((this.mUINavigationButton == null))
				{
					this.mUINavigationButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Navigation";
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
					this.mUINavigationButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUINavigationButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigationButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient5 : DXTestControl
	{
		public UIAutoHideControlClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel3 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel3(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel3 mUIDockPanelDockPanel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel3 : DXDockPanel
	{
		public UIDockPanelDockPanel3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient6 : DXTestControl
	{
		public UIAutoHideContainerClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXButton UINavigationButton
		{
			get
			{
				if ((this.mUINavigationButton == null))
				{
					this.mUINavigationButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Navigation";
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
					this.mUINavigationButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUINavigationButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigationButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient6 : DXTestControl
	{
		public UIAutoHideControlClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel4 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel4(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel4 mUIDockPanelDockPanel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel4 : DXDockPanel
	{
		public UIDockPanelDockPanel4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel5 : DXDockPanel
	{
		public UIDockPanelDockPanel5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom5 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom5(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom5 mUIControlContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom5 : DXTestControl
	{
		public UIControlContainerCustom5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient5 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient5(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient5 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient5 : DXTestControl
	{
		public UIPnlNavigationClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPanel1Client6 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client6(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Client6 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client6 : DXTestControl
	{
		public UIPanel1Client6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl18 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[2]";
					this.mUIPage2BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick1
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick1 == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick1 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[3]";
					this.mUIPage2BrickIndices010PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick1.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick1;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick2
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick2 == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick2 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[4]";
					this.mUIPage2BrickIndices010PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick2.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick2;
			}
		}
		public DXPrintingBrick UIPage2BrickIndices010PrintControlBrick3
		{
			get
			{
				if ((this.mUIPage2BrickIndices010PrintControlBrick3 == null))
				{
					this.mUIPage2BrickIndices010PrintControlBrick3 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage2BrickIndices010PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [2].BrickIndices [0].[10].[0]";
					this.mUIPage2BrickIndices010PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage2BrickIndices010PrintControlBrick3.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage2BrickIndices010PrintControlBrick3;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11].[0]";
					this.mUIPage0BrickIndices011PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick1
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick1 == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick1 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11].[2]";
					this.mUIPage0BrickIndices011PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick1.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick1;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick2
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick2 == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick2 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11].[3]";
					this.mUIPage0BrickIndices011PrintControlBrick2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick2.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick2;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices011PrintControlBrick3
		{
			get
			{
				if ((this.mUIPage0BrickIndices011PrintControlBrick3 == null))
				{
					this.mUIPage0BrickIndices011PrintControlBrick3 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices011PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[11].[4]";
					this.mUIPage0BrickIndices011PrintControlBrick3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices011PrintControlBrick3.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIPage0BrickIndices011PrintControlBrick3;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick1;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick2;
		private DXPrintingBrick mUIPage2BrickIndices010PrintControlBrick3;
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick1;
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick2;
		private DXPrintingBrick mUIPage0BrickIndices011PrintControlBrick3;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon13 : DXRibbon
	{
		public UIRibbonControl1Ribbon13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage9 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage9(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage9 mUIRibbonPage1RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage9 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public UIPageGroupDocumentRibbonPageGroup1 UIPageGroupDocumentRibbonPageGroup
		{
			get
			{
				if ((this.mUIPageGroupDocumentRibbonPageGroup == null))
				{
					this.mUIPageGroupDocumentRibbonPageGroup = new UIPageGroupDocumentRibbonPageGroup1(this);
				}
				return this.mUIPageGroupDocumentRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIPageGroupDocumentRibbonPageGroup1 mUIPageGroupDocumentRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageGroupDocumentRibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIPageGroupDocumentRibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pageGroupDocument";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIRefreshRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIRefreshRibbonBaseButtonItem == null))
				{
					this.mUIRefreshRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiRefresh";
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIRefreshRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Groups");
					#endregion
				}
				return this.mUIRefreshRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIRefreshRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow17 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow17()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Table";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client118 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client118(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIRibbonControl1Ribbon14 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon14(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client118 mUIPanelControl1Client;
		private UIRibbonControl1Ribbon14 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client118 : DXTestControl
	{
		public UIPanelControl1Client118(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIGcContainerClient61 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient61(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient61 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient61 : DXTestControl
	{
		public UIGcContainerClient61(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom16 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom16(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom16 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom16 : DXTestControl
	{
		public UIPreviewControlCustom16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlTable";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client119 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client119(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIAutoHideContainerClient8 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient8(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient8 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient8(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		public UIDockPanelDockPanel8 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel8(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		public UIDocumentViewerPrintViewControl19 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl19(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client119 mUIPanelControl1Client;
		private UIAutoHideContainerClient8 mUIAutoHideContainerClient;
		private UIAutoHideControlClient8 mUIAutoHideControlClient;
		private UIDockPanelDockPanel8 mUIDockPanelDockPanel;
		private UIDocumentViewerPrintViewControl19 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client119 : DXTestControl
	{
		public UIPanelControl1Client119(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIAutoHideContainerClient7 UIAutoHideContainerClient
		{
			get
			{
				if ((this.mUIAutoHideContainerClient == null))
				{
					this.mUIAutoHideContainerClient = new UIAutoHideContainerClient7(this);
				}
				return this.mUIAutoHideContainerClient;
			}
		}
		public UIAutoHideControlClient7 UIAutoHideControlClient
		{
			get
			{
				if ((this.mUIAutoHideControlClient == null))
				{
					this.mUIAutoHideControlClient = new UIAutoHideControlClient7(this);
				}
				return this.mUIAutoHideControlClient;
			}
		}
		#endregion
		#region Fields
		private UIAutoHideContainerClient7 mUIAutoHideContainerClient;
		private UIAutoHideControlClient7 mUIAutoHideControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient7 : DXTestControl
	{
		public UIAutoHideContainerClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXButton UINavigationButton
		{
			get
			{
				if ((this.mUINavigationButton == null))
				{
					this.mUINavigationButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Navigation";
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
					this.mUINavigationButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUINavigationButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigationButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient7 : DXTestControl
	{
		public UIAutoHideControlClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel6 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel6(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel6 mUIDockPanelDockPanel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel6 : DXDockPanel
	{
		public UIDockPanelDockPanel6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideContainerClient8 : DXTestControl
	{
		public UIAutoHideContainerClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXButton UINavigationButton
		{
			get
			{
				if ((this.mUINavigationButton == null))
				{
					this.mUINavigationButton = new DXButton(this);
					#region Search Criteria
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Navigation";
					this.mUINavigationButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
					this.mUINavigationButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUINavigationButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUINavigationButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAutoHideControlClient8 : DXTestControl
	{
		public UIAutoHideControlClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel7 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel7(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel7 mUIDockPanelDockPanel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel7 : DXDockPanel
	{
		public UIDockPanelDockPanel7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		public UIControlContainerCustom6 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom6(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIPinButtonButton;
		private UIControlContainerCustom6 mUIControlContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom6 : DXTestControl
	{
		public UIControlContainerCustom6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomAutoHideControlDockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient6 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient6(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient6 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient6 : DXTestControl
	{
		public UIPnlNavigationClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPanel1Client7 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client7(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Client7 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client7 : DXTestControl
	{
		public UIPanel1Client7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtCommonNameEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel8 : DXDockPanel
	{
		public UIDockPanelDockPanel8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom7 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom7(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		public DXButton UIPinButtonButton
		{
			get
			{
				if ((this.mUIPinButtonButton == null))
				{
					this.mUIPinButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
					this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
					this.mUIPinButtonButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPinButtonButton;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom7 mUIControlContainerCustom;
		private DXButton mUIPinButtonButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom7 : DXTestControl
	{
		public UIControlContainerCustom7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient7 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient7(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient7 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient7 : DXTestControl
	{
		public UIPnlNavigationClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPanel1Client8 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client8(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel1Client8 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client8 : DXTestControl
	{
		public UIPanel1Client8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl19 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices025PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices025PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices025PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[5]";
					this.mUIPage0BrickIndices025PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices025PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices025PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices028PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices028PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices028PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices028PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[8]";
					this.mUIPage0BrickIndices028PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices028PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices028PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices021PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices021PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices021PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices021PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[11]";
					this.mUIPage0BrickIndices021PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices021PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices021PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices021PrintControlBrick1
		{
			get
			{
				if ((this.mUIPage0BrickIndices021PrintControlBrick1 == null))
				{
					this.mUIPage0BrickIndices021PrintControlBrick1 = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices021PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[14]";
					this.mUIPage0BrickIndices021PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices021PrintControlBrick1.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIPage0BrickIndices021PrintControlBrick1;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices025PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices028PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices021PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices021PrintControlBrick1;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon14 : DXRibbon
	{
		public UIRibbonControl1Ribbon14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage10 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage10(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage10 mUIRibbonPage1RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage10 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public UIPageGroupDocumentRibbonPageGroup2 UIPageGroupDocumentRibbonPageGroup
		{
			get
			{
				if ((this.mUIPageGroupDocumentRibbonPageGroup == null))
				{
					this.mUIPageGroupDocumentRibbonPageGroup = new UIPageGroupDocumentRibbonPageGroup2(this);
				}
				return this.mUIPageGroupDocumentRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIPageGroupDocumentRibbonPageGroup2 mUIPageGroupDocumentRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageGroupDocumentRibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIPageGroupDocumentRibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pageGroupDocument";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIRefreshRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIRefreshRibbonBaseButtonItem == null))
				{
					this.mUIRefreshRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiRefresh";
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIRefreshRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Table");
					#endregion
				}
				return this.mUIRefreshRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIRefreshRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow32 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow32()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Cell Selection";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client120 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client120(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client120 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client120 : DXTestControl
	{
		public UIPanelControl1Client120(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIGcContainerClient62 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient62(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient62 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient62 : DXTestControl
	{
		public UIGcContainerClient62(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UICellSelectionCustom3 UICellSelectionCustom
		{
			get
			{
				if ((this.mUICellSelectionCustom == null))
				{
					this.mUICellSelectionCustom = new UICellSelectionCustom3(this);
				}
				return this.mUICellSelectionCustom;
			}
		}
		#endregion
		#region Fields
		private UICellSelectionCustom3 mUICellSelectionCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICellSelectionCustom3 : DXTestControl
	{
		public UICellSelectionCustom3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CellSelection";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CellSelection";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIGridControl1Table31 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table31(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		public UIXtraTabControl1TabList44 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList44(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table31 mUIGridControl1Table;
		private UIXtraTabControl1TabList44 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table31 : DXGrid
	{
		public UIGridControl1Table31(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public DXCell UIAnaTrujilloEmparedadCell
		{
			get
			{
				if ((this.mUIAnaTrujilloEmparedadCell == null))
				{
					this.mUIAnaTrujilloEmparedadCell = new DXCell(this);
					#region Search Criteria
					this.mUIAnaTrujilloEmparedadCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]1[Column]colCompanyName";
					this.mUIAnaTrujilloEmparedadCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIAnaTrujilloEmparedadCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIAnaTrujilloEmparedadCell;
			}
		}
		public DXCell UIItem13008Cell
		{
			get
			{
				if ((this.mUIItem13008Cell == null))
				{
					this.mUIItem13008Cell = new DXCell(this);
					#region Search Criteria
					this.mUIItem13008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]8[Column]colPostalCode";
					this.mUIItem13008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem13008Cell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIItem13008Cell;
			}
		}
		public DXCell UIItem24placeKléberCell
		{
			get
			{
				if ((this.mUIItem24placeKléberCell == null))
				{
					this.mUIItem24placeKléberCell = new DXCell(this);
					#region Search Criteria
					this.mUIItem24placeKléberCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]6[Column]colAddress";
					this.mUIItem24placeKléberCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUIItem24placeKléberCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIItem24placeKléberCell;
			}
		}
		public DXCell UICentrocomercialMocteCell
		{
			get
			{
				if ((this.mUICentrocomercialMocteCell == null))
				{
					this.mUICentrocomercialMocteCell = new DXCell(this);
					#region Search Criteria
					this.mUICentrocomercialMocteCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlCell[View]gridView1[Row]12[Column]colCompanyName";
					this.mUICentrocomercialMocteCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
					this.mUICentrocomercialMocteCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUICentrocomercialMocteCell;
			}
		}
		#endregion
		#region Fields
		private DXCell mUIAnaTrujilloEmparedadCell;
		private DXCell mUIItem13008Cell;
		private DXCell mUIItem24placeKléberCell;
		private DXCell mUICentrocomercialMocteCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList44 : DXTestControl
	{
		public UIXtraTabControl1TabList44(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client43 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client43(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client43 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client43 : DXTestControl
	{
		public UIXtraTabPage1Client43(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
			#endregion
		}
		#region Properties
		public DXButton UIShowSelectedValuesButton
		{
			get
			{
				if ((this.mUIShowSelectedValuesButton == null))
				{
					this.mUIShowSelectedValuesButton = new DXButton(this);
					#region Search Criteria
					this.mUIShowSelectedValuesButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbRecords";
					this.mUIShowSelectedValuesButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIShowSelectedValuesButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIShowSelectedValuesButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Cell Selection");
					#endregion
				}
				return this.mUIShowSelectedValuesButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIShowSelectedValuesButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow33 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow33()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client121 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client121(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIRibbonControl1Ribbon15 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon15(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client121 mUIPanelControl1Client;
		private UIRibbonControl1Ribbon15 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client121 : DXTestControl
	{
		public UIPanelControl1Client121(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIGcContainerClient63 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient63(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient63 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient63 : DXTestControl
	{
		public UIGcContainerClient63(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIMasterDetailGroupingCustom1 UIMasterDetailGroupingCustom
		{
			get
			{
				if ((this.mUIMasterDetailGroupingCustom == null))
				{
					this.mUIMasterDetailGroupingCustom = new UIMasterDetailGroupingCustom1(this);
				}
				return this.mUIMasterDetailGroupingCustom;
			}
		}
		#endregion
		#region Fields
		private UIMasterDetailGroupingCustom1 mUIMasterDetailGroupingCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMasterDetailGroupingCustom1 : DXTestControl
	{
		public UIMasterDetailGroupingCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "MasterDetailGrouping";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MasterDetailGrouping";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIGridControl2Table5 UIGridControl2Table
		{
			get
			{
				if ((this.mUIGridControl2Table == null))
				{
					this.mUIGridControl2Table = new UIGridControl2Table5(this);
				}
				return this.mUIGridControl2Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl2Table5 mUIGridControl2Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl2Table5 : DXGrid
	{
		public UIGridControl2Table5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIColCompanyNameColumnHeader
		{
			get
			{
				if ((this.mUIColCompanyNameColumnHeader == null))
				{
					this.mUIColCompanyNameColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView1[Column]colCompanyName";
					this.mUIColCompanyNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColCompanyNameColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColCompanyNameColumnHeader;
			}
		}
		public DXColumnHeader UIColRegionColumnHeader
		{
			get
			{
				if ((this.mUIColRegionColumnHeader == null))
				{
					this.mUIColRegionColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanelColumn[View]gridView1[Column]colRegion";
					this.mUIColRegionColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColRegionColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColRegionColumnHeader;
			}
		}
		public DXColumnHeader UIColCompanyNameColumnHeader1
		{
			get
			{
				if ((this.mUIColCompanyNameColumnHeader1 == null))
				{
					this.mUIColCompanyNameColumnHeader1 = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColCompanyNameColumnHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanelColumn[View]gridView1[Column]colCompanyName";
					this.mUIColCompanyNameColumnHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColCompanyNameColumnHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColCompanyNameColumnHeader1;
			}
		}
		public DXColumnHeader UIColContactTitleColumnHeader
		{
			get
			{
				if ((this.mUIColContactTitleColumnHeader == null))
				{
					this.mUIColContactTitleColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColContactTitleColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupPanelColumn[View]gridView1[Column]colContactTitle";
					this.mUIColContactTitleColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupPanelColumn";
					this.mUIColContactTitleColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColContactTitleColumnHeader;
			}
		}
		public DXColumnHeader UIColRegionColumnHeader1
		{
			get
			{
				if ((this.mUIColRegionColumnHeader1 == null))
				{
					this.mUIColRegionColumnHeader1 = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColRegionColumnHeader1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlColumnHeader[View]gridView1[Column]colRegion";
					this.mUIColRegionColumnHeader1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColRegionColumnHeader1.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIColRegionColumnHeader1;
			}
		}
		public DXButton UIRomeroytomilloButton
		{
			get
			{
				if ((this.mUIRomeroytomilloButton == null))
				{
					this.mUIRomeroytomilloButton = new DXButton(this);
					#region Search Criteria
					this.mUIRomeroytomilloButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCellButton[View]gridView1[Row]2[Column]colCompanyName";
					this.mUIRomeroytomilloButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCellButton";
					this.mUIRomeroytomilloButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIRomeroytomilloButton;
			}
		}
		public DXGroupRow UIGridControlGroupRowGroupRow
		{
			get
			{
				if ((this.mUIGridControlGroupRowGroupRow == null))
				{
					this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
					#region Search Criteria
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlGroupRow[View]gridView2-2[Row]-1[Column]colShipVia";
					this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
					this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIGridControlGroupRowGroupRow;
			}
		}
		public DXButton UIQUICKStopButton
		{
			get
			{
				if ((this.mUIQUICKStopButton == null))
				{
					this.mUIQUICKStopButton = new DXButton(this);
					#region Search Criteria
					this.mUIQUICKStopButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl2GridControlCellButton[View]gridView1[Row]1[Column]colCompanyName";
					this.mUIQUICKStopButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCellButton";
					this.mUIQUICKStopButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIQUICKStopButton;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIColCompanyNameColumnHeader;
		private DXColumnHeader mUIColRegionColumnHeader;
		private DXColumnHeader mUIColCompanyNameColumnHeader1;
		private DXColumnHeader mUIColContactTitleColumnHeader;
		private DXColumnHeader mUIColRegionColumnHeader1;
		private DXButton mUIRomeroytomilloButton;
		private DXGroupRow mUIGridControlGroupRowGroupRow;
		private DXButton mUIQUICKStopButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon15 : DXRibbon
	{
		public UIRibbonControl1Ribbon15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIRpMainRibbonPage1 UIRpMainRibbonPage
		{
			get
			{
				if ((this.mUIRpMainRibbonPage == null))
				{
					this.mUIRpMainRibbonPage = new UIRpMainRibbonPage1(this);
				}
				return this.mUIRpMainRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRpMainRibbonPage1 mUIRpMainRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpMainRibbonPage1 : DXRibbonPage
	{
		public UIRpMainRibbonPage1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UIRpgAppearanceRibbonPageGroup1 UIRpgAppearanceRibbonPageGroup
		{
			get
			{
				if ((this.mUIRpgAppearanceRibbonPageGroup == null))
				{
					this.mUIRpgAppearanceRibbonPageGroup = new UIRpgAppearanceRibbonPageGroup1(this);
				}
				return this.mUIRpgAppearanceRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRpgAppearanceRibbonPageGroup1 mUIRpgAppearanceRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpgAppearanceRibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIRpgAppearanceRibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgAppearance";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public UISkinsRibbonGallery2 UISkinsRibbonGallery
		{
			get
			{
				if ((this.mUISkinsRibbonGallery == null))
				{
					this.mUISkinsRibbonGallery = new UISkinsRibbonGallery2(this);
				}
				return this.mUISkinsRibbonGallery;
			}
		}
		#endregion
		#region Fields
		private UISkinsRibbonGallery2 mUISkinsRibbonGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISkinsRibbonGallery2 : DXTestControl
	{
		public UISkinsRibbonGallery2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Skins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonGalleryDropDowButton
		{
			get
			{
				if ((this.mUIRibbonGalleryDropDowButton == null))
				{
					this.mUIRibbonGalleryDropDowButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Master-Detail Grouping");
					#endregion
				}
				return this.mUIRibbonGalleryDropDowButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonGalleryDropDowButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow81 : DXWindow
	{
		public UIItemWindow81()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Replace";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Replace");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtFindEdit
		{
			get
			{
				if ((this.mUITxtFindEdit == null))
				{
					this.mUITxtFindEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFind";
					this.mUITxtFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtFindEdit.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUITxtFindEdit;
			}
		}
		public DXTextEdit UITxtReplaceEdit
		{
			get
			{
				if ((this.mUITxtReplaceEdit == null))
				{
					this.mUITxtReplaceEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtReplaceEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtReplace";
					this.mUITxtReplaceEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtReplaceEdit.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUITxtReplaceEdit;
			}
		}
		public DXCheckBox UICheckEditCheckBox
		{
			get
			{
				if ((this.mUICheckEditCheckBox == null))
				{
					this.mUICheckEditCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chWholeword";
					this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEditCheckBox.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUICheckEditCheckBox;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnReplaceAll";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXButton UICloseButton
		{
			get
			{
				if ((this.mUICloseButton == null))
				{
					this.mUICloseButton = new DXButton(this);
					#region Search Criteria
					this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
					this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
					this.mUICloseButton.WindowTitles.Add("Replace");
					#endregion
				}
				return this.mUICloseButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtFindEdit;
		private DXTextEdit mUITxtReplaceEdit;
		private DXCheckBox mUICheckEditCheckBox;
		private DXButton mUISimpleButtonButton;
		private DXButton mUICloseButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow34 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow34()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Split Presentation View";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client122 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client122(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client122 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client122 : DXTestControl
	{
		public UIPanelControl1Client122(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UIGcContainerClient64 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient64(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient64 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient64 : DXTestControl
	{
		public UIGcContainerClient64(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UISplitPresentationCustom1 UISplitPresentationCustom
		{
			get
			{
				if ((this.mUISplitPresentationCustom == null))
				{
					this.mUISplitPresentationCustom = new UISplitPresentationCustom1(this);
				}
				return this.mUISplitPresentationCustom;
			}
		}
		#endregion
		#region Fields
		private UISplitPresentationCustom1 mUISplitPresentationCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitPresentationCustom1 : DXTestControl
	{
		public UISplitPresentationCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "SplitPresentation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitPresentation";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom14 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom14(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom14 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom14 : DXTestControl
	{
		public UILayoutControl1Custom14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UIRootLayoutGroup1 UIRootLayoutGroup
		{
			get
			{
				if ((this.mUIRootLayoutGroup == null))
				{
					this.mUIRootLayoutGroup = new UIRootLayoutGroup1(this);
				}
				return this.mUIRootLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UIRootLayoutGroup1 mUIRootLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRootLayoutGroup1 : DXBaseLayoutItem
	{
		public UIRootLayoutGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public UITabbedControlGroup1TabbedGroup UITabbedControlGroup1TabbedGroup
		{
			get
			{
				if ((this.mUITabbedControlGroup1TabbedGroup == null))
				{
					this.mUITabbedControlGroup1TabbedGroup = new UITabbedControlGroup1TabbedGroup(this);
				}
				return this.mUITabbedControlGroup1TabbedGroup;
			}
		}
		#endregion
		#region Fields
		private UITabbedControlGroup1TabbedGroup mUITabbedControlGroup1TabbedGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabbedControlGroup1TabbedGroup : DXBaseLayoutItem
	{
		public UITabbedControlGroup1TabbedGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabbedControlGroup1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabbedGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
			#endregion
		}
		#region Properties
		public DXBaseLayoutItem UILayoutControlGroup3TabbedGroupTabHeader
		{
			get
			{
				if ((this.mUILayoutControlGroup3TabbedGroupTabHeader == null))
				{
					this.mUILayoutControlGroup3TabbedGroupTabHeader = new DXBaseLayoutItem(this);
					#region Search Criteria
					this.mUILayoutControlGroup3TabbedGroupTabHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup3";
					this.mUILayoutControlGroup3TabbedGroupTabHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabbedGroupTabHeader";
					this.mUILayoutControlGroup3TabbedGroupTabHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUILayoutControlGroup3TabbedGroupTabHeader;
			}
		}
		public DXBaseLayoutItem UILayoutControlGroup2TabbedGroupTabHeader
		{
			get
			{
				if ((this.mUILayoutControlGroup2TabbedGroupTabHeader == null))
				{
					this.mUILayoutControlGroup2TabbedGroupTabHeader = new DXBaseLayoutItem(this);
					#region Search Criteria
					this.mUILayoutControlGroup2TabbedGroupTabHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup2";
					this.mUILayoutControlGroup2TabbedGroupTabHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabbedGroupTabHeader";
					this.mUILayoutControlGroup2TabbedGroupTabHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Split Presentation View");
					#endregion
				}
				return this.mUILayoutControlGroup2TabbedGroupTabHeader;
			}
		}
		#endregion
		#region Fields
		private DXBaseLayoutItem mUILayoutControlGroup3TabbedGroupTabHeader;
		private DXBaseLayoutItem mUILayoutControlGroup2TabbedGroupTabHeader;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow18 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow18()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIRibbonControl1Ribbon16 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon16(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIRibbonControl1Ribbon16 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon16 : DXRibbon
	{
		public UIRibbonControl1Ribbon16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIRpMainRibbonPage2 UIRpMainRibbonPage
		{
			get
			{
				if ((this.mUIRpMainRibbonPage == null))
				{
					this.mUIRpMainRibbonPage = new UIRpMainRibbonPage2(this);
				}
				return this.mUIRpMainRibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRpMainRibbonPage2 mUIRpMainRibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpMainRibbonPage2 : DXRibbonPage
	{
		public UIRpMainRibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIRpgAppearanceRibbonPageGroup2 UIRpgAppearanceRibbonPageGroup
		{
			get
			{
				if ((this.mUIRpgAppearanceRibbonPageGroup == null))
				{
					this.mUIRpgAppearanceRibbonPageGroup = new UIRpgAppearanceRibbonPageGroup2(this);
				}
				return this.mUIRpgAppearanceRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRpgAppearanceRibbonPageGroup2 mUIRpgAppearanceRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRpgAppearanceRibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIRpgAppearanceRibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgAppearance";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UISkinsRibbonGallery3 UISkinsRibbonGallery
		{
			get
			{
				if ((this.mUISkinsRibbonGallery == null))
				{
					this.mUISkinsRibbonGallery = new UISkinsRibbonGallery3(this);
				}
				return this.mUISkinsRibbonGallery;
			}
		}
		#endregion
		#region Fields
		private UISkinsRibbonGallery3 mUISkinsRibbonGallery;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISkinsRibbonGallery3 : DXTestControl
	{
		public UISkinsRibbonGallery3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Skins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXButton UIRibbonGalleryDropDowButton
		{
			get
			{
				if ((this.mUIRibbonGalleryDropDowButton == null))
				{
					this.mUIRibbonGalleryDropDowButton = new DXButton(this);
					#region Search Criteria
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
					this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIRibbonGalleryDropDowButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIRibbonGalleryDropDowButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraGridFeaturesDemoWindow35 : DXWindow
	{
		public UIXtraGridFeaturesDemoWindow35()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Auto Row Height";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client123 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client123(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client123 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client123 : DXTestControl
	{
		public UIPanelControl1Client123(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public UIGcContainerClient65 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient65(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient65 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient65 : DXTestControl
	{
		public UIGcContainerClient65(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public UIRowHeightCustom1 UIRowHeightCustom
		{
			get
			{
				if ((this.mUIRowHeightCustom == null))
				{
					this.mUIRowHeightCustom = new UIRowHeightCustom1(this);
				}
				return this.mUIRowHeightCustom;
			}
		}
		#endregion
		#region Fields
		private UIRowHeightCustom1 mUIRowHeightCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRowHeightCustom1 : DXTestControl
	{
		public UIRowHeightCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "RowHeight";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RowHeight";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public UIPnlTopClient1 UIPnlTopClient
		{
			get
			{
				if ((this.mUIPnlTopClient == null))
				{
					this.mUIPnlTopClient = new UIPnlTopClient1(this);
				}
				return this.mUIPnlTopClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlTopClient1 mUIPnlTopClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlTopClient1 : DXTestControl
	{
		public UIPnlTopClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTop";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
			#endregion
		}
		#region Properties
		public DXCheckBox UICheMemoCheckBox
		{
			get
			{
				if ((this.mUICheMemoCheckBox == null))
				{
					this.mUICheMemoCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheMemoCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cheMemo";
					this.mUICheMemoCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheMemoCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Auto Row Height");
					#endregion
				}
				return this.mUICheMemoCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUICheMemoCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageSetupWindow1 : DXWindow
	{
		public UIPageSetupWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Page Setup";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UIPageSetupUserControlCustom UIPageSetupUserControlCustom
		{
			get
			{
				if ((this.mUIPageSetupUserControlCustom == null))
				{
					this.mUIPageSetupUserControlCustom = new UIPageSetupUserControlCustom(this);
				}
				return this.mUIPageSetupUserControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPageSetupUserControlCustom mUIPageSetupUserControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageSetupUserControlCustom : DXTestControl
	{
		public UIPageSetupUserControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pageSetupUserControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PageSetupUserControl";
			#endregion
		}
		#region Properties
		public UIGpbPaperClient UIGpbPaperClient
		{
			get
			{
				if ((this.mUIGpbPaperClient == null))
				{
					this.mUIGpbPaperClient = new UIGpbPaperClient(this);
				}
				return this.mUIGpbPaperClient;
			}
		}
		public UIGpbMarginsClient UIGpbMarginsClient
		{
			get
			{
				if ((this.mUIGpbMarginsClient == null))
				{
					this.mUIGpbMarginsClient = new UIGpbMarginsClient(this);
				}
				return this.mUIGpbMarginsClient;
			}
		}
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIOKButton.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private UIGpbPaperClient mUIGpbPaperClient;
		private UIGpbMarginsClient mUIGpbMarginsClient;
		private DXButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGpbPaperClient : DXTestControl
	{
		public UIGpbPaperClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpbPaper";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			#endregion
		}
		#region Properties
		public DXComboBox UICbPaperSizeComboBox
		{
			get
			{
				if ((this.mUICbPaperSizeComboBox == null))
				{
					this.mUICbPaperSizeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICbPaperSizeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbPaperSize";
					this.mUICbPaperSizeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICbPaperSizeComboBox.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUICbPaperSizeComboBox;
			}
		}
		public DXCheckBox UIRbOrientationLandscaCheckBox
		{
			get
			{
				if ((this.mUIRbOrientationLandscaCheckBox == null))
				{
					this.mUIRbOrientationLandscaCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIRbOrientationLandscaCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "rbOrientationLandscape";
					this.mUIRbOrientationLandscaCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIRbOrientationLandscaCheckBox.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUIRbOrientationLandscaCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICbPaperSizeComboBox;
		private DXCheckBox mUIRbOrientationLandscaCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGpbMarginsClient : DXTestControl
	{
		public UIGpbMarginsClient(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpbMargins";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("Page Setup");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtMarginsLeftEdit
		{
			get
			{
				if ((this.mUITxtMarginsLeftEdit == null))
				{
					this.mUITxtMarginsLeftEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtMarginsLeftEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtMarginsLeft";
					this.mUITxtMarginsLeftEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtMarginsLeftEdit.WindowTitles.Add("Page Setup");
					#endregion
				}
				return this.mUITxtMarginsLeftEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtMarginsLeftEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraEditorsSuiteDWindow : DXWindow
	{
		public UITheXtraEditorsSuiteDWindow()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraEditors Suite Demo (C# code) - Check Edit";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client124 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client124(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGcNavigationsClient7 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient7(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client124 mUIPanelControl1Client;
		private UIGcNavigationsClient7 mUIGcNavigationsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client124 : DXTestControl
	{
		public UIPanelControl1Client124(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public UIGcContainerClient66 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient66(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient66 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient66 : DXTestControl
	{
		public UIGcContainerClient66(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public UIModuleCheckEditCustom1 UIModuleCheckEditCustom
		{
			get
			{
				if ((this.mUIModuleCheckEditCustom == null))
				{
					this.mUIModuleCheckEditCustom = new UIModuleCheckEditCustom1(this);
				}
				return this.mUIModuleCheckEditCustom;
			}
		}
		#endregion
		#region Fields
		private UIModuleCheckEditCustom1 mUIModuleCheckEditCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleCheckEditCustom1 : DXTestControl
	{
		public UIModuleCheckEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleCheckEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleCheckEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList45 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList45(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList45 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList45 : DXTestControl
	{
		public UIXtraTabControl1TabList45(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client44 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client44(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		public DXTestControl UIXtraTabControlHeaderTabPage
		{
			get
			{
				if ((this.mUIXtraTabControlHeaderTabPage == null))
				{
					this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
					#region Search Criteria
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1PageHeader0";
					this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
					this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
					#endregion
				}
				return this.mUIXtraTabControlHeaderTabPage;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client44 mUIXtraTabPage1Client;
		private DXTestControl mUIXtraTabControlHeaderTabPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client44 : DXTestControl
	{
		public UIXtraTabPage1Client44(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public UIGcSampleCheckBoxClient1 UIGcSampleCheckBoxClient
		{
			get
			{
				if ((this.mUIGcSampleCheckBoxClient == null))
				{
					this.mUIGcSampleCheckBoxClient = new UIGcSampleCheckBoxClient1(this);
				}
				return this.mUIGcSampleCheckBoxClient;
			}
		}
		#endregion
		#region Fields
		private UIGcSampleCheckBoxClient1 mUIGcSampleCheckBoxClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcSampleCheckBoxClient1 : DXTestControl
	{
		public UIGcSampleCheckBoxClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSampleCheckBox";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public DXCheckBox UICheckEditSampleCheckBox
		{
			get
			{
				if ((this.mUICheckEditSampleCheckBox == null))
				{
					this.mUICheckEditSampleCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICheckEditSampleCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "checkEditSample";
					this.mUICheckEditSampleCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICheckEditSampleCheckBox.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
					#endregion
				}
				return this.mUICheckEditSampleCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUICheckEditSampleCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient7 : DXTestControl
	{
		public UIGcNavigationsClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
			#endregion
		}
		#region Properties
		public DXTestControl UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new DXTestControl(this);
					#region Search Criteria
					this.mUINavBarControl1NavBar.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
					this.mUINavBarControl1NavBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
					this.mUINavBarControl1NavBar.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
					#endregion
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		public DXTextEdit UITbFilterEdit
		{
			get
			{
				if ((this.mUITbFilterEdit == null))
				{
					this.mUITbFilterEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITbFilterEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "tbFilter";
					this.mUITbFilterEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ButtonEdit";
					this.mUITbFilterEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUITbFilterEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Check Edit");
					#endregion
				}
				return this.mUITbFilterEdit;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUINavBarControl1NavBar;
		private DXTextEdit mUITbFilterEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraEditorsSuiteDWindow1 : DXWindow
	{
		public UITheXtraEditorsSuiteDWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraEditors Suite Demo (C# code) - Popup Container Edit";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client125 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client125(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client125 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client125 : DXTestControl
	{
		public UIPanelControl1Client125(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public UIGcContainerClient67 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient67(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient67 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient67 : DXTestControl
	{
		public UIGcContainerClient67(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public UIModulePopupContainerCustom2 UIModulePopupContainerCustom
		{
			get
			{
				if ((this.mUIModulePopupContainerCustom == null))
				{
					this.mUIModulePopupContainerCustom = new UIModulePopupContainerCustom2(this);
				}
				return this.mUIModulePopupContainerCustom;
			}
		}
		#endregion
		#region Fields
		private UIModulePopupContainerCustom2 mUIModulePopupContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModulePopupContainerCustom2 : DXTestControl
	{
		public UIModulePopupContainerCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModulePopupContainerEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModulePopupContainerEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList46 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList46(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList46 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList46 : DXTestControl
	{
		public UIXtraTabControl1TabList46(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client45 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client45(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client45 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client45 : DXTestControl
	{
		public UIXtraTabPage1Client45(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client126 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client126(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client126 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client126 : DXTestControl
	{
		public UIPanelControl1Client126(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public UIPopupContainerEditSaPopupEdit1 UIPopupContainerEditSaPopupEdit
		{
			get
			{
				if ((this.mUIPopupContainerEditSaPopupEdit == null))
				{
					this.mUIPopupContainerEditSaPopupEdit = new UIPopupContainerEditSaPopupEdit1(this);
				}
				return this.mUIPopupContainerEditSaPopupEdit;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerEditSaPopupEdit1 mUIPopupContainerEditSaPopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerEditSaPopupEdit1 : DXPopupEdit
	{
		public UIPopupContainerEditSaPopupEdit1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButton0Button
		{
			get
			{
				if ((this.mUIEditorButton0Button == null))
				{
					this.mUIEditorButton0Button = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSampleButton[0]";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButton0Button.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
					#endregion
				}
				return this.mUIEditorButton0Button;
			}
		}
		public UIPopupContainerFormWindow2 UIPopupContainerFormWindow
		{
			get
			{
				if ((this.mUIPopupContainerFormWindow == null))
				{
					this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow2(this);
				}
				return this.mUIPopupContainerFormWindow;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButton0Button;
		private UIPopupContainerFormWindow2 mUIPopupContainerFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerFormWindow2 : DXWindow
	{
		public UIPopupContainerFormWindow2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSamplePopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
			#endregion
		}
		#region Properties
		public UIPopupContainerControClient2 UIPopupContainerControClient
		{
			get
			{
				if ((this.mUIPopupContainerControClient == null))
				{
					this.mUIPopupContainerControClient = new UIPopupContainerControClient2(this);
				}
				return this.mUIPopupContainerControClient;
			}
		}
		public DXButton UICancelButton
		{
			get
			{
				if ((this.mUICancelButton == null))
				{
					this.mUICancelButton = new DXButton(this);
					#region Search Criteria
					this.mUICancelButton.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerEditSamplePopupFormCloseButton[0]";
					this.mUICancelButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CloseButton";
					this.mUICancelButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
					#endregion
				}
				return this.mUICancelButton;
			}
		}
		#endregion
		#region Fields
		private UIPopupContainerControClient2 mUIPopupContainerControClient;
		private DXButton mUICancelButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPopupContainerControClient2 : DXTestControl
	{
		public UIPopupContainerControClient2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupContainerControlSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerControl";
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl7 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl7(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl7 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl7 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient9 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient9(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient9 mUISplitGroupPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient9 : DXTestControl
	{
		public UISplitGroupPanelClient9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[1]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			#endregion
		}
		#region Properties
		public DXCheckedListBox UIClbStyleCheckedListBox
		{
			get
			{
				if ((this.mUIClbStyleCheckedListBox == null))
				{
					this.mUIClbStyleCheckedListBox = new DXCheckedListBox(this);
					#region Search Criteria
					this.mUIClbStyleCheckedListBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbStyle";
					this.mUIClbStyleCheckedListBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxControl";
					#endregion
				}
				return this.mUIClbStyleCheckedListBox;
			}
		}
		public DXTextEdit UISeSizeEdit
		{
			get
			{
				if ((this.mUISeSizeEdit == null))
				{
					this.mUISeSizeEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISeSizeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "seSize";
					this.mUISeSizeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISeSizeEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Popup Container Edit");
					#endregion
				}
				return this.mUISeSizeEdit;
			}
		}
		#endregion
		#region Fields
		private DXCheckedListBox mUIClbStyleCheckedListBox;
		private DXTextEdit mUISeSizeEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraEditorsSuiteDWindow2 : DXWindow
	{
		public UITheXtraEditorsSuiteDWindow2()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraEditors Suite Demo (C# code) - MemoEx Edit";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client127 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client127(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client127 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client127 : DXTestControl
	{
		public UIPanelControl1Client127(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public UIGcContainerClient68 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient68(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient68 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient68 : DXTestControl
	{
		public UIGcContainerClient68(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public UIModuleMemoExEditCustom2 UIModuleMemoExEditCustom
		{
			get
			{
				if ((this.mUIModuleMemoExEditCustom == null))
				{
					this.mUIModuleMemoExEditCustom = new UIModuleMemoExEditCustom2(this);
				}
				return this.mUIModuleMemoExEditCustom;
			}
		}
		#endregion
		#region Fields
		private UIModuleMemoExEditCustom2 mUIModuleMemoExEditCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleMemoExEditCustom2 : DXTestControl
	{
		public UIModuleMemoExEditCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleMemoExEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleMemoExEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList47 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList47(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList47 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList47 : DXTestControl
	{
		public UIXtraTabControl1TabList47(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client46 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client46(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client46 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client46 : DXTestControl
	{
		public UIXtraTabPage1Client46(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client128 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client128(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client128 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client128 : DXTestControl
	{
		public UIPanelControl1Client128(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public UIMemoExEditSamplePopupEdit1 UIMemoExEditSamplePopupEdit
		{
			get
			{
				if ((this.mUIMemoExEditSamplePopupEdit == null))
				{
					this.mUIMemoExEditSamplePopupEdit = new UIMemoExEditSamplePopupEdit1(this);
				}
				return this.mUIMemoExEditSamplePopupEdit;
			}
		}
		#endregion
		#region Fields
		private UIMemoExEditSamplePopupEdit1 mUIMemoExEditSamplePopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExEditSamplePopupEdit1 : DXPopupEdit
	{
		public UIMemoExEditSamplePopupEdit1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSample";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public DXButton UIEditorButton0Button
		{
			get
			{
				if ((this.mUIEditorButton0Button == null))
				{
					this.mUIEditorButton0Button = new DXButton(this);
					#region Search Criteria
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSampleButton[0]";
					this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
					this.mUIEditorButton0Button.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
					#endregion
				}
				return this.mUIEditorButton0Button;
			}
		}
		public UIMemoExPopupFormWindow4 UIMemoExPopupFormWindow
		{
			get
			{
				if ((this.mUIMemoExPopupFormWindow == null))
				{
					this.mUIMemoExPopupFormWindow = new UIMemoExPopupFormWindow4(this);
				}
				return this.mUIMemoExPopupFormWindow;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIEditorButton0Button;
		private UIMemoExPopupFormWindow4 mUIMemoExPopupFormWindow;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMemoExPopupFormWindow4 : DXWindow
	{
		public UIMemoExPopupFormWindow4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupForm";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoExPopupForm";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
			#endregion
		}
		#region Properties
		public DXTextEdit UIMemoEditEdit
		{
			get
			{
				if ((this.mUIMemoEditEdit == null))
				{
					this.mUIMemoEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormMemoEdit[0]";
					this.mUIMemoEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUIMemoEditEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
					#endregion
				}
				return this.mUIMemoEditEdit;
			}
		}
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormSimpleButton[0]";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIOKButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		public DXButton UICancelButton
		{
			get
			{
				if ((this.mUICancelButton == null))
				{
					this.mUICancelButton = new DXButton(this);
					#region Search Criteria
					this.mUICancelButton.SearchProperties[DXTestControl.PropertyNames.Name] = "memoExEditSamplePopupFormSimpleButton[1]";
					this.mUICancelButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUICancelButton.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - MemoEx Edit");
					#endregion
				}
				return this.mUICancelButton;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUIMemoEditEdit;
		private DXButton mUIOKButton;
		private DXButton mUICancelButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow19 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow19()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - Labels";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client129 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client129(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIRibbonStatusBarMenuBar1 UIRibbonStatusBarMenuBar
		{
			get
			{
				if ((this.mUIRibbonStatusBarMenuBar == null))
				{
					this.mUIRibbonStatusBarMenuBar = new UIRibbonStatusBarMenuBar1(this);
				}
				return this.mUIRibbonStatusBarMenuBar;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client129 mUIPanelControl1Client;
		private UIRibbonStatusBarMenuBar1 mUIRibbonStatusBarMenuBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client129 : DXTestControl
	{
		public UIPanelControl1Client129(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIGcContainerClient69 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient69(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient69 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient69 : DXTestControl
	{
		public UIGcContainerClient69(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom17 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom17(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom17 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom17 : DXTestControl
	{
		public UIPreviewControlCustom17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControlLabels";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel9 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel9(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		public UIDocumentViewerPrintViewControl20 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl20(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel9 mUIDockPanelDockPanel;
		private UIDocumentViewerPrintViewControl20 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel9 : DXDockPanel
	{
		public UIDockPanelDockPanel9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom8 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom8(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom8 mUIControlContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom8 : DXTestControl
	{
		public UIControlContainerCustom8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPnlNavigationClient8 UIPnlNavigationClient
		{
			get
			{
				if ((this.mUIPnlNavigationClient == null))
				{
					this.mUIPnlNavigationClient = new UIPnlNavigationClient8(this);
				}
				return this.mUIPnlNavigationClient;
			}
		}
		#endregion
		#region Fields
		private UIPnlNavigationClient8 mUIPnlNavigationClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPnlNavigationClient8 : DXTestControl
	{
		public UIPnlNavigationClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlNavigation";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public UIPanel2Client2 UIPanel2Client
		{
			get
			{
				if ((this.mUIPanel2Client == null))
				{
					this.mUIPanel2Client = new UIPanel2Client2(this);
				}
				return this.mUIPanel2Client;
			}
		}
		public UIPanel1Client9 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client9(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanel2Client2 mUIPanel2Client;
		private UIPanel1Client9 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel2Client2 : DXTestControl
	{
		public UIPanel2Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXButton UILastButton
		{
			get
			{
				if ((this.mUILastButton == null))
				{
					this.mUILastButton = new DXButton(this);
					#region Search Criteria
					this.mUILastButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnLast";
					this.mUILastButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUILastButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUILastButton;
			}
		}
		public DXButton UIPreviousButton
		{
			get
			{
				if ((this.mUIPreviousButton == null))
				{
					this.mUIPreviousButton = new DXButton(this);
					#region Search Criteria
					this.mUIPreviousButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPrev";
					this.mUIPreviousButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIPreviousButton.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPreviousButton;
			}
		}
		public DXCheckBox UIChAllRecordsCheckBox
		{
			get
			{
				if ((this.mUIChAllRecordsCheckBox == null))
				{
					this.mUIChAllRecordsCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChAllRecordsCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chAllRecords";
					this.mUIChAllRecordsCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChAllRecordsCheckBox.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIChAllRecordsCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXButton mUILastButton;
		private DXButton mUIPreviousButton;
		private DXCheckBox mUIChAllRecordsCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client9 : DXTestControl
	{
		public UIPanel1Client9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtSpeciesNoEdit
		{
			get
			{
				if ((this.mUITxtSpeciesNoEdit == null))
				{
					this.mUITxtSpeciesNoEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSpeciesNo";
					this.mUITxtSpeciesNoEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtSpeciesNoEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtSpeciesNoEdit;
			}
		}
		public DXTextEdit UITxtLengthEdit
		{
			get
			{
				if ((this.mUITxtLengthEdit == null))
				{
					this.mUITxtLengthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtLength";
					this.mUITxtLengthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtLengthEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtLengthEdit;
			}
		}
		public DXTextEdit UITxtCategoryEdit
		{
			get
			{
				if ((this.mUITxtCategoryEdit == null))
				{
					this.mUITxtCategoryEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCategory";
					this.mUITxtCategoryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCategoryEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCategoryEdit;
			}
		}
		public DXTextEdit UITxtCommonNameEdit
		{
			get
			{
				if ((this.mUITxtCommonNameEdit == null))
				{
					this.mUITxtCommonNameEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCommonName";
					this.mUITxtCommonNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCommonNameEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUITxtCommonNameEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtSpeciesNoEdit;
		private DXTextEdit mUITxtLengthEdit;
		private DXTextEdit mUITxtCategoryEdit;
		private DXTextEdit mUITxtCommonNameEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl20 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl20(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage4BrickIndices048PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices048PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices048PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices048PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[48]";
					this.mUIPage4BrickIndices048PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices048PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices048PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices050PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices050PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices050PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices050PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[50]";
					this.mUIPage4BrickIndices050PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices050PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices050PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices052PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices052PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices052PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices052PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[52]";
					this.mUIPage4BrickIndices052PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices052PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices052PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage4BrickIndices054PrintControlBrick
		{
			get
			{
				if ((this.mUIPage4BrickIndices054PrintControlBrick == null))
				{
					this.mUIPage4BrickIndices054PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage4BrickIndices054PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [4].BrickIndices [0].[54]";
					this.mUIPage4BrickIndices054PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage4BrickIndices054PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage4BrickIndices054PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices078PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices078PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices078PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices078PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[78]";
					this.mUIPage0BrickIndices078PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices078PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices078PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices080PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices080PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices080PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices080PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[80]";
					this.mUIPage0BrickIndices080PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices080PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices080PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices082PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices082PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices082PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices082PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[82]";
					this.mUIPage0BrickIndices082PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices082PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices082PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices084PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices084PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices084PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[84]";
					this.mUIPage0BrickIndices084PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices084PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices084PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices20PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices20PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices20PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices20PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [2].[0]";
					this.mUIPage0BrickIndices20PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices20PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices20PrintControlBrick;
			}
		}
		public DXPrintingBrick UIPage0BrickIndices00PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices00PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices00PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0]";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices00PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage0BrickIndices00PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage4BrickIndices048PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices050PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices052PrintControlBrick;
		private DXPrintingBrick mUIPage4BrickIndices054PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices078PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices080PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices082PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices084PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices20PrintControlBrick;
		private DXPrintingBrick mUIPage0BrickIndices00PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonStatusBarMenuBar1 : DXMenu
	{
		public UIRibbonStatusBarMenuBar1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonStatusBar";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
			#endregion
		}
		#region Properties
		public DXMenuItem UIPage1of1BarItem
		{
			get
			{
				if ((this.mUIPage1of1BarItem == null))
				{
					this.mUIPage1of1BarItem = new DXMenuItem(this);
					#region Search Criteria
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewStaticItem1";
					this.mUIPage1of1BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
					this.mUIPage1of1BarItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - Labels");
					#endregion
				}
				return this.mUIPage1of1BarItem;
			}
		}
		#endregion
		#region Fields
		private DXMenuItem mUIPage1of1BarItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow20 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow20()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - ListView";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIRibbonControl1Ribbon17 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon17(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		#endregion
		#region Fields
		private UIRibbonControl1Ribbon17 mUIRibbonControl1Ribbon;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon17 : DXRibbon
	{
		public UIRibbonControl1Ribbon17(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIRibbonPage1RibbonPage11 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage11(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPage1RibbonPage11 mUIRibbonPage1RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage11 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public UIPageGroupPrintRibbonPageGroup UIPageGroupPrintRibbonPageGroup
		{
			get
			{
				if ((this.mUIPageGroupPrintRibbonPageGroup == null))
				{
					this.mUIPageGroupPrintRibbonPageGroup = new UIPageGroupPrintRibbonPageGroup(this);
				}
				return this.mUIPageGroupPrintRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIPageGroupPrintRibbonPageGroup mUIPageGroupPrintRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageGroupPrintRibbonPageGroup : DXRibbonPageGroup
	{
		public UIPageGroupPrintRibbonPageGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pageGroupPrint";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIOptionsRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIOptionsRibbonBaseButtonItem == null))
				{
					this.mUIOptionsRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIOptionsRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barItemOptions";
					this.mUIOptionsRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIOptionsRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - ListView");
					#endregion
				}
				return this.mUIOptionsRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIOptionsRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPrintOptionsWindow : DXWindow
	{
		public UIPrintOptionsWindow()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Print Options";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Print Options");
			#endregion
		}
		#region Properties
		public DXRadioGroup UIViewRadioGroupRadioGroup
		{
			get
			{
				if ((this.mUIViewRadioGroupRadioGroup == null))
				{
					this.mUIViewRadioGroupRadioGroup = new DXRadioGroup(this);
					#region Search Criteria
					this.mUIViewRadioGroupRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "viewRadioGroup";
					this.mUIViewRadioGroupRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
					this.mUIViewRadioGroupRadioGroup.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
					this.mUIViewRadioGroupRadioGroup.WindowTitles.Add("Print Options");
					#endregion
				}
				return this.mUIViewRadioGroupRadioGroup;
			}
		}
		public DXButton UICloseButton
		{
			get
			{
				if ((this.mUICloseButton == null))
				{
					this.mUICloseButton = new DXButton(this);
					#region Search Criteria
					this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
					this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
					this.mUICloseButton.WindowTitles.Add("Print Options");
					#endregion
				}
				return this.mUICloseButton;
			}
		}
		public DXButton UIApplyButton
		{
			get
			{
				if ((this.mUIApplyButton == null))
				{
					this.mUIApplyButton = new DXButton(this);
					#region Search Criteria
					this.mUIApplyButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnApply";
					this.mUIApplyButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIApplyButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIApplyButton.WindowTitles.Add("Print Options");
					#endregion
				}
				return this.mUIApplyButton;
			}
		}
		#endregion
		#region Fields
		private DXRadioGroup mUIViewRadioGroupRadioGroup;
		private DXButton mUICloseButton;
		private DXButton mUIApplyButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow21 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow21()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcNavigationsClient8 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient8(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		#endregion
		#region Fields
		private UIGcNavigationsClient8 mUIGcNavigationsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient8 : DXTestControl
	{
		public UIGcNavigationsClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar6 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar6(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar6 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar6 : DXNavBar
	{
		public UINavBarControl1NavBar6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIMiscellaneousNavBarGroup1 UIMiscellaneousNavBarGroup
		{
			get
			{
				if ((this.mUIMiscellaneousNavBarGroup == null))
				{
					this.mUIMiscellaneousNavBarGroup = new UIMiscellaneousNavBarGroup1(this);
				}
				return this.mUIMiscellaneousNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIMiscellaneousNavBarGroup1 mUIMiscellaneousNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMiscellaneousNavBarGroup1 : DXTestControl
	{
		public UIMiscellaneousNavBarGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Miscellaneous";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIMasterDetailNavBarLink
		{
			get
			{
				if ((this.mUIMasterDetailNavBarLink == null))
				{
					this.mUIMasterDetailNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIMasterDetailNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Master-Detail";
					this.mUIMasterDetailNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIMasterDetailNavBarLink.WindowTitles.Add("XtraPrinting Features Demo (C# code)");
					#endregion
				}
				return this.mUIMasterDetailNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIMasterDetailNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow22 : DXWindow
	{
		public UIXtraPrintingFeaturesWindow22()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - RichTextBox";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIRibbonControl1Ribbon18 UIRibbonControl1Ribbon
		{
			get
			{
				if ((this.mUIRibbonControl1Ribbon == null))
				{
					this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon18(this);
				}
				return this.mUIRibbonControl1Ribbon;
			}
		}
		public UIPanelControl1Client130 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client130(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIRibbonControl1Ribbon18 mUIRibbonControl1Ribbon;
		private UIPanelControl1Client130 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonControl1Ribbon18 : DXRibbon
	{
		public UIRibbonControl1Ribbon18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIRibbonPageActionsRibbonPage2 UIRibbonPageActionsRibbonPage
		{
			get
			{
				if ((this.mUIRibbonPageActionsRibbonPage == null))
				{
					this.mUIRibbonPageActionsRibbonPage = new UIRibbonPageActionsRibbonPage2(this);
				}
				return this.mUIRibbonPageActionsRibbonPage;
			}
		}
		public UIRibbonPage1RibbonPage12 UIRibbonPage1RibbonPage
		{
			get
			{
				if ((this.mUIRibbonPage1RibbonPage == null))
				{
					this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage12(this);
				}
				return this.mUIRibbonPage1RibbonPage;
			}
		}
		#endregion
		#region Fields
		private UIRibbonPageActionsRibbonPage2 mUIRibbonPageActionsRibbonPage;
		private UIRibbonPage1RibbonPage12 mUIRibbonPage1RibbonPage;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPageActionsRibbonPage2 : DXRibbonPage
	{
		public UIRibbonPageActionsRibbonPage2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageActions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIRibbonGroupActionsRibbonPageGroup2 UIRibbonGroupActionsRibbonPageGroup
		{
			get
			{
				if ((this.mUIRibbonGroupActionsRibbonPageGroup == null))
				{
					this.mUIRibbonGroupActionsRibbonPageGroup = new UIRibbonGroupActionsRibbonPageGroup2(this);
				}
				return this.mUIRibbonGroupActionsRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIRibbonGroupActionsRibbonPageGroup2 mUIRibbonGroupActionsRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonGroupActionsRibbonPageGroup2 : DXRibbonPageGroup
	{
		public UIRibbonGroupActionsRibbonPageGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonGroupActions";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UIRefreshRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUIRefreshRibbonBaseButtonItem == null))
				{
					this.mUIRefreshRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiRefresh";
					this.mUIRefreshRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUIRefreshRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
					#endregion
				}
				return this.mUIRefreshRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUIRefreshRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRibbonPage1RibbonPage12 : DXRibbonPage
	{
		public UIRibbonPage1RibbonPage12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIPageGroupPageSetupRibbonPageGroup1 UIPageGroupPageSetupRibbonPageGroup
		{
			get
			{
				if ((this.mUIPageGroupPageSetupRibbonPageGroup == null))
				{
					this.mUIPageGroupPageSetupRibbonPageGroup = new UIPageGroupPageSetupRibbonPageGroup1(this);
				}
				return this.mUIPageGroupPageSetupRibbonPageGroup;
			}
		}
		#endregion
		#region Fields
		private UIPageGroupPageSetupRibbonPageGroup1 mUIPageGroupPageSetupRibbonPageGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPageGroupPageSetupRibbonPageGroup1 : DXRibbonPageGroup
	{
		public UIPageGroupPageSetupRibbonPageGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "pageGroupPageSetup";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public DXRibbonButtonItem UISizeRibbonBaseButtonItem
		{
			get
			{
				if ((this.mUISizeRibbonBaseButtonItem == null))
				{
					this.mUISizeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
					#region Search Criteria
					this.mUISizeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "printPreviewBarItem27";
					this.mUISizeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
					this.mUISizeRibbonBaseButtonItem.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
					#endregion
				}
				return this.mUISizeRibbonBaseButtonItem;
			}
		}
		#endregion
		#region Fields
		private DXRibbonButtonItem mUISizeRibbonBaseButtonItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client130 : DXTestControl
	{
		public UIPanelControl1Client130(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIGcContainerClient70 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient70(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient70 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient70 : DXTestControl
	{
		public UIGcContainerClient70(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom18 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom18(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom18 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom18 : DXTestControl
	{
		public UIPreviewControlCustom18(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIDocumentViewerPrintViewControl21 UIDocumentViewerPrintViewControl
		{
			get
			{
				if ((this.mUIDocumentViewerPrintViewControl == null))
				{
					this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl21(this);
				}
				return this.mUIDocumentViewerPrintViewControl;
			}
		}
		#endregion
		#region Fields
		private UIDocumentViewerPrintViewControl21 mUIDocumentViewerPrintViewControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDocumentViewerPrintViewControl21 : DXPrinting
	{
		public UIDocumentViewerPrintViewControl21(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public DXPrintingBrick UIPage0BrickIndices00PrintControlBrick
		{
			get
			{
				if ((this.mUIPage0BrickIndices00PrintControlBrick == null))
				{
					this.mUIPage0BrickIndices00PrintControlBrick = new DXPrintingBrick(this);
					#region Search Criteria
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0]";
					this.mUIPage0BrickIndices00PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
					this.mUIPage0BrickIndices00PrintControlBrick.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
					#endregion
				}
				return this.mUIPage0BrickIndices00PrintControlBrick;
			}
		}
		#endregion
		#region Fields
		private DXPrintingBrick mUIPage0BrickIndices00PrintControlBrick;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIApplicationUILayoutCWindow : DXWindow
	{
		public UIApplicationUILayoutCWindow()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Application UI Layout Controls Demo (C# code) - Alert Control";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client131 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client131(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client131 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client131 : DXTestControl
	{
		public UIPanelControl1Client131(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public UIGcContainerClient71 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient71(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient71 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient71 : DXTestControl
	{
		public UIGcContainerClient71(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public UIAlertControlTutorialCustom1 UIAlertControlTutorialCustom
		{
			get
			{
				if ((this.mUIAlertControlTutorialCustom == null))
				{
					this.mUIAlertControlTutorialCustom = new UIAlertControlTutorialCustom1(this);
				}
				return this.mUIAlertControlTutorialCustom;
			}
		}
		#endregion
		#region Fields
		private UIAlertControlTutorialCustom1 mUIAlertControlTutorialCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAlertControlTutorialCustom1 : DXTestControl
	{
		public UIAlertControlTutorialCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AlertControlTutorial";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertControlTutorial";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public UIXtraTabControl1TabList48 UIXtraTabControl1TabList
		{
			get
			{
				if ((this.mUIXtraTabControl1TabList == null))
				{
					this.mUIXtraTabControl1TabList = new UIXtraTabControl1TabList48(this);
				}
				return this.mUIXtraTabControl1TabList;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabControl1TabList48 mUIXtraTabControl1TabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabControl1TabList48 : DXTestControl
	{
		public UIXtraTabControl1TabList48(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public UIXtraTabPage1Client47 UIXtraTabPage1Client
		{
			get
			{
				if ((this.mUIXtraTabPage1Client == null))
				{
					this.mUIXtraTabPage1Client = new UIXtraTabPage1Client47(this);
				}
				return this.mUIXtraTabPage1Client;
			}
		}
		#endregion
		#region Fields
		private UIXtraTabPage1Client47 mUIXtraTabPage1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraTabPage1Client47 : DXTestControl
	{
		public UIXtraTabPage1Client47(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public DXButton UIShowAlertFormButton
		{
			get
			{
				if ((this.mUIShowAlertFormButton == null))
				{
					this.mUIShowAlertFormButton = new DXButton(this);
					#region Search Criteria
					this.mUIShowAlertFormButton.SearchProperties[DXTestControl.PropertyNames.Name] = "button1";
					this.mUIShowAlertFormButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIShowAlertFormButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUIShowAlertFormButton.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
					#endregion
				}
				return this.mUIShowAlertFormButton;
			}
		}
		public DXTextEdit UICeWidthEdit
		{
			get
			{
				if ((this.mUICeWidthEdit == null))
				{
					this.mUICeWidthEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUICeWidthEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ceWidth";
					this.mUICeWidthEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUICeWidthEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUICeWidthEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
					#endregion
				}
				return this.mUICeWidthEdit;
			}
		}
		public DXTextEdit UICeHeightEdit
		{
			get
			{
				if ((this.mUICeHeightEdit == null))
				{
					this.mUICeHeightEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUICeHeightEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ceHeight";
					this.mUICeHeightEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUICeHeightEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUICeHeightEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
					#endregion
				}
				return this.mUICeHeightEdit;
			}
		}
		public UIGroupControl1Client3 UIGroupControl1Client
		{
			get
			{
				if ((this.mUIGroupControl1Client == null))
				{
					this.mUIGroupControl1Client = new UIGroupControl1Client3(this);
				}
				return this.mUIGroupControl1Client;
			}
		}
		public DXTextEdit UISePostponedFormCountEdit
		{
			get
			{
				if ((this.mUISePostponedFormCountEdit == null))
				{
					this.mUISePostponedFormCountEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISePostponedFormCountEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sePostponedFormCount";
					this.mUISePostponedFormCountEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISePostponedFormCountEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUISePostponedFormCountEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
					#endregion
				}
				return this.mUISePostponedFormCountEdit;
			}
		}
		public UIGroupControl2Client2 UIGroupControl2Client
		{
			get
			{
				if ((this.mUIGroupControl2Client == null))
				{
					this.mUIGroupControl2Client = new UIGroupControl2Client2(this);
				}
				return this.mUIGroupControl2Client;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIShowAlertFormButton;
		private DXTextEdit mUICeWidthEdit;
		private DXTextEdit mUICeHeightEdit;
		private UIGroupControl1Client3 mUIGroupControl1Client;
		private DXTextEdit mUISePostponedFormCountEdit;
		private UIGroupControl2Client2 mUIGroupControl2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl1Client3 : DXTestControl
	{
		public UIGroupControl1Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public UIAlertControlPropertiCustom1 UIAlertControlPropertiCustom
		{
			get
			{
				if ((this.mUIAlertControlPropertiCustom == null))
				{
					this.mUIAlertControlPropertiCustom = new UIAlertControlPropertiCustom1(this);
				}
				return this.mUIAlertControlPropertiCustom;
			}
		}
		#endregion
		#region Fields
		private UIAlertControlPropertiCustom1 mUIAlertControlPropertiCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAlertControlPropertiCustom1 : DXTestControl
	{
		public UIAlertControlPropertiCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "alertControlProperties1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertControlProperties";
			this.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
			#endregion
		}
		#region Properties
		public DXTextEdit UISeFormMaxCountEdit
		{
			get
			{
				if ((this.mUISeFormMaxCountEdit == null))
				{
					this.mUISeFormMaxCountEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUISeFormMaxCountEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "seFormMaxCount";
					this.mUISeFormMaxCountEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
					this.mUISeFormMaxCountEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
					#endregion
				}
				return this.mUISeFormMaxCountEdit;
			}
		}
		public DXComboBox UIIcbFormLocationComboBox
		{
			get
			{
				if ((this.mUIIcbFormLocationComboBox == null))
				{
					this.mUIIcbFormLocationComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbFormLocationComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbFormLocation";
					this.mUIIcbFormLocationComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					#endregion
				}
				return this.mUIIcbFormLocationComboBox;
			}
		}
		public DXCheckedComboBox UICcbeButtonsCheckedComboBox
		{
			get
			{
				if ((this.mUICcbeButtonsCheckedComboBox == null))
				{
					this.mUICcbeButtonsCheckedComboBox = new DXCheckedComboBox(this);
					#region Search Criteria
					this.mUICcbeButtonsCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ccbeButtons";
					this.mUICcbeButtonsCheckedComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedComboBoxEdit";
					#endregion
				}
				return this.mUICcbeButtonsCheckedComboBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUISeFormMaxCountEdit;
		private DXComboBox mUIIcbFormLocationComboBox;
		private DXCheckedComboBox mUICcbeButtonsCheckedComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl2Client2 : DXTestControl
	{
		public UIGroupControl2Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			#endregion
		}
		#region Properties
		public UIAlertInfoProperties1Custom1 UIAlertInfoProperties1Custom
		{
			get
			{
				if ((this.mUIAlertInfoProperties1Custom == null))
				{
					this.mUIAlertInfoProperties1Custom = new UIAlertInfoProperties1Custom1(this);
				}
				return this.mUIAlertInfoProperties1Custom;
			}
		}
		#endregion
		#region Fields
		private UIAlertInfoProperties1Custom1 mUIAlertInfoProperties1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAlertInfoProperties1Custom1 : DXTestControl
	{
		public UIAlertInfoProperties1Custom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "alertInfoProperties1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AlertInfoProperties";
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbImageComboBox
		{
			get
			{
				if ((this.mUIIcbImageComboBox == null))
				{
					this.mUIIcbImageComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbImageComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbImage";
					this.mUIIcbImageComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					#endregion
				}
				return this.mUIIcbImageComboBox;
			}
		}
		public DXTextEdit UITxtCaptionEdit
		{
			get
			{
				if ((this.mUITxtCaptionEdit == null))
				{
					this.mUITxtCaptionEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCaptionEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCaption";
					this.mUITxtCaptionEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCaptionEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
					#endregion
				}
				return this.mUITxtCaptionEdit;
			}
		}
		public DXTextEdit UITxtTextEdit
		{
			get
			{
				if ((this.mUITxtTextEdit == null))
				{
					this.mUITxtTextEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtTextEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtText";
					this.mUITxtTextEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUITxtTextEdit.WindowTitles.Add("Application UI Layout Controls Demo (C# code) - Alert Control");
					#endregion
				}
				return this.mUITxtTextEdit;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbImageComboBox;
		private DXTextEdit mUITxtCaptionEdit;
		private DXTextEdit mUITxtTextEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraGridSuitebyDeWindow : DXWindow
	{
		public UITheXtraGridSuitebyDeWindow()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Banded Views";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client132 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client132(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client132 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client132 : DXTestControl
	{
		public UIPanelControl1Client132(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIGcContainerClient72 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient72(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient72 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient72 : DXTestControl
	{
		public UIGcContainerClient72(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIViewStylesCustom1 UIViewStylesCustom
		{
			get
			{
				if ((this.mUIViewStylesCustom == null))
				{
					this.mUIViewStylesCustom = new UIViewStylesCustom1(this);
				}
				return this.mUIViewStylesCustom;
			}
		}
		#endregion
		#region Fields
		private UIViewStylesCustom1 mUIViewStylesCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIViewStylesCustom1 : DXTestControl
	{
		public UIViewStylesCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewStyles";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewStyles";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client133 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client133(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UIGridControl1Table32 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table32(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client133 mUIPanelControl1Client;
		private UIGridControl1Table32 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client133 : DXTestControl
	{
		public UIPanelControl1Client133(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public DXCheckButton UIChGridCheckButton
		{
			get
			{
				if ((this.mUIChGridCheckButton == null))
				{
					this.mUIChGridCheckButton = new DXCheckButton(this);
					#region Search Criteria
					this.mUIChGridCheckButton.SearchProperties[DXTestControl.PropertyNames.Name] = "chGrid";
					this.mUIChGridCheckButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckButton";
					this.mUIChGridCheckButton.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIChGridCheckButton;
			}
		}
		#endregion
		#region Fields
		private DXCheckButton mUIChGridCheckButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table32 : DXGrid
	{
		public UIGridControl1Table32(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIColIcon1ColumnHeader
		{
			get
			{
				if ((this.mUIColIcon1ColumnHeader == null))
				{
					this.mUIColIcon1ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColIcon1ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colIcon1";
					this.mUIColIcon1ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColIcon1ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIColIcon1ColumnHeader;
			}
		}
		public DXColumnHeader UIColTrademark2ColumnHeader
		{
			get
			{
				if ((this.mUIColTrademark2ColumnHeader == null))
				{
					this.mUIColTrademark2ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColTrademark2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colTrademark2";
					this.mUIColTrademark2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColTrademark2ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIColTrademark2ColumnHeader;
			}
		}
		public DXColumnHeader UIColModel2ColumnHeader
		{
			get
			{
				if ((this.mUIColModel2ColumnHeader == null))
				{
					this.mUIColModel2ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIColModel2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]colModel2";
					this.mUIColModel2ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIColModel2ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIColModel2ColumnHeader;
			}
		}
		public DXColumnHeader UIGcNameColumnHeader
		{
			get
			{
				if ((this.mUIGcNameColumnHeader == null))
				{
					this.mUIGcNameColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGcNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gcName";
					this.mUIGcNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGcNameColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGcNameColumnHeader;
			}
		}
		public UICustomizationFormWindow3 UICustomizationFormWindow
		{
			get
			{
				if ((this.mUICustomizationFormWindow == null))
				{
					this.mUICustomizationFormWindow = new UICustomizationFormWindow3(this);
				}
				return this.mUICustomizationFormWindow;
			}
		}
		public DXColumnHeader UIGcIDColumnHeader
		{
			get
			{
				if ((this.mUIGcIDColumnHeader == null))
				{
					this.mUIGcIDColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGcIDColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gcID";
					this.mUIGcIDColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGcIDColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGcIDColumnHeader;
			}
		}
		public DXColumnHeader UIGcModificationColumnHeader
		{
			get
			{
				if ((this.mUIGcModificationColumnHeader == null))
				{
					this.mUIGcModificationColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGcModificationColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gcModification";
					this.mUIGcModificationColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGcModificationColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGcModificationColumnHeader;
			}
		}
		public DXGridBand UIGbImageGridBand
		{
			get
			{
				if ((this.mUIGbImageGridBand == null))
				{
					this.mUIGbImageGridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGbImageGridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gbImage";
					this.mUIGbImageGridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGbImageGridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGbImageGridBand;
			}
		}
		public DXGridBand UIGbMainGridBand
		{
			get
			{
				if ((this.mUIGbMainGridBand == null))
				{
					this.mUIGbMainGridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGbMainGridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gbMain";
					this.mUIGbMainGridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGbMainGridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGbMainGridBand;
			}
		}
		public DXGridBand UIGbPerfomanceGridBand
		{
			get
			{
				if ((this.mUIGbPerfomanceGridBand == null))
				{
					this.mUIGbPerfomanceGridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGbPerfomanceGridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]advBandedGridView1[BandName]gbPerfomance";
					this.mUIGbPerfomanceGridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGbPerfomanceGridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGbPerfomanceGridBand;
			}
		}
		public DXGridBand UIGridBand4GridBand
		{
			get
			{
				if ((this.mUIGridBand4GridBand == null))
				{
					this.mUIGridBand4GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]bandedGridView1[BandName]gridBand4";
					this.mUIGridBand4GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand4GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGridBand4GridBand;
			}
		}
		public DXGridBand UIGridBand1GridBand
		{
			get
			{
				if ((this.mUIGridBand1GridBand == null))
				{
					this.mUIGridBand1GridBand = new DXGridBand(this);
					#region Search Criteria
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlBand[View]bandedGridView1[BandName]gridBand1";
					this.mUIGridBand1GridBand.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlBand";
					this.mUIGridBand1GridBand.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIGridBand1GridBand;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIColIcon1ColumnHeader;
		private DXColumnHeader mUIColTrademark2ColumnHeader;
		private DXColumnHeader mUIColModel2ColumnHeader;
		private DXColumnHeader mUIGcNameColumnHeader;
		private UICustomizationFormWindow3 mUICustomizationFormWindow;
		private DXColumnHeader mUIGcIDColumnHeader;
		private DXColumnHeader mUIGcModificationColumnHeader;
		private DXGridBand mUIGbImageGridBand;
		private DXGridBand mUIGbMainGridBand;
		private DXGridBand mUIGbPerfomanceGridBand;
		private DXGridBand mUIGridBand4GridBand;
		private DXGridBand mUIGridBand1GridBand;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomizationFormWindow3 : DXWindow
	{
		public UICustomizationFormWindow3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]gridView1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomizationForm";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public UIColumnCustomizationLList1 UIColumnCustomizationLList
		{
			get
			{
				if ((this.mUIColumnCustomizationLList == null))
				{
					this.mUIColumnCustomizationLList = new UIColumnCustomizationLList1(this);
				}
				return this.mUIColumnCustomizationLList;
			}
		}
		#endregion
		#region Fields
		private UIColumnCustomizationLList1 mUIColumnCustomizationLList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIColumnCustomizationLList1 : DXListBox
	{
		public UIColumnCustomizationLList1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1CustomizationForm[View]gridView1ColumnCustomizationListBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColumnCustomizationListBox";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
			#endregion
		}
		#region Properties
		public DXListBoxItem UIIDListItem
		{
			get
			{
				if ((this.mUIIDListItem == null))
				{
					this.mUIIDListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUIIDListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ColumnCustomizationListBoxItem[View]gridView1[Column]gcID";
					this.mUIIDListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ColumnCustomizationListBoxItem";
					this.mUIIDListItem.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Banded Views");
					#endregion
				}
				return this.mUIIDListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUIIDListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraGridSuitebyDeWindow1 : DXWindow
	{
		public UITheXtraGridSuitebyDeWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client134 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client134(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client134 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client134 : DXTestControl
	{
		public UIPanelControl1Client134(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIGcContainerClient73 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient73(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient73 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient73 : DXTestControl
	{
		public UIGcContainerClient73(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIDataSummariesCustom1 UIDataSummariesCustom
		{
			get
			{
				if ((this.mUIDataSummariesCustom == null))
				{
					this.mUIDataSummariesCustom = new UIDataSummariesCustom1(this);
				}
				return this.mUIDataSummariesCustom;
			}
		}
		#endregion
		#region Fields
		private UIDataSummariesCustom1 mUIDataSummariesCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDataSummariesCustom1 : DXTestControl
	{
		public UIDataSummariesCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DataSummaries";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DataSummaries";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public UIGridControl1Table33 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table33(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table33 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table33 : DXGrid
	{
		public UIGridControl1Table33(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
			#endregion
		}
		#region Properties
		public DXGridFooterCell UIGridControlFooterCelGridFooterCell
		{
			get
			{
				if ((this.mUIGridControlFooterCelGridFooterCell == null))
				{
					this.mUIGridControlFooterCelGridFooterCell = new DXGridFooterCell(this);
					#region Search Criteria
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFooterCell[View]advBandedGridView1[Row]0[Column]colProduct" +
						"Name";
					this.mUIGridControlFooterCelGridFooterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFooterCell";
					this.mUIGridControlFooterCelGridFooterCell.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates");
					#endregion
				}
				return this.mUIGridControlFooterCelGridFooterCell;
			}
		}
		#endregion
		#region Fields
		private DXGridFooterCell mUIGridControlFooterCelGridFooterCell;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraEditorsSuiteDWindow3 : DXWindow
	{
		public UITheXtraEditorsSuiteDWindow3()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraEditors Suite Demo (C# code) - Text Edit";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client135 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client135(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client135 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client135 : DXTestControl
	{
		public UIPanelControl1Client135(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
			#endregion
		}
		#region Properties
		public UIGcContainerClient74 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient74(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient74 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient74 : DXTestControl
	{
		public UIGcContainerClient74(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
			#endregion
		}
		#region Properties
		public UIModuleTextEditCustom1 UIModuleTextEditCustom
		{
			get
			{
				if ((this.mUIModuleTextEditCustom == null))
				{
					this.mUIModuleTextEditCustom = new UIModuleTextEditCustom1(this);
				}
				return this.mUIModuleTextEditCustom;
			}
		}
		#endregion
		#region Fields
		private UIModuleTextEditCustom1 mUIModuleTextEditCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIModuleTextEditCustom1 : DXTestControl
	{
		public UIModuleTextEditCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "ModuleTextEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ModuleTextEdit";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
			#endregion
		}
		#region Properties
		public UITabctrlTextEditTabList1 UITabctrlTextEditTabList
		{
			get
			{
				if ((this.mUITabctrlTextEditTabList == null))
				{
					this.mUITabctrlTextEditTabList = new UITabctrlTextEditTabList1(this);
				}
				return this.mUITabctrlTextEditTabList;
			}
		}
		#endregion
		#region Fields
		private UITabctrlTextEditTabList1 mUITabctrlTextEditTabList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabctrlTextEditTabList1 : DXTestControl
	{
		public UITabctrlTextEditTabList1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabctrlTextEdit";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
			#endregion
		}
		#region Properties
		public UITabpgGeneralClient1 UITabpgGeneralClient
		{
			get
			{
				if ((this.mUITabpgGeneralClient == null))
				{
					this.mUITabpgGeneralClient = new UITabpgGeneralClient1(this);
				}
				return this.mUITabpgGeneralClient;
			}
		}
		#endregion
		#region Fields
		private UITabpgGeneralClient1 mUITabpgGeneralClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITabpgGeneralClient1 : DXTestControl
	{
		public UITabpgGeneralClient1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabpgGeneral";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client136 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client136(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client136 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client136 : DXTestControl
	{
		public UIPanelControl1Client136(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
			#endregion
		}
		#region Properties
		public DXTextEdit UITextEditSampleEdit
		{
			get
			{
				if ((this.mUITextEditSampleEdit == null))
				{
					this.mUITextEditSampleEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "textEditSample";
					this.mUITextEditSampleEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditSampleEdit.WindowTitles.Add("The XtraEditors Suite Demo (C# code) - Text Edit");
					#endregion
				}
				return this.mUITextEditSampleEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITextEditSampleEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatRulesEditorforWindow : DXWindow
	{
		public UIFormatRulesEditorforWindow()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Format Rules Editor for the [Product Name] column";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Format Rules Editor for the [Product Name] column");
			#endregion
		}
		#region Properties
		public UIPanelControl2Client4 UIPanelControl2Client
		{
			get
			{
				if ((this.mUIPanelControl2Client == null))
				{
					this.mUIPanelControl2Client = new UIPanelControl2Client4(this);
				}
				return this.mUIPanelControl2Client;
			}
		}
		public UIFormatItemListList3 UIFormatItemListList
		{
			get
			{
				if ((this.mUIFormatItemListList == null))
				{
					this.mUIFormatItemListList = new UIFormatItemListList3(this);
				}
				return this.mUIFormatItemListList;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl2Client4 mUIPanelControl2Client;
		private UIFormatItemListList3 mUIFormatItemListList;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl2Client4 : DXTestControl
	{
		public UIPanelControl2Client4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			#endregion
		}
		#region Properties
		public DXComboBox UIIcbConditionComboBox
		{
			get
			{
				if ((this.mUIIcbConditionComboBox == null))
				{
					this.mUIIcbConditionComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIIcbConditionComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "icbCondition";
					this.mUIIcbConditionComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ImageComboBoxEdit";
					this.mUIIcbConditionComboBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					#endregion
				}
				return this.mUIIcbConditionComboBox;
			}
		}
		public DXTextEdit UITextEditEdit
		{
			get
			{
				if ((this.mUITextEditEdit == null))
				{
					this.mUITextEditEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2TextEdit[0]";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUITextEditEdit.WindowTitles.Add("Format Rules Editor for the [Product Name] column");
					#endregion
				}
				return this.mUITextEditEdit;
			}
		}
		public DXTextEdit UITextEditEdit1
		{
			get
			{
				if ((this.mUITextEditEdit1 == null))
				{
					this.mUITextEditEdit1 = new DXTextEdit(this);
					#region Search Criteria
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl2TextEdit[1]";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITextEditEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUITextEditEdit1.WindowTitles.Add("Format Rules Editor for the [Product Name] column");
					#endregion
				}
				return this.mUITextEditEdit1;
			}
		}
		public DXCheckBox UICeRowCheckBox
		{
			get
			{
				if ((this.mUICeRowCheckBox == null))
				{
					this.mUICeRowCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUICeRowCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceRow";
					this.mUICeRowCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUICeRowCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
					this.mUICeRowCheckBox.WindowTitles.Add("Format Rules Editor for the [Product Name] column");
					#endregion
				}
				return this.mUICeRowCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIIcbConditionComboBox;
		private DXTextEdit mUITextEditEdit;
		private DXTextEdit mUITextEditEdit1;
		private DXCheckBox mUICeRowCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFormatItemListList3 : DXListBox
	{
		public UIFormatItemListList3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemList";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControl";
			this.WindowTitles.Add("Format Rules Editor for the [Product Name] column");
			#endregion
		}
		#region Properties
		public DXListBoxItem UINotBetween1040ListItem
		{
			get
			{
				if ((this.mUINotBetween1040ListItem == null))
				{
					this.mUINotBetween1040ListItem = new DXListBoxItem(this);
					#region Search Criteria
					this.mUINotBetween1040ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "FormatItemListItem[0]";
					this.mUINotBetween1040ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListBoxControlItem";
					this.mUINotBetween1040ListItem.WindowTitles.Add("Format Rules Editor for the [Product Name] column");
					#endregion
				}
				return this.mUINotBetween1040ListItem;
			}
		}
		#endregion
		#region Fields
		private DXListBoxItem mUINotBetween1040ListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraGridSuitebyDeWindow2 : DXWindow
	{
		public UITheXtraGridSuitebyDeWindow2()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Table View";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client137 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client137(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client137 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client137 : DXTestControl
	{
		public UIPanelControl1Client137(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UIGcContainerClient75 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient75(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient75 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient75 : DXTestControl
	{
		public UIGcContainerClient75(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UITableViewCustom2 UITableViewCustom
		{
			get
			{
				if ((this.mUITableViewCustom == null))
				{
					this.mUITableViewCustom = new UITableViewCustom2(this);
				}
				return this.mUITableViewCustom;
			}
		}
		#endregion
		#region Fields
		private UITableViewCustom2 mUITableViewCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITableViewCustom2 : DXTestControl
	{
		public UITableViewCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "TableView";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TableView";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public UIGridControl1Table34 UIGridControl1Table
		{
			get
			{
				if ((this.mUIGridControl1Table == null))
				{
					this.mUIGridControl1Table = new UIGridControl1Table34(this);
				}
				return this.mUIGridControl1Table;
			}
		}
		#endregion
		#region Fields
		private UIGridControl1Table34 mUIGridControl1Table;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGridControl1Table34 : DXGrid
	{
		public UIGridControl1Table34(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
			#endregion
		}
		#region Properties
		public DXColumnHeader UIGridColumn3ColumnHeader
		{
			get
			{
				if ((this.mUIGridColumn3ColumnHeader == null))
				{
					this.mUIGridColumn3ColumnHeader = new DXColumnHeader(this);
					#region Search Criteria
					this.mUIGridColumn3ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlColumnHeader[View]gridView1[Column]gridColumn3";
					this.mUIGridColumn3ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
					this.mUIGridColumn3ColumnHeader.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridColumn3ColumnHeader;
			}
		}
		public DXTestControl UIGridControlFilterPanCustom
		{
			get
			{
				if ((this.mUIGridControlFilterPanCustom == null))
				{
					this.mUIGridControlFilterPanCustom = new DXTestControl(this);
					#region Search Criteria
					this.mUIGridControlFilterPanCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControl1GridControlFilterPanel[View]gridView1";
					this.mUIGridControlFilterPanCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlFilterPanel";
					this.mUIGridControlFilterPanCustom.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Table View");
					#endregion
				}
				return this.mUIGridControlFilterPanCustom;
			}
		}
		#endregion
		#region Fields
		private DXColumnHeader mUIGridColumn3ColumnHeader;
		private DXTestControl mUIGridControlFilterPanCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIItemWindow91 : DXWindow
	{
		public UIItemWindow91()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Custom AutoFilter";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			#endregion
		}
		#region Properties
		public UILayoutControlCustom UILayoutControlCustom
		{
			get
			{
				if ((this.mUILayoutControlCustom == null))
				{
					this.mUILayoutControlCustom = new UILayoutControlCustom(this);
				}
				return this.mUILayoutControlCustom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlCustom mUILayoutControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlCustom : DXTestControl
	{
		public UILayoutControlCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlMain";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			#endregion
		}
		#region Properties
		public UIRootLayoutGroup2 UIRootLayoutGroup
		{
			get
			{
				if ((this.mUIRootLayoutGroup == null))
				{
					this.mUIRootLayoutGroup = new UIRootLayoutGroup2(this);
				}
				return this.mUIRootLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UIRootLayoutGroup2 mUIRootLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRootLayoutGroup2 : DXBaseLayoutItem
	{
		public UIRootLayoutGroup2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			#endregion
		}
		#region Properties
		public UIRoot1LayoutGroup UIRoot1LayoutGroup
		{
			get
			{
				if ((this.mUIRoot1LayoutGroup == null))
				{
					this.mUIRoot1LayoutGroup = new UIRoot1LayoutGroup(this);
				}
				return this.mUIRoot1LayoutGroup;
			}
		}
		public UILiOkLayoutControlItem UILiOkLayoutControlItem
		{
			get
			{
				if ((this.mUILiOkLayoutControlItem == null))
				{
					this.mUILiOkLayoutControlItem = new UILiOkLayoutControlItem(this);
				}
				return this.mUILiOkLayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UIRoot1LayoutGroup mUIRoot1LayoutGroup;
		private UILiOkLayoutControlItem mUILiOkLayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRoot1LayoutGroup : DXBaseLayoutItem
	{
		public UIRoot1LayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			#endregion
		}
		#region Properties
		public UILayoutControlItem9LayoutControlItem UILayoutControlItem9LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem9LayoutControlItem == null))
				{
					this.mUILayoutControlItem9LayoutControlItem = new UILayoutControlItem9LayoutControlItem(this);
				}
				return this.mUILayoutControlItem9LayoutControlItem;
			}
		}
		public UILayoutControlItem6LayoutControlItem UILayoutControlItem6LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem6LayoutControlItem == null))
				{
					this.mUILayoutControlItem6LayoutControlItem = new UILayoutControlItem6LayoutControlItem(this);
				}
				return this.mUILayoutControlItem6LayoutControlItem;
			}
		}
		public UILayoutControlItem8LayoutControlItem UILayoutControlItem8LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem8LayoutControlItem == null))
				{
					this.mUILayoutControlItem8LayoutControlItem = new UILayoutControlItem8LayoutControlItem(this);
				}
				return this.mUILayoutControlItem8LayoutControlItem;
			}
		}
		public UILayoutControlItem7LayoutControlItem2 UILayoutControlItem7LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem7LayoutControlItem == null))
				{
					this.mUILayoutControlItem7LayoutControlItem = new UILayoutControlItem7LayoutControlItem2(this);
				}
				return this.mUILayoutControlItem7LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem9LayoutControlItem mUILayoutControlItem9LayoutControlItem;
		private UILayoutControlItem6LayoutControlItem mUILayoutControlItem6LayoutControlItem;
		private UILayoutControlItem8LayoutControlItem mUILayoutControlItem8LayoutControlItem;
		private UILayoutControlItem7LayoutControlItem2 mUILayoutControlItem7LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem9LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem9LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem9";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "piFirst";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem6LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem6LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem6";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("Custom AutoFilter");
			#endregion
		}
		#region Properties
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem6CalcEdit[0]";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit.WindowTitles.Add("Custom AutoFilter");
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		public DXPopupEdit UIValueEditor1PopupEdit
		{
			get
			{
				if ((this.mUIValueEditor1PopupEdit == null))
				{
					this.mUIValueEditor1PopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUIValueEditor1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ValueEditor1";
					this.mUIValueEditor1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUIValueEditor1PopupEdit.WindowTitles.Add("Custom AutoFilter");
					#endregion
				}
				return this.mUIValueEditor1PopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUICalcEditPopupEdit;
		private DXPopupEdit mUIValueEditor1PopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem8LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem8LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem8";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			#endregion
		}
		#region Properties
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "piSecond";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUIComboBoxEditComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem7LayoutControlItem2 : DXBaseLayoutItem
	{
		public UILayoutControlItem7LayoutControlItem2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem7";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("Custom AutoFilter");
			#endregion
		}
		#region Properties
		public DXPopupEdit UICalcEditPopupEdit
		{
			get
			{
				if ((this.mUICalcEditPopupEdit == null))
				{
					this.mUICalcEditPopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem7CalcEdit[1]";
					this.mUICalcEditPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUICalcEditPopupEdit.WindowTitles.Add("Custom AutoFilter");
					#endregion
				}
				return this.mUICalcEditPopupEdit;
			}
		}
		public DXPopupEdit UIValueEditor2PopupEdit
		{
			get
			{
				if ((this.mUIValueEditor2PopupEdit == null))
				{
					this.mUIValueEditor2PopupEdit = new DXPopupEdit(this);
					#region Search Criteria
					this.mUIValueEditor2PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ValueEditor2";
					this.mUIValueEditor2PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CalcEdit";
					this.mUIValueEditor2PopupEdit.WindowTitles.Add("Custom AutoFilter");
					#endregion
				}
				return this.mUIValueEditor2PopupEdit;
			}
		}
		#endregion
		#region Fields
		private DXPopupEdit mUICalcEditPopupEdit;
		private DXPopupEdit mUIValueEditor2PopupEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILiOkLayoutControlItem : DXBaseLayoutItem
	{
		public UILiOkLayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "liOk";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("Custom AutoFilter");
			#endregion
		}
		#region Properties
		public DXButton UIOKButton
		{
			get
			{
				if ((this.mUIOKButton == null))
				{
					this.mUIOKButton = new DXButton(this);
					#region Search Criteria
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
					this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIOKButton.WindowTitles.Add("Custom AutoFilter");
					#endregion
				}
				return this.mUIOKButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIOKButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIXtraPrintingFeaturesWindow4 : WinWindow
	{
		public UIXtraPrintingFeaturesWindow4()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "XtraPrinting Features Demo (C# code) - RichTextBox";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client138 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client138(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client138 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client138 : DXTestControl
	{
		public UIPanelControl1Client138(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIGcContainerClient76 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient76(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient76 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient76 : DXTestControl
	{
		public UIGcContainerClient76(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIPreviewControlCustom19 UIPreviewControlCustom
		{
			get
			{
				if ((this.mUIPreviewControlCustom == null))
				{
					this.mUIPreviewControlCustom = new UIPreviewControlCustom19(this);
				}
				return this.mUIPreviewControlCustom;
			}
		}
		#endregion
		#region Fields
		private UIPreviewControlCustom19 mUIPreviewControlCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPreviewControlCustom19 : DXTestControl
	{
		public UIPreviewControlCustom19(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControl";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PreviewControl";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIDockPanelDockPanel10 UIDockPanelDockPanel
		{
			get
			{
				if ((this.mUIDockPanelDockPanel == null))
				{
					this.mUIDockPanelDockPanel = new UIDockPanelDockPanel10(this);
				}
				return this.mUIDockPanelDockPanel;
			}
		}
		#endregion
		#region Fields
		private UIDockPanelDockPanel10 mUIDockPanelDockPanel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDockPanelDockPanel10 : DXDockPanel
	{
		public UIDockPanelDockPanel10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIControlContainerCustom9 UIControlContainerCustom
		{
			get
			{
				if ((this.mUIControlContainerCustom == null))
				{
					this.mUIControlContainerCustom = new UIControlContainerCustom9(this);
				}
				return this.mUIControlContainerCustom;
			}
		}
		#endregion
		#region Fields
		private UIControlContainerCustom9 mUIControlContainerCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIControlContainerCustom9 : DXTestControl
	{
		public UIControlContainerCustom9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]ControlContainer[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public UIMyRichTextBoxCustom UIMyRichTextBoxCustom
		{
			get
			{
				if ((this.mUIMyRichTextBoxCustom == null))
				{
					this.mUIMyRichTextBoxCustom = new UIMyRichTextBoxCustom(this);
				}
				return this.mUIMyRichTextBoxCustom;
			}
		}
		#endregion
		#region Fields
		private UIMyRichTextBoxCustom mUIMyRichTextBoxCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIMyRichTextBoxCustom : DXTestControl
	{
		public UIMyRichTextBoxCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "PreviewControlDockPanel[0]ControlContainer[0]MyRichTextBox[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MyRichTextBox";
			this.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
			#endregion
		}
		#region Properties
		public WinEdit UIItemEdit
		{
			get
			{
				if ((this.mUIItemEdit == null))
				{
					this.mUIItemEdit = new WinEdit(this);
					#region Search Criteria
					this.mUIItemEdit.WindowTitles.Add("XtraPrinting Features Demo (C# code) - RichTextBox");
					#endregion
				}
				return this.mUIItemEdit;
			}
		}
		#endregion
		#region Fields
		private WinEdit mUIItemEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIGcNavigationsClient9 UIGcNavigationsClient
		{
			get
			{
				if ((this.mUIGcNavigationsClient == null))
				{
					this.mUIGcNavigationsClient = new UIGcNavigationsClient9(this);
				}
				return this.mUIGcNavigationsClient;
			}
		}
		#endregion
		#region Fields
		private UIGcNavigationsClient9 mUIGcNavigationsClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcNavigationsClient9 : DXTestControl
	{
		public UIGcNavigationsClient9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNavigations";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar7 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar7(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar7 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar7 : DXTestControl
	{
		public UINavBarControl1NavBar7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "accordionControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public UIUICustomizationNavBarGroup UIUICustomizationNavBarGroup
		{
			get
			{
				if ((this.mUIUICustomizationNavBarGroup == null))
				{
					this.mUIUICustomizationNavBarGroup = new UIUICustomizationNavBarGroup(this);
				}
				return this.mUIUICustomizationNavBarGroup;
			}
		}
		public UIViewsNavBarGroup UIViewsNavBarGroup
		{
			get
			{
				if ((this.mUIViewsNavBarGroup == null))
				{
					this.mUIViewsNavBarGroup = new UIViewsNavBarGroup(this);
				}
				return this.mUIViewsNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIUICustomizationNavBarGroup mUIUICustomizationNavBarGroup;
		private UIViewsNavBarGroup mUIViewsNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIUICustomizationNavBarGroup : DXTestControl
	{
		public UIUICustomizationNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "UI Customization";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UIAddGroupsNavBarLink
		{
			get
			{
				if ((this.mUIAddGroupsNavBarLink == null))
				{
					this.mUIAddGroupsNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIAddGroupsNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Add Groups";
					this.mUIAddGroupsNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIAddGroupsNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
					#endregion
				}
				return this.mUIAddGroupsNavBarLink;
			}
		}
		public DXTestControl UIAddItemLinksNavBarLink
		{
			get
			{
				if ((this.mUIAddItemLinksNavBarLink == null))
				{
					this.mUIAddItemLinksNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIAddItemLinksNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Add Item Links";
					this.mUIAddItemLinksNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIAddItemLinksNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
					#endregion
				}
				return this.mUIAddItemLinksNavBarLink;
			}
		}
		public DXTestControl UIHitInfoNavBarLink
		{
			get
			{
				if ((this.mUIHitInfoNavBarLink == null))
				{
					this.mUIHitInfoNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIHitInfoNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Hit Info";
					this.mUIHitInfoNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIHitInfoNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
					#endregion
				}
				return this.mUIHitInfoNavBarLink;
			}
		}
		public DXTestControl UIPropertiesNavBarLink
		{
			get
			{
				if ((this.mUIPropertiesNavBarLink == null))
				{
					this.mUIPropertiesNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIPropertiesNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Properties";
					this.mUIPropertiesNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIPropertiesNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
					#endregion
				}
				return this.mUIPropertiesNavBarLink;
			}
		}
		public DXTestControl UIDragAndDropNavBarLink
		{
			get
			{
				if ((this.mUIDragAndDropNavBarLink == null))
				{
					this.mUIDragAndDropNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUIDragAndDropNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Drag And Drop";
					this.mUIDragAndDropNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUIDragAndDropNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
					#endregion
				}
				return this.mUIDragAndDropNavBarLink;
			}
		}
		public DXTestControl UICustomizableDistanceNavBarLink
		{
			get
			{
				if ((this.mUICustomizableDistanceNavBarLink == null))
				{
					this.mUICustomizableDistanceNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUICustomizableDistanceNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Customizable Distances";
					this.mUICustomizableDistanceNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUICustomizableDistanceNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
					#endregion
				}
				return this.mUICustomizableDistanceNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUIAddGroupsNavBarLink;
		private DXTestControl mUIAddItemLinksNavBarLink;
		private DXTestControl mUIHitInfoNavBarLink;
		private DXTestControl mUIPropertiesNavBarLink;
		private DXTestControl mUIDragAndDropNavBarLink;
		private DXTestControl mUICustomizableDistanceNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIViewsNavBarGroup : DXTestControl
	{
		public UIViewsNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Views";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
			#endregion
		}
		#region Properties
		public DXTestControl UINavigationPaneNavBarLink
		{
			get
			{
				if ((this.mUINavigationPaneNavBarLink == null))
				{
					this.mUINavigationPaneNavBarLink = new DXTestControl(this);
					#region Search Criteria
					this.mUINavigationPaneNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Navigation Pane";
					this.mUINavigationPaneNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AccordionControlItem";
					this.mUINavigationPaneNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code)");
					#endregion
				}
				return this.mUINavigationPaneNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUINavigationPaneNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow1 : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Add Groups";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client139 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client139(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client139 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client139 : DXTestControl
	{
		public UIPanelControl1Client139(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
			#endregion
		}
		#region Properties
		public UIGcContainerClient77 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient77(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient77 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient77 : DXTestControl
	{
		public UIGcContainerClient77(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
			#endregion
		}
		#region Properties
		public UIAddGroupsCustom UIAddGroupsCustom
		{
			get
			{
				if ((this.mUIAddGroupsCustom == null))
				{
					this.mUIAddGroupsCustom = new UIAddGroupsCustom(this);
				}
				return this.mUIAddGroupsCustom;
			}
		}
		#endregion
		#region Fields
		private UIAddGroupsCustom mUIAddGroupsCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddGroupsCustom : DXTestControl
	{
		public UIAddGroupsCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AddGroups";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AddGroups";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
			#endregion
		}
		#region Properties
		public UIPanelControlClient4 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient4(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient4 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient4 : DXTestControl
	{
		public UIPanelControlClient4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AddGroupsPanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client140 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client140(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UINavBarControl1NavBar8 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar8(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client140 mUIPanelControl1Client;
		private UINavBarControl1NavBar8 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client140 : DXTestControl
	{
		public UIPanelControl1Client140(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
			#endregion
		}
		#region Properties
		public DXButton UIAddNewGroupButton
		{
			get
			{
				if ((this.mUIAddNewGroupButton == null))
				{
					this.mUIAddNewGroupButton = new DXButton(this);
					#region Search Criteria
					this.mUIAddNewGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "button1";
					this.mUIAddNewGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIAddNewGroupButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
					#endregion
				}
				return this.mUIAddNewGroupButton;
			}
		}
		public DXButton UIDeleteLastGroupButton
		{
			get
			{
				if ((this.mUIDeleteLastGroupButton == null))
				{
					this.mUIDeleteLastGroupButton = new DXButton(this);
					#region Search Criteria
					this.mUIDeleteLastGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "button2";
					this.mUIDeleteLastGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIDeleteLastGroupButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
					#endregion
				}
				return this.mUIDeleteLastGroupButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIAddNewGroupButton;
		private DXButton mUIDeleteLastGroupButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar8 : DXNavBar
	{
		public UINavBarControl1NavBar8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
			#endregion
		}
		#region Properties
		public DXNavBarGroup UIGroup3NavBarGroup
		{
			get
			{
				if ((this.mUIGroup3NavBarGroup == null))
				{
					this.mUIGroup3NavBarGroup = new DXNavBarGroup(this);
					#region Search Criteria
					this.mUIGroup3NavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Group 3";
					this.mUIGroup3NavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
					this.mUIGroup3NavBarGroup.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
					#endregion
				}
				return this.mUIGroup3NavBarGroup;
			}
		}
		public DXNavBarGroup UIGroup4NavBarGroup
		{
			get
			{
				if ((this.mUIGroup4NavBarGroup == null))
				{
					this.mUIGroup4NavBarGroup = new DXNavBarGroup(this);
					#region Search Criteria
					this.mUIGroup4NavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Group 4";
					this.mUIGroup4NavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
					this.mUIGroup4NavBarGroup.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Groups");
					#endregion
				}
				return this.mUIGroup4NavBarGroup;
			}
		}
		#endregion
		#region Fields
		private DXNavBarGroup mUIGroup3NavBarGroup;
		private DXNavBarGroup mUIGroup4NavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow2 : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow2()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Add Item Links";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client141 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client141(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client141 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client141 : DXTestControl
	{
		public UIPanelControl1Client141(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public UIGcContainerClient78 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient78(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient78 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient78 : DXTestControl
	{
		public UIGcContainerClient78(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public UIAddItemLinksCustom UIAddItemLinksCustom
		{
			get
			{
				if ((this.mUIAddItemLinksCustom == null))
				{
					this.mUIAddItemLinksCustom = new UIAddItemLinksCustom(this);
				}
				return this.mUIAddItemLinksCustom;
			}
		}
		#endregion
		#region Fields
		private UIAddItemLinksCustom mUIAddItemLinksCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIAddItemLinksCustom : DXTestControl
	{
		public UIAddItemLinksCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AddItemLinks";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AddItemLinks";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public UIPanelControlClient5 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient5(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient5 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient5 : DXTestControl
	{
		public UIPanelControlClient5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "AddItemLinksPanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client142 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client142(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		public UINavBarControl1NavBar9 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar9(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client142 mUIPanelControl1Client;
		private UINavBarControl1NavBar9 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client142 : DXTestControl
	{
		public UIPanelControl1Client142(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public DXButton UIAddNewItemLinktotheAButton
		{
			get
			{
				if ((this.mUIAddNewItemLinktotheAButton == null))
				{
					this.mUIAddNewItemLinktotheAButton = new DXButton(this);
					#region Search Criteria
					this.mUIAddNewItemLinktotheAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "button1";
					this.mUIAddNewItemLinktotheAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIAddNewItemLinktotheAButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
					#endregion
				}
				return this.mUIAddNewItemLinktotheAButton;
			}
		}
		public DXButton UIAddNewSeparatorItemtButton
		{
			get
			{
				if ((this.mUIAddNewSeparatorItemtButton == null))
				{
					this.mUIAddNewSeparatorItemtButton = new DXButton(this);
					#region Search Criteria
					this.mUIAddNewSeparatorItemtButton.SearchProperties[DXTestControl.PropertyNames.Name] = "button4";
					this.mUIAddNewSeparatorItemtButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIAddNewSeparatorItemtButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
					#endregion
				}
				return this.mUIAddNewSeparatorItemtButton;
			}
		}
		public DXButton UIDeleteSelectedItemLiButton
		{
			get
			{
				if ((this.mUIDeleteSelectedItemLiButton == null))
				{
					this.mUIDeleteSelectedItemLiButton = new DXButton(this);
					#region Search Criteria
					this.mUIDeleteSelectedItemLiButton.SearchProperties[DXTestControl.PropertyNames.Name] = "button2";
					this.mUIDeleteSelectedItemLiButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIDeleteSelectedItemLiButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
					#endregion
				}
				return this.mUIDeleteSelectedItemLiButton;
			}
		}
		public DXButton UIDeleteItemfortheSeleButton
		{
			get
			{
				if ((this.mUIDeleteItemfortheSeleButton == null))
				{
					this.mUIDeleteItemfortheSeleButton = new DXButton(this);
					#region Search Criteria
					this.mUIDeleteItemfortheSeleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "button3";
					this.mUIDeleteItemfortheSeleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUIDeleteItemfortheSeleButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
					#endregion
				}
				return this.mUIDeleteItemfortheSeleButton;
			}
		}
		#endregion
		#region Fields
		private DXButton mUIAddNewItemLinktotheAButton;
		private DXButton mUIAddNewSeparatorItemtButton;
		private DXButton mUIDeleteSelectedItemLiButton;
		private DXButton mUIDeleteItemfortheSeleButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar9 : DXNavBar
	{
		public UINavBarControl1NavBar9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public UISmallLinksNavBarGroup UISmallLinksNavBarGroup
		{
			get
			{
				if ((this.mUISmallLinksNavBarGroup == null))
				{
					this.mUISmallLinksNavBarGroup = new UISmallLinksNavBarGroup(this);
				}
				return this.mUISmallLinksNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UISmallLinksNavBarGroup mUISmallLinksNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISmallLinksNavBarGroup : DXNavBarGroup
	{
		public UISmallLinksNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Small Links";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
			#endregion
		}
		#region Properties
		public DXNavBarLink UIItem0NavBarLink
		{
			get
			{
				if ((this.mUIItem0NavBarLink == null))
				{
					this.mUIItem0NavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUIItem0NavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Item 0";
					this.mUIItem0NavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUIItem0NavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Add Item Links");
					#endregion
				}
				return this.mUIItem0NavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXNavBarLink mUIItem0NavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow3 : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow3()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Hit Info";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client143 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client143(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client143 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client143 : DXTestControl
	{
		public UIPanelControl1Client143(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public UIGcContainerClient79 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient79(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient79 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient79 : DXTestControl
	{
		public UIGcContainerClient79(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public UIHitInfoCustom UIHitInfoCustom
		{
			get
			{
				if ((this.mUIHitInfoCustom == null))
				{
					this.mUIHitInfoCustom = new UIHitInfoCustom(this);
				}
				return this.mUIHitInfoCustom;
			}
		}
		#endregion
		#region Fields
		private UIHitInfoCustom mUIHitInfoCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIHitInfoCustom : DXTestControl
	{
		public UIHitInfoCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "HitInfo";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HitInfo";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public UIPanelControlClient6 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient6(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient6 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient6 : DXTestControl
	{
		public UIPanelControlClient6(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "HitInfoPanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar10 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar10(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		public UIPanelControl1Client144 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client144(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar10 mUINavBarControl1NavBar;
		private UIPanelControl1Client144 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar10 : DXNavBar
	{
		public UINavBarControl1NavBar10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public UILocalNavBarGroup UILocalNavBarGroup
		{
			get
			{
				if ((this.mUILocalNavBarGroup == null))
				{
					this.mUILocalNavBarGroup = new UILocalNavBarGroup(this);
				}
				return this.mUILocalNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UILocalNavBarGroup mUILocalNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILocalNavBarGroup : DXNavBarGroup
	{
		public UILocalNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Local";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public DXNavBarLink UIReportNavBarLink
		{
			get
			{
				if ((this.mUIReportNavBarLink == null))
				{
					this.mUIReportNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUIReportNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Report";
					this.mUIReportNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUIReportNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
					#endregion
				}
				return this.mUIReportNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXNavBarLink mUIReportNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client144 : DXTestControl
	{
		public UIPanelControl1Client144(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
			#endregion
		}
		#region Properties
		public DXTextEdit UILbClickEdit
		{
			get
			{
				if ((this.mUILbClickEdit == null))
				{
					this.mUILbClickEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUILbClickEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lbClick";
					this.mUILbClickEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
					this.mUILbClickEdit.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Hit Info");
					#endregion
				}
				return this.mUILbClickEdit;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUILbClickEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow4 : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow4()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Properties";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client145 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client145(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client145 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client145 : DXTestControl
	{
		public UIPanelControl1Client145(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public UIGcContainerClient80 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient80(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient80 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient80 : DXTestControl
	{
		public UIGcContainerClient80(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public UIFrmNavBarPropertiesCustom UIFrmNavBarPropertiesCustom
		{
			get
			{
				if ((this.mUIFrmNavBarPropertiesCustom == null))
				{
					this.mUIFrmNavBarPropertiesCustom = new UIFrmNavBarPropertiesCustom(this);
				}
				return this.mUIFrmNavBarPropertiesCustom;
			}
		}
		#endregion
		#region Fields
		private UIFrmNavBarPropertiesCustom mUIFrmNavBarPropertiesCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFrmNavBarPropertiesCustom : DXTestControl
	{
		public UIFrmNavBarPropertiesCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarProperties";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "frmNavBarProperties";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public UIPanelControlClient7 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient7(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient7 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient7 : DXTestControl
	{
		public UIPanelControlClient7(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarPropertiesPanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar11 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar11(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar11 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar11 : DXNavBar
	{
		public UINavBarControl1NavBar11(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public UILocalNavBarGroup1 UILocalNavBarGroup
		{
			get
			{
				if ((this.mUILocalNavBarGroup == null))
				{
					this.mUILocalNavBarGroup = new UILocalNavBarGroup1(this);
				}
				return this.mUILocalNavBarGroup;
			}
		}
		public UIContactsNavBarGroup UIContactsNavBarGroup
		{
			get
			{
				if ((this.mUIContactsNavBarGroup == null))
				{
					this.mUIContactsNavBarGroup = new UIContactsNavBarGroup(this);
				}
				return this.mUIContactsNavBarGroup;
			}
		}
		public UIDeletedNavBarGroup UIDeletedNavBarGroup
		{
			get
			{
				if ((this.mUIDeletedNavBarGroup == null))
				{
					this.mUIDeletedNavBarGroup = new UIDeletedNavBarGroup(this);
				}
				return this.mUIDeletedNavBarGroup;
			}
		}
		public DXNavBarGroup UIElementNavBarGroup
		{
			get
			{
				if ((this.mUIElementNavBarGroup == null))
				{
					this.mUIElementNavBarGroup = new DXNavBarGroup(this);
					#region Search Criteria
					this.mUIElementNavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Element";
					this.mUIElementNavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
					this.mUIElementNavBarGroup.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
					#endregion
				}
				return this.mUIElementNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UILocalNavBarGroup1 mUILocalNavBarGroup;
		private UIContactsNavBarGroup mUIContactsNavBarGroup;
		private UIDeletedNavBarGroup mUIDeletedNavBarGroup;
		private DXNavBarGroup mUIElementNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILocalNavBarGroup1 : DXNavBarGroup
	{
		public UILocalNavBarGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Local";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public DXNavBarLink UIOutboxNavBarLink
		{
			get
			{
				if ((this.mUIOutboxNavBarLink == null))
				{
					this.mUIOutboxNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUIOutboxNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Outbox";
					this.mUIOutboxNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUIOutboxNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
					#endregion
				}
				return this.mUIOutboxNavBarLink;
			}
		}
		public DXNavBarLink UIOutboxtestNavBarLink
		{
			get
			{
				if ((this.mUIOutboxtestNavBarLink == null))
				{
					this.mUIOutboxtestNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUIOutboxtestNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Outbox test";
					this.mUIOutboxtestNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUIOutboxtestNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
					#endregion
				}
				return this.mUIOutboxtestNavBarLink;
			}
		}
		public DXNavBarLink UICalendar2013NavBarLink
		{
			get
			{
				if ((this.mUICalendar2013NavBarLink == null))
				{
					this.mUICalendar2013NavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUICalendar2013NavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Calendar 2013";
					this.mUICalendar2013NavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUICalendar2013NavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
					#endregion
				}
				return this.mUICalendar2013NavBarLink;
			}
		}
		public DXNavBarLink UIInboxNavBarLink
		{
			get
			{
				if ((this.mUIInboxNavBarLink == null))
				{
					this.mUIInboxNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUIInboxNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Inbox";
					this.mUIInboxNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUIInboxNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
					#endregion
				}
				return this.mUIInboxNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXNavBarLink mUIOutboxNavBarLink;
		private DXNavBarLink mUIOutboxtestNavBarLink;
		private DXNavBarLink mUICalendar2013NavBarLink;
		private DXNavBarLink mUIInboxNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIContactsNavBarGroup : DXNavBarGroup
	{
		public UIContactsNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Contacts";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public DXNavBarLink UICalendar2013NavBarLink
		{
			get
			{
				if ((this.mUICalendar2013NavBarLink == null))
				{
					this.mUICalendar2013NavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUICalendar2013NavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Calendar 2013";
					this.mUICalendar2013NavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUICalendar2013NavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
					#endregion
				}
				return this.mUICalendar2013NavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXNavBarLink mUICalendar2013NavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDeletedNavBarGroup : DXNavBarGroup
	{
		public UIDeletedNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Deleted";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
			#endregion
		}
		#region Properties
		public DXNavBarLink UIInboxNavBarLink
		{
			get
			{
				if ((this.mUIInboxNavBarLink == null))
				{
					this.mUIInboxNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUIInboxNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Inbox";
					this.mUIInboxNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUIInboxNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Properties");
					#endregion
				}
				return this.mUIInboxNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXNavBarLink mUIInboxNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILinkPropertiesWindow1 : DXWindow
	{
		public UILinkPropertiesWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Link Properties";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Link Properties");
			#endregion
		}
		#region Properties
		public DXTextEdit UITxtCaptionEdit
		{
			get
			{
				if ((this.mUITxtCaptionEdit == null))
				{
					this.mUITxtCaptionEdit = new DXTextEdit(this);
					#region Search Criteria
					this.mUITxtCaptionEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtCaption";
					this.mUITxtCaptionEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
					this.mUITxtCaptionEdit.WindowTitles.Add("Link Properties");
					#endregion
				}
				return this.mUITxtCaptionEdit;
			}
		}
		public DXButton UISimpleButtonButton
		{
			get
			{
				if ((this.mUISimpleButtonButton == null))
				{
					this.mUISimpleButtonButton = new DXButton(this);
					#region Search Criteria
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
					this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
					this.mUISimpleButtonButton.WindowTitles.Add("Link Properties");
					#endregion
				}
				return this.mUISimpleButtonButton;
			}
		}
		public DXComboBox UIComboBoxEditComboBox
		{
			get
			{
				if ((this.mUIComboBoxEditComboBox == null))
				{
					this.mUIComboBoxEditComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbItem";
					this.mUIComboBoxEditComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUIComboBoxEditComboBox;
			}
		}
		#endregion
		#region Fields
		private DXTextEdit mUITxtCaptionEdit;
		private DXButton mUISimpleButtonButton;
		private DXComboBox mUIComboBoxEditComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow6 : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow6()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Drag And Drop";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client146 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client146(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client146 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client146 : DXTestControl
	{
		public UIPanelControl1Client146(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIGcContainerClient81 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient81(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient81 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient81 : DXTestControl
	{
		public UIGcContainerClient81(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIFrmNavBarDragDropCustom UIFrmNavBarDragDropCustom
		{
			get
			{
				if ((this.mUIFrmNavBarDragDropCustom == null))
				{
					this.mUIFrmNavBarDragDropCustom = new UIFrmNavBarDragDropCustom(this);
				}
				return this.mUIFrmNavBarDragDropCustom;
			}
		}
		#endregion
		#region Fields
		private UIFrmNavBarDragDropCustom mUIFrmNavBarDragDropCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFrmNavBarDragDropCustom : DXTestControl
	{
		public UIFrmNavBarDragDropCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarDragDrop";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "frmNavBarDragDrop";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIPanelControlClient8 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient8(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient8 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient8 : DXTestControl
	{
		public UIPanelControlClient8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarDragDropPanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar12 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar12(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		public UIGroupControl1Client4 UIGroupControl1Client
		{
			get
			{
				if ((this.mUIGroupControl1Client == null))
				{
					this.mUIGroupControl1Client = new UIGroupControl1Client4(this);
				}
				return this.mUIGroupControl1Client;
			}
		}
		public UIGroupControl2Client3 UIGroupControl2Client
		{
			get
			{
				if ((this.mUIGroupControl2Client == null))
				{
					this.mUIGroupControl2Client = new UIGroupControl2Client3(this);
				}
				return this.mUIGroupControl2Client;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar12 mUINavBarControl1NavBar;
		private UIGroupControl1Client4 mUIGroupControl1Client;
		private UIGroupControl2Client3 mUIGroupControl2Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar12 : DXNavBar
	{
		public UINavBarControl1NavBar12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIWindowsFormsNavBarGroup UIWindowsFormsNavBarGroup
		{
			get
			{
				if ((this.mUIWindowsFormsNavBarGroup == null))
				{
					this.mUIWindowsFormsNavBarGroup = new UIWindowsFormsNavBarGroup(this);
				}
				return this.mUIWindowsFormsNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIWindowsFormsNavBarGroup mUIWindowsFormsNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIWindowsFormsNavBarGroup : DXNavBarGroup
	{
		public UIWindowsFormsNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Windows Forms";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public DXNavBarLink UILabelNavBarLink
		{
			get
			{
				if ((this.mUILabelNavBarLink == null))
				{
					this.mUILabelNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUILabelNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Label";
					this.mUILabelNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUILabelNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
					#endregion
				}
				return this.mUILabelNavBarLink;
			}
		}
		public DXNavBarLink UITreeListNavBarLink
		{
			get
			{
				if ((this.mUITreeListNavBarLink == null))
				{
					this.mUITreeListNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUITreeListNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "TreeList";
					this.mUITreeListNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUITreeListNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
					#endregion
				}
				return this.mUITreeListNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXNavBarLink mUILabelNavBarLink;
		private DXNavBarLink mUITreeListNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl1Client4 : DXTestControl
	{
		public UIGroupControl1Client4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIListView1Custom UIListView1Custom
		{
			get
			{
				if ((this.mUIListView1Custom == null))
				{
					this.mUIListView1Custom = new UIListView1Custom(this);
				}
				return this.mUIListView1Custom;
			}
		}
		#endregion
		#region Fields
		private UIListView1Custom mUIListView1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListView1Custom : DXTestControl
	{
		public UIListView1Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "listView1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListView";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public WinList UIListView1List
		{
			get
			{
				if ((this.mUIListView1List == null))
				{
					this.mUIListView1List = new WinList(this);
					#region Search Criteria
					this.mUIListView1List.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
					#endregion
				}
				return this.mUIListView1List;
			}
		}
		public UIListView1Window UIListView1Window
		{
			get
			{
				if ((this.mUIListView1Window == null))
				{
					this.mUIListView1Window = new UIListView1Window(this);
				}
				return this.mUIListView1Window;
			}
		}
		#endregion
		#region Fields
		private WinList mUIListView1List;
		private UIListView1Window mUIListView1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListView1Window : WinWindow
	{
		public UIListView1Window(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listView1";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIListView1List UIListView1List
		{
			get
			{
				if ((this.mUIListView1List == null))
				{
					this.mUIListView1List = new UIListView1List(this);
				}
				return this.mUIListView1List;
			}
		}
		#endregion
		#region Fields
		private UIListView1List mUIListView1List;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListView1List : WinList
	{
		public UIListView1List(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public WinListItem UILabelListItem
		{
			get
			{
				if ((this.mUILabelListItem == null))
				{
					this.mUILabelListItem = new WinListItem(this);
					#region Search Criteria
					this.mUILabelListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Label";
					this.mUILabelListItem.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
					#endregion
				}
				return this.mUILabelListItem;
			}
		}
		#endregion
		#region Fields
		private WinListItem mUILabelListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl2Client3 : DXTestControl
	{
		public UIGroupControl2Client3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public DXTestControl UILbRecycleLabel
		{
			get
			{
				if ((this.mUILbRecycleLabel == null))
				{
					this.mUILbRecycleLabel = new DXTestControl(this);
					#region Search Criteria
					this.mUILbRecycleLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lbRecycle";
					this.mUILbRecycleLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
					this.mUILbRecycleLabel.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
					#endregion
				}
				return this.mUILbRecycleLabel;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUILbRecycleLabel;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow5 : WinWindow
	{
		public UITheXtraNavBarSuiteDeWindow5()
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Drag And Drop";
			this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client147 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client147(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client147 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client147 : DXTestControl
	{
		public UIPanelControl1Client147(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIGcContainerClient82 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient82(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient82 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient82 : DXTestControl
	{
		public UIGcContainerClient82(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIFrmNavBarDragDropCustom1 UIFrmNavBarDragDropCustom
		{
			get
			{
				if ((this.mUIFrmNavBarDragDropCustom == null))
				{
					this.mUIFrmNavBarDragDropCustom = new UIFrmNavBarDragDropCustom1(this);
				}
				return this.mUIFrmNavBarDragDropCustom;
			}
		}
		#endregion
		#region Fields
		private UIFrmNavBarDragDropCustom1 mUIFrmNavBarDragDropCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFrmNavBarDragDropCustom1 : DXTestControl
	{
		public UIFrmNavBarDragDropCustom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarDragDrop";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "frmNavBarDragDrop";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIPanelControlClient9 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient9(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient9 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient9 : DXTestControl
	{
		public UIPanelControlClient9(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarDragDropPanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIGroupControl1Client5 UIGroupControl1Client
		{
			get
			{
				if ((this.mUIGroupControl1Client == null))
				{
					this.mUIGroupControl1Client = new UIGroupControl1Client5(this);
				}
				return this.mUIGroupControl1Client;
			}
		}
		public UINavBarControl1NavBar13 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar13(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UIGroupControl1Client5 mUIGroupControl1Client;
		private UINavBarControl1NavBar13 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGroupControl1Client5 : DXTestControl
	{
		public UIGroupControl1Client5(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIListView1Custom1 UIListView1Custom
		{
			get
			{
				if ((this.mUIListView1Custom == null))
				{
					this.mUIListView1Custom = new UIListView1Custom1(this);
				}
				return this.mUIListView1Custom;
			}
		}
		#endregion
		#region Fields
		private UIListView1Custom1 mUIListView1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListView1Custom1 : DXTestControl
	{
		public UIListView1Custom1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "listView1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ListView";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIListView1Window1 UIListView1Window
		{
			get
			{
				if ((this.mUIListView1Window == null))
				{
					this.mUIListView1Window = new UIListView1Window1(this);
				}
				return this.mUIListView1Window;
			}
		}
		#endregion
		#region Fields
		private UIListView1Window1 mUIListView1Window;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListView1Window1 : WinWindow
	{
		public UIListView1Window1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listView1";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIListView1List1 UIListView1List
		{
			get
			{
				if ((this.mUIListView1List == null))
				{
					this.mUIListView1List = new UIListView1List1(this);
				}
				return this.mUIListView1List;
			}
		}
		#endregion
		#region Fields
		private UIListView1List1 mUIListView1List;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIListView1List1 : WinList
	{
		public UIListView1List1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public WinListItem UITreeListListItem
		{
			get
			{
				if ((this.mUITreeListListItem == null))
				{
					this.mUITreeListListItem = new WinListItem(this);
					#region Search Criteria
					this.mUITreeListListItem.SearchProperties[WinListItem.PropertyNames.Name] = "TreeList";
					this.mUITreeListListItem.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
					#endregion
				}
				return this.mUITreeListListItem;
			}
		}
		#endregion
		#region Fields
		private WinListItem mUITreeListListItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar13 : DXNavBar
	{
		public UINavBarControl1NavBar13(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public UIWindowsFormsNavBarGroup1 UIWindowsFormsNavBarGroup
		{
			get
			{
				if ((this.mUIWindowsFormsNavBarGroup == null))
				{
					this.mUIWindowsFormsNavBarGroup = new UIWindowsFormsNavBarGroup1(this);
				}
				return this.mUIWindowsFormsNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIWindowsFormsNavBarGroup1 mUIWindowsFormsNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIWindowsFormsNavBarGroup1 : DXNavBarGroup
	{
		public UIWindowsFormsNavBarGroup1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Windows Forms";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
			#endregion
		}
		#region Properties
		public DXNavBarLink UILabelNavBarLink
		{
			get
			{
				if ((this.mUILabelNavBarLink == null))
				{
					this.mUILabelNavBarLink = new DXNavBarLink(this);
					#region Search Criteria
					this.mUILabelNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Label";
					this.mUILabelNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
					this.mUILabelNavBarLink.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Drag And Drop");
					#endregion
				}
				return this.mUILabelNavBarLink;
			}
		}
		#endregion
		#region Fields
		private DXNavBarLink mUILabelNavBarLink;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow7 : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow7()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Customizable Distances";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client148 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client148(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client148 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client148 : DXTestControl
	{
		public UIPanelControl1Client148(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public UIGcContainerClient83 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient83(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient83 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient83 : DXTestControl
	{
		public UIGcContainerClient83(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public UICustomizableDistanceCustom UICustomizableDistanceCustom
		{
			get
			{
				if ((this.mUICustomizableDistanceCustom == null))
				{
					this.mUICustomizableDistanceCustom = new UICustomizableDistanceCustom(this);
				}
				return this.mUICustomizableDistanceCustom;
			}
		}
		#endregion
		#region Fields
		private UICustomizableDistanceCustom mUICustomizableDistanceCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UICustomizableDistanceCustom : DXTestControl
	{
		public UICustomizableDistanceCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomizableDistances";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomizableDistances";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public UIPanelControlClient10 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient10(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient10 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient10 : DXTestControl
	{
		public UIPanelControlClient10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomizableDistancesPanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar14 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar14(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		public UIPanel1Client10 UIPanel1Client
		{
			get
			{
				if ((this.mUIPanel1Client == null))
				{
					this.mUIPanel1Client = new UIPanel1Client10(this);
				}
				return this.mUIPanel1Client;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar14 mUINavBarControl1NavBar;
		private UIPanel1Client10 mUIPanel1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar14 : DXNavBar
	{
		public UINavBarControl1NavBar14(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public UIDisksNavBarGroup UIDisksNavBarGroup
		{
			get
			{
				if ((this.mUIDisksNavBarGroup == null))
				{
					this.mUIDisksNavBarGroup = new UIDisksNavBarGroup(this);
				}
				return this.mUIDisksNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private UIDisksNavBarGroup mUIDisksNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDisksNavBarGroup : DXNavBarGroup
	{
		public UIDisksNavBarGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Disks";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public DXNavBarGroupButton UIDisksNavBarGroupButton
		{
			get
			{
				if ((this.mUIDisksNavBarGroupButton == null))
				{
					this.mUIDisksNavBarGroupButton = new DXNavBarGroupButton(this);
					#region Search Criteria
					this.mUIDisksNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Disks";
					this.mUIDisksNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupButton";
					this.mUIDisksNavBarGroupButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
					#endregion
				}
				return this.mUIDisksNavBarGroupButton;
			}
		}
		#endregion
		#region Fields
		private DXNavBarGroupButton mUIDisksNavBarGroupButton;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanel1Client10 : DXTestControl
	{
		public UIPanel1Client10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panel1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public UIDistanceChanger2Custom UIDistanceChanger2Custom
		{
			get
			{
				if ((this.mUIDistanceChanger2Custom == null))
				{
					this.mUIDistanceChanger2Custom = new UIDistanceChanger2Custom(this);
				}
				return this.mUIDistanceChanger2Custom;
			}
		}
		public UIDistanceChanger1Custom UIDistanceChanger1Custom
		{
			get
			{
				if ((this.mUIDistanceChanger1Custom == null))
				{
					this.mUIDistanceChanger1Custom = new UIDistanceChanger1Custom(this);
				}
				return this.mUIDistanceChanger1Custom;
			}
		}
		public UIDistanceChanger3Custom UIDistanceChanger3Custom
		{
			get
			{
				if ((this.mUIDistanceChanger3Custom == null))
				{
					this.mUIDistanceChanger3Custom = new UIDistanceChanger3Custom(this);
				}
				return this.mUIDistanceChanger3Custom;
			}
		}
		#endregion
		#region Fields
		private UIDistanceChanger2Custom mUIDistanceChanger2Custom;
		private UIDistanceChanger1Custom mUIDistanceChanger1Custom;
		private UIDistanceChanger3Custom mUIDistanceChanger3Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDistanceChanger2Custom : DXTestControl
	{
		public UIDistanceChanger2Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "distanceChanger2";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DistanceChanger";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public DXTrackBar UITrackBar1TrackBar
		{
			get
			{
				if ((this.mUITrackBar1TrackBar == null))
				{
					this.mUITrackBar1TrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUITrackBar1TrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "trackBar1";
					this.mUITrackBar1TrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TrackBarControl";
					this.mUITrackBar1TrackBar.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
					#endregion
				}
				return this.mUITrackBar1TrackBar;
			}
		}
		#endregion
		#region Fields
		private DXTrackBar mUITrackBar1TrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDistanceChanger1Custom : DXTestControl
	{
		public UIDistanceChanger1Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "distanceChanger1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DistanceChanger";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public DXTrackBar UITrackBar1TrackBar
		{
			get
			{
				if ((this.mUITrackBar1TrackBar == null))
				{
					this.mUITrackBar1TrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUITrackBar1TrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "trackBar1";
					this.mUITrackBar1TrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TrackBarControl";
					this.mUITrackBar1TrackBar.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
					#endregion
				}
				return this.mUITrackBar1TrackBar;
			}
		}
		#endregion
		#region Fields
		private DXTrackBar mUITrackBar1TrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDistanceChanger3Custom : DXTestControl
	{
		public UIDistanceChanger3Custom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "distanceChanger3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DistanceChanger";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
			#endregion
		}
		#region Properties
		public DXTrackBar UITrackBar1TrackBar
		{
			get
			{
				if ((this.mUITrackBar1TrackBar == null))
				{
					this.mUITrackBar1TrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUITrackBar1TrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "trackBar1";
					this.mUITrackBar1TrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TrackBarControl";
					this.mUITrackBar1TrackBar.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Customizable Distances");
					#endregion
				}
				return this.mUITrackBar1TrackBar;
			}
		}
		#endregion
		#region Fields
		private DXTrackBar mUITrackBar1TrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraNavBarSuiteDeWindow8 : DXWindow
	{
		public UITheXtraNavBarSuiteDeWindow8()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraNavBar Suite Demo (C# code) - Navigation Pane";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client149 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client149(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client149 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client149 : DXTestControl
	{
		public UIPanelControl1Client149(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UIGcContainerClient84 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient84(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient84 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient84 : DXTestControl
	{
		public UIGcContainerClient84(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UIFrmNavBarNavigationPCustom UIFrmNavBarNavigationPCustom
		{
			get
			{
				if ((this.mUIFrmNavBarNavigationPCustom == null))
				{
					this.mUIFrmNavBarNavigationPCustom = new UIFrmNavBarNavigationPCustom(this);
				}
				return this.mUIFrmNavBarNavigationPCustom;
			}
		}
		#endregion
		#region Fields
		private UIFrmNavBarNavigationPCustom mUIFrmNavBarNavigationPCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIFrmNavBarNavigationPCustom : DXTestControl
	{
		public UIFrmNavBarNavigationPCustom(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarNavigationPane";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "frmNavBarNavigationPane";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UIPanelControlClient12 UIPanelControlClient
		{
			get
			{
				if ((this.mUIPanelControlClient == null))
				{
					this.mUIPanelControlClient = new UIPanelControlClient12(this);
				}
				return this.mUIPanelControlClient;
			}
		}
		#endregion
		#region Fields
		private UIPanelControlClient12 mUIPanelControlClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControlClient12 : DXTestControl
	{
		public UIPanelControlClient12(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "frmNavBarNavigationPanePanelControl[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UIPanelControl3Client2 UIPanelControl3Client
		{
			get
			{
				if ((this.mUIPanelControl3Client == null))
				{
					this.mUIPanelControl3Client = new UIPanelControl3Client2(this);
				}
				return this.mUIPanelControl3Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl3Client2 mUIPanelControl3Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl3Client2 : DXTestControl
	{
		public UIPanelControl3Client2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UISplitContainerControSplitContainerControl8 UISplitContainerControSplitContainerControl
		{
			get
			{
				if ((this.mUISplitContainerControSplitContainerControl == null))
				{
					this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl8(this);
				}
				return this.mUISplitContainerControSplitContainerControl;
			}
		}
		#endregion
		#region Fields
		private UISplitContainerControSplitContainerControl8 mUISplitContainerControSplitContainerControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitContainerControSplitContainerControl8 : DXSplitContainerControl
	{
		public UISplitContainerControSplitContainerControl8(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UISplitGroupPanelClient10 UISplitGroupPanelClient
		{
			get
			{
				if ((this.mUISplitGroupPanelClient == null))
				{
					this.mUISplitGroupPanelClient = new UISplitGroupPanelClient10(this);
				}
				return this.mUISplitGroupPanelClient;
			}
		}
		#endregion
		#region Fields
		private UISplitGroupPanelClient10 mUISplitGroupPanelClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UISplitGroupPanelClient10 : DXTestControl
	{
		public UISplitGroupPanelClient10(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public UINavBarControl1NavBar15 UINavBarControl1NavBar
		{
			get
			{
				if ((this.mUINavBarControl1NavBar == null))
				{
					this.mUINavBarControl1NavBar = new UINavBarControl1NavBar15(this);
				}
				return this.mUINavBarControl1NavBar;
			}
		}
		#endregion
		#region Fields
		private UINavBarControl1NavBar15 mUINavBarControl1NavBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavBarControl1NavBar15 : DXNavBar
	{
		public UINavBarControl1NavBar15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarControl";
			this.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
			#endregion
		}
		#region Properties
		public DXTestControl UINavBarExpandButtonNavBarExpandButton
		{
			get
			{
				if ((this.mUINavBarExpandButtonNavBarExpandButton == null))
				{
					this.mUINavBarExpandButtonNavBarExpandButton = new DXTestControl(this);
					#region Search Criteria
					this.mUINavBarExpandButtonNavBarExpandButton.SearchProperties[DXTestControl.PropertyNames.Name] = "NavBarExpandButton";
					this.mUINavBarExpandButtonNavBarExpandButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarExpandButton";
					this.mUINavBarExpandButtonNavBarExpandButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
					#endregion
				}
				return this.mUINavBarExpandButtonNavBarExpandButton;
			}
		}
		public DXNavBarOverflowPanelButton UIConfigureButtonNavBarOverflowPanelButton
		{
			get
			{
				if ((this.mUIConfigureButtonNavBarOverflowPanelButton == null))
				{
					this.mUIConfigureButtonNavBarOverflowPanelButton = new DXNavBarOverflowPanelButton(this);
					#region Search Criteria
					this.mUIConfigureButtonNavBarOverflowPanelButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ConfigureButton";
					this.mUIConfigureButtonNavBarOverflowPanelButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarOverflowPanelButton";
					this.mUIConfigureButtonNavBarOverflowPanelButton.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
					#endregion
				}
				return this.mUIConfigureButtonNavBarOverflowPanelButton;
			}
		}
		public DXNavBarGroup UINotesNavBarGroup
		{
			get
			{
				if ((this.mUINotesNavBarGroup == null))
				{
					this.mUINotesNavBarGroup = new DXNavBarGroup(this);
					#region Search Criteria
					this.mUINotesNavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Notes";
					this.mUINotesNavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
					this.mUINotesNavBarGroup.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
					#endregion
				}
				return this.mUINotesNavBarGroup;
			}
		}
		public DXNavBarGroup UIFolderListNavBarGroup
		{
			get
			{
				if ((this.mUIFolderListNavBarGroup == null))
				{
					this.mUIFolderListNavBarGroup = new DXNavBarGroup(this);
					#region Search Criteria
					this.mUIFolderListNavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Folder List";
					this.mUIFolderListNavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
					this.mUIFolderListNavBarGroup.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
					#endregion
				}
				return this.mUIFolderListNavBarGroup;
			}
		}
		public DXNavBarGroup UICalendarNavBarGroup
		{
			get
			{
				if ((this.mUICalendarNavBarGroup == null))
				{
					this.mUICalendarNavBarGroup = new DXNavBarGroup(this);
					#region Search Criteria
					this.mUICalendarNavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Calendar";
					this.mUICalendarNavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
					this.mUICalendarNavBarGroup.WindowTitles.Add("The XtraNavBar Suite Demo (C# code) - Navigation Pane");
					#endregion
				}
				return this.mUICalendarNavBarGroup;
			}
		}
		#endregion
		#region Fields
		private DXTestControl mUINavBarExpandButtonNavBarExpandButton;
		private DXNavBarOverflowPanelButton mUIConfigureButtonNavBarOverflowPanelButton;
		private DXNavBarGroup mUINotesNavBarGroup;
		private DXNavBarGroup mUIFolderListNavBarGroup;
		private DXNavBarGroup mUICalendarNavBarGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIWatermarkWindow1 : DXWindow
	{
		public UIWatermarkWindow1()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Watermark";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom15 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom15(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom15 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom15 : DXTestControl
	{
		public UILayoutControl1Custom15(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UIRootLayoutGroup3 UIRootLayoutGroup
		{
			get
			{
				if ((this.mUIRootLayoutGroup == null))
				{
					this.mUIRootLayoutGroup = new UIRootLayoutGroup3(this);
				}
				return this.mUIRootLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UIRootLayoutGroup3 mUIRootLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRootLayoutGroup3 : DXBaseLayoutItem
	{
		public UIRootLayoutGroup3(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UIPanelControl1itemTabbedGroup UIPanelControl1itemTabbedGroup
		{
			get
			{
				if ((this.mUIPanelControl1itemTabbedGroup == null))
				{
					this.mUIPanelControl1itemTabbedGroup = new UIPanelControl1itemTabbedGroup(this);
				}
				return this.mUIPanelControl1itemTabbedGroup;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1itemTabbedGroup mUIPanelControl1itemTabbedGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1itemTabbedGroup : DXBaseLayoutItem
	{
		public UIPanelControl1itemTabbedGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1item";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabbedGroup";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UITpTextWaterMarkLayoutGroup UITpTextWaterMarkLayoutGroup
		{
			get
			{
				if ((this.mUITpTextWaterMarkLayoutGroup == null))
				{
					this.mUITpTextWaterMarkLayoutGroup = new UITpTextWaterMarkLayoutGroup(this);
				}
				return this.mUITpTextWaterMarkLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UITpTextWaterMarkLayoutGroup mUITpTextWaterMarkLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITpTextWaterMarkLayoutGroup : DXBaseLayoutItem
	{
		public UITpTextWaterMarkLayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpTextWaterMark";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UILayoutControlGroup10LayoutGroup UILayoutControlGroup10LayoutGroup
		{
			get
			{
				if ((this.mUILayoutControlGroup10LayoutGroup == null))
				{
					this.mUILayoutControlGroup10LayoutGroup = new UILayoutControlGroup10LayoutGroup(this);
				}
				return this.mUILayoutControlGroup10LayoutGroup;
			}
		}
		public UILayoutControlGroup9LayoutGroup UILayoutControlGroup9LayoutGroup
		{
			get
			{
				if ((this.mUILayoutControlGroup9LayoutGroup == null))
				{
					this.mUILayoutControlGroup9LayoutGroup = new UILayoutControlGroup9LayoutGroup(this);
				}
				return this.mUILayoutControlGroup9LayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlGroup10LayoutGroup mUILayoutControlGroup10LayoutGroup;
		private UILayoutControlGroup9LayoutGroup mUILayoutControlGroup9LayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlGroup10LayoutGroup : DXBaseLayoutItem
	{
		public UILayoutControlGroup10LayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup10";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UILayoutControlItem25LayoutControlItem UILayoutControlItem25LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem25LayoutControlItem == null))
				{
					this.mUILayoutControlItem25LayoutControlItem = new UILayoutControlItem25LayoutControlItem(this);
				}
				return this.mUILayoutControlItem25LayoutControlItem;
			}
		}
		public UILayoutControlItem26LayoutControlItem UILayoutControlItem26LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem26LayoutControlItem == null))
				{
					this.mUILayoutControlItem26LayoutControlItem = new UILayoutControlItem26LayoutControlItem(this);
				}
				return this.mUILayoutControlItem26LayoutControlItem;
			}
		}
		public UILayoutControlItem27LayoutControlItem UILayoutControlItem27LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem27LayoutControlItem == null))
				{
					this.mUILayoutControlItem27LayoutControlItem = new UILayoutControlItem27LayoutControlItem(this);
				}
				return this.mUILayoutControlItem27LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem25LayoutControlItem mUILayoutControlItem25LayoutControlItem;
		private UILayoutControlItem26LayoutControlItem mUILayoutControlItem26LayoutControlItem;
		private UILayoutControlItem27LayoutControlItem mUILayoutControlItem27LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem25LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem25LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem25";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public DXComboBox UICmbWatermarkTextComboBox
		{
			get
			{
				if ((this.mUICmbWatermarkTextComboBox == null))
				{
					this.mUICmbWatermarkTextComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICmbWatermarkTextComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cmbWatermarkText";
					this.mUICmbWatermarkTextComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					this.mUICmbWatermarkTextComboBox.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUICmbWatermarkTextComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICmbWatermarkTextComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem26LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem26LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem26";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			#endregion
		}
		#region Properties
		public DXLookUpEdit UILkpTextDirectionLookUpEdit
		{
			get
			{
				if ((this.mUILkpTextDirectionLookUpEdit == null))
				{
					this.mUILkpTextDirectionLookUpEdit = new DXLookUpEdit(this);
					#region Search Criteria
					this.mUILkpTextDirectionLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lkpTextDirection";
					this.mUILkpTextDirectionLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
					#endregion
				}
				return this.mUILkpTextDirectionLookUpEdit;
			}
		}
		#endregion
		#region Fields
		private DXLookUpEdit mUILkpTextDirectionLookUpEdit;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem27LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem27LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem27";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			#endregion
		}
		#region Properties
		public DXComboBox UICmbWatermarkFontSizeComboBox
		{
			get
			{
				if ((this.mUICmbWatermarkFontSizeComboBox == null))
				{
					this.mUICmbWatermarkFontSizeComboBox = new DXComboBox(this);
					#region Search Criteria
					this.mUICmbWatermarkFontSizeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cmbWatermarkFontSize";
					this.mUICmbWatermarkFontSizeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
					#endregion
				}
				return this.mUICmbWatermarkFontSizeComboBox;
			}
		}
		#endregion
		#region Fields
		private DXComboBox mUICmbWatermarkFontSizeComboBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlGroup9LayoutGroup : DXBaseLayoutItem
	{
		public UILayoutControlGroup9LayoutGroup(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup9";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public UILayoutControlItem14LayoutControlItem UILayoutControlItem14LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem14LayoutControlItem == null))
				{
					this.mUILayoutControlItem14LayoutControlItem = new UILayoutControlItem14LayoutControlItem(this);
				}
				return this.mUILayoutControlItem14LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem14LayoutControlItem mUILayoutControlItem14LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem14LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem14LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem14";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("Watermark");
			#endregion
		}
		#region Properties
		public DXTrackBar UITrBarTextTransparencTrackBar
		{
			get
			{
				if ((this.mUITrBarTextTransparencTrackBar == null))
				{
					this.mUITrBarTextTransparencTrackBar = new DXTrackBar(this);
					#region Search Criteria
					this.mUITrBarTextTransparencTrackBar.SearchProperties[DXTestControl.PropertyNames.Name] = "trBarTextTransparency";
					this.mUITrBarTextTransparencTrackBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TrackBarControl";
					this.mUITrBarTextTransparencTrackBar.WindowTitles.Add("Watermark");
					#endregion
				}
				return this.mUITrBarTextTransparencTrackBar;
			}
		}
		#endregion
		#region Fields
		private DXTrackBar mUITrBarTextTransparencTrackBar;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UITheXtraGridSuitebyDeWindow3 : DXWindow
	{
		public UITheXtraGridSuitebyDeWindow3()
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
				"ed)";
			this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public UIPanelControl1Client150 UIPanelControl1Client
		{
			get
			{
				if ((this.mUIPanelControl1Client == null))
				{
					this.mUIPanelControl1Client = new UIPanelControl1Client150(this);
				}
				return this.mUIPanelControl1Client;
			}
		}
		#endregion
		#region Fields
		private UIPanelControl1Client150 mUIPanelControl1Client;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIPanelControl1Client150 : DXTestControl
	{
		public UIPanelControl1Client150(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public UIGcContainerClient85 UIGcContainerClient
		{
			get
			{
				if ((this.mUIGcContainerClient == null))
				{
					this.mUIGcContainerClient = new UIGcContainerClient85(this);
				}
				return this.mUIGcContainerClient;
			}
		}
		#endregion
		#region Fields
		private UIGcContainerClient85 mUIGcContainerClient;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIGcContainerClient85 : DXTestControl
	{
		public UIGcContainerClient85(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContainer";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public UIDataSummariesCustom2 UIDataSummariesCustom
		{
			get
			{
				if ((this.mUIDataSummariesCustom == null))
				{
					this.mUIDataSummariesCustom = new UIDataSummariesCustom2(this);
				}
				return this.mUIDataSummariesCustom;
			}
		}
		#endregion
		#region Fields
		private UIDataSummariesCustom2 mUIDataSummariesCustom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIDataSummariesCustom2 : DXTestControl
	{
		public UIDataSummariesCustom2(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "DataSummaries";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DataSummaries";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public UINavigationPage1ScrollableControl UINavigationPage1ScrollableControl
		{
			get
			{
				if ((this.mUINavigationPage1ScrollableControl == null))
				{
					this.mUINavigationPage1ScrollableControl = new UINavigationPage1ScrollableControl(this);
				}
				return this.mUINavigationPage1ScrollableControl;
			}
		}
		#endregion
		#region Fields
		private UINavigationPage1ScrollableControl mUINavigationPage1ScrollableControl;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UINavigationPage1ScrollableControl : DXScrollableControl
	{
		public UINavigationPage1ScrollableControl(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "navigationPage1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavigationPage";
			this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public UILayoutControl1Custom16 UILayoutControl1Custom
		{
			get
			{
				if ((this.mUILayoutControl1Custom == null))
				{
					this.mUILayoutControl1Custom = new UILayoutControl1Custom16(this);
				}
				return this.mUILayoutControl1Custom;
			}
		}
		#endregion
		#region Fields
		private UILayoutControl1Custom16 mUILayoutControl1Custom;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControl1Custom16 : DXTestControl
	{
		public UILayoutControl1Custom16(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public UIRootLayoutGroup4 UIRootLayoutGroup
		{
			get
			{
				if ((this.mUIRootLayoutGroup == null))
				{
					this.mUIRootLayoutGroup = new UIRootLayoutGroup4(this);
				}
				return this.mUIRootLayoutGroup;
			}
		}
		#endregion
		#region Fields
		private UIRootLayoutGroup4 mUIRootLayoutGroup;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UIRootLayoutGroup4 : DXBaseLayoutItem
	{
		public UIRootLayoutGroup4(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public UILayoutControlItem5LayoutControlItem UILayoutControlItem5LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem5LayoutControlItem == null))
				{
					this.mUILayoutControlItem5LayoutControlItem = new UILayoutControlItem5LayoutControlItem(this);
				}
				return this.mUILayoutControlItem5LayoutControlItem;
			}
		}
		public UILayoutControlItem3LayoutControlItem1 UILayoutControlItem3LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem3LayoutControlItem == null))
				{
					this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem1(this);
				}
				return this.mUILayoutControlItem3LayoutControlItem;
			}
		}
		public UILayoutControlItem4LayoutControlItem1 UILayoutControlItem4LayoutControlItem
		{
			get
			{
				if ((this.mUILayoutControlItem4LayoutControlItem == null))
				{
					this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem1(this);
				}
				return this.mUILayoutControlItem4LayoutControlItem;
			}
		}
		#endregion
		#region Fields
		private UILayoutControlItem5LayoutControlItem mUILayoutControlItem5LayoutControlItem;
		private UILayoutControlItem3LayoutControlItem1 mUILayoutControlItem3LayoutControlItem;
		private UILayoutControlItem4LayoutControlItem1 mUILayoutControlItem4LayoutControlItem;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem5LayoutControlItem : DXBaseLayoutItem
	{
		public UILayoutControlItem5LayoutControlItem(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem5";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public DXCheckBox UIChShowFooterCheckBox
		{
			get
			{
				if ((this.mUIChShowFooterCheckBox == null))
				{
					this.mUIChShowFooterCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChShowFooterCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chShowFooter";
					this.mUIChShowFooterCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChShowFooterCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
							"ed)");
					#endregion
				}
				return this.mUIChShowFooterCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIChShowFooterCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem3LayoutControlItem1 : DXBaseLayoutItem
	{
		public UILayoutControlItem3LayoutControlItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public DXCheckBox UIChDisplaySummaryCheckBox
		{
			get
			{
				if ((this.mUIChDisplaySummaryCheckBox == null))
				{
					this.mUIChDisplaySummaryCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChDisplaySummaryCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chDisplaySummary";
					this.mUIChDisplaySummaryCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChDisplaySummaryCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
							"ed)");
					#endregion
				}
				return this.mUIChDisplaySummaryCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIChDisplaySummaryCheckBox;
		#endregion
	}
	[GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
	public class UILayoutControlItem4LayoutControlItem1 : DXBaseLayoutItem
	{
		public UILayoutControlItem4LayoutControlItem1(UITestControl searchLimitContainer) : 
				base(searchLimitContainer)
		{
			#region Search Criteria
			this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
			this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
			this.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
					"ed)");
			#endregion
		}
		#region Properties
		public DXCheckBox UIChAlignSummaryCheckBox
		{
			get
			{
				if ((this.mUIChAlignSummaryCheckBox == null))
				{
					this.mUIChAlignSummaryCheckBox = new DXCheckBox(this);
					#region Search Criteria
					this.mUIChAlignSummaryCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chAlignSummary";
					this.mUIChAlignSummaryCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
					this.mUIChAlignSummaryCheckBox.WindowTitles.Add("The XtraGrid Suite by DevExpress (C# code) - Data Summaries and Aggregates (updat" +
							"ed)");
					#endregion
				}
				return this.mUIChAlignSummaryCheckBox;
			}
		}
		#endregion
		#region Fields
		private DXCheckBox mUIChAlignSummaryCheckBox;
		#endregion
	}
}
