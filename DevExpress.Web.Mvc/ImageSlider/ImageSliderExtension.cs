#region Copyright (c) 2000-2015 Developer Express Inc.
/*
{*******************************************************************}
{                                                                   }
{       Developer Express .NET Component Library                    }
{                                                                   }
{                                                                   }
{       Copyright (c) 2000-2015 Developer Express Inc.              }
{       ALL RIGHTS RESERVED                                         }
{                                                                   }
{   The entire contents of this file is protected by U.S. and       }
{   International Copyright Laws. Unauthorized reproduction,        }
{   reverse-engineering, and distribution of all or any portion of  }
{   the code contained in this file is strictly prohibited and may  }
{   result in severe civil and criminal penalties and will be       }
{   prosecuted to the maximum extent possible under the law.        }
{                                                                   }
{   RESTRICTIONS                                                    }
{                                                                   }
{   THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES           }
{   ARE CONFIDENTIAL AND PROPRIETARY TRADE                          }
{   SECRETS OF DEVELOPER EXPRESS INC. THE REGISTERED DEVELOPER IS   }
{   LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET    }
{   CONTROLS AS PART OF AN EXECUTABLE PROGRAM ONLY.                 }
{                                                                   }
{   THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED      }
{   FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE        }
{   COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE       }
{   AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT  }
{   AND PERMISSION FROM DEVELOPER EXPRESS INC.                      }
{                                                                   }
{   CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON       }
{   ADDITIONAL RESTRICTIONS.                                        }
{                                                                   }
{*******************************************************************}
*/
#endregion Copyright (c) 2000-2015 Developer Express Inc.

using System.Web.Mvc;
using DevExpress.Web;
using DevExpress.Web.Mvc.Internal;
namespace DevExpress.Web.Mvc {
	public class ImageSliderExtension : ExtensionBase {
		public ImageSliderExtension(ImageSliderSettings settings)
			: base(settings) {
		}
		public ImageSliderExtension(ImageSliderSettings settings, ViewContext viewContext)
			: base(settings, viewContext) {
		}
		protected internal new MVCxImageSlider Control {
			get { return (MVCxImageSlider)base.Control; }
		}
		protected internal new ImageSliderSettings Settings {
			get { return (ImageSliderSettings)base.Settings; }
		}
		protected override void AssignInitialProperties() {
			base.AssignInitialProperties();
			Control.ActiveItemIndex = Settings.ActiveItemIndex;
			Control.ClientSideEvents.Assign(Settings.ClientSideEvents);
			Control.Images.CopyFrom(Settings.Images);
			Control.Styles.CopyFrom(Settings.Styles);
			Control.KeyboardSupport = Settings.KeyboardSupport;
			Control.SeoFriendly = Settings.SeoFriendly;
			Control.SettingsBehavior.Assign(Settings.SettingsBehavior);
			Control.SettingsImageArea.Assign(Settings.SettingsImageArea);
			Control.SettingsNavigationBar.Assign(Settings.SettingsNavigationBar);
			Control.SettingsSlideShow.Assign(Settings.SettingsSlideShow);
			Control.ShowImageArea = Settings.ShowImageArea;
			Control.ShowNavigationBar = Settings.ShowNavigationBar;
			Control.Target = Settings.Target;
			Control.RightToLeft = Settings.RightToLeft;
			Control.SettingsAutoGeneratedImages.Assign(Settings.SettingsAutoGeneratedImages);
			Control.Items.Assign(Settings.Items);
			Control.ImageContentBytesField = Settings.ImageContentBytesField;
			Control.ThumbnailContentBytesField = Settings.ThumbnailContentBytesField;
			Control.ImageUrlField = Settings.ImageUrlField;
			Control.ImageUrlFormatString = Settings.ImageUrlFormatString;
			Control.TextField = Settings.TextField;
			Control.ThumbnailUrlField = Settings.ThumbnailUrlField;
			Control.ThumbnailUrlFormatString = Settings.ThumbnailUrlFormatString;
			Control.NameField = Settings.NameField;
			Control.NavigateUrlField = Settings.NavigateUrlField;
			Control.NavigateUrlFormatString = Settings.NavigateUrlFormatString;
			Control.DataBound += Settings.DataBound;
			Control.ItemDataBound += Settings.ItemDataBound;
			Control.ItemTemplate = ContentControlTemplate<ImageSliderItemTemplateContainer>.Create(
				Settings.ItemTemplateContent, Settings.ItemTemplateContentMethod, typeof(ImageSliderItemTemplateContainer), true);
			Control.ItemTextTemplate = ContentControlTemplate<ImageSliderItemTemplateContainer>.Create(
				Settings.ItemTextTemplateContent, Settings.ItemTextTemplateContentMethod, typeof(ImageSliderItemTemplateContainer), true);
			Control.ItemThumbnailTemplate = ContentControlTemplate<ImageSliderItemTemplateContainer>.Create(
				Settings.ItemThumbnailTemplateContent, Settings.ItemThumbnailTemplateContentMethod, typeof(ImageSliderItemTemplateContainer), true);
			if(Settings.Items.Count > 0) {
				for(int i = 0; i < Control.Items.Count; i++) {
					Control.Items[i].Template = ContentControlTemplate<ImageSliderItemTemplateContainer>.Create(
						Settings.Items[i].TemplateContent, Settings.Items[i].TemplateContentMethod, typeof(ImageSliderItemTemplateContainer), true);
					Control.Items[i].TextTemplate = ContentControlTemplate<ImageSliderItemTemplateContainer>.Create(
						Settings.Items[i].TextTemplateContent, Settings.Items[i].TextTemplateContentMethod, typeof(ImageSliderItemTemplateContainer), true);
					Control.Items[i].ThumbnailTemplate = ContentControlTemplate<ImageSliderItemTemplateContainer>.Create(
						Settings.Items[i].ThumbnailTemplateContent, Settings.Items[i].ThumbnailTemplateContentMethod, typeof(ImageSliderItemTemplateContainer), true);
				}
			}
		}
		public ImageSliderExtension BindToFolder(string folder) {
			Control.ImageSourceFolder = folder;
			return this;
		}
		public ImageSliderExtension Bind(object dataObject) {
			BindInternal(dataObject);
			return this;
		}
		public ImageSliderExtension BindToXML(string fileName) {
			return BindToXML(fileName, string.Empty, string.Empty);
		}
		public ImageSliderExtension BindToXML(string fileName, string xPath) {
			return BindToXML(fileName, xPath, string.Empty);
		}
		public ImageSliderExtension BindToXML(string fileName, string xPath, string transformFileName) {
			BindToXMLInternal(fileName, xPath, transformFileName);
			return this;
		}
		protected override ASPxWebControl CreateControl() {
			return new MVCxImageSlider(ViewContext);
		}
	}
}
