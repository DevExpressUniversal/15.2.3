<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SnapControlOptionsFields" xml:space="preserve">
    <value>Provides access to the options of Snap fields. </value>
  </data>
  <data name="SnapControlOptionsDocumentSaveOptions" xml:space="preserve">
    <value>Provides access to the control's document saving options.</value>
  </data>
  <data name="SnapControlOptionsSnapMailMergeVisualOptions" xml:space="preserve">
    <value>Provides access to the options that determine how a mail-merge document is displayed in a Snap application. </value>
  </data>
  <data name="SnapControlOptionsFileExportOptions" xml:space="preserve">
    <value>Provides access to the options for exporting the document in various formats.</value>
  </data>
  <data name="SnapControlOptionsDataSourceWizardOptions" xml:space="preserve">
    <value>Provides access to options that enable customization of the Data Source Wizard.</value>
  </data>
  <data name="SnapProgressIndicationServiceCancellationToken" xml:space="preserve">
    <value>Allows tracing the requests to cancel an operation.</value>
  </data>
  <data name="SnapControlDocument" xml:space="preserve">
    <value>Provides access to the specified document.</value>
  </data>
  <data name="SnapControlDataSources" xml:space="preserve">
    <value>Provides access to the collection of SnapControl data sources.</value>
  </data>
  <data name="SnapControlDataSource" xml:space="preserve">
    <value>Specifies the SnapControl data source.</value>
  </data>
  <data name="SnapControlOptions" xml:space="preserve">
    <value>Provides access to the options of a SnapControl.</value>
  </data>
  <data name="SnapControlReportStructureEditorFormShowing" xml:space="preserve">
    <value>Fires before showing the Report Structure editor.</value>
  </data>
  <data name="SnapControlMailMergeExportFormShowing" xml:space="preserve">
    <value>Fires before showing the Export Range form.</value>
  </data>
  <data name="SnapControlBeforeConversion" xml:space="preserve">
    <value>Occurs before a snap document is exported to format other than the native .SNX.</value>
  </data>
  <data name="SnapControlBeforeDataSourceExport" xml:space="preserve">
    <value>Occurs before exporting a data source.</value>
  </data>
  <data name="SnapControlAfterDataSourceImport" xml:space="preserve">
    <value>Occurs after importing a data source.</value>
  </data>
  <data name="SnapControlDataSourceChanged" xml:space="preserve">
    <value>Occurs when any of the SnapControl's data sources has been changed.</value>
  </data>
  <data name="SnapControlAsynchronousOperationStarted" xml:space="preserve">
    <value>Occurs after starting an asynchronous operation in a separate thread.</value>
  </data>
  <data name="SnapControlAsynchronousOperationFinished" xml:space="preserve">
    <value>Occurs after finishing an asynchronous operation in a separate thread.</value>
  </data>
  <data name="SnapControlSnapMailMergeActiveRecordChanging" xml:space="preserve">
    <value>Occurs before traversing to the next data record in a mail merge data source.</value>
  </data>
  <data name="SnapControlSnapMailMergeActiveRecordChanged" xml:space="preserve">
    <value>Occurs after traversing to the next data record in a mail merge data source.</value>
  </data>
  <data name="SnapControlSnapMailMergeStarted" xml:space="preserve">
    <value>Occurs after document merging has started.</value>
  </data>
  <data name="SnapControlSnapMailMergeRecordStarted" xml:space="preserve">
    <value>Occurs before the data field merging starts.</value>
  </data>
  <data name="SnapControlSnapMailMergeRecordFinished" xml:space="preserve">
    <value>Occurs after data field merging has finished.</value>
  </data>
  <data name="SnapControlSnapMailMergeFinished" xml:space="preserve">
    <value>Occurs after document merging has finished.</value>
  </data>
  <data name="SnapControlDocumentClosing" xml:space="preserve">
    <value>Occurs before closing a SnapDocument.</value>
  </data>
  <data name="SnapControlDocumentLoaded" xml:space="preserve">
    <value>Occurs before loading a SnapDocument into a SnapControl.</value>
  </data>
  <data name="SnapControlEmptyDocumentCreated" xml:space="preserve">
    <value>Occurs before creating a new SnapDocument.</value>
  </data>
  <data name="SnapControlTableCellStyleFormShowing" xml:space="preserve">
    <value>Fires before showing the Table Cell Style form.</value>
  </data>
</root>