<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PdfViewerSelectionEnded" xml:space="preserve">
    <value>Occurs after the selection of the PDF content has finished.</value>
  </data>
  <data name="PdfViewerSelectionContinued" xml:space="preserve">
    <value>Occurs after the selection of the PDF content has been continued.</value>
  </data>
  <data name="PdfViewerScrollPositionChanged" xml:space="preserve">
    <value>Occurs after changing the current scroll bar position in a PdfViewer.</value>
  </data>
  <data name="PdfViewerRotationAngle" xml:space="preserve">
    <value>Specifies the rotation angle of a document in the PdfViewer.</value>
  </data>
  <data name="PdfViewerReferencedDocumentOpening" xml:space="preserve">
    <value>Occurs when opening an embedded or external document by clicking its corresponding link in a PDF document.</value>
  </data>
  <data name="PdfViewerReadOnly" xml:space="preserve">
    <value>Specifies whether document modifications are prohibited.</value>
  </data>
  <data name="PdfViewerPopupMenuShowing" xml:space="preserve">
    <value>Occurs after the popup menu of a PDF Viewer has been invoked.</value>
  </data>
  <data name="PdfViewerPasswordAttemptsLimit" xml:space="preserve">
    <value>Specifies the maximum number of allowed attempts to enter the PDF file's security password.</value>
  </data>
  <data name="PdfViewerPageSetupDialogShowing" xml:space="preserve">
    <value>Occurs when displaying the Page Setup dialog in the PDF Viewer.</value>
  </data>
  <data name="PdfViewerPageCount" xml:space="preserve">
    <value>Returns the total number of pages in a document.</value>
  </data>
  <data name="PdfViewerNavigationPaneWidth" xml:space="preserve">
    <value>Gets or sets the navigation pane width (where outlines are located).</value>
  </data>
  <data name="PdfViewerNavigationPaneVisibilityChanged" xml:space="preserve">
    <value>Occurs after the visibility of a navigation pane has been changed. </value>
  </data>
  <data name="PdfViewerNavigationPaneInitialVisibility" xml:space="preserve">
    <value>Specifies the initial visible state of a navigation pane after loading a new PDF document.</value>
  </data>
  <data name="PdfViewerMenuManager" xml:space="preserve">
    <value>Specifies an object that controls the look and feel of the popup menus.</value>
  </data>
  <data name="PdfViewerMaxPrintingDpi" xml:space="preserve">
    <value>Specifies the maximum DPI (dots per inch) value allowed for document printing.</value>
  </data>
  <data name="PdfViewerImageCacheSize" xml:space="preserve">
    <value>Specifies the size of the PDF image cache (in megabytes).</value>
  </data>
  <data name="PdfViewerHighlightFormFields" xml:space="preserve">
    <value>Gets or sets a value which indicates whether to use a color to highlight form fields in a PDF document.</value>
  </data>
  <data name="PdfViewerHighlightedFormFieldColor" xml:space="preserve">
    <value>Gets or sets a color which is used to highlight form fields in a PDF document. </value>
  </data>
  <data name="PdfViewerHandTool" xml:space="preserve">
    <value>Specifies whether to browse a document (by using the Hand Tool), or select parts of its content (by using the Select Tool).</value>
  </data>
  <data name="PdfViewerFormFieldValueChanging" xml:space="preserve">
    <value>Occurs when an end-user has finished editing a form field value and tries to commit it (e.g., presses Enter or moves focus to another element).	</value>
  </data>
  <data name="PdfViewerFormFieldValueChanged" xml:space="preserve">
    <value>Occurs after a form field value in the PDF document has been changed.</value>
  </data>
  <data name="PdfViewerFindDialogVisibilityChanged" xml:space="preserve">
    <value>Occurs when the visibility state of the Find dialog window has changed. </value>
  </data>
  <data name="PdfViewerDocumentFilePath" xml:space="preserve">
    <value>Gets or sets the path to the PDF file, which is currently opened in the PdfViewer control.</value>
  </data>
  <data name="PdfViewerDocumentClosing" xml:space="preserve">
    <value>Occurs when closing a PDF document.</value>
  </data>
  <data name="PdfViewerDocumentChanged" xml:space="preserve">
    <value>Occurs when a PdfViewer control loads another PDF document.</value>
  </data>
  <data name="PdfViewerDetachStreamAfterLoadComplete" xml:space="preserve">
    <value>Specifies whether or not to close the input stream after loading a PDF.</value>
  </data>
  <data name="PdfViewerDefaultDocumentDirectory" xml:space="preserve">
    <value>Specifies the initial directory displayed by the Save As dialog and Open File dialog.</value>
  </data>
  <data name="PdfViewerCurrentPageNumber" xml:space="preserve">
    <value>Specifies the number of the currently displayed page.</value>
  </data>
  <data name="PdfViewerCurrentPageChanged" xml:space="preserve">
    <value>Occurs after the currently displayed page has been changed.</value>
  </data>
  <data name="PdfViewerContentMinMargin" xml:space="preserve">
    <value>Specifies the minimum width of the outer border displayed by a PdfViewer around document pages.</value>
  </data>
  <data name="PdfViewerContentMarginMode" xml:space="preserve">
    <value>Specifies the mode for calculating the outer border width displayed by a PdfViewer around document pages.</value>
  </data>
  <data name="PdfViewerAcceptsTab" xml:space="preserve">
    <value>Gets or sets a value indicating whether pressing the TAB key is processed by the PDF Viewer instead of moving the focus to the next control in the tab order. </value>
  </data>
  <data name="PdfViewerZoomMode" xml:space="preserve">
    <value>Specifies the document zoom mode.</value>
  </data>
  <data name="PdfViewerZoomFactor" xml:space="preserve">
    <value>Specifies the document zoom factor.</value>
  </data>
  <data name="PdfViewerZoomChanged" xml:space="preserve">
    <value>Occurs after the current zoom factor has been changed.</value>
  </data>
  <data name="PdfViewerUriOpening" xml:space="preserve">
    <value>Occurs after clicking a hyperlink addressing an external URI (universal resource identifier).</value>
  </data>
  <data name="PdfViewerShowPrintStatusDialog" xml:space="preserve">
    <value>Specifies whether or not to show a print status dialog when printing a document. </value>
  </data>
  <data name="PdfViewerSelectionStarted" xml:space="preserve">
    <value>Occurs after the selection of the PDF content has started.</value>
  </data>
</root>