#region Copyright (c) 2000-2015 Developer Express Inc.
/*
{*******************************************************************}
{                                                                   }
{       Developer Express .NET Component Library                    }
{                                                                   }
{                                                                   }
{       Copyright (c) 2000-2015 Developer Express Inc.              }
{       ALL RIGHTS RESERVED                                         }
{                                                                   }
{   The entire contents of this file is protected by U.S. and       }
{   International Copyright Laws. Unauthorized reproduction,        }
{   reverse-engineering, and distribution of all or any portion of  }
{   the code contained in this file is strictly prohibited and may  }
{   result in severe civil and criminal penalties and will be       }
{   prosecuted to the maximum extent possible under the law.        }
{                                                                   }
{   RESTRICTIONS                                                    }
{                                                                   }
{   THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES           }
{   ARE CONFIDENTIAL AND PROPRIETARY TRADE                          }
{   SECRETS OF DEVELOPER EXPRESS INC. THE REGISTERED DEVELOPER IS   }
{   LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET    }
{   CONTROLS AS PART OF AN EXECUTABLE PROGRAM ONLY.                 }
{                                                                   }
{   THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED      }
{   FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE        }
{   COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE       }
{   AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT  }
{   AND PERMISSION FROM DEVELOPER EXPRESS INC.                      }
{                                                                   }
{   CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON       }
{   ADDITIONAL RESTRICTIONS.                                        }
{                                                                   }
{*******************************************************************}
*/
#endregion Copyright (c) 2000-2015 Developer Express Inc.

using System.ComponentModel;
using System.Web.UI.WebControls;
using DevExpress.Web.Internal;
namespace DevExpress.Web {
	public class ImageZoomNavigatorAutoGeneratedImagesSettings : AutoGeneratedImagesSettingsBase {
		const string DefaultLargeImageWidth = "1000",
					 DefaultLargeImageHeight = "1000";
		[
#if !SL
	DevExpressWebLocalizedDescription("ImageZoomNavigatorAutoGeneratedImagesSettingsLargeImageWidth"),
#endif
		NotifyParentProperty(true), AutoFormatDisable, DefaultValue(typeof(Unit), DefaultLargeImageWidth)]
		public Unit LargeImageWidth
		{
			get { return GetUnitProperty("LargeImageWidth", new Unit(DefaultLargeImageWidth)); }
			set
			{
				UnitUtils.CheckNegativeUnit(value, "ImageZoomNavigatorFolderSettings.LargeImageWidth");
				SetUnitProperty("LargeImageWidth", new Unit(DefaultLargeImageWidth), value);
				LayoutChanged();
			}
		}
		[
#if !SL
	DevExpressWebLocalizedDescription("ImageZoomNavigatorAutoGeneratedImagesSettingsLargeImageHeight"),
#endif
		NotifyParentProperty(true), AutoFormatDisable, DefaultValue(typeof(Unit), DefaultLargeImageHeight)]
		public Unit LargeImageHeight
		{
			get { return GetUnitProperty("LargeImageHeight", new Unit(DefaultLargeImageHeight)); }
			set
			{
				UnitUtils.CheckNegativeUnit(value, "ImageZoomNavigatorFolderSettings.LargeImageHeight");
				SetUnitProperty("LargeImageHeight", new Unit(DefaultLargeImageHeight), value);
				LayoutChanged();
			}
		}
		[
#if !SL
	DevExpressWebLocalizedDescription("ImageZoomNavigatorAutoGeneratedImagesSettingsImageWidth"),
#endif
		DefaultValue(typeof(Unit), "400")]
		public override Unit ImageWidth
		{
			get { return base.ImageWidth; }
			set { base.ImageWidth = value; }
		}
		[
#if !SL
	DevExpressWebLocalizedDescription("ImageZoomNavigatorAutoGeneratedImagesSettingsImageHeight"),
#endif
		DefaultValue(typeof(Unit), "400")]
		public override Unit ImageHeight
		{
			get { return base.ImageHeight; }
			set { base.ImageHeight = value; }
		}
		[
#if !SL
	DevExpressWebLocalizedDescription("ImageZoomNavigatorAutoGeneratedImagesSettingsThumbnailWidth"),
#endif
		DefaultValue(typeof(Unit), "75")]
		public override Unit ThumbnailWidth
		{
			get { return base.ThumbnailWidth; }
			set { base.ThumbnailWidth = value; }
		}
		[
#if !SL
	DevExpressWebLocalizedDescription("ImageZoomNavigatorAutoGeneratedImagesSettingsThumbnailHeight"),
#endif
		DefaultValue(typeof(Unit), "75")]
		public override Unit ThumbnailHeight
		{
			get { return base.ThumbnailHeight; }
			set { base.ThumbnailHeight = value; }
		}
		public ImageZoomNavigatorAutoGeneratedImagesSettings(ASPxImageZoomNavigator zoomNavigator)
			: base(zoomNavigator) {
			DefaultImageWidth = "400";
			DefaultImageHeight = "400";
			DefaultThumbnailWidth = "75";
			DefaultThumbnailHeight = "75";
		}
		public override void Assign(PropertiesBase source) {
			base.Assign(source);
			BeginUpdate();
			try {
				base.Assign(source);
				ImageZoomNavigatorAutoGeneratedImagesSettings src = source as ImageZoomNavigatorAutoGeneratedImagesSettings;
				if(src != null) {
					LargeImageWidth = src.LargeImageWidth;
					LargeImageHeight = src.LargeImageHeight;
				}
			} finally {
				EndUpdate();
			}
		}
	}
}
