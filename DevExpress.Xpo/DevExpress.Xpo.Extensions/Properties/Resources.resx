<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddComplexPropertyException" xml:space="preserve">
    <value>The '{0}' type specified for the '{1}' complex property is not a complex type.</value>
    <comment>AddComplexPropertyException description</comment>
  </data>
  <data name="AddResourceSetException" xml:space="preserve">
    <value>The '{0}' resource type specified as a base type of the '{1}' resource set is not an entity type.</value>
    <comment>AddResourceSetException description</comment>
  </data>
  <data name="CannotIdentifyCollectionProperty" xml:space="preserve">
    <value>Cannot identify the '{0}' collection property type.</value>
    <comment>CannotIdentifyCollectionProperty description</comment>
  </data>
  <data name="UnknownResourceType" xml:space="preserve">
    <value>Unknown resource type '{0}'.</value>
    <comment>UnknownResourceType description</comment>
  </data>
  <data name="TheSpecifiedResourceTypeIsNotAnEntityType" xml:space="preserve">
    <value>Cannot create a resource of the '{0}' type. The specified type is not an entity type and cannot be added to a resource set.</value>
    <comment>TheSpecifiedResourceTypeIsNotAnEntityType description</comment>
  </data>
  <data name="TheSpecifiedResourceTypeIsNotAComplexType" xml:space="preserve">
    <value>Cannot create a resource of the '{0}' type since it is not a complex type.</value>
    <comment>TheSpecifiedResourceTypeIsNotAComplexType description</comment>
  </data>
  <data name="TheQueryMustReferToASingleResource" xml:space="preserve">
    <value>Invalid URI specified. The '{0}' query must refer to a single resource.</value>
    <comment>TheQueryMustReferToASingleResource description</comment>
  </data>
  <data name="DifferentTypesException" xml:space="preserve">
    <value>Invalid URI specified. '{0}' is expected, while '{1}' is specified as an actual type.</value>
    <comment>DifferentTypesException description</comment>
  </data>
  <data name="ResourceValidationException" xml:space="preserve">
    <value>The '{0}' resource is not supported by this provider.</value>
    <comment>ResourceValidationException description</comment>
  </data>
  <data name="OpenTypesAreNotYetSupported" xml:space="preserve">
    <value>Open types are not currently supported.</value>
    <comment>OpenTypesAreNotYetSupported description</comment>
  </data>
  <data name="CurrentDataSourceShouldOnlyBeSetOnce" xml:space="preserve">
    <value>CurrentDataSource can be assigned only once.</value>
    <comment>CurrentDataSourceShouldOnlyBeSetOnce description</comment>
  </data>
  <data name="ServiceOperationsAreNotYetSupported" xml:space="preserve">
    <value>Service operations are not currently supported.</value>
    <comment>ServiceOperationsAreNotYetSupported description</comment>
  </data>
  <data name="CannotFindMember" xml:space="preserve">
    <value>Cannot find the '{0}' member.</value>
    <comment>CannotFindMember description</comment>
  </data>
  <data name="X0BelongsToADifferentDictionary" xml:space="preserve">
    <value>'{0}' belongs to a different dictionary.</value>
    <comment>X0BelongsToADifferentDictionary description</comment>
  </data>
  <data name="TheX0ResourceSetNotFound" xml:space="preserve">
    <value>The '{0}' resource set not found</value>
    <comment>TheX0ResourceSetNotFound description</comment>
  </data>
</root>