<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="clr-namespace:DevExpress.Xpf.Utils.Themes"
                    xmlns:dx="clr-namespace:DevExpress.Xpf.Core"
                    xmlns:dxt="clr-namespace:DevExpress.Xpf.Utils.Themes">

    <Style x:Key="{dxt:DefaultStyleThemeKey TypeInTargetAssembly=dx:ResourceFinder, Type=TreeView, ThemeName=DeepBlue}" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF5B81BE" />
                    <GradientStop Color="#FF43609B" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="#FF000000 " />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer" HorizontalScrollBarVisibility="Auto" IsTabStop="False" VerticalScrollBarVisibility="Auto" BorderThickness="0" CanContentScroll="True">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                 Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="{dxt:DefaultStyleThemeKey TypeInTargetAssembly=dx:ResourceFinder, Type=TreeViewItem, ThemeName=DeepBlue}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,2,3,2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" IsTabStop="False" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Background="Transparent" Width="16" Height="16">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver" />
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IsUnchecked" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IsUnchecked">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>
                                                                        Collapsed
                                                                    </Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IsChecked">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>
                                                                        Visible
                                                                    </Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Indeterminate" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid x:Name="Root" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Border x:Name="IsUnchecked" CornerRadius="2" Width="Auto" Height="Auto">
                                                <Path Stretch="Fill" Fill="#FF062B63" Data="F1 M 26,22.0001L 26,14.0001L 30,18.0001L 26,22.0001 Z " HorizontalAlignment="Stretch" Margin="2,0,1,0" VerticalAlignment="Stretch" Width="6" Height="7" />
                                            </Border>
                                            <Border x:Name="IsChecked" CornerRadius="2" Visibility="Collapsed" Width="9" Height="9">
                                                <Path Stretch="Fill" Fill="#FF062B63" Data="F1 M 32.9999,14.0001L 40.9999,14.0001L 37,18.0001L 32.9999,14.0001 Z " HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center" Width="7" Height="6" />
                                            </Border>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Grid Grid.Column="1" Grid.ColumnSpan="2">
                            <Border x:Name="TreeListItemInactiveSelection" CornerRadius="2" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#7F759BD2" Offset="0" />
                                        <GradientStop Color="#7F6589BD" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="TreeListItemSelection" Opacity="0" CornerRadius="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF759BD2" Offset="0" />
                                        <GradientStop Color="#FF6589BD" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="TreeListItemHoverSelection" Opacity="0" CornerRadius="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFCEE1FC" Offset="0" />
                                        <GradientStop Color="#FFBFD4F4" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <!--<Border x:Name="TreeListItemFocusState" Style="{StaticResource FocusTemplate}" Opacity="0" />-->
                        </Grid>
                        <Border x:Name="contentBorder" Background="{TemplateBinding Background}" Grid.Column="1" Grid.ColumnSpan="2" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Margin="0,1,0,0" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TreeListItemSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="TreeListItemHoverSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="#FFFFFFFF" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TreeListItemInactiveSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="TreeListItemSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="TreeListItemHoverSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="#FF000000" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="contentBorder" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TreeListItemSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="TreeListItemHoverSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="TreeListItemInactiveSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="#FF000000" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="TreeListItemSelection" Property="Opacity" Value="1" />
                            <Setter TargetName="TreeListItemHoverSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="TreeListItemInactiveSelection" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="#FFFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Header" Property="Opacity" Value="0.35" />
                            <Setter TargetName="ItemsHost" Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>