<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="clr-namespace:DevExpress.Xpf.Utils.Themes"
	xmlns:dxt="clr-namespace:DevExpress.Xpf.Utils.Themes"
	xmlns:dxcore="clr-namespace:DevExpress.Xpf.Core"
	xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore">
    <ResourceDictionary.MergedDictionaries>
        <dxtEx:ResourceDictionaryEx Source="{dxcore:UtilsResource Themes/Generic/PseudoWindow.xaml}" />
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}">6</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}">40</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}">0, 80, 0, 80</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}">0, 80, 0, 80</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}">0</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}">0</Thickness>
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}" Color="Black" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}" Color="Black" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}" Color="#FFA3C3EC" />
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDragWidgetTemplate}" TargetType="{x:Type Thumb}">
        <Border Background="Transparent">
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerSizeGripTemplate}" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" Margin="0,1,2,1">
            <Viewbox Margin="0,0,0,0" VerticalAlignment="Bottom" Height="11" Width="10" HorizontalAlignment="Right">
                <Canvas Width="9.99999" Height="11" Background="Transparent">
                    <Path Width="9.99999"
						Height="10"
						Canvas.Left="0"
						Canvas.Top="0.999989"
						Stretch="Fill"
						Fill="#5AFFFFFF"
						Data="F1 M 0,8.99998L 2,8.99998L 2,11L 0,11L 0,8.99998 Z M 3.99997,8.99999L 5.99997,8.99999L 5.99997,11L 3.99997,11L 3.99997,8.99999 Z M 7.99998,8.99999L 9.99998,8.99999L 9.99998,11L 7.99998,11L 7.99998,8.99999 Z M 7.99998,4.99999L 9.99998,4.99999L 9.99998,6.99999L 7.99998,6.99999L 7.99998,4.99999 Z M 7.99999,0.999989L 9.99999,0.999989L 9.99999,2.99998L 7.99999,2.99998L 7.99999,0.999989 Z M 4,4.99998L 6,4.99998L 6,6.99998L 4,6.99998L 4,4.99998 Z " />
                    <Path Width="9.99999"
						Height="10"
						Canvas.Left="0"
						Canvas.Top="0"
						Stretch="Fill"
						Fill="#FF4D6E9C"
						Data="F1 M 0,7.99999L 2,7.99999L 2,9.99999L 0,9.99999L 0,7.99999 Z M 3.99997,8L 5.99997,8L 5.99997,10L 3.99997,10L 3.99997,8 Z M 7.99998,8L 9.99998,8L 9.99998,10L 7.99998,10L 7.99998,8 Z M 7.99998,4L 9.99998,4L 9.99998,6L 7.99998,6L 7.99998,4 Z M 7.99999,0L 9.99999,0L 9.99999,2L 7.99999,2L 7.99999,0 Z M 4,4L 6,4L 6,6L 4,6L 4,4 Z " />
                </Canvas>
            </Viewbox>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=DeepBlue, ResourceKey=FloatingContainerCaptionTemplate}">
        <Grid Height="Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image x:Name="PART_Icon" Width="Auto" Height="Auto" Margin="6,3,0,3" Stretch="None" Grid.Column="0"
                        Source="{Binding Path=(dxcore:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" />
            <dxcore:FloatingContainerHeaderPanel Grid.Column="1">
                <TextBlock x:Name="PART_Text" TextTrimming="WordEllipsis" Background="{x:Null}" Foreground="#FFD4E4F8" Margin="6,3,6,3" VerticalAlignment="Center" IsHitTestVisible="False" Text="{Binding Path=(dxcore:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" />
            </dxcore:FloatingContainerHeaderPanel>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="Source" SourceName="PART_Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </DataTemplate.Triggers>

    </DataTemplate>
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="#00FFFEFE">
            <Grid x:Name="hover" Visibility="Hidden">
                <Border Margin="2,2,0,0" Opacity="0.05" Background="#FF000000" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF5379AE" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border CornerRadius="2,2,2,2" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0" />
                                <GradientStop Color="#FFADD0F6" Offset="1" />
                                <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0" />
                                    <GradientStop Color="#FFAED1F6" Offset="1" />
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Visibility="Hidden">
                <Border Margin="2,2,1,0" Opacity="0.15" Background="#FFFFFFFF" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF3E6296" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border Background="#FF5576A6" CornerRadius="2,2,2,2" Padding="1,1,1,1" />
                </Border>
            </Grid>
            <Border x:Name="glyph" Opacity="0.85">
                <Grid Width="12" Height="13" Margin="0,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Stretch="Fill"
						Fill="#FFD2DFFB"
						Data="F1 M 1178,789L 1174,793L 1178,797L 1176,799L 1172,795L 1168,799L 1166,797L 1170,793L 1166,789L 1168,787L 1172,791L 1176,787L 1178,789 Z "
						HorizontalAlignment="Stretch"
						Margin="0,1,0,0"
						VerticalAlignment="Stretch"
						Opacity="0.35" />
                    <Path Stretch="Fill"
						Fill="#FF2F4C8A"
						Data="F1 M 1178,788L 1174,792L 1178,796L 1176,798L 1172,794L 1168,798L 1166,796L 1170,792L 1166,788L 1168,786L 1172,790L 1176,786L 1178,788 Z "
						HorizontalAlignment="Stretch"
						Margin="0,0,0,1"
						VerticalAlignment="Stretch"
						/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hover" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressed" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="glyph" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="#00FFFEFE">
            <Grid x:Name="hover" Visibility="Hidden">
                <Border Margin="2,2,0,0" Opacity="0.05" Background="#FF000000" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF5379AE" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border CornerRadius="2,2,2,2" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0" />
                                <GradientStop Color="#FFADD0F6" Offset="1" />
                                <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0" />
                                    <GradientStop Color="#FFAED1F6" Offset="1" />
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Visibility="Hidden">
                <Border Margin="2,2,1,0" Opacity="0.15" Background="#FFFFFFFF" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF3E6296" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border Background="#FF5576A6" CornerRadius="2,2,2,2" Padding="1,1,1,1" />
                </Border>
            </Grid>
            <Border Margin="0,0,0,0" x:Name="glyph" Opacity="0.85">
                <Grid Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,0,0">
                    <Path Stretch="Fill"
						Fill="#FFEEF3FD"
						Data="F1 M 1121,784L 1121,795L 1109,795L 1109,784L 1121,784 Z M 1111,788L 1111,793L 1119,793L 1119,788L 1111,788 Z "
						HorizontalAlignment="Stretch"
						Margin="0,1,0,0"
						VerticalAlignment="Stretch"
						Opacity="0.15" />
                    <Path Stretch="Fill"
						Fill="#FF2F4C8A"
						Data="F1 M 1121,783L 1121,794L 1109,794L 1109,783L 1121,783 Z M 1111,787L 1111,792L 1119,792L 1119,787L 1111,787 Z "
						HorizontalAlignment="Stretch"
						Margin="0,0,0,1"
						VerticalAlignment="Stretch"
						/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hover" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressed" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="glyph" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="#00FFFEFE">
            <Grid x:Name="hover" Visibility="Hidden">
                <Border Margin="2,2,0,0" Opacity="0.05" Background="#FF000000" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF5379AE" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border CornerRadius="2,2,2,2" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0" />
                                <GradientStop Color="#FFADD0F6" Offset="1" />
                                <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0" />
                                    <GradientStop Color="#FFAED1F6" Offset="1" />
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Visibility="Hidden">
                <Border Margin="2,2,1,0" Opacity="0.15" Background="#FFFFFFFF" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF3E6296" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border Background="#FF5576A6" CornerRadius="2,2,2,2" Padding="1,1,1,1" />
                </Border>
            </Grid>
            <Border x:Name="glyph" Opacity="0.85">
                <Grid Width="10" Height="3" Margin="0,0,0,4" VerticalAlignment="Bottom">
                    <Rectangle Stretch="Fill" Fill="#FFEEF3FD" HorizontalAlignment="Stretch" Margin="0,1,0,0" VerticalAlignment="Stretch" Opacity="0.15" />
                    <Rectangle Stretch="Fill" Fill="#FF2F4C8A" HorizontalAlignment="Stretch" Margin="0,0,0,1" VerticalAlignment="Stretch" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hover" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressed" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="glyph" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="#00FFFEFE">
            <Grid x:Name="hover" Visibility="Hidden">
                <Border Margin="2,2,0,0" Opacity="0.05" Background="#FF000000" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF5379AE" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border CornerRadius="2,2,2,2" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0" />
                                <GradientStop Color="#FFADD0F6" Offset="1" />
                                <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0" />
                                    <GradientStop Color="#FFAED1F6" Offset="1" />
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Visibility="Hidden">
                <Border Margin="2,2,1,0" Opacity="0.15" Background="#FFFFFFFF" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF3E6296" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border Background="#FF5576A6" CornerRadius="2,2,2,2" Padding="1,1,1,1" />
                </Border>
            </Grid>
            <Border x:Name="glyph" Opacity="0.85">
                <Grid Width="14" Height="13" Margin="0,1,0,0" VerticalAlignment="Center">
                    <Path Stretch="Fill"
						Fill="#27EEF3FD"
						Data="F1 M 1109,759L 1109,761L 1111,761L 1111,758L 1105,758L 1105,759L 1109,759 Z M 1109,767L 1099,767L 1099,759L 1103,759L 1103,755L 1113,755L 1113,763L 1109,763L 1109,767 Z M 1101,762L 1101,765L 1107,765L 1107,763L 1107,763L 1107,762L 1101,762 Z "
						HorizontalAlignment="Stretch"
						Margin="0,1,0,0"
						VerticalAlignment="Stretch"
						/>
                    <Path Stretch="Fill"
						Fill="#FF2F4C8A"
						Data="F1 M 1109,758L 1109,760L 1111,760L 1111,757L 1105,757L 1105,758L 1109,758 Z M 1109,766L 1099,766L 1099,758L 1103,758L 1103,754.001L 1113,754L 1113,762L 1109,762L 1109,766 Z M 1101,761L 1101,764L 1107,764L 1107,762L 1107,762L 1107,761L 1101,761 Z "
						HorizontalAlignment="Stretch"
						Margin="0,0,0,1"
						VerticalAlignment="Stretch"
						/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="hover" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressed" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="glyph" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--<ControlTemplate x:Key="{dxt:PseudoWindowThemeKeyExtension ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="floating_window">
            <Border Margin="9,9,3,3"
				x:Name="FloatPaneShadow"
				IsHitTestVisible="False"
				Opacity="0.15"
				Panel.ZIndex="0"
				Background="#FF000000"
				CornerRadius="5,5,5,5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Width="Auto"
				Height="Auto" />
            <Border Margin="6,6,6,6" x:Name="GroupBorder" Width="Auto"
				Height="Auto" Background="#FF062B63" CornerRadius="4,4,4,4" Padding="1,1,1,1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border x:Name="GroupHeader1" Grid.Row="0" CornerRadius="3,3,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF88AAD7" Offset="0" />
                                <GradientStop Color="#FF6489BC" Offset="1" />
                                <GradientStop Color="#FF678BBF" Offset="0.5" />
                                <GradientStop Color="#FF587DB3" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button HorizontalAlignment="Right"
								x:Name="close_button"
								Width="Auto"
								Height="Auto"
								Command="ApplicationCommands.Close"
								CommandTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxcore:PseudoWindow}}}"
								Margin="1,1,1,1"
								VerticalAlignment="Center"
								Template="{DynamicResource CloseButton}"
								Style="{DynamicResource ButtonStyle1}" />
                        </Grid>
                    </Border>
                    <Border x:Name="ContentBorder1" Width="Auto" Height="Auto" Grid.Row="1" Background="#FF6489BC" CornerRadius="0,0,3,3" Padding="2,0,2,2">
                        <Border x:Name="ContentBorder2" Width="Auto" Height="Auto" Background="#FFA3C3EC" BorderBrush="#FF4D6E9C" BorderThickness="1,1,1,1" Padding="1,1,1,1">
                            <ContentPresenter Width="Auto" Height="Auto" />
                        </Border>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerTemplate}">
        <Grid>
            <Border x:Name="FloatingContainerBorder" Background="#FF062B63" CornerRadius="0" Padding="1,1,1,1">
                <Border x:Name="FloatingContainerBackground" Background="#FF6489BC" CornerRadius="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_Header" Grid.Row="0" CornerRadius="0" Panel.ZIndex="99">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF88AAD7" Offset="0" />
                                    <GradientStop Color="#FF6489BC" Offset="1" />
                                    <GradientStop Color="#FF678BBF" Offset="0.5" />
                                    <GradientStop Color="#FF587DB3" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="PART_CaptionContentPresenter" Panel.ZIndex="100" Grid.Column="0" Content="{x:Null}"
									ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" />
                                <Thumb Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}"
									x:Name="PART_DragWidget"
									Grid.Column="0" />
                                <StackPanel Margin="2" Grid.Column="1" Orientation="Horizontal" x:Name="stackPanel">
                                    <Button Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"
										x:Name="PART_Minimize"
										Width="22"
										Height="22"
										Focusable="False"
										/>
                                    <Button Focusable="False"
										Height="22"
										Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"
										Width="22"
										x:Name="PART_Restore"
										Visibility="{Binding Path=(dxcore:FloatingContainer.IsMaximized), Converter={dxcore:BooleanToVisibilityConverter Invert=False}}" />
                                    <Button Focusable="False"
										Height="22"
										Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"
										Width="22"
										x:Name="PART_Maximize"
										Visibility="{Binding Path=(dxcore:FloatingContainer.IsMaximized), Converter={dxcore:BooleanToVisibilityConverter Invert=True}}" />
                                    <Button Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"
										x:Name="PART_CloseButton"
										Width="22"
										Height="22"
										Focusable="False"
										/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Margin="4,0,4,4" x:Name="FloatingContainerBody" Grid.Row="1" Background="#FF4D6E9C" Padding="1,1,1,1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}" Grid.RowSpan="2">
                                    <ContentPresenter x:Name="PART_ContainerContent" Content="{Binding}" />
                                </Grid>
                                <StackPanel x:Name="PART_StatusPanel" Grid.Row="1" Visibility="Collapsed">
                                    <Border Height="Auto" Background="{x:Null}" HorizontalAlignment="Right">
                                        <Thumb Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
											Cursor="SizeNWSE"
											HorizontalAlignment="Right"
											x:Name="PART_SizeGrip"
											VerticalAlignment="Bottom"
											Width="16"
											Height="16" />
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </Border>

                    </Grid>
                </Border>
            </Border>
            <Control x:Name="PART_ResizeFrame" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerResizeFrame}}" Focusable="False" 
            Visibility="{Binding Path=(dxcore:FloatingContainer.IsMaximized), Converter={dxcore:BooleanToVisibilityConverter Invert=True}}"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxcore:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="FloatingContainerBorder" Value="#FF8295b1" />
                <Setter Property="Background" TargetName="FloatingContainerBackground" Value="#FFb1c4dd" />
                <Setter Property="Background" TargetName="PART_Header">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFb1c4dd" Offset="1" />
                            <GradientStop Color="#FFc3d4ea" Offset="0" />
                            <GradientStop Color="#FFb3c5df" Offset="0.5" />
                            <GradientStop Color="#FFabbed9" Offset="0.5" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="FloatingContainerBody" Value="#FFa6b6cd" />
                <Setter Property="Opacity" TargetName="stackPanel" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxcore:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_ResizeFrame" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxcore:FloatingContainer.IsMaximized)}" Value="True">
                <Setter Property="Margin" TargetName="FloatingContainerBorder" Value="0,0,0,0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerWindowTemplate}" TargetType="{x:Type dxcore:FloatingContainerControl}">
        <dxcore:FloatingWindowContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerStyle}}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerAdornerTemplate}" TargetType="{x:Type dxcore:FloatingContainerControl}">
        <dxcore:FloatingAdornerContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerStyle}}" />
    </ControlTemplate>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate}}">
        </Setter>
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="ButtonTemplateGrid"
								Uid="Border_69"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="3,3,3,3">
                                <Grid Uid="Grid_68">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border Margin="1,1,1,0"
										x:Name="HighlightBackground"
										Opacity="0.15"
										RenderTransformOrigin="0.5,1"
										Uid="Border_70"
										Grid.Row="0"
										Background="{DynamicResource ButtonSelectionGrad}"
										CornerRadius="2,2,2,2" />
                                    <ContentPresenter HorizontalAlignment="Center"
										Margin="{TemplateBinding Padding}"
										x:Name="Content"
										VerticalAlignment="Center"
										Uid="ContentPresenter_54"
										Grid.RowSpan="2"
										RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonIsDefaultBorderBrush}" />
                                    <Setter Property="BorderThickness" Value="1.5,1.5,1.5,1.5" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                                    <Setter Property="Background" TargetName="HighlightBackground" Value="{DynamicResource ButtonSelectionGrad}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonIsFocusedBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonMouseOverTextBrush}" />
                                    <Setter Property="Opacity" TargetName="HighlightBackground" Value="0.4" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                                    <Setter Property="Opacity" TargetName="HighlightBackground" Value="0.1" />
                                    <Setter Property="RenderTransform" TargetName="HighlightBackground">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledTextBrush}" />
                                    <Setter Property="Visibility" TargetName="HighlightBackground" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                        <Setter Property="BorderThickness" Value="1,1,1,1" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="MinWidth" Value="50" />
                        <Setter Property="MinHeight" Value="18" />
                        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}" />
                        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}" />
                        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}" />
                        <Setter Property="Padding" Value="1,1,1,1" />
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Stroke="{DynamicResource ControlFocusBorderBrush}" StrokeThickness="1" RadiusX="3" RadiusY="3" SnapsToDevicePixels="True" Uid="Rectangle_63" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Border x:Name="ButtonTemplateGrid"
										Uid="Grid_2"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="3,3,3,3">
                                        <Grid Uid="Grid_7">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Border Margin="1,1,1,0"
												x:Name="HighlightBackground"
												Opacity="0.15"
												RenderTransformOrigin="0.5,1"
												Uid="Border_16"
												Grid.Row="0"
												Background="{DynamicResource ButtonSelectionGrad}"
												CornerRadius="2,2,2,2" />
                                            <ContentPresenter HorizontalAlignment="Center"
												Margin="{TemplateBinding Padding}"
												x:Name="Content"
												VerticalAlignment="Center"
												Uid="ContentPresenter_1"
												Grid.RowSpan="2"
												RecognizesAccessKey="True" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonMouseOverTextBrush}" />
                                            <Setter Property="Opacity" TargetName="HighlightBackground" Value="0.4" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                                            <Setter Property="Opacity" TargetName="HighlightBackground" Value="0.1" />
                                            <Setter Property="RenderTransform" TargetName="HighlightBackground">
                                                <Setter.Value>
                                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledTextBrush}" />
                                            <Setter Property="Visibility" TargetName="HighlightBackground" Value="Hidden" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Style.BasedOn>
            </Style>
        </Style.BasedOn>
    </Style>
    <ControlTemplate x:Key="CloseButton" TargetType="{x:Type Button}">
        <Grid x:Name="Button" Width="20" Height="20">
            <Grid x:Name="hoveredState" Visibility="Hidden">
                <Border Margin="2,2,0,0" Opacity="0.1" Background="#FF000000" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF5379AE" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border CornerRadius="1,1,1,1" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0" />
                                <GradientStop Color="#FFADD0F6" Offset="1" />
                                <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0" />
                                    <GradientStop Color="#FFAED1F6" Offset="1" />
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressedState" Visibility="Hidden">
                <Border Margin="2,2,1,0" Opacity="0.15" Background="#FFFFFFFF" CornerRadius="2,2,2,2" />
                <Border Margin="1,1,1,1" Background="#FF3E6296" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                    <Border Background="#FF5576A6" CornerRadius="1,1,1,1" Padding="1,1,1,1" />
                </Border>
            </Grid>
            <Border HorizontalAlignment="Center" Margin="0,0,0,0" x:Name="glyph" VerticalAlignment="Center" Width="15" Height="15" Background="#00FFFEFE">
                <Path Fill="#FF2D4F85"
					Stretch="Fill"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Width="9"
					Height="9"
					Data="F1M12,0L14,2 9,7 14,12 12,14 7,9 2,14 0,12 5,7 0,2 2,0 7,5 12,0z" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Visibility" TargetName="hoveredState" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="pressedState" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>