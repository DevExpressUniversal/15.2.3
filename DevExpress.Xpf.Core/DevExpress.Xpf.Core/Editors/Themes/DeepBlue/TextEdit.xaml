<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="clr-namespace:DevExpress.Xpf.Utils.Themes"
    xmlns:dx="clr-namespace:DevExpress.Xpf.Core"
    xmlns:dxe="clr-namespace:DevExpress.Xpf.Editors"
    xmlns:dxeh="clr-namespace:DevExpress.Xpf.Editors.Helpers"
    xmlns:dxet="clr-namespace:DevExpress.Xpf.Editors.Themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <dxtEx:ResourceDictionaryEx Source="{dx:EditorsResource Themes/DeepBlue/Brushes.xaml}" />
        <dxtEx:ResourceDictionaryEx Source="{dx:EditorsResource Themes/DeepBlue/ErrorPresenter.xaml}" />
        <dxtEx:ResourceDictionaryEx Source="{dx:EditorsResource Themes/DeepBlue/TextEditBase.xaml}" />
        <dxtEx:ResourceDictionaryEx Source="{dx:EditorsResource Themes/Generic/TextEdit.xaml}" />
	</ResourceDictionary.MergedDictionaries>
    <!--END WPF-->

    <SolidColorBrush x:Key="{dxet:TextEditThemeKey ResourceKey=NullTextForeground}" Color="#9C9C9C" />

    <!--BEGIN TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
    <Style BasedOn="{StaticResource BaseTextStyle}" x:Key="{dxet:TextEditThemeKey ResourceKey=TextStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <!--<Setter Property="Margin" Value="2,2,2,2"/>-->
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding Path=HasValidationError, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
                <Setter Property="Margin" Value="0,2,2,2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowError, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxe:BaseEdit}}}" Value="false">
                <Setter Property="Margin" Value="2,2,2,2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxe:BaseEdit}}}" Value="False">
                <Setter Property="Margin" Value="0"/>
            </DataTrigger>
        </Style.Triggers>-->
	</Style>
	<Style BasedOn="{StaticResource BaseTextInplaceStyle}" x:Key="{dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <!--<Setter Property="Margin" Value="2,2,2,2"/>--> 
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2" />
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding Path=HasValidationError, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
                <Setter Property="Margin" Value="0,2,2,2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowError, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxe:BaseEdit}}}" Value="false">
                <Setter Property="Margin" Value="2,2,2,2"/>
            </DataTrigger>

        </Style.Triggers>-->
	</Style>

	<Style BasedOn="{StaticResource BaseTextBlockStyle}" x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="4,2,4,2" />
        <!--<Setter Property="VerticalAlignment" Value="Center"/>-->
	</Style>

	<Style BasedOn="{StaticResource BaseTextBlockInplaceStyle}" x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="4,2,4,2,2,2,4,2" />
		<!--<Setter Property="Margin" Value="4,2,4,2"/>-->
		<!--<Setter Property="VerticalAlignment" Value="Center"/>-->
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding Path=HasValidationError, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
                <Setter Property="Margin" Value="2,2,4,2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowError, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type dxe:BaseEdit}}}" Value="false">
                <Setter Property="Margin" Value="4,2,2,2"/>
            </DataTrigger>

        </Style.Triggers>-->
	</Style>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=DisplayInplaceTemplate}">
		<TextBlock x:Name="PART_Editor"
            Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}"
            dx:FocusHelper2.Focusable="False"
            />
    </ControlTemplate>

	<ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableTemplate}">
        <TextBlock x:Name="PART_Editor"
            Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockStyle}}">
        </TextBlock>
    </ControlTemplate>
	<ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableInplaceTemplate}">
		<TextBlock x:Name="PART_Editor"
            Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}"
            />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditInplaceTemplate}">
		<TextBox x:Name="PART_Editor"
            Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}}"
            />
	</ControlTemplate>
	<ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditTemplate}">
		<TextBox x:Name="PART_Editor"
            Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextStyle}}"
            dxeh:EditorMarginHelper.Margin="2,2,2,2,0,2,2,2"
        />
	</ControlTemplate>

	<ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="{x:Type ContentControl}">
		<Border Width="Auto" Height="Auto" Background="Transparent" Name="TextEditEmptyBorder" SnapsToDevicePixels="True">
			<ContentPresenter />
		</Border>
        <!-- Don't work -->
		<!--<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=EditMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:TextEdit}}}" Value="Standalone">
				<Setter Property="Padding" Value="1,2,1,2"/>
			</DataTrigger>
		</ControlTemplate.Triggers>-->
	</ControlTemplate>

	<ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
		<Grid x:Name="combobox_container" Width="Auto" Height="Auto">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="FocusedElement" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="FocusedElement" Margin="-2" Opacity="0" Background="#FF4882d8" CornerRadius="4"/>
            <Border CornerRadius="3,3,3,3" Padding="1,1,1,1" x:Name="TextEditBorder" Background="{StaticResource editor-textedit-border-gradient}" Margin="0,0,0,0">
				<Grid Width="Auto" Height="Auto" SnapsToDevicePixels="False">
					<Grid.RowDefinitions>
						<RowDefinition Height="5" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Border Margin="0,0,0,0" CornerRadius="2,2,0,0" VerticalAlignment="Stretch" Height="Auto" Grid.Row="0" x:Name="top_shadow" HorizontalAlignment="Stretch">
                        <!--BEGIN WPF-->
                        <Border.SnapsToDevicePixels>
                            <sys:Boolean>True</sys:Boolean>
                        </Border.SnapsToDevicePixels>
                        <!--END WPF-->
                        <Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFCFD7E7" Offset="0" />
								<GradientStop Color="#FFE6EAF2" Offset="1" />
							</LinearGradientBrush>
						</Border.Background>
                    </Border>
                    <Border Grid.Row="1" CornerRadius="0,0,2,2" Margin="0,-1,0,0" x:Name="bottom_fill">
                        <!--BEGIN WPF-->
                        <Border.SnapsToDevicePixels>
                            <sys:Boolean>True</sys:Boolean>
                        </Border.SnapsToDevicePixels>
                        <!--END WPF-->
                        <Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.002">
								<GradientStop Color="#FFE6EAF2" Offset="0" />
								<GradientStop Color="#FFFFFFFF" Offset="1" />
							</LinearGradientBrush>
						</Border.Background>
                    </Border>
					<Border Margin="0,0,0,0" x:Name="content" BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" Background="{x:Null}" Opacity="1" Padding="0,0,0,0" Grid.RowSpan="2">
						<ContentPresenter />
					</Border>
				</Grid>
			</Border>
		</Grid>
	</ControlTemplate>
    <!--END TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
</ResourceDictionary>
