<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="clr-namespace:DevExpress.Xpf.Utils.Themes"
    xmlns:dx="clr-namespace:DevExpress.Xpf.Core"
    xmlns:dxe="clr-namespace:DevExpress.Xpf.Editors"
    xmlns:dxet="clr-namespace:DevExpress.Xpf.Editors.Themes"
    xmlns:dxep="clr-namespace:DevExpress.Xpf.Editors.Popups"
    xmlns:dxepc="clr-namespace:DevExpress.Xpf.Editors.Popups.Calendar"
    xmlns:dxeh="clr-namespace:DevExpress.Xpf.Editors.Helpers"
    xmlns:dxei="clr-namespace:DevExpress.Xpf.Editors.Internal"                
>
    <!--PROCESS SETTERS WITH BINDING-->
    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <dxtEx:ResourceDictionaryEx Source="{dx:EditorsResource Themes/Generic/PasswordBoxEdit.xaml}"/>
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->

    <!--ONLY SL
    <dxei:TextBoxPaddingConverter x:Key="TextBoxPaddingConverter" />
    ONLY SL-->

    <dxeh:HorizontalContentAlignmentToTextAlignmentConverter x:Key="HorizontalContentAlignmentToTextAlignmentConverter" />
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>
    <ControlTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}" TargetType="{x:Type PasswordBox}">
        <!--BEGIN WPF-->
        <Border Background="{TemplateBinding Background}">
            <ScrollViewer 
							x:Name="PART_ContentHost" 
							SnapsToDevicePixels="True" 
							Padding="{TemplateBinding Padding}" 
							Focusable="False" 
							Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}">
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
        <!--END WPF-->
        <!--ONLY SL
            <Border Background="{TemplateBinding Background}">
                <ScrollViewer x:Name="ContentElement" 
                        dx:StyleManager.ApplyApplicationTheme="True" 
                        BorderThickness="0" IsTabStop="False" 
                        Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextBoxPaddingConverter}}"
                        Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}"
                        VerticalScrollBarVisibility="Hidden"/>
            </Border>
        ONLY SL-->
    </ControlTemplate>

    <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxStyle}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Template" Value="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop}"/>
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}"/>
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2"/>
        <!--BEGIN WPF-->
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}"/>
        <Setter Property="TextBlock.TextAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}"/>
        <Setter Property="ContextMenu" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ContextMenu}" />
        <Setter Property="Focusable" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Focusable}"/>
        <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground}"/>
        <Setter Property="PasswordChar" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).PasswordChar}"/>
        <Setter Property="MaxLength" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength}"/>
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="dxeh:ControlHelper.ClearDefaultStyleKey" Value="True"/>
        ONLY SL-->
    </Style>
    <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=NullTextEditorStyle}" TargetType="{x:Type TextBlock}">
        <!--BEGIN WPF-->
        <Setter Property="KeyboardNavigation.IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        <!--END WPF-->
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="HorizontalAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
</ResourceDictionary>
