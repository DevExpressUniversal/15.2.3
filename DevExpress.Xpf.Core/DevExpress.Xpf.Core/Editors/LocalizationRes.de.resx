<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditorStringId.FilterClauseIsLaterThisMonth" xml:space="preserve">
    <value>Ist später in diesem Monat</value>
  </data>
  <data name="EditorStringId.FilterClauseNotLike" xml:space="preserve">
    <value>Ist nicht wie</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBetween" xml:space="preserve">
    <value>Zwischen</value>
  </data>
  <data name="EditorStringId.SelectAll" xml:space="preserve">
    <value>(Alle auswählen)</value>
  </data>
  <data name="EditorStringId.FilterClauseNoneOf" xml:space="preserve">
    <value>Ist nicht enthalten in</value>
  </data>
  <data name="EditorStringId.FilterClauseGreater" xml:space="preserve">
    <value>Ist größer als</value>
  </data>
  <data name="EditorStringId.Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="EditorStringId.ColorEdit_MoreColorsButtonCaption" xml:space="preserve">
    <value>Mehr Farben...</value>
  </data>
  <data name="EditorStringId.FilterGroupNotAnd" xml:space="preserve">
    <value>NichtUnd</value>
  </data>
  <data name="EditorStringId.FilterGroupRemoveGroup" xml:space="preserve">
    <value>Gruppe entfernen</value>
  </data>
  <data name="EditorStringId.ColorEdit_AutomaticButtonCaption" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorIsNull" xml:space="preserve">
    <value>Ist Null</value>
  </data>
  <data name="EditorStringId.FilterClauseIsYesterday" xml:space="preserve">
    <value>Ist gestern</value>
  </data>
  <data name="EditorStringId.FilterToolTipValueType" xml:space="preserve">
    <value>Vergleich mit einem Wert / einem anderen Feldwert</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysRemove" xml:space="preserve">
    <value>(Verwenden Sie die Entfernen oder Minus-Taste)</value>
  </data>
  <data name="EditorStringId.FilterClauseLessOrEqual" xml:space="preserve">
    <value>Ist weniger als oder gleich</value>
  </data>
  <data name="EditorStringId.FilterEmptyValueText" xml:space="preserve">
    <value>&lt;Wert eingeben&gt;</value>
  </data>
  <data name="EditorStringId.FilterClauseContains" xml:space="preserve">
    <value>Beinhaltet</value>
  </data>
  <data name="EditorStringId.ColorEdit_ThemeColorsCaption" xml:space="preserve">
    <value>Theme-Farben</value>
  </data>
  <data name="EditorStringId.ColorEdit_RecentColorsCaption" xml:space="preserve">
    <value>Aktuelle Farben</value>
  </data>
  <data name="EditorStringId.FilterClauseNotBetween" xml:space="preserve">
    <value>Ist nicht zwischen</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAction" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="EditorStringId.No" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLastWeek" xml:space="preserve">
    <value>Ist in der letzten Woche</value>
  </data>
  <data name="EditorStringId.FilterPanelClearFilter" xml:space="preserve">
    <value>Filter entfernen</value>
  </data>
  <data name="EditorStringId.CalculatorError" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAdd" xml:space="preserve">
    <value>Fügt eine neue Bedingung für diese Gruppe hinzu</value>
  </data>
  <data name="EditorStringId.FilterGroupAddCondition" xml:space="preserve">
    <value>Bedingung hinzufügen</value>
  </data>
  <data name="EditorStringId.CaptionError" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="EditorStringId.FilterClauseLike" xml:space="preserve">
    <value>Ist wie</value>
  </data>
  <data name="EditorStringId.FilterGroupClearAll" xml:space="preserve">
    <value>Alles entfernen</value>
  </data>
  <data name="EditorStringId.FilterClauseIsTomorrow" xml:space="preserve">
    <value>Ist morgen</value>
  </data>
  <data name="EditorStringId.FilterClauseBetweenAnd" xml:space="preserve">
    <value>und</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpression" xml:space="preserve">
    <value>Der angegebene Ausdruck enthält ungültige Symbole (Zeile {0}, Zeichen {1}).</value>
  </data>
  <data name="EditorStringId.FilterPanelEnableFilter" xml:space="preserve">
    <value>Filter aktivieren</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNull" xml:space="preserve">
    <value>Ist leer</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Constants_Text" xml:space="preserve">
    <value>Konstanten</value>
  </data>
  <data name="EditorStringId.FilterClauseDoesNotContain" xml:space="preserve">
    <value>Beinhaltet nicht</value>
  </data>
  <data name="EditorStringId.Paste" xml:space="preserve">
    <value>Einfügen</value>
  </data>
  <data name="EditorStringId.CalculatorInvalidInputError" xml:space="preserve">
    <value>Ungültige Eingabe</value>
  </data>
  <data name="EditorStringId.FilterGroupOr" xml:space="preserve">
    <value>Oder</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Functions_Text" xml:space="preserve">
    <value>Funktionen</value>
  </data>
  <data name="EditorStringId.FilterPanelEditFilter" xml:space="preserve">
    <value>Filter bearbeiten</value>
  </data>
  <data name="EditorStringId.FilterClauseGreaterOrEqual" xml:space="preserve">
    <value>Ist größer als oder gleich</value>
  </data>
  <data name="EditorStringId.FilterGroupAddGroup" xml:space="preserve">
    <value>Gruppe hinzufügen</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorNot" xml:space="preserve">
    <value>Nicht</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisYear" xml:space="preserve">
    <value>Ist später in diesem Jahr</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNextWeek" xml:space="preserve">
    <value>Ist nächste Woche</value>
  </data>
  <data name="EditorStringId.Apply" xml:space="preserve">
    <value>Übernehmen</value>
  </data>
  <data name="EditorStringId.Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="EditorStringId.FilterClauseIsPriorThisYear" xml:space="preserve">
    <value>Ist vor diesem Jahr</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorAnd" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysAdd" xml:space="preserve">
    <value>(Verwenden Sie die Einfüge- oder Plus-Taste)</value>
  </data>
  <data name="EditorStringId.FilterPanelDisableFilter" xml:space="preserve">
    <value>Filter deaktivieren</value>
  </data>
  <data name="EditorStringId.FilterClauseBetween" xml:space="preserve">
    <value>Ist zwischen</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisYear" xml:space="preserve">
    <value>Ist früher in diesem Jahr</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisMonth" xml:space="preserve">
    <value>Ist früher in diesem Monat</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNotNull" xml:space="preserve">
    <value>Ist nicht leer</value>
  </data>
  <data name="EditorStringId.FilterClauseIsToday" xml:space="preserve">
    <value>Ist heute</value>
  </data>
  <data name="EditorStringId.FilterClauseEndsWith" xml:space="preserve">
    <value>Endet mit</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpressionEx" xml:space="preserve">
    <value>Der angegebene Ausdruck ist ungültig.</value>
  </data>
  <data name="EditorStringId.FilterToolTipElementAdd" xml:space="preserve">
    <value>Fügt ein neues Element in die Liste ein</value>
  </data>
  <data name="EditorStringId.FilterClauseAnyOf" xml:space="preserve">
    <value>Ist einer von</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorOr" xml:space="preserve">
    <value>Oder</value>
  </data>
  <data name="EditorStringId.Cut" xml:space="preserve">
    <value>Ausschneiden</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Abs_Description" xml:space="preserve">
    <value>Abs (Wert)

Gibt den absoluten, positiven Wert des angegebenen numerischen Ausdrucks zurück.</value>
  </data>
  <data name="EditorStringId.FilterEditorChecked" xml:space="preserve">
    <value>Ausgewählt</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisWeek" xml:space="preserve">
    <value>Ist später in dieser Woche</value>
  </data>
  <data name="EditorStringId.CalculatorDivisionByZeroError" xml:space="preserve">
    <value>Division durch 0 nicht möglich</value>
  </data>
  <data name="EditorStringId.ColorEdit_ColorChooserWindowTitle" xml:space="preserve">
    <value>Farben</value>
  </data>
  <data name="EditorStringId.Open" xml:space="preserve">
    <value>Öffnen</value>
  </data>
  <data name="EditorStringId.FilterClauseBeginsWith" xml:space="preserve">
    <value>Beginnt mit</value>
  </data>
  <data name="EditorStringId.FilterGroupAnd" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="EditorStringId.FilterClauseDoesNotEqual" xml:space="preserve">
    <value>Ist ungleich</value>
  </data>
  <data name="EditorStringId.Clear" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="EditorStringId.ImageEdit_OpenFileFilter" xml:space="preserve">
    <value>Bilddateien (*.BMP;*.JPG;*.GIF;*.PNG)|*.BMP;*.JPG;*.GIF;*.PNG|Alle Dateien (*.*)|*.*</value>
  </data>
  <data name="EditorStringId.FilterDateTimeOperatorMenuCaption" xml:space="preserve">
    <value>Datum/Zeit Operatoren</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisWeek" xml:space="preserve">
    <value>Ist früher in dieser Woche</value>
  </data>
  <data name="EditorStringId.Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="EditorStringId.Copy" xml:space="preserve">
    <value>Kopieren</value>
  </data>
  <data name="EditorStringId.FilterEditorUnchecked" xml:space="preserve">
    <value>Nicht ausgewählt</value>
  </data>
  <data name="EditorStringId.FilterClauseLess" xml:space="preserve">
    <value>Ist weniger als</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Fields_Text" xml:space="preserve">
    <value>Felder</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIsNotNull" xml:space="preserve">
    <value>Ist nicht Null</value>
  </data>
  <data name="EditorStringId.ColorEdit_StandardColorsCaption" xml:space="preserve">
    <value>Standardfarben</value>
  </data>
  <data name="EditorStringId.FilterGroupNotOr" xml:space="preserve">
    <value>NichtOder</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLike" xml:space="preserve">
    <value>Wie</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringNotLike" xml:space="preserve">
    <value>Nicht Wie</value>
  </data>
  <data name="EditorStringId.ColorEdit_NoColorButtonCaption" xml:space="preserve">
    <value>Keine Farben</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeRemove" xml:space="preserve">
    <value>Entfernt diese Bedingung</value>
  </data>
  <data name="EditorStringId.FilterClauseIsBeyondThisYear" xml:space="preserve">
    <value>Ist nach diesem Jahr</value>
  </data>
  <data name="EditorStringId.FilterClauseEquals" xml:space="preserve">
    <value>Gleicht</value>
  </data>
  <data name="EditorStringId.OutOfRange" xml:space="preserve">
    <value>Wert ist außerhalb des gültigen Bereiches</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddYears_Description" xml:space="preserve">
    <value>AddYears(DateTime, YearsCount)
Returns a date-time value that is the specified number of years away from the specieid DateTime.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Asin_Description" xml:space="preserve">
    <value>Asin(Value)
Returns the arcsine of a number (the angle, in radians, whose sine is the given float expression).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Rnd_Description" xml:space="preserve">
    <value>Rnd ()
Gibt eine Zufallszahl zurück, die kleiner als 1 ist, aber größer oder gleich null.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddDays_Description" xml:space="preserve">
    <value>AddDays (DatumUhrzeit, AnzahlTage)

Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Anzahl an Tagen von dem spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft3Param_Description" xml:space="preserve">
    <value>PadLeft (String, Länge, Zeichen)

Richtet Zeichen in der Zeichenfolge linksbündig aus, und füllt die linke Seite bis zur angegebenen Gesamtlänge mit dem übergebenen Zeichen auf.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseAnd_Description" xml:space="preserve">
    <value>Führt eine bitweise logische UND-Operation zwischen zwei ganzzahligen Werten durch.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_EndsWith_Description" xml:space="preserve">
    <value>EndsWith (String, EndString)

Gibt "wahr" zurück, wenn das Ende der Zeichenfolge dem EndString entspricht, andernfalls "falsch".</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Floor_Description" xml:space="preserve">
    <value>Floor (Wert)
Gibt die größte ganze Zahl zurück, die kleiner oder gleich dem angegebenen numerischen Ausdruck ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Max_Description" xml:space="preserve">
    <value>Max (Wert1, Wert2)
Gibt den höchsten Wert der angegebenen Werte zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTicks_Description" xml:space="preserve">
    <value>AddTicks (DatumUhrzeit,AnzahlTicks)
Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Anzahl an Ticks von dem spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Replace_Description" xml:space="preserve">
    <value>Replace (String, SubString2, String3)
Gibt eine Kopie der Zeichenfolge String1 zurück, in der SubString2 mit String3 ersetzt wurde.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetHour_Description" xml:space="preserve">
    <value>GetHour (DatumUhrzeit)
Extrahiert die Stunde aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Remove_Description" xml:space="preserve">
    <value>Remove (String, StartPosition, Länge)
Löscht eine angegebene Anzahl von Zeichen aus dieser Instanz, beginnend mit der spezifizierten Position.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LessOrEqual_Description" xml:space="preserve">
    <value>"Kleiner oder gleich"-Operant. Wird verwendet, um Ausdrücke zu vergleichen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring2param_Description" xml:space="preserve">
    <value>Substring (String, StartPosition)
Extrahiert eine Teilzeichenfolge aus der Zeichenfolge String. Die Teilzeichenfolge beginnt an der StartPosition.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDate_Description" xml:space="preserve">
    <value>GetDate (DatumUhrzeit)
Extrahiert das Datum aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTimeSpan_Description" xml:space="preserve">
    <value>AddTimeSpan (DatumUhrzeit, Zeitspanne)
Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Zeitspanne vom spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.CantModifySelectedDates" xml:space="preserve">
    <value>Änderung der SelectedDates Collection nur im Mehrfachauswahl-Modus möglich. Verwenden Sie FocusedDate im Einzelauswahl-Modus.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_StartsWith_Description" xml:space="preserve">
    <value>StartsWith (String, StartString)
Gibt "wahr" zurück, wenn der Beginn der Zeichenfolge dem StartString entspricht, andernfalls "falsch".</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft_Description" xml:space="preserve">
    <value>PadLeft (String, Länge)
Richtet Zeichen in der Zeichenfolge linksbündig aus, und füllt die linke Seite bis zur angegebenen Länge mit Leerzeichen auf.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMonth_Description" xml:space="preserve">
    <value>DateDiffMonth (BeginnDatum, EndDatum)
Gibt die Anzahl der Monate an, die zwischen zwei Datumsangaben liegen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Plus_Description" xml:space="preserve">
    <value>Fügt den Wert eines numerischen Ausdrucks zu einem anderen hinzu, oder verkettet zwei Zeichenfolgen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Equal_Description" xml:space="preserve">
    <value>Gibt "wahr" zurück, wenn beide Operanden den gleichen Wert haben, andernfalls "falsch".</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Contains_Description" xml:space="preserve">
    <value>Contains (String, SubString)
</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sqr_Description" xml:space="preserve">
    <value>Sqr (Wert)
Gibt die Quadratwurzel aus der angebenen Zahl zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_UtcNow_Description" xml:space="preserve">
    <value>UtcNow()
Gibt das aktuelle Systemdatum und die Uhrzeit als Coordinated Universal Time (UTC) zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn_Description" xml:space="preserve">
    <value>Atn(Value)
Returns the arctangent of a number (the angle, in radians, whose tangent is the given float expression).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNull_Description" xml:space="preserve">
    <value>IsNull (Wert)
Gibt "wahr" zurück, wenn der angegebene Wert NULL ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Concat_Description" xml:space="preserve">
    <value>Concat(String1, ... , StringN)
Returns a string value containing the concatenation of the current string with any additional strings.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log10_Description" xml:space="preserve">
    <value>Log10 (Wert)

Gibt den Logarithmus zur Basis 10 der angegebenen Zahl zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Now_Description" xml:space="preserve">
    <value>Now ()
Gibt das aktuelle Systemdatum und die Uhrzeit zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMinute_Description" xml:space="preserve">
    <value>DateDiffMinute (BeginnDatum, EndDatum)
Gibt die Anzahl der Minuten an, die zwischen zwei Datumsangaben liegen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDay_Description" xml:space="preserve">
    <value>GetDay (DatumUhrzeit)
Extrahiert den Tag aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffYear_Description" xml:space="preserve">
    <value>DateDiffYear (BeginnDatum, EndDatum)
Gibt die Anzahl der Jahre an, die zwischen zwei Datumsangaben liegen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Between_Description" xml:space="preserve">
    <value>Zwischen (,)
Definiert einen Testbereich. "Wahr" wird zurückgegeben wenn der Wert größer oder gleich dem ersten Operanden und kleiner oder gleich dem zweiten ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Operators_Text" xml:space="preserve">
    <value>Operatoren</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddHours_Description" xml:space="preserve">
    <value>AddHours (DatumUhrzeit, AnzahlStunden)
Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Anzahl an Stunden von dem spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_False_Description" xml:space="preserve">
    <value>Entspricht dem Boolean-Wert "falsch".</value>
  </data>
  <data name="EditorStringId.PasswordBoxEditToolTipHeader" xml:space="preserve">
    <value>Feststelltaste aktiviert</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Power_Description" xml:space="preserve">
    <value>Power (Wert, Potenz)
Gibt die um den angegebenen Wert Power potenzierte Zahl zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sin_Description" xml:space="preserve">
    <value>Sin (Wert)
Gibt den Sinus des Winkels im Bogenmaß zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Divide_Description" xml:space="preserve">
    <value>Dividiert den ersten Operanden durch den zweiten.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring3param_Description" xml:space="preserve">
    <value>Substring (String, StartPosition, Länge)
Extrahiert eine Teilzeichenfolge aus der Zeichenfolge String. Die Teilzeichenfolge beginnt an der StartPosition und hat die angegebene Länge.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Minus_Description" xml:space="preserve">
    <value>Ermittelt die Differenz zwischen zwei Zahlen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log_Description" xml:space="preserve">
    <value>Log (Wert)
Gibt den natürlichen Logarithmus der angegebenen Zahl zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Greater_Description" xml:space="preserve">
    <value>"Größer als"-Operator. Wird verwendet, um Ausdrücke zu vergleichen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Title" xml:space="preserve">
    <value>Ausdruck-Editor</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Null_Description" xml:space="preserve">
    <value>Stellt einen NULL-Verweis dar, der auf kein Objekt referenziert.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ascii_Description" xml:space="preserve">
    <value>Ascii (String)
Gibt den ASCII-Codes des am weitesten links stehenden Zeichens in einer Zeichenfolge zurück.</value>
  </data>
  <data name="EditorStringId.Today" xml:space="preserve">
    <value>Heute</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_DateTimeItems" xml:space="preserve">
    <value>Datum/Uhrzeit</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GridFields_Description_Prefix" xml:space="preserve">
    <value>Feld-Information

Bezeichnung: {1}

Feldtyp: {2}</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMonth_Description" xml:space="preserve">
    <value>GetMonth (DatumUhrzeit)
Extrahiert das Monat aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_And_Description" xml:space="preserve">
    <value>Führt eine logische Verknüpfung zweier Ausdrücke durch</value>
  </data>
  <data name="EditorStringId.MaskIncomplete" xml:space="preserve">
    <value>Maske unvollständig</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffDay_Description" xml:space="preserve">
    <value>DateDiffDay (BeginnDatum, EndDatum)
Gibt die Anzahl der Tage an, die zwischen zwei Datumsangaben liegen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Less_Description" xml:space="preserve">
    <value>"Kleiner als"-Operant. Wird verwendet, um Ausdrücke zu vergleichen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNullOrEmpty_Description" xml:space="preserve">
    <value>IsNullOrEmpty (String)

Gibt "wahr" oder eine leere Zeichenfolge zurück, wenn das angegebene String Objekt NULL ist, andernfalls wird "falsch" zurückgegeben.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_True_Description" xml:space="preserve">
    <value>Entspricht dem Boolean-Wert "wahr".</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Lower_Description" xml:space="preserve">
    <value>Lower (String)
Gibt die Zeichenfolge in Kleinbuchstaben zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_MathItems" xml:space="preserve">
    <value>Math</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Like_Description" xml:space="preserve">
    <value>Vergleicht eine Zeichenfolge mit einem Muster. Wenn der Wert der Zeichenfolge mit dem Muster übereinstimmt, ist das Ergebnis "wahr", ansonsten "falsch". Wenn die Zeichenfolge sowie auch das Muster leere Zeichenfolgen sind, so ist das Ergebnis "wahr".</value>
  </data>
  <data name="EditorStringId.ImageEdit_InvalidFormatMessage" xml:space="preserve">
    <value>Falsches Bildformat</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_NotEqual_Description" xml:space="preserve">
    <value>Gibt "wahr" zurück wenn die Operanden nicht denselben Wert haben, ansonsten "falsch".</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex3Param_Description" xml:space="preserve">
    <value>CharIndex (String1, String2, StartPosition)

Gibt die Startposition von Zeichenfolge String1 innerhalb von String2 zurück, beginnend bei der angegebenen StartPosition bis zum Ende der Zeichenfolge</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffSecond_Description" xml:space="preserve">
    <value>DateDiffSecond (BeginnDatum, EndDatum)
Gibt die Anzahl der Sekunden an, die zwischen zwei Datumsangaben liegen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToStr_Description" xml:space="preserve">
    <value>ToStr (Wert)
Gibt eine String-Darstellung des Objekts zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetSecond_Description" xml:space="preserve">
    <value>GetSecond (DatumUhrzeit)
Extrahiert die Sekunden aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfWeek_Description" xml:space="preserve">
    <value>GetDayOfWeek (DatumUhrzeit)
Extrahiert den Wochentag aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Upper_Description" xml:space="preserve">
    <value>Upper (String)
Gibt die Zeichenfolge in Großbuchstaben zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMilliSecond_Description" xml:space="preserve">
    <value>GetMilliSecond (DatumUhrzeit)
Extrahiert die Milisekunden aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetYear_Description" xml:space="preserve">
    <value>GetYear (DatumUhrzeit)
Extrahiert das Jahr aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Min_Description" xml:space="preserve">
    <value>Min (Wert1, Wert2)
Gibt den kleinsten Wert der angegebenen Werte zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Char_Description" xml:space="preserve">
    <value>Char (Zahl)
Konvertiert einen ganzzahligen ASCII-Code in ein Zeichen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Len_Description" xml:space="preserve">
    <value>Len (Wert)

Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge enthält, oder die nominelle Anzahl von Bytes, die benötigt wird, um eine Variable zu speichern.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sign_Description" xml:space="preserve">
    <value>Sign (Wert)
Liefert das positive (+1), null (0) oder negative (-1) Signum des angegebenen Ausdrucks zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn2_Description" xml:space="preserve">
    <value>Atn2(Value1, Value2)
Returns the angle whose tangent is the quotient of two specified numbers, in radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Not_Description" xml:space="preserve">
    <value>Führt eine logische Negation eines Ausdrucks aus.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Trim_Description" xml:space="preserve">
    <value>Trim (String)
Entfernt alle führenden und abschließenden Leerzeichen aus der Zeichenfolge</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Round_Description" xml:space="preserve">
    <value>Round (Wert)
Rundet den angegebenen Wert auf die nächste ganze Zahl.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log2Param_Description" xml:space="preserve">
    <value>Log (Wert, Basis)

Gibt den Logarithmus zur spezifizierten Basis der angegebenen Zahl zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Or_Description" xml:space="preserve">
    <value>Führt eine logische ODER-Verknüpfung zweier Boolean-Ausdrücke durch.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Acos_Description" xml:space="preserve">
    <value>Acos (Wert)

Gibt den Arkuskosinus einer Zahl zurück (Winkel im Bogenmaß, dessen Kosinus der angegebene Gleitkomma-Ausdruck ist).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Round2Param_Description" xml:space="preserve">
    <value>Round (Wert, Dezimalstellen)
Rundet den angegebenen Wert auf die nächste ganze Zahl, oder auf eine bestimmte Anzahl von Dezimalstellen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tan_Description" xml:space="preserve">
    <value>Tan (Wert)
Gibt den Tangens des Winkels im Bogenmaß zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMilliSeconds_Description" xml:space="preserve">
    <value>AddMilliSeconds (DatumUhrzeit, AnzahlMilisekunden)
Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Anzahl an Millisekunden von dem spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_LogicalItems" xml:space="preserve">
    <value>Logisch</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Iif_Description" xml:space="preserve">
    <value>Iif (Ausdruck, WahrerTeil, FalscherTeil)
Gibt entweder den wahren oder den falschen Teil zurück, abhängig von der Auswertung des Booleschen Ausdrucks.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_In_Description" xml:space="preserve">
    <value>In (,,,)
Prüft die Existenz einer Eigenschaft in einem Objekt.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddSeconds_Description" xml:space="preserve">
    <value>AddSeconds (DatumUhrzeit, AnzahlSekunden)
Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Anzahl an Sekunden von dem spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffHour_Description" xml:space="preserve">
    <value>DateDiffHour (BeginnDatum, EndDatum)
Gibt die Anzahl der Stunden an, die zwischen zwei Datumsangaben liegen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex_Description" xml:space="preserve">
    <value>CharIndex (String1, String2)

Gibt die Startposition der Zeichenfolge String1 innerhalb von String2 zurück, beginnend bei der Anfangsposition bis zum Ende der Zeichenfolge.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Reverse_Description" xml:space="preserve">
    <value>Reverse (String)
Kehrt die Reihenfolge der Elemente innerhalb der Zeichenfolge um.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ceiling_Description" xml:space="preserve">
    <value>Ceiling (Wert)
Gibt die kleinste ganze Zahl zurück, die größer oder gleich dem angegebenen numerischen Ausdruck ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfYear_Description" xml:space="preserve">
    <value>GetDayOfYear (DatumUhrzeit)
Extrahiert den Tag des Jahres aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMinutes_Description" xml:space="preserve">
    <value>AddMinutes (DatumUhrzeit, AnzahlMinuten)
Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Anzahl an Minuten von dem spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetTimeOfDay_Description" xml:space="preserve">
    <value>GetTimeOfDay (DatumUhrzeit)
Extrahiert die Uhrzeit aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GreaterOrEqual_Description" xml:space="preserve">
    <value>"Größer oder gleich"-Operator. Wird verwendet, um Ausdrücke zu vergleichen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseOr_Description" xml:space="preserve">
    <value>Vergleicht jedes Bit des ersten Operanden mit dem entsprechenden Bit des zweiten. Wenn eines der Bits 1 ist, wird das entsprechende Ergebnis-Bit auf 1 gesetzt, ansonsten auf 0.</value>
  </data>
  <data name="EditorStringId.PasswordBoxEditToolTipContent" xml:space="preserve">
    <value>Durch das Drücken der Feststelltaste kann es zu einer falschen Kennworteingabe kommen.
 Stellen Sie sicher, dass die Feststelltaste nicht gedrückt ist wenn Sie Ihr Kennwort eingeben!</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Multiply_Description" xml:space="preserve">
    <value>Multipliziert den Wert von zwei Ausdrücken.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Insert_Description" xml:space="preserve">
    <value>Insert (String1, StartPosition, String2)

Fügt Zeichenfolge String2 in Zeichenfolge String1 ein, und zwar an jener Stelle, die im Parameter StartPosition angegeben ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight_Description" xml:space="preserve">
    <value>PadRight (String, Länge)
Richtet Zeichen in der Zeichenfolge rechtsbündig aus, und füllt die linke Seite bis zur angegebenen Länge mit Leerzeichen auf.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_AllItems" xml:space="preserve">
    <value>(Alle)</value>
  </data>
  <data name="EditorStringId.ImageEdit_OpenFileFilter_SL" xml:space="preserve">
    <value>Bilddateien (*.JPG;*.PNG)|*.JPG;*.PNG|Alle Dateien (*.*)|*.*</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Today_Description" xml:space="preserve">
    <value>Today()
Gibt das aktuelle Datum zurück. Unabhängig von der tatsächlichen Uhrzeit, gibt diese Funktion Mitternacht des aktuellen Datums zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseXor_Description" xml:space="preserve">
    <value>Führt einen logischen Ausschluss zweier Boolean-Ausdrücke durch oder einen bitweisen Ausschluss zweier numerischer Ausdrücke.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tanh_Description" xml:space="preserve">
    <value>Tanh (Wert)
Gibt den hyperbolischen Tangens des Winkels im Bogenmaß zurück.</value>
  </data>
  <data name="EditorStringId.WaitIndicatorText" xml:space="preserve">
    <value>Laden...</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cosh_Description" xml:space="preserve">
    <value>Cosh (Wert)</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sinh_Description" xml:space="preserve">
    <value>Sinh (Wert)
Gibt den hyperbolischen Sinus des Winkels im Bogenmaß zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight3Param_Description" xml:space="preserve">
    <value>PadRight (String, Länge, Zeichen)

Richtet Zeichen in der Zeichenfolge rechtsbündig aus, und füllt die linke Seite bis zur angegebenen Gesamtlänge mit dem übergebenen Zeichen auf.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BigMul_Description" xml:space="preserve">
    <value>BigMul (Wert1, Wert2)
Gibt einen Int64-Wert zurück, der das vollständige Produkt der zwei angegebenen 32-Bit-Zahlen darstellt.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cos_Description" xml:space="preserve">
    <value>Cos (Wert)
Gibt den Kosinus des Winkels im Bogenmaß an.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMonths_Description" xml:space="preserve">
    <value>AddMonths (DatumUhrzeit, AnzahlMonate)
Gibt einen Datum/Uhrzeit-Wert zurück, der die angegebene Anzahl an Monaten von dem spezifizierten Zeitpunkt entfernt ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffTick_Description" xml:space="preserve">
    <value>DateDiffTick (BeginnDatum, EndDatum)
Gibt die Anzahl der Ticks an, die zwischen zwei Datumsangaben liegen.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMinute_Description" xml:space="preserve">
    <value>GetMinute (DatumUhrzeit)
Extrahiert die Minuten aus dem Datum/Uhrzeit-Parameter.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Modulo_Description" xml:space="preserve">
    <value>Gibt den Rest (Modulo) zurück, der bei der Division eines numerischen Ausdrucks durch einen anderen erhalten wird.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Exp_Description" xml:space="preserve">
    <value>Exp (Wert)
Gibt den exponentiellen Wert des angegebenen Gleitkommanzahl-Ausdrucks zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMilliSecond_Description" xml:space="preserve">
    <value>DateDiffMilliSecond (BeginnDatum, EndDatum)
Gibt die Anzahl der Milisekunden an, die zwischen zwei Datumsangaben liegen</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToInt_Description" xml:space="preserve">
    <value>ToInt (Wert)
Konvertiert den Wert auf eine äquivalente 32-Bit-Ganzzahl.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToLong_Description" xml:space="preserve">
    <value>ToLong (Wert)
Konvertiert den Wert auf eine äquivalente 64-Bit-Ganzzahl.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToFloat_Description" xml:space="preserve">
    <value>ToFloat(Value)
Converts Value to an equivalent 32-bit single-precision floating-point number.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToDouble_Description" xml:space="preserve">
    <value>ToDouble(Value)
Converts Value to an equivalent 64-bit double-precision floating-point number.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToDecimal_Description" xml:space="preserve">
    <value>ToDecimal (Wert)
Konvertiert den Wert zu einer äquivalenten Dezimalzahl.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_StringItems" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNullOrEmpty" xml:space="preserve">
    <value>Ist leer</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNotNullOrEmpty" xml:space="preserve">
    <value>Ist nicht leer</value>
  </data>
  <data name="EditorStringId.ListBoxSelectAllSelectionMode" xml:space="preserve">
    <value>Kann SelectAll nur dann aufrufen, wenn der Selektionsmodus "mehrfach" oder "erweitert" ist.</value>
  </data>
  <data name="EditorStringId.Page" xml:space="preserve">
    <value>Seite</value>
  </data>
  <data name="EditorStringId.Of" xml:space="preserve">
    <value>von {0}</value>
  </data>
  <data name="EditorStringId.LookUpFind" xml:space="preserve">
    <value>Suche</value>
  </data>
  <data name="EditorStringId.LookUpAddNew" xml:space="preserve">
    <value>Neu hinzufügen</value>
  </data>
  <data name="EditorStringId.SetNullValue" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="EditorStringId.OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseAnd" xml:space="preserve">
    <value>&amp;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseOr" xml:space="preserve">
    <value>|</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseXor" xml:space="preserve">
    <value>^</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorDivide" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreater" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreaterOrEqual" xml:space="preserve">
    <value>&gt;=</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLess" xml:space="preserve">
    <value>&lt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLessOrEqual" xml:space="preserve">
    <value>&lt;=</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorModulo" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMultiply" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorNotEqual" xml:space="preserve">
    <value>&lt;&gt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorBitwiseNot" xml:space="preserve">
    <value>~</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.CalculatorButtonZero" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="EditorStringId.CalculatorButtonOne" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="EditorStringId.CalculatorButtonTwo" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="EditorStringId.CalculatorButtonThree" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFour" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFive" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSix" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSeven" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="EditorStringId.CalculatorButtonEight" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="EditorStringId.CalculatorButtonNine" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSign" xml:space="preserve">
    <value>±</value>
  </data>
  <data name="EditorStringId.CalculatorButtonAdd" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSub" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMul" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="EditorStringId.CalculatorButtonDiv" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFract" xml:space="preserve">
    <value>1/x</value>
  </data>
  <data name="EditorStringId.CalculatorButtonPercent" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSqrt" xml:space="preserve">
    <value>√</value>
  </data>
  <data name="EditorStringId.CalculatorButtonEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Red" xml:space="preserve">
    <value>Rot</value>
  </data>
  <data name="EditorStringId.LookUpSearch" xml:space="preserve">
    <value>Suche</value>
  </data>
  <data name="EditorStringId.LookUpClose" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_DarkRed" xml:space="preserve">
    <value>Dunkelrot</value>
  </data>
  <data name="EditorStringId.EmptyItem" xml:space="preserve">
    <value>(Leer)</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Blue" xml:space="preserve">
    <value>Blau</value>
  </data>
  <data name="EditorStringId.CheckIndeterminate" xml:space="preserve">
    <value>Unbestimmt</value>
  </data>
  <data name="EditorStringId.ConfirmationDialogCaption" xml:space="preserve">
    <value>Bestätigung</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionEndsWith" xml:space="preserve">
    <value>Endet mit</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Black" xml:space="preserve">
    <value>Schwarz</value>
  </data>
  <data name="EditorStringId.ConfirmationDialogMessage" xml:space="preserve">
    <value>Die Schriftart "{0}" ist auf Ihrem System nicht verfügbar. Soll sie trotzdem verwendet werden?</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Purple" xml:space="preserve">
    <value>Lila</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeCurrency" xml:space="preserve">
    <value>Währung</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_LightGreen" xml:space="preserve">
    <value>Hellgrün</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_White" xml:space="preserve">
    <value>Weiß</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Yellow" xml:space="preserve">
    <value>Gelb</value>
  </data>
  <data name="EditorStringId.CheckChecked" xml:space="preserve">
    <value>Ausgewählt</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionContains" xml:space="preserve">
    <value>Beinhaltet</value>
  </data>
  <data name="EditorStringId.CheckUnchecked" xml:space="preserve">
    <value>Nicht ausgewählt</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Green" xml:space="preserve">
    <value>Grün</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionIsNullOrEmpty" xml:space="preserve">
    <value>Ist null oder leer</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionStartsWith" xml:space="preserve">
    <value>Beginnt mit</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_LightBlue" xml:space="preserve">
    <value>Hellblau</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_DarkBlue" xml:space="preserve">
    <value>Dunkelblau</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTomorrow_Description" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem morgigen Tag entspricht.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextMonth_Description" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag des nächsten Monats entspricht.</value>
  </data>
  <data name="EditorStringId.DisplayFormatHelperWrongDisplayFormatValue" xml:space="preserve">
    <value>Ungültiges Anzeigeformat des Textes</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeDayAfterTomorrow_Description" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem übermorgigen Tag entspricht.</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeDatetime" xml:space="preserve">
    <value>DatumUhrzeit</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeSpecial" xml:space="preserve">
    <value>Speziell</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlPrefix" xml:space="preserve">
    <value>Präfix:</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeDefault" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeCustom" xml:space="preserve">
    <value>Benutzerdefiniert</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeLastWeek_Description" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag der vergangenen Woche entspricht.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisYear_Description" xml:space="preserve">
    <value>LocalDateTimeThisYear()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag des aktuellen Jahres entspricht.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeToday_Description" xml:space="preserve">
    <value>LocalDateTimeToday()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem heutigen Tag entspricht.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextYear_Description" xml:space="preserve">
    <value>LocalDateTimeNextYear()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag des nächsten Jahres entspricht.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeYesterday_Description" xml:space="preserve">
    <value>LocalDateTimeYesterday()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem gestrigen Tag entspricht.</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlExample" xml:space="preserve">
    <value>Beispiel:</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextWeek_Description" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag der nächsten woche entspricht.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNow_Description" xml:space="preserve">
    <value>LocalDateTimeNow()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem aktuellen Augenblick entspricht.</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeNumber" xml:space="preserve">
    <value>Nummer</value>
  </data>
  <data name="EditorStringId.DisplayFormatNullValue" xml:space="preserve">
    <value>Kein</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisMonth_Description" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag des aktuellen Monats entspricht.</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlDisplayFormatText" xml:space="preserve">
    <value>Anzeige des formatierten Textes:</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTwoWeeksAway_Description" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag der übernächsten Woche entspricht.</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypePercent" xml:space="preserve">
    <value>Prozent</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisWeek_Description" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
Gibt einen Datum/Uhrzeit-Wert zurück, der dem ersten Tag der aktuellen Woche entspricht.</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIn" xml:space="preserve">
    <value>In</value>
  </data>
  <data name="EditorStringId.CalculatorButtonBack" xml:space="preserve">
    <value>←</value>
  </data>
  <data name="EditorStringId.CalculatorButtonCancel" xml:space="preserve">
    <value>CE</value>
  </data>
  <data name="EditorStringId.CalculatorButtonClear" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Orange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="EditorStringId.DataTypeStringExample" xml:space="preserve">
    <value>ABCXYZ</value>
  </data>
  <data name="EditorStringId.ImageEdit_SaveFileFilter" xml:space="preserve">
    <value>PNG(*.png)|*.Png|BMP(*.bmp)|*.BMP|JPG(*.jpg)|*.Jpg|GIF(.gif)|*.gif</value>
  </data>
  <data name="EditorStringId.InvalidValueConversion" xml:space="preserve">
    <value>Ungültige Wertkonvertierung</value>
  </data>
  <data name="EditorStringId.RGB" xml:space="preserve">
    <value>RGB</value>
  </data>
  <data name="EditorStringId.SparklineViewArea" xml:space="preserve">
    <value>Bereich</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMC" xml:space="preserve">
    <value>MC</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMR" xml:space="preserve">
    <value>MR</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMS" xml:space="preserve">
    <value>MS</value>
  </data>
  <data name="EditorStringId.CMYK" xml:space="preserve">
    <value>CMYK</value>
  </data>
  <data name="EditorStringId.ColorPickerAlpha" xml:space="preserve">
    <value>Alpha</value>
  </data>
  <data name="EditorStringId.ColorPickerBlue" xml:space="preserve">
    <value>Blau</value>
  </data>
  <data name="EditorStringId.ColorPickerCyan" xml:space="preserve">
    <value>Cyan</value>
  </data>
  <data name="EditorStringId.ColorPickerGreen" xml:space="preserve">
    <value>Grün</value>
  </data>
  <data name="EditorStringId.DataTypeCharExample" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AvgAggregate_Description" xml:space="preserve">
    <value>Avg(Value)
Ergibt den Durchschnitt der Werte in der Auflistung.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CountAggregate_Description" xml:space="preserve">
    <value>Count()
Gibt die Anzahl der Objekte in einer Auflistung zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ExistsAggregate_Description" xml:space="preserve">
    <value>Exists()
Bestimmt, ob das Objekt in der Auflistung vorhanden ist.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_AggregateItems" xml:space="preserve">
    <value>Aggregat</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_MaxAggregate_Description" xml:space="preserve">
    <value>Max(Value)
Gibt den maximalen Ausdruck-Wert in einer Auflistung zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_MinAggregate_Description" xml:space="preserve">
    <value>Min(Value)
Gibt den minimale Ausdruckswert in einer Auflistung zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_SingleAggregate_Description" xml:space="preserve">
    <value>Single()
Gibt ein einzelnes Objekt aus der Auflistung zurück.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_SumAggregate_Description" xml:space="preserve">
    <value>Sum(Wert)
Gibt die Summe aller Expression-Werte in der Auflistung zurück.</value>
  </data>
  <data name="EditorStringId.SparklineViewLine" xml:space="preserve">
    <value>Linie</value>
  </data>
  <data name="EditorStringId.HLS" xml:space="preserve">
    <value>HLS</value>
  </data>
  <data name="EditorStringId.HSB" xml:space="preserve">
    <value>HSB</value>
  </data>
  <data name="EditorStringId.ColorPickerBrightness" xml:space="preserve">
    <value>Helligkeit</value>
  </data>
  <data name="EditorStringId.ColorPickerLightness" xml:space="preserve">
    <value>Helligkeit</value>
  </data>
  <data name="EditorStringId.ColorPickerMagenta" xml:space="preserve">
    <value>Magenta</value>
  </data>
  <data name="EditorStringId.ColorPickerRed" xml:space="preserve">
    <value>Rot</value>
  </data>
  <data name="EditorStringId.ColorPickerSaturation" xml:space="preserve">
    <value>Sättigung</value>
  </data>
  <data name="EditorStringId.ColorPickerYellow" xml:space="preserve">
    <value>Gelb</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMAdd" xml:space="preserve">
    <value>M+</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMSub" xml:space="preserve">
    <value>M-</value>
  </data>
  <data name="EditorStringId.SparklineViewBar" xml:space="preserve">
    <value>Bar</value>
  </data>
  <data name="EditorStringId.SparklineViewWinLoss" xml:space="preserve">
    <value>WinLoss</value>
  </data>
  <data name="EditorStringId.ColorPickerHue" xml:space="preserve">
    <value>Farbton</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlSuffix" xml:space="preserve">
    <value>Suffix:</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisMonth_Description" xml:space="preserve">
    <value>IsThisMonth</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisWeek_Description" xml:space="preserve">
    <value>IsThisWeek</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisYear_Description" xml:space="preserve">
    <value>IsThisYear</value>
  </data>
  <data name="EditorStringId.Caption_SpecialCharactersToggleButton" xml:space="preserve">
    <value>Sonderzeichen</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormCharacterSet" xml:space="preserve">
    <value>Zeichensatz:</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormFilter" xml:space="preserve">
    <value>Filter:</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormFontName" xml:space="preserve">
    <value>Font-Name:</value>
  </data>
  <data name="EditorStringId.DatePickerHours" xml:space="preserve">
    <value>Stunden</value>
  </data>
  <data name="EditorStringId.BrushEditRadial" xml:space="preserve">
    <value>Radial</value>
  </data>
  <data name="EditorStringId.BrushEditCenter" xml:space="preserve">
    <value>Zentriert</value>
  </data>
  <data name="EditorStringId.BrushEditNone" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeToday" xml:space="preserve">
    <value>Heute</value>
  </data>
  <data name="EditorStringId.BrushEditSolid" xml:space="preserve">
    <value>Durchgehend</value>
  </data>
  <data name="EditorStringId.DatePickerSeconds" xml:space="preserve">
    <value>Sek.</value>
  </data>
  <data name="EditorStringId.ColorPickerKeyColor" xml:space="preserve">
    <value>Schlüsselfarbe</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeTomorrow" xml:space="preserve">
    <value>Morgen</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeThisMonth" xml:space="preserve">
    <value>In diesem Monat</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeThisWeek" xml:space="preserve">
    <value>Diese Woche</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeLastWeek" xml:space="preserve">
    <value>Letzte Woche</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeNextMonth" xml:space="preserve">
    <value>Nächsten Monat</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeNextWeek" xml:space="preserve">
    <value>Nächste Woche</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeNextYear" xml:space="preserve">
    <value>Nächstes Jahr</value>
  </data>
  <data name="EditorStringId.TokenEditorNewTokenText" xml:space="preserve">
    <value>Neu...</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeThisYear" xml:space="preserve">
    <value>In diesem Jahr</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeTwoWeeksAway" xml:space="preserve">
    <value>In zwei Wochen</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeDayAfterTomorrow" xml:space="preserve">
    <value>Übermorgen</value>
  </data>
  <data name="EditorStringId.Caption_CommonCharactersToggleButton" xml:space="preserve">
    <value>Gemeinsame Zeichen</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormSearchByCode" xml:space="preserve">
    <value>Suche nach Code:</value>
  </data>
  <data name="EditorStringId.BrushEditEndPoint" xml:space="preserve">
    <value>Endpunkt</value>
  </data>
  <data name="EditorStringId.BrushEditLinear" xml:space="preserve">
    <value>Linear</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeYesterday" xml:space="preserve">
    <value>Gestern</value>
  </data>
  <data name="EditorStringId.DatePickerMilliseconds" xml:space="preserve">
    <value>msek</value>
  </data>
  <data name="EditorStringId.BrushEditRadiusX" xml:space="preserve">
    <value>RadiusX</value>
  </data>
  <data name="EditorStringId.BrushEditRadiusY" xml:space="preserve">
    <value>RadiusY</value>
  </data>
</root>