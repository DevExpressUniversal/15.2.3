<!--ONLY SL<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v15.2" xmlns:dxn="clr-namespace:DevExpress.Xpf.NavBar" xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform" xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework" xmlns:dxcn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v15.2" xmlns:xpfCore="clr-namespace:DevExpress.Xpf.Core.WPFCompatibility;assembly=DevExpress.Xpf.Core.v15.2" xmlns:sys="clr-namespace:System;assembly=mscorlib">ONLY SL-->
<!--BEGIN WPF-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:dx="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v15.2" 
    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar" 
    xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys" 
    xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v15.2" 
    xmlns:dxcn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v15.2" 
    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <!--END WPF-->
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter" />
    <dxn:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter" />
    
    <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}"/>
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}"/>
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}"/>
    </Style>
    <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}"/>
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}"/>
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}"/>
    </Style>
    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollUpButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border2" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFF4F8FF" Offset="0" />
                                            <GradientStop Color="#FFDEEDFD" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border2" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA4C2EA" Offset="1" />
                                            <GradientStop Color="#FFABC2E2" Offset="0" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF2E5088" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value=".25" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>                
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border1" Background="#FF86A9D9" CornerRadius="0,0,0,0" Padding="0,0,0,1">
                <Border x:Name="border2" CornerRadius="0,0,0,0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE4EDFB" Offset="0" />
                            <GradientStop Color="#FFC1D2EA" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path Fill="#FF3A5F9A" Stretch="Fill" Margin="0,2,0,2" x:Name="path" Width="9" Height="5" Data="F1M1257,761L1258,761 1262,766 1253,766 1257,761z" />
                </Border>
            </Border>
        </dx:LayoutTransformPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollDownButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border2" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFF4F8FF" Offset="0" />
                                            <GradientStop Color="#FFDEEDFD" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF000000" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border2" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA4C2EA" Offset="0" />
                                            <GradientStop Color="#FFABC2E2" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF2E5088" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value=".25" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>                
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border1" Background="#FF86A9D9" CornerRadius="0,0,0,0" Padding="0,1,0,0">
                <Border x:Name="border2" CornerRadius="0,0,0,0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE4EDFB" Offset="0" />
                            <GradientStop Color="#FFC1D2EA" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path Fill="#FF3A5F9A" Stretch="Fill" Margin="0,2,0,2" x:Name="path" Width="9" Height="5" Data="F1M1263,769L1262,769 1258,764 1267,764 1263,769z" />
                </Border>
            </Border>
        </dx:LayoutTransformPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneSplitterThemeKey ResourceKey=SplitterTemplate}" TargetType="dxn:NavPaneSplitter">
        <Border MinHeight="0" MinWidth="0" x:Name="border1" Background="#FF39599B" Padding="1,1,1,1">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFAAC7F5" Offset="0" />
                                            <GradientStop Color="#FF7B9DD0" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DraggingStates">
                    <VisualState x:Name="NotDragging" />
                    <VisualState x:Name="Dragging">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7395CA" Offset="0" />
                                            <GradientStop Color="#FF48669B" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowBorderStates">
                    <VisualState x:Name="VerticalWithBorder" />
                    <VisualState x:Name="HorizontalWithBorder" />
                    <VisualState x:Name="VerticalWithoutBorder" >
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border1" Storyboard.TargetProperty="Padding" dxcn:ValueSetter.Thickness="0,1,0,1"/>
                        </Storyboard>                        
                    </VisualState>
                    <VisualState x:Name="HorizontalWithoutBorder" >
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border1" Storyboard.TargetProperty="Padding" dxcn:ValueSetter.Thickness="1,0,1,0"/>
                        </Storyboard>                        
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:LayoutTransformPanel Orientation="{TemplateBinding Orientation}">
                <Border x:Name="border" Padding="0,0,0,0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF89A9DA" Offset="0" />
                            <GradientStop Color="#FF698BBE" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Grid HorizontalAlignment="Center" Margin="0,1,0,2" x:Name="grid" VerticalAlignment="Center" Width="17" Height="Auto">
                        <Rectangle Fill="#FF39599B" Stroke="{x:Null}" StrokeThickness="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="16" Height="4" Opacity="0.5" />
                        <Path Fill="#FFD8E4F5" Stretch="Fill" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Bottom" Width="15" Height="3" Data="F1M351,253L366,253 366,254 351,254 351,253z M351,255L366,255 366,256 351,256 351,255z" />
                    </Grid>
                </Border>
            </dx:LayoutTransformPanel>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="dxn:NavPaneExpandButton">
        <Border x:Name="item" Width="16" Height="16" Background="#00000000" Padding="0,0,0,0" Margin="5,0,5,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="glyph" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFFFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="glyph" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFB2C6E4" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandModeStates">
                    <VisualState x:Name="NormalMode" />
                    <VisualState x:Name="Invert">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyphBorder" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded" />
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="glyphBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
                <Path Fill="#FFE9F2FF" Stretch="Fill" Margin="0,0,1,1" x:Name="glyph" Width="9" Height="10" RenderTransformOrigin="0.5,0.5" Data="F1 M 1395,798L 1400,793L 1400,795L 1397,798L 1400,801L 1400,803L 1395,798 Z M 1399,798L 1404,793L 1404,795L 1401,798L 1404,801L 1404,803L 1399,798 Z " HorizontalAlignment="Center" VerticalAlignment="Center"/>            
            </Border>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <Border Background="#00FFFFFF">
            <Grid Margin="0,0,1,1" Width="10" Height="10" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <Rectangle Fill="#FF50688F" Stretch="Fill" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Bottom" Width="2" Height="2" />
                <Rectangle Fill="#FF50688F" Stretch="Fill" HorizontalAlignment="Right" Margin="0,4,0,4" VerticalAlignment="Stretch" Width="2" />
                <Rectangle Fill="#FF50688F" Stretch="Fill" HorizontalAlignment="Stretch" Margin="4,0,4,0" VerticalAlignment="Bottom" Height="2" />
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripStyle}" TargetType="dxn:NavPanePopupSizeGrip">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="12" />
    </Style>
    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <Border Background="Transparent" />
    </ControlTemplate>
    <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbStyle}" TargetType="dxn:NavPanePopupSizeGrip">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Width" Value="3" />
    </Style>
    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DropDownButtonTemplate}" TargetType="dxn:NavPaneDropDownMenuControl">
        <Border HorizontalAlignment="Stretch" x:Name="border" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="#00FFFFFF" CornerRadius="1,1,4,1" Padding="6,4,5,4">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFFFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFB2C6E4" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path Fill="#FFB2C6E4" Stretch="Fill" x:Name="path" Width="6" Height="7" Data="F1M382,291L376,288 376,295 382,292 382,291z" Margin="0,0,0,1" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowFrameTemplate}" TargetType="dxn:NavPanePopupWindowFrame">
        <Grid>
            <Border Background="#FFBAD0F1" BorderBrush="#FF062B63" BorderThickness="1,1,1,1" Padding="4,4,4,4">
                <Border Background="#FFFFFFFF" BorderBrush="#FF758BB1" BorderThickness="1,1,1,1" CornerRadius="0,0,0,0" />
            </Border>
            <ContentPresenter Margin="6,6,6,6" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowContentTemplate}" TargetType="{x:Type dxn:NavPanePopupWindowContent}">
        <dxn:NavPanePopupWindowFrame>
            <Grid Background="{x:Null}">
                <dxn:ScrollControl x:Name="scrollControl" ScrollButtonsControlTemplate="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SmoothScrollTemplate}}" 
                    ScrollBarControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=NormalScrollTemplate}}" dx:FocusHelper2.Focusable="False">
                    <!--ONLY SL<dx:BackgroundPanel.PatchForeground>True</dx:BackgroundPanel.PatchForeground>ONLY SL-->
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </dxn:ScrollControl>
                <dxn:NavPanePopupSizeGrip Template="{DynamicResource {dxnt:NavigationPanePopupThemeKey IsVisibleInBlend=True, ResourceKey=SizeGripTemplate}}" Style="{DynamicResource {dxnt:NavigationPanePopupThemeKey IsVisibleInBlend=True, ResourceKey=SizeGripStyle}}" Grid.Row="1" />
            </Grid>
        </dxn:NavPanePopupWindowFrame>
    </ControlTemplate>
   
    <ControlTemplate x:Key="{dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedActiveGroupTemplate}" TargetType="ToggleButton">
        <Border x:Name="border1" Background="#FF86A9D9" Padding="1,0,1,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFC9DAF4" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ForegroundStates">
                    <VisualState Name="NormalForeground"/>
                    <VisualState Name="CustomForeground">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedGroupForegroundBrush}}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="Vertical"/>
                    <VisualState Name="Horizontal" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#FFBAD0F1" x:Name="border">
                <dxn:ImageAndTextContentPresenter ImageFallbackSize="24" x:Name="content" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=HeaderStyle}}" Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" Orientation="{Binding NavBar.View.Orientation}">
                    <!--ONLY SL
                    <dxn:ImageAndTextContentPresenter.ContentTemplateSelector>
                        <Binding Path="ActualHeaderTemplateSelector"/>
                    </dxn:ImageAndTextContentPresenter.ContentTemplateSelector>ONLY SL-->
                </dxn:ImageAndTextContentPresenter>
            </Border>            
        </Border>
    </ControlTemplate>
    <!--BEGIN WPF-->
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ItemBackgroundStyle}" TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
        <Border Background="#FFBAD0F1" x:Name="border">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
                 <Setter TargetName="border" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFC9DAF4"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                 <Setter TargetName="border" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFC9DAF4"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                 <Setter TargetName="border" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFC9DAF4"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupBackgroundTemplate}">
        <Border Background="#FF86A9D9" Padding="1,0,1,0">
            <Border Background="#FFBAD0F1"/>
        </Border>
    </ControlTemplate>
    <!--END WPF-->
    <DataTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupContentTemplate}">
        <dxn:NavPaneImageAndTextDecorator x:Name="groupButtonContent" DockingLeftImageMargin="4,3,0,3" DockingLeftContentMargin="4,7,4,7" ImageFallbackSize="24" DockingRightImageMargin="0,4,5,3" DockingRightContentMargin="5,6,5,8" DockingBottomImageMargin="5,4,5,3" DockingBottomContentMargin="5,6,5,8" DockingTopImageMargin="5,4,5,3" DockingTopContentMargin="5,6,5,8" DisplayModeImageMargin="4,3,4,3" DisplayModeTextMargin="4,7,4,7" GroupButtonCollapsedImageMargin="4,3,4,3" ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}" ImageSource="{Binding Path=ImageSource}" ImageStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupImageStyle}}" ContentSource="{Binding Path=Header}" ContentStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}}" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupTemplate}" TargetType="dxn:NavPaneGroupButton">
        <Grid Margin="1,0,1,1" Width="Auto" Height="Auto" x:Name="grid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="IsMouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsPressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFFFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="IsActiveStates">
                    <VisualState Name="IsActiveTrue">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFFFFFFF" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsActiveFalse" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded" />
                    <VisualState x:Name="Collapsed" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal"/>
                </VisualStateGroup>
                <VisualStateGroup Name="ShowBorderStates">
                    <VisualState Name="WithoutBorder">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="grid" Storyboard.TargetProperty="Margin" dxcn:ValueSetter.Thickness="0,0,0,1"/>                                
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="WithBorder" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="back" Width="Auto" Height="Auto" Visibility="{Binding Path=IsActive, Converter={StaticResource BoolToVisibilityInverseConverter}}" Background="#FF5379AE" Padding="0,0,0,0">
                <Border x:Name="border" Width="Auto" Height="Auto" Background="#FFE0EDFE" Padding="0,1,0,0">
                    <Border x:Name="GroupButton" Width="Auto" Height="Auto" Padding="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFBBD1F2" Offset="0" />
                                <GradientStop Color="#FF9FBCE6" Offset="1" />
                                <GradientStop Color="#FFA4C0E8" Offset="0.5" />
                                <GradientStop Color="#FF9BB9E4" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>

            <Border x:Name="hover" Visibility="Collapsed" Width="Auto" Height="Auto" Background="#FF5379AE" Padding="0,0,0,0">
                <Border Width="Auto" Height="Auto" Background="#FFEAF3FF" Padding="0,1,0,0">
                    <Border Width="Auto" Height="Auto" Padding="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD5E4F8" Offset="0" />
                                <GradientStop Color="#FFBBD5F1" Offset="1" />
                                <GradientStop Color="#FFc0d8f2" Offset="0.5" />
                                <GradientStop Color="#FFB7D3F0" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="pressed" Visibility="Collapsed" Width="Auto" Height="Auto" Background="#FF5379AE" Padding="0,0,0,0">
                <Border Width="Auto" Height="Auto" Background="#FF6285B9" Padding="0,1,0,0">
                    <Border Width="Auto" Height="Auto" Padding="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF6285B9" Offset="0" />
                                <GradientStop Color="#FF86A6D3" Offset="1" />
                                <GradientStop Color="#FF7294c6" Offset="0.5" />
                                <GradientStop Color="#FF7294c6" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="active" Visibility="{Binding Path=IsActive, Converter={StaticResource BoolToVisibilityConverter}}" Width="Auto" Height="Auto" Background="#FF5379AE" Padding="0,0,0,0">
                <Border Width="Auto" Height="Auto" Background="#FFc2d6f0" Padding="0,1,0,0">
                    <Border Width="Auto" Height="Auto" Padding="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF9eb9e0" Offset="0" />
                                <GradientStop Color="#FF7495c6" Offset="1" />
                                <GradientStop Color="#FF6f92c3" Offset="0.5" />
                                <GradientStop Color="#FF6386ba" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <dxn:ImageAndTextContentPresenter Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}}" ImageFallbackSize="24" Margin="0,0,0,0" x:Name="content" Foreground="{DynamicResource {dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupForegroundBrush}}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DefaultIconTemplate}" TargetType="dxn:NavPaneDefaultIcon">
        <Viewbox Stretch="Fill">
            <Border Width="24" Height="24" Background="{x:Null}">
                <Canvas x:Name="Document" Width="20" Height="20" Clip="F1 M 0,0L 20.0001,0L 20.0001,20.0001L 0,20.0001L 0,0">
                    <Path x:Name="Path" Width="15" Height="15" Canvas.Top="5" Stretch="Fill" Fill="#FF0A3262" Data="F1 M 1.99994,5.00018L 12.9999,5.00018C 14.1045,5.00018 14.9999,5.89563 14.9999,7.00018L 14.9999,18.0001C 14.9999,19.1047 14.1045,20.0002 12.9999,20.0002L 1.99994,20.0002C 0.895386,20.0002 0,19.1047 0,18.0001L 0,7.00018C 0,5.89563 0.895386,5.00018 1.99994,5.00018 Z " />
                    <Path x:Name="Path_0" Width="13" Height="13" Canvas.Left="7" Stretch="Fill" Fill="#FF001A47" Data="F1 M 9.00012,0L 18.0001,0C 19.1047,0 20.0001,0.895477 20.0001,2L 20.0001,11C 20.0001,12.1046 19.1047,13 18.0001,13L 16.0001,13.0001L 16.0001,7.00009C 16.0001,5.34323 14.6569,4.00009 13.0001,4.00009L 7.00006,4.00009L 7.00012,2C 7.00012,0.895477 7.89557,0 9.00012,0 Z " />
                </Canvas>
            </Border>
        </Viewbox>
    </ControlTemplate>
    <dxn:SourceToVisibilityConverter x:Key="SourceToVisibilityConverter" />
    <DataTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupContentTemplate}">
        <Grid Margin="2" x:Name="overflowGroupContent">
            <!--BEGIN WPF-->
            <Grid.ToolTip>
                <Binding Path="Header" />
            </Grid.ToolTip>
            <Image Margin="0,0,0,0" x:Name="PART_Image" Source="{Binding Path=ImageSource}" Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}" Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}" />
            <!--END WPF-->
            <!--ONLY SL<Image Margin="0,0,0,0" x:Name="PART_Image" Source="{Binding Path=ImageSource}"
                Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}"
				Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}"/>ONLY SL-->
            <dxn:NavPaneDefaultIcon x:Name="defaultIcon" Width="{Binding Path=Width, ElementName=PART_Image}" Height="{Binding Path=Height, ElementName=PART_Image}" Visibility="{Binding Path=Source, ElementName=PART_Image, ConverterParameter=Visible, Converter={StaticResource SourceToVisibilityConverter}}" />
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupTemplate}" TargetType="Button">
        <Grid Margin="0,0,1,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>1</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsPressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="Opacity">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>1</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="0,0,0,1" x:Name="hover" Width="Auto" Height="Auto" Opacity="0" Background="#FF2F4F8A" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border Width="Auto" Height="Auto" Background="#FFE0EDFE" CornerRadius="1,1,3,3" Padding="0,1,0,0">
                    <Border Width="Auto" Height="Auto" CornerRadius="1" Padding="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFBBD1F2" Offset="0" />
                                <GradientStop Color="#FF9FBCE6" Offset="1" />
                                <GradientStop Color="#FFA4C0E8" Offset="0.5" />
                                <GradientStop Color="#FF9BB9E4" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border Margin="0,0,0,1" x:Name="pressed" Width="Auto" Height="Auto" Opacity="{Binding Path=IsActive, Converter={StaticResource BooleanToOpacityConverter}}" Background="#FF2F4F8A" CornerRadius="2,2,2,2" Padding="1,1,1,1">
                <Border Width="Auto" Height="Auto" Background="#FFE0EDFE" CornerRadius="1,1,3,3" Padding="0,1,0,0">
                    <Border Width="Auto" Height="Auto" CornerRadius="1" Padding="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF587DB1" Offset="0" />
                                <GradientStop Color="#FF7495C6" Offset="1" />
                                <GradientStop Color="#FF6386BA" Offset="0.5" />
                                <GradientStop Color="#FF6386BA" Offset="0.5" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <dxn:ImageAndTextContentPresenter Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}}" ImageFallbackSize="24" Margin="0,0,0,0" x:Name="content" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanelTemplate}" TargetType="ContentControl">
        <Border Background="#FF5379AE">
            <dxn:NavPaneGroupButtonPanelContentPresenter WithoutSplitterThickness="0,1,0,0"/>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowPanelTemplate}" TargetType="dxn:NavPaneOverflowPanel">
        <dx:LayoutTransformPanel Orientation="{Binding View.Orientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SplitterBehaviorStates">
                    <VisualState x:Name="WithSplitter"/>
                    <VisualState x:Name="WithoutSplitter">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overflowPanelBorder" Storyboard.TargetProperty="Padding" dxcn:ValueSetter.Thickness="1,1,1,1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowBorderStates">
                    <VisualState x:Name="WithBorder"/>
                    <VisualState x:Name="WithoutBorder">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overflowPanelBorder" Storyboard.TargetProperty="Padding" dxcn:ValueSetter.Thickness="0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overflowPanelBorder" Storyboard.TargetProperty="CornerRadius" dxcn:ValueSetter.CornerRadius="0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border1" Storyboard.TargetProperty="CornerRadius" dxcn:ValueSetter.CornerRadius="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="overflowPanelBorder" Height="Auto" Background="#FF062B63" CornerRadius="0,0,3,3" Padding="1,0,1,1">
                <Border Width="Auto" Height="Auto" x:Name="border1" BorderBrush="#FF87A7D5" BorderThickness="0,1,0,0" CornerRadius="0,0,2,2">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF6086BC" Offset="0" />
                            <GradientStop Color="#FF4B70A8" Offset="1" />
                            <GradientStop Color="#FF41669F" Offset="0.5" />
                            <GradientStop Color="#FF385D98" Offset="0.5" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <ContentPresenter MinHeight="30" Width="Auto" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </Border>
            </Border>
        </dx:LayoutTransformPanel>
    </ControlTemplate>
    <!--BEGIN WPF-->
    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=ContextMenuTemplate}" TargetType="ContextMenu">
        <Grid x:Name="grid" Margin="0,0,3,3">
            <Border Margin="2,2,0,0" x:Name="shadow" Opacity="0.15" Background="#FF000000" CornerRadius="4" />
            <Border Margin="0,0,3,3" x:Name="popupBorder" Background="#FF062B63" CornerRadius="3" Padding="1">
                <Border x:Name="background" Background="#FFFFFFFF" CornerRadius="2" Padding="1">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <KeyboardNavigation.DirectionalNavigation>Cycle</KeyboardNavigation.DirectionalNavigation>
                    </ItemsPresenter>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                <Setter TargetName="shadow" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="popupBorder" Property="Margin" Value="0" />
                <Setter TargetName="popupBorder" Property="CornerRadius" Value="0" />
                <Setter TargetName="background" Property="CornerRadius" Value="0" />
                <Setter TargetName="grid" Property="Margin" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=MenuItemTemplate}" TargetType="MenuItem">
        <Border>
            <Grid>
                <Border x:Name="border" CornerRadius="2" Padding="1" Opacity="0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF5E81B4" Offset="0" />
                            <GradientStop Color="#FF4B6FA5" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Path x:Name="glyph" Visibility="Collapsed" Fill="Black" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" VerticalAlignment="Center" Margin="12,0,0,0" />
                        <ContentPresenter x:Name="icon" Margin="12,3,0,3" Visibility="Visible" ContentSource="Icon" />
                    </Grid>

                    <dx:MeasurePixelSnapper Margin="12,3" Grid.Column="1">
                        <ContentPresenter x:Name="text" ContentSource="Header" TextElement.Foreground="Black" RecognizesAccessKey="True" />
                    </dx:MeasurePixelSnapper>

                    <Path x:Name="arrow" Grid.Column="2" Fill="Black" Data="M0,0 L0,8 L4,4 z" Visibility="Collapsed" VerticalAlignment="Center" Margin="5,0,5,0" />

                    <Popup x:Name="popup" AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Grid>
                            <Border x:Name="shadow" Margin="3,3,0,0" CornerRadius="4" Background="#FF000000" Opacity="0.15" />
                            <Border x:Name="popupBorder" Background="#FF062B63" Padding="1" Margin="0,0,3,3" CornerRadius="2">
                                <Border x:Name="background" CornerRadius="1" Background="#FFFFFFFF">
                                    <StackPanel Background="Transparent" IsItemsHost="True" Margin="1" />
                                </Border>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                <Setter TargetName="shadow" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="popupBorder" Property="Margin" Value="0" />
                <Setter TargetName="popupBorder" Property="CornerRadius" Value="0" />
                <Setter TargetName="background" Property="CornerRadius" Value="0" />
            </DataTrigger>

            <Trigger Property="Role" Value="SubMenuHeader">
                <Setter Property="Visibility" Value="Visible" TargetName="arrow" />
            </Trigger>

            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" Value="None" TargetName="popup" />
            </Trigger>

            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility" Value="Hidden" TargetName="glyph" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="glyph" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" TargetName="icon" />
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="border" />
                <Setter Property="Control.Foreground" Value="White" TargetName="text" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="#FF9A9A9A" TargetName="text" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--END WPF-->
</ResourceDictionary>