<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ASPxSpreadsheetStylesPopupMenu" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of the ASPxSpreadsheet's context menu. </value>
  </data>
  <data name="ASPxSpreadsheetStylesFileManager" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of File Manager elements used by the ASPxSpreadsheet control (for instance, within the File Open dialog). </value>
  </data>
  <data name="ASPxSpreadsheetStylesEditors" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of editor elements used by the ASPxSpreadsheet control (for instance, within dialog forms). </value>
  </data>
  <data name="ASPxSpreadsheetStylesButton" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of button elements used by the ASPxSpreadsheet control (within dialog forms, for instance). </value>
  </data>
  <data name="ASPxSpreadsheetStyles" xml:space="preserve">
    <value>Provides access to the style settings that control the appearance of the ASPxSpreadsheet elements.</value>
  </data>
  <data name="ASPxSpreadsheetShowConfirmOnLosingChanges" xml:space="preserve">
    <value>Gets or sets a value that specifies whether a confirmation alert should be displayed when any unsaved changes are going to be lost due to an end-user action.</value>
  </data>
  <data name="ASPxSpreadsheetSettingsLoadingPanel" xml:space="preserve">
    <value>Provides access to the loading panel's settings.</value>
  </data>
  <data name="ASPxSpreadsheetSettingsForms" xml:space="preserve">
    <value>Gets the settings allowing you to specify paths to dialog forms (UserControls) stored within a web site.</value>
  </data>
  <data name="ASPxSpreadsheetSettingsDocumentSelector" xml:space="preserve">
    <value>Provides access to settings that are related to the FileManager used within some built-in dialogs dialog.</value>
  </data>
  <data name="ASPxSpreadsheetSettingsDialogs" xml:space="preserve">
    <value>Gets settings concerning customization of dialog form elements. </value>
  </data>
  <data name="ASPxSpreadsheetSettingsDialogForm" xml:space="preserve">
    <value>Provides access to the settings that relate to customization of dialog form elements.</value>
  </data>
  <data name="ASPxSpreadsheetSaving" xml:space="preserve">
    <value>Allows the current spreadsheet document to be processed before it is saved to the server.</value>
  </data>
  <data name="ASPxSpreadsheetRibbonTabs" xml:space="preserve">
    <value>Provides access to the collection of Ribbon tabs.</value>
  </data>
  <data name="ASPxSpreadsheetReadOnly" xml:space="preserve">
    <value>This member supports the internal infrastructure and is not intended to be used directly from your code.</value>
  </data>
  <data name="ASPxSpreadsheetImagesFileManager" xml:space="preserve">
    <value>Provides access to the settings that define images displayed within the FileManager used within some built-in dialogs.</value>
  </data>
  <data name="ASPxSpreadsheetImages" xml:space="preserve">
    <value>Provides access to the settings that define images displayed within the ASPxSpreadsheet.</value>
  </data>
  <data name="ASPxSpreadsheetEnableClientSideAPI" xml:space="preserve">
    <value>Gets or sets a value that specifies whether the ASPxSpreadsheet can be manipulated on the client side in code.</value>
  </data>
  <data name="ASPxSpreadsheetDocumentSelectorItemRenaming" xml:space="preserve">
    <value>Fires before an item is renamed within the FileManager embedded into built-in dialogs, and allows you to cancel the action.</value>
  </data>
  <data name="ASPxSpreadsheetDocumentSelectorItemMoving" xml:space="preserve">
    <value>Fires before an item is moved within the FileManager embedded into built-in dialogs, and allows you to cancel the action.</value>
  </data>
  <data name="ASPxSpreadsheetDocumentSelectorItemDeleting" xml:space="preserve">
    <value>Fires before an item is deleted within the FileManager embedded into built-in dialogs, and allows you to cancel the action.</value>
  </data>
  <data name="ASPxSpreadsheetDocumentSelectorItemCopying" xml:space="preserve">
    <value>Fires before an item is copied within the Document Selector, and allows you to cancel the action.</value>
  </data>
  <data name="ASPxSpreadsheetDocumentSelectorFolderCreating" xml:space="preserve">
    <value>Fires on the server side before a folder is created within the FileManager embedded into built-in dialogs, and allows you to cancel the action. </value>
  </data>
  <data name="ASPxSpreadsheetDocumentSelectorFileUploading" xml:space="preserve">
    <value>Fires before a file is uploaded to the Document Selector and allows you to cancel the action.</value>
  </data>
  <data name="ASPxSpreadsheetDocumentSelectorCloudProviderRequest" xml:space="preserve">
    <value>Fires when a cloud provider used in the Document Selector sends a request to a cloud service.</value>
  </data>
  <data name="ASPxSpreadsheetDocumentCallback" xml:space="preserve">
    <value>Fires when a round trip to the server has been initiated by the loaded document.</value>
  </data>
  <data name="ASPxSpreadsheetDocument" xml:space="preserve">
    <value>Provides access to a workbook loaded in the control.</value>
  </data>
  <data name="ASPxSpreadsheetConfirmOnLosingChanges" xml:space="preserve">
    <value>Gets or sets the text of the confirmation message that is displayed when any unsaved data changes are going to be lost.</value>
  </data>
  <data name="ASPxSpreadsheetClientSideEvents" xml:space="preserve">
    <value>Gets an object that lists the client-side events specific to the ASPxSpreadsheet.</value>
  </data>
  <data name="ASPxSpreadsheetClientInstanceName" xml:space="preserve">
    <value>Gets or sets the ASPxSpreadsheet's client programmatic identifier.</value>
  </data>
  <data name="ASPxSpreadsheetCallback" xml:space="preserve">
    <value>Fires when a round trip to the server has been initiated either manually (by a call to the client PerformCallback method) or automatically by the ASPxSpreadsheet (an internal service callback).</value>
  </data>
  <data name="ASPxSpreadsheetAssociatedRibbonID" xml:space="preserve">
    <value>Specifies the ID of an ASPxRibbon control, used as an external toolbar.</value>
  </data>
  <data name="ASPxSpreadsheetActiveTabIndex" xml:space="preserve">
    <value>Gets or sets the index of the active ribbon tab within the ASPxSpreadsheet control.</value>
  </data>
  <data name="SpreadsheetClientSideEventsCustomCommandExecuted" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle the client ASPxClientSpreadsheet.CustomCommandExecuted event.</value>
  </data>
  <data name="SpreadsheetClientSideEventsBeginSynchronization" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle the client ASPxClientSpreadsheet.BeginSynchronization event.</value>
  </data>
  <data name="ASPxSpreadsheetWorkDirectory" xml:space="preserve">
    <value>Gets or sets the working directory path.</value>
  </data>
  <data name="ASPxSpreadsheetTemporaryFolder" xml:space="preserve">
    <value>Gets or sets the temporary folder path.</value>
  </data>
  <data name="ASPxSpreadsheetStylesTabControl" xml:space="preserve">
    <value>Provides access to the style settings defining the appearance of tab control elements used in the ASPxSpreadsheet.</value>
  </data>
  <data name="ASPxSpreadsheetStylesRibbon" xml:space="preserve">
    <value>Provides access to the style settings that define the appearance of the ASPxSpreadsheet's ribbon toolbar elements. </value>
  </data>
  <data name="SpreadsheetClientSideEventsDocumentChanged" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle the client ASPxClientSpreadsheet.DocumentChanged event.</value>
  </data>
  <data name="SpreadsheetClientSideEventsEndSynchronization" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle the client ASPxClientSpreadsheet.EndSynchronization event.</value>
  </data>
  <data name="SpreadsheetClientSideEventsSelectionChanged" xml:space="preserve">
    <value>Gets or sets the name of the JavaScript function or the entire code which will handle the client ASPxClientSpreadsheet.SelectionChanged event.</value>
  </data>
  <data name="SpreadsheetDialogSettingsInsertLinkDialog" xml:space="preserve">
    <value>Provides access to customization settings for the Insert Link dialog's form elements.</value>
  </data>
  <data name="SpreadsheetDialogSettingsSaveFileDialog" xml:space="preserve">
    <value>Provides access to customization settings for the Save File dialog's form elements.</value>
  </data>
  <data name="SpreadsheetDocumentSelectorSettingsCommonSettings" xml:space="preserve">
    <value>Provides access to the main settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="SpreadsheetDocumentSelectorSettingsEditingSettings" xml:space="preserve">
    <value>Provides access to the editing settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="SpreadsheetDocumentSelectorSettingsFileListSettings" xml:space="preserve">
    <value>Provides access to the file list's settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="SpreadsheetDocumentSelectorSettingsFoldersSettings" xml:space="preserve">
    <value>Provides access to the folder container's settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="SpreadsheetDocumentSelectorSettingsPermissionSettings" xml:space="preserve">
    <value>Provides access to permission settings that relate to the FileManager used within some built-in dialogs dialog.</value>
  </data>
  <data name="SpreadsheetDocumentSelectorSettingsToolbarSettings" xml:space="preserve">
    <value>Provides access to the toolbar item visibility settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="SpreadsheetDocumentSelectorSettingsUploadSettings" xml:space="preserve">
    <value>Provides access to the upload panel's settings of the FileManager embedded into built-in file dialogs.</value>
  </data>
  <data name="SpreadsheetFileManagerFoldersSettingsShowLockedFolderIcons" xml:space="preserve">
    <value>Gets or sets a value specifying whether the FileManager embedded into some built-in dialogs displays a special icon for folders that are locked for upload.</value>
  </data>
  <data name="SpreadsheetFileManagerUploadSettingsEnabled" xml:space="preserve">
    <value>Gets or sets a value that indicates whether upload is enabled for the FileManager used within some built-in dialogs. </value>
  </data>
  <data name="SpreadsheetFileManagerValidationSettingsMaxFileSize" xml:space="preserve">
    <value>Gets or sets the maximum size of an uploaded file.</value>
  </data>
  <data name="SpreadsheetFormsSettingsChangeChartTypeFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Change chart type dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsChartChangeHorizontalAxisTitleFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Change horizontal axis title dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsChartChangeTitleFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Change chart title dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsChartChangeVerticalAxisTitleFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Change vertical axis title dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsChartSelectDataFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Select data source dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsColumnWidthFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Column width dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsDefaultColumnWidthFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Standard column width dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsFindAndReplaceFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Find dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsInsertLinkFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Insert Link dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsInsertPictureFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is the customizable version of the built-in Insert Picture dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsModifyChartLayoutFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Chart layouts dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsModifyChartStyleFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Chart styles dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsOpenFileFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is the customizable version of the built-in Open File dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsRenameSheetFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is the customizable version of the built-in Rename Sheet dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsRowHeightFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Row height dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsSaveFileFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is the customizable version of the built-in Save File dialog.</value>
  </data>
  <data name="SpreadsheetFormsSettingsUnhideSheetFormPath" xml:space="preserve">
    <value>Gets or sets the path to a UserControl (an .ascx file) that is a customizable version of the built-in Unhide sheet dialog.</value>
  </data>
</root>